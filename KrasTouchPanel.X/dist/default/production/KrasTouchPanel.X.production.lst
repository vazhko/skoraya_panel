

Microchip Technology PIC18 PRO Macro Assembler V1.33 build 59893 
                                                                                               Fri Jul 29 17:50:53 2016

Microchip Technology Omniscient Code Generator (PRO mode) build 59893
     1                           	processor	18F46K22
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	text35,global,reloc=2,class=CODE,delta=1
    58                           	psect	text36,global,reloc=2,class=CODE,delta=1
    59                           	psect	text37,global,reloc=2,class=CODE,delta=1
    60                           	psect	text38,global,reloc=2,class=CODE,delta=1
    61                           	psect	text39,global,reloc=2,class=CODE,delta=1
    62                           	psect	text40,global,reloc=2,class=CODE,delta=1
    63                           	psect	text41,global,reloc=2,class=CODE,delta=1
    64                           	psect	text42,global,reloc=2,class=CODE,delta=1
    65                           	psect	text43,global,reloc=2,class=CODE,delta=1
    66                           	psect	text44,global,reloc=2,class=CODE,delta=1
    67                           	psect	text45,global,reloc=2,class=CODE,delta=1
    68                           	psect	text46,global,reloc=2,class=CODE,delta=1
    69                           	psect	text47,global,reloc=2,class=CODE,delta=1
    70                           	psect	text48,global,reloc=2,class=CODE,delta=1
    71                           	psect	text49,global,reloc=2,class=CODE,delta=1
    72                           	psect	text50,global,reloc=2,class=CODE,delta=1
    73                           	psect	text51,global,reloc=2,class=CODE,delta=1
    74                           	psect	text52,global,reloc=2,class=CODE,delta=1
    75                           	psect	text53,global,reloc=2,class=CODE,delta=1
    76                           	psect	text54,global,reloc=2,class=CODE,delta=1
    77                           	psect	text55,global,reloc=2,class=CODE,delta=1
    78                           	psect	text56,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    80                           	psect	text58,global,reloc=2,class=CODE,delta=1
    81                           	psect	text59,global,reloc=2,class=CODE,delta=1
    82                           	psect	text60,global,reloc=2,class=CODE,delta=1
    83                           	psect	text61,global,reloc=2,class=CODE,delta=1
    84                           	psect	text62,global,reloc=2,class=CODE,delta=1
    85                           	psect	text63,global,reloc=2,class=CODE,delta=1
    86                           	psect	text64,global,reloc=2,class=CODE,delta=1
    87                           	psect	text65,global,reloc=2,class=CODE,delta=1
    88                           	psect	text66,global,reloc=2,class=CODE,delta=1
    89                           	psect	text67,global,reloc=2,class=CODE,delta=1
    90                           	psect	text68,global,reloc=2,class=CODE,delta=1
    91                           	psect	text69,global,reloc=2,class=CODE,delta=1
    92                           	psect	text70,global,reloc=2,class=CODE,delta=1
    93                           	psect	text71,global,reloc=2,class=CODE,delta=1
    94                           	psect	text72,global,reloc=2,class=CODE,delta=1
    95                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    96                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   102                           	psect	param0,global,class=BANK0,space=1,delta=1
   103                           	psect	pa_nodes,global,class=CODE,delta=1
   104  0000                     tblptrh	equ	0xFF7
   105                           tblptrl	equ	0xFF6
   106                           tablat	equ	0xFF5
   107                           prodh	equ	0xFF4
   108                           prodl	equ	0xFF3
   109                           intcon	equ	0xFF2
   110                           wreg	equ	0xFE8
   111                           indf1	equ	0xFE7
   112                           postinc1	equ	0xFE6
   113                           postdec1	equ	0xFE5
   114                           fsr1h	equ	0xFE2
   115                           fsr1l	equ	0xFE1
   116                           indf2	equ	0xFDF
   117                           postinc2	equ	0xFDE
   118                           postdec2	equ	0xFDD
   119                           fsr2h	equ	0xFDA
   120                           fsr2l	equ	0xFD9
   121                           status	equ	0xFD8
   122                           
   123                           	psect	eeprom_data
   124  F00000  01 00 00 00 00 00 00 00 	db	1,0,0,0,0,0,0,0	;# 
   125  F00008  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   126  F00010  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   127  F00018  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   128  F00020  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   129  F00028  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   130  F00030  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   131  F00038  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   132  F00040  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   133  F00048  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   134  F00050  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   135  F00058  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   136  F00060  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   137  F00068  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   138  F00070  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   139  F00078  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   140  F00080  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   141  F00088  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   142  F00090  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   143  F00098  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   144  F000A0  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   145  F000A8  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   146  F000B0  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   147  F000B8  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   148  F000C0  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   149  F000C8  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   150  F000D0  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   151  F000D8  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   152  F000E0  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   153  F000E8  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   154  F000F0  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   155  F000F8  00 00 00 00 00 00 00 00 	db	0,0,0,0,0,0,0,0	;# 
   156  0000                     tblptrh	equ	0xFF7
   157                           tblptrl	equ	0xFF6
   158                           tablat	equ	0xFF5
   159                           prodh	equ	0xFF4
   160                           prodl	equ	0xFF3
   161                           intcon	equ	0xFF2
   162                           wreg	equ	0xFE8
   163                           indf1	equ	0xFE7
   164                           postinc1	equ	0xFE6
   165                           postdec1	equ	0xFE5
   166                           fsr1h	equ	0xFE2
   167                           fsr1l	equ	0xFE1
   168                           indf2	equ	0xFDF
   169                           postinc2	equ	0xFDE
   170                           postdec2	equ	0xFDD
   171                           fsr2h	equ	0xFDA
   172                           fsr2l	equ	0xFD9
   173                           status	equ	0xFD8
   174                           
   175                           	psect	idataBANK0
   176  003C20                     __pidataBANK0:
   177                           	opt stack 0
   178                           
   179                           ;initializer for _f_T_salona
   180                           ;Main.c: 14: volatile int sys_tick = 0;
   181                           ;Main.c: 15: extern unsigned char ow_bit;
   182                           ;Main.c: 18: void tsk_process_btn(void);
   183                           ;Main.c: 19: void tsk_display(void);
   184                           ;Main.c: 20: void tsk_ds18b20(void);
   185                           ;Main.c: 23: asm("\tpsect eeprom_data,class=EEDATA,noexec"); asm("\tdb\t" "0x01" "," "0x
      +                          00" "," "0x00" "," "0x00" "," "0x00" "," "0x00" "," "0x00" "," "0x00");asm("\tpsect eepr
      +                          om_data,class=EEDATA,noexec"); asm("\tdb\t" "0x00" "," "0x00" "," "0x00" "," "0x00" ","
   186                           ;Main.c: 26: volatile char a, b;
   187                           ;Main.c: 27: volatile int c, d;
   188  003C20  0000               	dw	0
   189  003C22  41A0               	dw	16800
   190                           tblptrh	equ	0xFF7
   191                           tblptrl	equ	0xFF6
   192                           tablat	equ	0xFF5
   193                           prodh	equ	0xFF4
   194                           prodl	equ	0xFF3
   195                           intcon	equ	0xFF2
   196                           wreg	equ	0xFE8
   197                           indf1	equ	0xFE7
   198                           postinc1	equ	0xFE6
   199                           postdec1	equ	0xFE5
   200                           fsr1h	equ	0xFE2
   201                           fsr1l	equ	0xFE1
   202                           indf2	equ	0xFDF
   203                           postinc2	equ	0xFDE
   204                           postdec2	equ	0xFDD
   205                           fsr2h	equ	0xFDA
   206                           fsr2l	equ	0xFD9
   207                           status	equ	0xFD8
   208                           
   209                           	psect	idataBANK1
   210  003C24                     __pidataBANK1:
   211                           	opt stack 0
   212                           
   213                           ;initializer for tsk_display@f_prev_T
   214  003C24  0000               	dw	0
   215  003C26  C2C8               	dw	49864
   216                           tblptrh	equ	0xFF7
   217                           tblptrl	equ	0xFF6
   218                           tablat	equ	0xFF5
   219                           prodh	equ	0xFF4
   220                           prodl	equ	0xFF3
   221                           intcon	equ	0xFF2
   222                           wreg	equ	0xFE8
   223                           indf1	equ	0xFE7
   224                           postinc1	equ	0xFE6
   225                           postdec1	equ	0xFE5
   226                           fsr1h	equ	0xFE2
   227                           fsr1l	equ	0xFE1
   228                           indf2	equ	0xFDF
   229                           postinc2	equ	0xFDE
   230                           postdec2	equ	0xFDD
   231                           fsr2h	equ	0xFDA
   232                           fsr2l	equ	0xFD9
   233                           status	equ	0xFD8
   234                           
   235                           	psect	mediumconst
   236  00DAA6                     __pmediumconst:
   237                           	opt stack 0
   238  00DAA6  00                 	db	0
   239  00DAA7                     _dscrc_table:
   240                           	opt stack 0
   241  00DAA7  00                 	db	0
   242  00DAA8  5E                 	db	94
   243  00DAA9  BC                 	db	188
   244  00DAAA  E2                 	db	226
   245  00DAAB  61                 	db	97
   246  00DAAC  3F                 	db	63
   247  00DAAD  DD                 	db	221
   248  00DAAE  83                 	db	131
   249  00DAAF  C2                 	db	194
   250  00DAB0  9C                 	db	156
   251  00DAB1  7E                 	db	126
   252  00DAB2  20                 	db	32
   253  00DAB3  A3                 	db	163
   254  00DAB4  FD                 	db	253
   255  00DAB5  1F                 	db	31
   256  00DAB6  41                 	db	65
   257  00DAB7  9D                 	db	157
   258  00DAB8  C3                 	db	195
   259  00DAB9  21                 	db	33
   260  00DABA  7F                 	db	127
   261  00DABB  FC                 	db	252
   262  00DABC  A2                 	db	162
   263  00DABD  40                 	db	64
   264  00DABE  1E                 	db	30
   265  00DABF  5F                 	db	95
   266  00DAC0  01                 	db	1
   267  00DAC1  E3                 	db	227
   268  00DAC2  BD                 	db	189
   269  00DAC3  3E                 	db	62
   270  00DAC4  60                 	db	96
   271  00DAC5  82                 	db	130
   272  00DAC6  DC                 	db	220
   273  00DAC7  23                 	db	35
   274  00DAC8  7D                 	db	125
   275  00DAC9  9F                 	db	159
   276  00DACA  C1                 	db	193
   277  00DACB  42                 	db	66
   278  00DACC  1C                 	db	28
   279  00DACD  FE                 	db	254
   280  00DACE  A0                 	db	160
   281  00DACF  E1                 	db	225
   282  00DAD0  BF                 	db	191
   283  00DAD1  5D                 	db	93
   284  00DAD2  03                 	db	3
   285  00DAD3  80                 	db	128
   286  00DAD4  DE                 	db	222
   287  00DAD5  3C                 	db	60
   288  00DAD6  62                 	db	98
   289  00DAD7  BE                 	db	190
   290  00DAD8  E0                 	db	224
   291  00DAD9  02                 	db	2
   292  00DADA  5C                 	db	92
   293  00DADB  DF                 	db	223
   294  00DADC  81                 	db	129
   295  00DADD  63                 	db	99
   296  00DADE  3D                 	db	61
   297  00DADF  7C                 	db	124
   298  00DAE0  22                 	db	34
   299  00DAE1  C0                 	db	192
   300  00DAE2  9E                 	db	158
   301  00DAE3  1D                 	db	29
   302  00DAE4  43                 	db	67
   303  00DAE5  A1                 	db	161
   304  00DAE6  FF                 	db	255
   305  00DAE7  46                 	db	70
   306  00DAE8  18                 	db	24
   307  00DAE9  FA                 	db	250
   308  00DAEA  A4                 	db	164
   309  00DAEB  27                 	db	39
   310  00DAEC  79                 	db	121
   311  00DAED  9B                 	db	155
   312  00DAEE  C5                 	db	197
   313  00DAEF  84                 	db	132
   314  00DAF0  DA                 	db	218
   315  00DAF1  38                 	db	56
   316  00DAF2  66                 	db	102
   317  00DAF3  E5                 	db	229
   318  00DAF4  BB                 	db	187
   319  00DAF5  59                 	db	89
   320  00DAF6  07                 	db	7
   321  00DAF7  DB                 	db	219
   322  00DAF8  85                 	db	133
   323  00DAF9  67                 	db	103
   324  00DAFA  39                 	db	57
   325  00DAFB  BA                 	db	186
   326  00DAFC  E4                 	db	228
   327  00DAFD  06                 	db	6
   328  00DAFE  58                 	db	88
   329  00DAFF  19                 	db	25
   330  00DB00  47                 	db	71
   331  00DB01  A5                 	db	165
   332  00DB02  FB                 	db	251
   333  00DB03  78                 	db	120
   334  00DB04  26                 	db	38
   335  00DB05  C4                 	db	196
   336  00DB06  9A                 	db	154
   337  00DB07  65                 	db	101
   338  00DB08  3B                 	db	59
   339  00DB09  D9                 	db	217
   340  00DB0A  87                 	db	135
   341  00DB0B  04                 	db	4
   342  00DB0C  5A                 	db	90
   343  00DB0D  B8                 	db	184
   344  00DB0E  E6                 	db	230
   345  00DB0F  A7                 	db	167
   346  00DB10  F9                 	db	249
   347  00DB11  1B                 	db	27
   348  00DB12  45                 	db	69
   349  00DB13  C6                 	db	198
   350  00DB14  98                 	db	152
   351  00DB15  7A                 	db	122
   352  00DB16  24                 	db	36
   353  00DB17  F8                 	db	248
   354  00DB18  A6                 	db	166
   355  00DB19  44                 	db	68
   356  00DB1A  1A                 	db	26
   357  00DB1B  99                 	db	153
   358  00DB1C  C7                 	db	199
   359  00DB1D  25                 	db	37
   360  00DB1E  7B                 	db	123
   361  00DB1F  3A                 	db	58
   362  00DB20  64                 	db	100
   363  00DB21  86                 	db	134
   364  00DB22  D8                 	db	216
   365  00DB23  5B                 	db	91
   366  00DB24  05                 	db	5
   367  00DB25  E7                 	db	231
   368  00DB26  B9                 	db	185
   369  00DB27  8C                 	db	140
   370  00DB28  D2                 	db	210
   371  00DB29  30                 	db	48
   372  00DB2A  6E                 	db	110
   373  00DB2B  ED                 	db	237
   374  00DB2C  B3                 	db	179
   375  00DB2D  51                 	db	81
   376  00DB2E  0F                 	db	15
   377  00DB2F  4E                 	db	78
   378  00DB30  10                 	db	16
   379  00DB31  F2                 	db	242
   380  00DB32  AC                 	db	172
   381  00DB33  2F                 	db	47
   382  00DB34  71                 	db	113
   383  00DB35  93                 	db	147
   384  00DB36  CD                 	db	205
   385  00DB37  11                 	db	17
   386  00DB38  4F                 	db	79
   387  00DB39  AD                 	db	173
   388  00DB3A  F3                 	db	243
   389  00DB3B  70                 	db	112
   390  00DB3C  2E                 	db	46
   391  00DB3D  CC                 	db	204
   392  00DB3E  92                 	db	146
   393  00DB3F  D3                 	db	211
   394  00DB40  8D                 	db	141
   395  00DB41  6F                 	db	111
   396  00DB42  31                 	db	49
   397  00DB43  B2                 	db	178
   398  00DB44  EC                 	db	236
   399  00DB45  0E                 	db	14
   400  00DB46  50                 	db	80
   401  00DB47  AF                 	db	175
   402  00DB48  F1                 	db	241
   403  00DB49  13                 	db	19
   404  00DB4A  4D                 	db	77
   405  00DB4B  CE                 	db	206
   406  00DB4C  90                 	db	144
   407  00DB4D  72                 	db	114
   408  00DB4E  2C                 	db	44
   409  00DB4F  6D                 	db	109
   410  00DB50  33                 	db	51
   411  00DB51  D1                 	db	209
   412  00DB52  8F                 	db	143
   413  00DB53  0C                 	db	12
   414  00DB54  52                 	db	82
   415  00DB55  B0                 	db	176
   416  00DB56  EE                 	db	238
   417  00DB57  32                 	db	50
   418  00DB58  6C                 	db	108
   419  00DB59  8E                 	db	142
   420  00DB5A  D0                 	db	208
   421  00DB5B  53                 	db	83
   422  00DB5C  0D                 	db	13
   423  00DB5D  EF                 	db	239
   424  00DB5E  B1                 	db	177
   425  00DB5F  F0                 	db	240
   426  00DB60  AE                 	db	174
   427  00DB61  4C                 	db	76
   428  00DB62  12                 	db	18
   429  00DB63  91                 	db	145
   430  00DB64  CF                 	db	207
   431  00DB65  2D                 	db	45
   432  00DB66  73                 	db	115
   433  00DB67  CA                 	db	202
   434  00DB68  94                 	db	148
   435  00DB69  76                 	db	118
   436  00DB6A  28                 	db	40
   437  00DB6B  AB                 	db	171
   438  00DB6C  F5                 	db	245
   439  00DB6D  17                 	db	23
   440  00DB6E  49                 	db	73
   441  00DB6F  08                 	db	8
   442  00DB70  56                 	db	86
   443  00DB71  B4                 	db	180
   444  00DB72  EA                 	db	234
   445  00DB73  69                 	db	105
   446  00DB74  37                 	db	55
   447  00DB75  D5                 	db	213
   448  00DB76  8B                 	db	139
   449  00DB77  57                 	db	87
   450  00DB78  09                 	db	9
   451  00DB79  EB                 	db	235
   452  00DB7A  B5                 	db	181
   453  00DB7B  36                 	db	54
   454  00DB7C  68                 	db	104
   455  00DB7D  8A                 	db	138
   456  00DB7E  D4                 	db	212
   457  00DB7F  95                 	db	149
   458  00DB80  CB                 	db	203
   459  00DB81  29                 	db	41
   460  00DB82  77                 	db	119
   461  00DB83  F4                 	db	244
   462  00DB84  AA                 	db	170
   463  00DB85  48                 	db	72
   464  00DB86  16                 	db	22
   465  00DB87  E9                 	db	233
   466  00DB88  B7                 	db	183
   467  00DB89  55                 	db	85
   468  00DB8A  0B                 	db	11
   469  00DB8B  88                 	db	136
   470  00DB8C  D6                 	db	214
   471  00DB8D  34                 	db	52
   472  00DB8E  6A                 	db	106
   473  00DB8F  2B                 	db	43
   474  00DB90  75                 	db	117
   475  00DB91  97                 	db	151
   476  00DB92  C9                 	db	201
   477  00DB93  4A                 	db	74
   478  00DB94  14                 	db	20
   479  00DB95  F6                 	db	246
   480  00DB96  A8                 	db	168
   481  00DB97  74                 	db	116
   482  00DB98  2A                 	db	42
   483  00DB99  C8                 	db	200
   484  00DB9A  96                 	db	150
   485  00DB9B  15                 	db	21
   486  00DB9C  4B                 	db	75
   487  00DB9D  A9                 	db	169
   488  00DB9E  F7                 	db	247
   489  00DB9F  B6                 	db	182
   490  00DBA0  E8                 	db	232
   491  00DBA1  0A                 	db	10
   492  00DBA2  54                 	db	84
   493  00DBA3  D7                 	db	215
   494  00DBA4  89                 	db	137
   495  00DBA5  6B                 	db	107
   496  00DBA6  35                 	db	53
   497  00DBA7                     __end_of_dscrc_table:
   498                           	opt stack 0
   499  00DBA7                     _eedata:
   500                           	opt stack 0
   501  00DBA7  01                 	db	1
   502  00DBA8  00                 	db	0
   503  00DBA9  00                 	db	0
   504  00DBAA  00                 	db	0
   505  00DBAB  00                 	db	0
   506  00DBAC  00                 	db	0
   507  00DBAD  00                 	db	0
   508  00DBAE  00                 	db	0
   509  00DBAF  00                 	db	0
   510  00DBB0  00                 	db	0
   511  00DBB1  00                 	db	0
   512  00DBB2  00                 	db	0
   513  00DBB3  00                 	db	0
   514  00DBB4  00                 	db	0
   515  00DBB5  00                 	db	0
   516  00DBB6  00                 	db	0
   517  00DBB7  00                 	db	0
   518  00DBB8  00                 	db	0
   519  00DBB9  00                 	db	0
   520  00DBBA  00                 	db	0
   521  00DBBB  00                 	db	0
   522  00DBBC  00                 	db	0
   523  00DBBD  00                 	db	0
   524  00DBBE  00                 	db	0
   525  00DBBF  00                 	db	0
   526  00DBC0  00                 	db	0
   527  00DBC1  00                 	db	0
   528  00DBC2  00                 	db	0
   529  00DBC3  00                 	db	0
   530  00DBC4  00                 	db	0
   531  00DBC5  00                 	db	0
   532  00DBC6  00                 	db	0
   533  00DBC7  00                 	db	0
   534  00DBC8  00                 	db	0
   535  00DBC9  00                 	db	0
   536  00DBCA  00                 	db	0
   537  00DBCB  00                 	db	0
   538  00DBCC  00                 	db	0
   539  00DBCD  00                 	db	0
   540  00DBCE  00                 	db	0
   541  00DBCF  00                 	db	0
   542  00DBD0  00                 	db	0
   543  00DBD1  00                 	db	0
   544  00DBD2  00                 	db	0
   545  00DBD3  00                 	db	0
   546  00DBD4  00                 	db	0
   547  00DBD5  00                 	db	0
   548  00DBD6  00                 	db	0
   549  00DBD7  00                 	db	0
   550  00DBD8  00                 	db	0
   551  00DBD9  00                 	db	0
   552  00DBDA  00                 	db	0
   553  00DBDB  00                 	db	0
   554  00DBDC  00                 	db	0
   555  00DBDD  00                 	db	0
   556  00DBDE  00                 	db	0
   557  00DBDF  00                 	db	0
   558  00DBE0  00                 	db	0
   559  00DBE1  00                 	db	0
   560  00DBE2  00                 	db	0
   561  00DBE3  00                 	db	0
   562  00DBE4  00                 	db	0
   563  00DBE5  00                 	db	0
   564  00DBE6  00                 	db	0
   565  00DBE7  00                 	db	0
   566  00DBE8  00                 	db	0
   567  00DBE9  00                 	db	0
   568  00DBEA  00                 	db	0
   569  00DBEB  00                 	db	0
   570  00DBEC  00                 	db	0
   571  00DBED  00                 	db	0
   572  00DBEE  00                 	db	0
   573  00DBEF  00                 	db	0
   574  00DBF0  00                 	db	0
   575  00DBF1  00                 	db	0
   576  00DBF2  00                 	db	0
   577  00DBF3  00                 	db	0
   578  00DBF4  00                 	db	0
   579  00DBF5  00                 	db	0
   580  00DBF6  00                 	db	0
   581  00DBF7  00                 	db	0
   582  00DBF8  00                 	db	0
   583  00DBF9  00                 	db	0
   584  00DBFA  00                 	db	0
   585  00DBFB  00                 	db	0
   586  00DBFC  00                 	db	0
   587  00DBFD  00                 	db	0
   588  00DBFE  00                 	db	0
   589  00DBFF  00                 	db	0
   590  00DC00  00                 	db	0
   591  00DC01  00                 	db	0
   592  00DC02  00                 	db	0
   593  00DC03  00                 	db	0
   594  00DC04  00                 	db	0
   595  00DC05  00                 	db	0
   596  00DC06  00                 	db	0
   597  00DC07  00                 	db	0
   598  00DC08  00                 	db	0
   599  00DC09  00                 	db	0
   600  00DC0A  00                 	db	0
   601  00DC0B  00                 	db	0
   602  00DC0C  00                 	db	0
   603  00DC0D  00                 	db	0
   604  00DC0E  00                 	db	0
   605  00DC0F  00                 	db	0
   606  00DC10  00                 	db	0
   607  00DC11  00                 	db	0
   608  00DC12  00                 	db	0
   609  00DC13  00                 	db	0
   610  00DC14  00                 	db	0
   611  00DC15  00                 	db	0
   612  00DC16  00                 	db	0
   613  00DC17  00                 	db	0
   614  00DC18  00                 	db	0
   615  00DC19  00                 	db	0
   616  00DC1A  00                 	db	0
   617  00DC1B  00                 	db	0
   618  00DC1C  00                 	db	0
   619  00DC1D  00                 	db	0
   620  00DC1E  00                 	db	0
   621  00DC1F  00                 	db	0
   622  00DC20  00                 	db	0
   623  00DC21  00                 	db	0
   624  00DC22  00                 	db	0
   625  00DC23  00                 	db	0
   626  00DC24  00                 	db	0
   627  00DC25  00                 	db	0
   628  00DC26  00                 	db	0
   629  00DC27  00                 	db	0
   630  00DC28  00                 	db	0
   631  00DC29  00                 	db	0
   632  00DC2A  00                 	db	0
   633  00DC2B  00                 	db	0
   634  00DC2C  00                 	db	0
   635  00DC2D  00                 	db	0
   636  00DC2E  00                 	db	0
   637  00DC2F  00                 	db	0
   638  00DC30  00                 	db	0
   639  00DC31  00                 	db	0
   640  00DC32  00                 	db	0
   641  00DC33  00                 	db	0
   642  00DC34  00                 	db	0
   643  00DC35  00                 	db	0
   644  00DC36  00                 	db	0
   645  00DC37  00                 	db	0
   646  00DC38  00                 	db	0
   647  00DC39  00                 	db	0
   648  00DC3A  00                 	db	0
   649  00DC3B  00                 	db	0
   650  00DC3C  00                 	db	0
   651  00DC3D  00                 	db	0
   652  00DC3E  00                 	db	0
   653  00DC3F  00                 	db	0
   654  00DC40  00                 	db	0
   655  00DC41  00                 	db	0
   656  00DC42  00                 	db	0
   657  00DC43  00                 	db	0
   658  00DC44  00                 	db	0
   659  00DC45  00                 	db	0
   660  00DC46  00                 	db	0
   661  00DC47  00                 	db	0
   662  00DC48  00                 	db	0
   663  00DC49  00                 	db	0
   664  00DC4A  00                 	db	0
   665  00DC4B  00                 	db	0
   666  00DC4C  00                 	db	0
   667  00DC4D  00                 	db	0
   668  00DC4E  00                 	db	0
   669  00DC4F  00                 	db	0
   670  00DC50  00                 	db	0
   671  00DC51  00                 	db	0
   672  00DC52  00                 	db	0
   673  00DC53  00                 	db	0
   674  00DC54  00                 	db	0
   675  00DC55  00                 	db	0
   676  00DC56  00                 	db	0
   677  00DC57  00                 	db	0
   678  00DC58  00                 	db	0
   679  00DC59  00                 	db	0
   680  00DC5A  00                 	db	0
   681  00DC5B  00                 	db	0
   682  00DC5C  00                 	db	0
   683  00DC5D  00                 	db	0
   684  00DC5E  00                 	db	0
   685  00DC5F  00                 	db	0
   686  00DC60  00                 	db	0
   687  00DC61  00                 	db	0
   688  00DC62  00                 	db	0
   689  00DC63  00                 	db	0
   690  00DC64  00                 	db	0
   691  00DC65  00                 	db	0
   692  00DC66  00                 	db	0
   693  00DC67  00                 	db	0
   694  00DC68  00                 	db	0
   695  00DC69  00                 	db	0
   696  00DC6A  00                 	db	0
   697  00DC6B  00                 	db	0
   698  00DC6C  00                 	db	0
   699  00DC6D  00                 	db	0
   700  00DC6E  00                 	db	0
   701  00DC6F  00                 	db	0
   702  00DC70  00                 	db	0
   703  00DC71  00                 	db	0
   704  00DC72  00                 	db	0
   705  00DC73  00                 	db	0
   706  00DC74  00                 	db	0
   707  00DC75  00                 	db	0
   708  00DC76  00                 	db	0
   709  00DC77  00                 	db	0
   710  00DC78  00                 	db	0
   711  00DC79  00                 	db	0
   712  00DC7A  00                 	db	0
   713  00DC7B  00                 	db	0
   714  00DC7C  00                 	db	0
   715  00DC7D  00                 	db	0
   716  00DC7E  00                 	db	0
   717  00DC7F  00                 	db	0
   718  00DC80  00                 	db	0
   719  00DC81  00                 	db	0
   720  00DC82  00                 	db	0
   721  00DC83  00                 	db	0
   722  00DC84  00                 	db	0
   723  00DC85  00                 	db	0
   724  00DC86  00                 	db	0
   725  00DC87  00                 	db	0
   726  00DC88  00                 	db	0
   727  00DC89  00                 	db	0
   728  00DC8A  00                 	db	0
   729  00DC8B  00                 	db	0
   730  00DC8C  00                 	db	0
   731  00DC8D  00                 	db	0
   732  00DC8E  00                 	db	0
   733  00DC8F  00                 	db	0
   734  00DC90  00                 	db	0
   735  00DC91  00                 	db	0
   736  00DC92  00                 	db	0
   737  00DC93  00                 	db	0
   738  00DC94  00                 	db	0
   739  00DC95  00                 	db	0
   740  00DC96  00                 	db	0
   741  00DC97  00                 	db	0
   742  00DC98  00                 	db	0
   743  00DC99  00                 	db	0
   744  00DC9A  00                 	db	0
   745  00DC9B  00                 	db	0
   746  00DC9C  00                 	db	0
   747  00DC9D  00                 	db	0
   748  00DC9E  00                 	db	0
   749  00DC9F  00                 	db	0
   750  00DCA0  00                 	db	0
   751  00DCA1  00                 	db	0
   752  00DCA2  00                 	db	0
   753  00DCA3  00                 	db	0
   754  00DCA4  00                 	db	0
   755  00DCA5  00                 	db	0
   756  00DCA6  00                 	db	0
   757  00DCA7                     __end_of_eedata:
   758                           	opt stack 0
   759  00DCA7                     __npowers_:
   760                           	opt stack 0
   761  00DCA7  0000               	dw	0
   762  00DCA9  3F80               	dw	16256
   763  00DCAB  CCCD               	dw	52429
   764  00DCAD  3DCC               	dw	15820
   765  00DCAF  D70A               	dw	55050
   766  00DCB1  3C23               	dw	15395
   767  00DCB3  126F               	dw	4719
   768  00DCB5  3A83               	dw	14979
   769  00DCB7  B717               	dw	46871
   770  00DCB9  38D1               	dw	14545
   771  00DCBB  C5AC               	dw	50604
   772  00DCBD  3727               	dw	14119
   773  00DCBF  37BD               	dw	14269
   774  00DCC1  3586               	dw	13702
   775  00DCC3  BF95               	dw	49045
   776  00DCC5  33D6               	dw	13270
   777  00DCC7  CC77               	dw	52343
   778  00DCC9  322B               	dw	12843
   779  00DCCB  705F               	dw	28767
   780  00DCCD  3089               	dw	12425
   781  00DCCF  E6FF               	dw	59135
   782  00DCD1  2EDB               	dw	11995
   783  00DCD3  E508               	dw	58632
   784  00DCD5  1E3C               	dw	7740
   785  00DCD7  4260               	dw	16992
   786  00DCD9  0DA2               	dw	3490
   787  00DCDB                     __end_of__npowers_:
   788                           	opt stack 0
   789  00DCDB                     __powers_:
   790                           	opt stack 0
   791  00DCDB  0000               	dw	0
   792  00DCDD  3F80               	dw	16256
   793  00DCDF  0000               	dw	0
   794  00DCE1  4120               	dw	16672
   795  00DCE3  0000               	dw	0
   796  00DCE5  42C8               	dw	17096
   797  00DCE7  0000               	dw	0
   798  00DCE9  447A               	dw	17530
   799  00DCEB  4000               	dw	16384
   800  00DCED  461C               	dw	17948
   801  00DCEF  5000               	dw	20480
   802  00DCF1  47C3               	dw	18371
   803  00DCF3  2400               	dw	9216
   804  00DCF5  4974               	dw	18804
   805  00DCF7  9680               	dw	38528
   806  00DCF9  4B18               	dw	19224
   807  00DCFB  BC20               	dw	48160
   808  00DCFD  4CBE               	dw	19646
   809  00DCFF  6B28               	dw	27432
   810  00DD01  4E6E               	dw	20078
   811  00DD03  02F9               	dw	761
   812  00DD05  5015               	dw	20501
   813  00DD07  78EC               	dw	30956
   814  00DD09  60AD               	dw	24749
   815  00DD0B  F2CA               	dw	62154
   816  00DD0D  7149               	dw	29001
   817  00DD0F                     __end_of__powers_:
   818                           	opt stack 0
   819  00DD0F                     _font23:
   820                           	opt stack 0
   821  00DD0F  17                 	db	23
   822  00DD10  20                 	db	32
   823  00DD11  5D                 	db	93
   824  00DD12  07                 	db	7
   825  00DD13  00                 	db	0
   826  00DD14  00                 	db	0
   827  00DD15  00                 	db	0
   828  00DD16  00                 	db	0
   829  00DD17  00                 	db	0
   830  00DD18  00                 	db	0
   831  00DD19  00                 	db	0
   832  00DD1A  00                 	db	0
   833  00DD1B  00                 	db	0
   834  00DD1C  00                 	db	0
   835  00DD1D  00                 	db	0
   836  00DD1E  00                 	db	0
   837  00DD1F  00                 	db	0
   838  00DD20  00                 	db	0
   839  00DD21  00                 	db	0
   840  00DD22  00                 	db	0
   841  00DD23  00                 	db	0
   842  00DD24  00                 	db	0
   843  00DD25  00                 	db	0
   844  00DD26  00                 	db	0
   845  00DD27  00                 	db	0
   846  00DD28  00                 	db	0
   847  00DD29  00                 	db	0
   848  00DD2A  00                 	db	0
   849  00DD2B  00                 	db	0
   850  00DD2C  00                 	db	0
   851  00DD2D  00                 	db	0
   852  00DD2E  00                 	db	0
   853  00DD2F  00                 	db	0
   854  00DD30  00                 	db	0
   855  00DD31  00                 	db	0
   856  00DD32  00                 	db	0
   857  00DD33  00                 	db	0
   858  00DD34  00                 	db	0
   859  00DD35  00                 	db	0
   860  00DD36  00                 	db	0
   861  00DD37  00                 	db	0
   862  00DD38  00                 	db	0
   863  00DD39  00                 	db	0
   864  00DD3A  00                 	db	0
   865  00DD3B  00                 	db	0
   866  00DD3C  00                 	db	0
   867  00DD3D  00                 	db	0
   868  00DD3E  00                 	db	0
   869  00DD3F  00                 	db	0
   870  00DD40  00                 	db	0
   871  00DD41  00                 	db	0
   872  00DD42  00                 	db	0
   873  00DD43  00                 	db	0
   874  00DD44  00                 	db	0
   875  00DD45  00                 	db	0
   876  00DD46  00                 	db	0
   877  00DD47  00                 	db	0
   878  00DD48  00                 	db	0
   879  00DD49  00                 	db	0
   880  00DD4A  00                 	db	0
   881  00DD4B  00                 	db	0
   882  00DD4C  00                 	db	0
   883  00DD4D  00                 	db	0
   884  00DD4E  00                 	db	0
   885  00DD4F  00                 	db	0
   886  00DD50  00                 	db	0
   887  00DD51  00                 	db	0
   888  00DD52  00                 	db	0
   889  00DD53  00                 	db	0
   890  00DD54  00                 	db	0
   891  00DD55  00                 	db	0
   892  00DD56  00                 	db	0
   893  00DD57  00                 	db	0
   894  00DD58  00                 	db	0
   895  00DD59  00                 	db	0
   896  00DD5A  00                 	db	0
   897  00DD5B  00                 	db	0
   898  00DD5C  00                 	db	0
   899  00DD5D  00                 	db	0
   900  00DD5E  00                 	db	0
   901  00DD5F  00                 	db	0
   902  00DD60  00                 	db	0
   903  00DD61  00                 	db	0
   904  00DD62  00                 	db	0
   905  00DD63  00                 	db	0
   906  00DD64  00                 	db	0
   907  00DD65  00                 	db	0
   908  00DD66  00                 	db	0
   909  00DD67  00                 	db	0
   910  00DD68  00                 	db	0
   911  00DD69  00                 	db	0
   912  00DD6A  00                 	db	0
   913  00DD6B  00                 	db	0
   914  00DD6C  00                 	db	0
   915  00DD6D  00                 	db	0
   916  00DD6E  00                 	db	0
   917  00DD6F  07                 	db	7
   918  00DD70  00                 	db	0
   919  00DD71  00                 	db	0
   920  00DD72  00                 	db	0
   921  00DD73  00                 	db	0
   922  00DD74  00                 	db	0
   923  00DD75  00                 	db	0
   924  00DD76  00                 	db	0
   925  00DD77  00                 	db	0
   926  00DD78  00                 	db	0
   927  00DD79  00                 	db	0
   928  00DD7A  00                 	db	0
   929  00DD7B  00                 	db	0
   930  00DD7C  00                 	db	0
   931  00DD7D  00                 	db	0
   932  00DD7E  00                 	db	0
   933  00DD7F  00                 	db	0
   934  00DD80  00                 	db	0
   935  00DD81  00                 	db	0
   936  00DD82  00                 	db	0
   937  00DD83  00                 	db	0
   938  00DD84  70                 	db	112
   939  00DD85  00                 	db	0
   940  00DD86  00                 	db	0
   941  00DD87  00                 	db	0
   942  00DD88  70                 	db	112
   943  00DD89  00                 	db	0
   944  00DD8A  00                 	db	0
   945  00DD8B  00                 	db	0
   946  00DD8C  70                 	db	112
   947  00DD8D  00                 	db	0
   948  00DD8E  00                 	db	0
   949  00DD8F  00                 	db	0
   950  00DD90  70                 	db	112
   951  00DD91  00                 	db	0
   952  00DD92  00                 	db	0
   953  00DD93  00                 	db	0
   954  00DD94  70                 	db	112
   955  00DD95  00                 	db	0
   956  00DD96  00                 	db	0
   957  00DD97  00                 	db	0
   958  00DD98  70                 	db	112
   959  00DD99  00                 	db	0
   960  00DD9A  00                 	db	0
   961  00DD9B  00                 	db	0
   962  00DD9C  70                 	db	112
   963  00DD9D  00                 	db	0
   964  00DD9E  00                 	db	0
   965  00DD9F  00                 	db	0
   966  00DDA0  70                 	db	112
   967  00DDA1  00                 	db	0
   968  00DDA2  00                 	db	0
   969  00DDA3  00                 	db	0
   970  00DDA4  70                 	db	112
   971  00DDA5  00                 	db	0
   972  00DDA6  00                 	db	0
   973  00DDA7  00                 	db	0
   974  00DDA8  70                 	db	112
   975  00DDA9  00                 	db	0
   976  00DDAA  00                 	db	0
   977  00DDAB  00                 	db	0
   978  00DDAC  00                 	db	0
   979  00DDAD  00                 	db	0
   980  00DDAE  00                 	db	0
   981  00DDAF  00                 	db	0
   982  00DDB0  00                 	db	0
   983  00DDB1  00                 	db	0
   984  00DDB2  00                 	db	0
   985  00DDB3  00                 	db	0
   986  00DDB4  70                 	db	112
   987  00DDB5  00                 	db	0
   988  00DDB6  00                 	db	0
   989  00DDB7  00                 	db	0
   990  00DDB8  70                 	db	112
   991  00DDB9  00                 	db	0
   992  00DDBA  00                 	db	0
   993  00DDBB  00                 	db	0
   994  00DDBC  00                 	db	0
   995  00DDBD  00                 	db	0
   996  00DDBE  00                 	db	0
   997  00DDBF  00                 	db	0
   998  00DDC0  00                 	db	0
   999  00DDC1  00                 	db	0
  1000  00DDC2  00                 	db	0
  1001  00DDC3  00                 	db	0
  1002  00DDC4  00                 	db	0
  1003  00DDC5  00                 	db	0
  1004  00DDC6  00                 	db	0
  1005  00DDC7  00                 	db	0
  1006  00DDC8  00                 	db	0
  1007  00DDC9  00                 	db	0
  1008  00DDCA  00                 	db	0
  1009  00DDCB  00                 	db	0
  1010  00DDCC  09                 	db	9
  1011  00DDCD  00                 	db	0
  1012  00DDCE  00                 	db	0
  1013  00DDCF  00                 	db	0
  1014  00DDD0  00                 	db	0
  1015  00DDD1  00                 	db	0
  1016  00DDD2  00                 	db	0
  1017  00DDD3  00                 	db	0
  1018  00DDD4  00                 	db	0
  1019  00DDD5  00                 	db	0
  1020  00DDD6  00                 	db	0
  1021  00DDD7  00                 	db	0
  1022  00DDD8  00                 	db	0
  1023  00DDD9  00                 	db	0
  1024  00DDDA  00                 	db	0
  1025  00DDDB  00                 	db	0
  1026  00DDDC  00                 	db	0
  1027  00DDDD  77                 	db	119
  1028  00DDDE  00                 	db	0
  1029  00DDDF  00                 	db	0
  1030  00DDE0  00                 	db	0
  1031  00DDE1  77                 	db	119
  1032  00DDE2  00                 	db	0
  1033  00DDE3  00                 	db	0
  1034  00DDE4  00                 	db	0
  1035  00DDE5  77                 	db	119
  1036  00DDE6  00                 	db	0
  1037  00DDE7  00                 	db	0
  1038  00DDE8  00                 	db	0
  1039  00DDE9  77                 	db	119
  1040  00DDEA  00                 	db	0
  1041  00DDEB  00                 	db	0
  1042  00DDEC  00                 	db	0
  1043  00DDED  77                 	db	119
  1044  00DDEE  00                 	db	0
  1045  00DDEF  00                 	db	0
  1046  00DDF0  00                 	db	0
  1047  00DDF1  00                 	db	0
  1048  00DDF2  00                 	db	0
  1049  00DDF3  00                 	db	0
  1050  00DDF4  00                 	db	0
  1051  00DDF5  00                 	db	0
  1052  00DDF6  00                 	db	0
  1053  00DDF7  00                 	db	0
  1054  00DDF8  00                 	db	0
  1055  00DDF9  00                 	db	0
  1056  00DDFA  00                 	db	0
  1057  00DDFB  00                 	db	0
  1058  00DDFC  00                 	db	0
  1059  00DDFD  00                 	db	0
  1060  00DDFE  00                 	db	0
  1061  00DDFF  00                 	db	0
  1062  00DE00  00                 	db	0
  1063  00DE01  00                 	db	0
  1064  00DE02  00                 	db	0
  1065  00DE03  00                 	db	0
  1066  00DE04  00                 	db	0
  1067  00DE05  00                 	db	0
  1068  00DE06  00                 	db	0
  1069  00DE07  00                 	db	0
  1070  00DE08  00                 	db	0
  1071  00DE09  00                 	db	0
  1072  00DE0A  00                 	db	0
  1073  00DE0B  00                 	db	0
  1074  00DE0C  00                 	db	0
  1075  00DE0D  00                 	db	0
  1076  00DE0E  00                 	db	0
  1077  00DE0F  00                 	db	0
  1078  00DE10  00                 	db	0
  1079  00DE11  00                 	db	0
  1080  00DE12  00                 	db	0
  1081  00DE13  00                 	db	0
  1082  00DE14  00                 	db	0
  1083  00DE15  00                 	db	0
  1084  00DE16  00                 	db	0
  1085  00DE17  00                 	db	0
  1086  00DE18  00                 	db	0
  1087  00DE19  00                 	db	0
  1088  00DE1A  00                 	db	0
  1089  00DE1B  00                 	db	0
  1090  00DE1C  00                 	db	0
  1091  00DE1D  00                 	db	0
  1092  00DE1E  00                 	db	0
  1093  00DE1F  00                 	db	0
  1094  00DE20  00                 	db	0
  1095  00DE21  00                 	db	0
  1096  00DE22  00                 	db	0
  1097  00DE23  00                 	db	0
  1098  00DE24  00                 	db	0
  1099  00DE25  00                 	db	0
  1100  00DE26  00                 	db	0
  1101  00DE27  00                 	db	0
  1102  00DE28  00                 	db	0
  1103  00DE29  10                 	db	16
  1104  00DE2A  00                 	db	0
  1105  00DE2B  00                 	db	0
  1106  00DE2C  00                 	db	0
  1107  00DE2D  00                 	db	0
  1108  00DE2E  00                 	db	0
  1109  00DE2F  00                 	db	0
  1110  00DE30  00                 	db	0
  1111  00DE31  00                 	db	0
  1112  00DE32  00                 	db	0
  1113  00DE33  00                 	db	0
  1114  00DE34  00                 	db	0
  1115  00DE35  00                 	db	0
  1116  00DE36  00                 	db	0
  1117  00DE37  00                 	db	0
  1118  00DE38  00                 	db	0
  1119  00DE39  00                 	db	0
  1120  00DE3A  00                 	db	0
  1121  00DE3B  00                 	db	0
  1122  00DE3C  00                 	db	0
  1123  00DE3D  00                 	db	0
  1124  00DE3E  03                 	db	3
  1125  00DE3F  18                 	db	24
  1126  00DE40  00                 	db	0
  1127  00DE41  00                 	db	0
  1128  00DE42  03                 	db	3
  1129  00DE43  18                 	db	24
  1130  00DE44  00                 	db	0
  1131  00DE45  00                 	db	0
  1132  00DE46  07                 	db	7
  1133  00DE47  30                 	db	48
  1134  00DE48  00                 	db	0
  1135  00DE49  00                 	db	0
  1136  00DE4A  1F                 	db	31
  1137  00DE4B  FC                 	db	252
  1138  00DE4C  00                 	db	0
  1139  00DE4D  00                 	db	0
  1140  00DE4E  1F                 	db	31
  1141  00DE4F  FC                 	db	252
  1142  00DE50  00                 	db	0
  1143  00DE51  00                 	db	0
  1144  00DE52  06                 	db	6
  1145  00DE53  30                 	db	48
  1146  00DE54  00                 	db	0
  1147  00DE55  00                 	db	0
  1148  00DE56  06                 	db	6
  1149  00DE57  30                 	db	48
  1150  00DE58  00                 	db	0
  1151  00DE59  00                 	db	0
  1152  00DE5A  0C                 	db	12
  1153  00DE5B  60                 	db	96
  1154  00DE5C  00                 	db	0
  1155  00DE5D  00                 	db	0
  1156  00DE5E  7F                 	db	127
  1157  00DE5F  F8                 	db	248
  1158  00DE60  00                 	db	0
  1159  00DE61  00                 	db	0
  1160  00DE62  7F                 	db	127
  1161  00DE63  F8                 	db	248
  1162  00DE64  00                 	db	0
  1163  00DE65  00                 	db	0
  1164  00DE66  0C                 	db	12
  1165  00DE67  60                 	db	96
  1166  00DE68  00                 	db	0
  1167  00DE69  00                 	db	0
  1168  00DE6A  0C                 	db	12
  1169  00DE6B  60                 	db	96
  1170  00DE6C  00                 	db	0
  1171  00DE6D  00                 	db	0
  1172  00DE6E  18                 	db	24
  1173  00DE6F  C0                 	db	192
  1174  00DE70  00                 	db	0
  1175  00DE71  00                 	db	0
  1176  00DE72  18                 	db	24
  1177  00DE73  C0                 	db	192
  1178  00DE74  00                 	db	0
  1179  00DE75  00                 	db	0
  1180  00DE76  00                 	db	0
  1181  00DE77  00                 	db	0
  1182  00DE78  00                 	db	0
  1183  00DE79  00                 	db	0
  1184  00DE7A  00                 	db	0
  1185  00DE7B  00                 	db	0
  1186  00DE7C  00                 	db	0
  1187  00DE7D  00                 	db	0
  1188  00DE7E  00                 	db	0
  1189  00DE7F  00                 	db	0
  1190  00DE80  00                 	db	0
  1191  00DE81  00                 	db	0
  1192  00DE82  00                 	db	0
  1193  00DE83  00                 	db	0
  1194  00DE84  00                 	db	0
  1195  00DE85  00                 	db	0
  1196  00DE86  0C                 	db	12
  1197  00DE87  00                 	db	0
  1198  00DE88  00                 	db	0
  1199  00DE89  00                 	db	0
  1200  00DE8A  00                 	db	0
  1201  00DE8B  00                 	db	0
  1202  00DE8C  00                 	db	0
  1203  00DE8D  00                 	db	0
  1204  00DE8E  00                 	db	0
  1205  00DE8F  00                 	db	0
  1206  00DE90  00                 	db	0
  1207  00DE91  00                 	db	0
  1208  00DE92  00                 	db	0
  1209  00DE93  00                 	db	0
  1210  00DE94  00                 	db	0
  1211  00DE95  00                 	db	0
  1212  00DE96  00                 	db	0
  1213  00DE97  00                 	db	0
  1214  00DE98  00                 	db	0
  1215  00DE99  00                 	db	0
  1216  00DE9A  00                 	db	0
  1217  00DE9B  06                 	db	6
  1218  00DE9C  00                 	db	0
  1219  00DE9D  00                 	db	0
  1220  00DE9E  00                 	db	0
  1221  00DE9F  06                 	db	6
  1222  00DEA0  00                 	db	0
  1223  00DEA1  00                 	db	0
  1224  00DEA2  00                 	db	0
  1225  00DEA3  1F                 	db	31
  1226  00DEA4  C0                 	db	192
  1227  00DEA5  00                 	db	0
  1228  00DEA6  00                 	db	0
  1229  00DEA7  3F                 	db	63
  1230  00DEA8  C0                 	db	192
  1231  00DEA9  00                 	db	0
  1232  00DEAA  00                 	db	0
  1233  00DEAB  76                 	db	118
  1234  00DEAC  40                 	db	64
  1235  00DEAD  00                 	db	0
  1236  00DEAE  00                 	db	0
  1237  00DEAF  76                 	db	118
  1238  00DEB0  00                 	db	0
  1239  00DEB1  00                 	db	0
  1240  00DEB2  00                 	db	0
  1241  00DEB3  7E                 	db	126
  1242  00DEB4  00                 	db	0
  1243  00DEB5  00                 	db	0
  1244  00DEB6  00                 	db	0
  1245  00DEB7  3F                 	db	63
  1246  00DEB8  C0                 	db	192
  1247  00DEB9  00                 	db	0
  1248  00DEBA  00                 	db	0
  1249  00DEBB  1F                 	db	31
  1250  00DEBC  E0                 	db	224
  1251  00DEBD  00                 	db	0
  1252  00DEBE  00                 	db	0
  1253  00DEBF  07                 	db	7
  1254  00DEC0  E0                 	db	224
  1255  00DEC1  00                 	db	0
  1256  00DEC2  00                 	db	0
  1257  00DEC3  46                 	db	70
  1258  00DEC4  E0                 	db	224
  1259  00DEC5  00                 	db	0
  1260  00DEC6  00                 	db	0
  1261  00DEC7  66                 	db	102
  1262  00DEC8  E0                 	db	224
  1263  00DEC9  00                 	db	0
  1264  00DECA  00                 	db	0
  1265  00DECB  7F                 	db	127
  1266  00DECC  C0                 	db	192
  1267  00DECD  00                 	db	0
  1268  00DECE  00                 	db	0
  1269  00DECF  3F                 	db	63
  1270  00DED0  80                 	db	128
  1271  00DED1  00                 	db	0
  1272  00DED2  00                 	db	0
  1273  00DED3  06                 	db	6
  1274  00DED4  00                 	db	0
  1275  00DED5  00                 	db	0
  1276  00DED6  00                 	db	0
  1277  00DED7  06                 	db	6
  1278  00DED8  00                 	db	0
  1279  00DED9  00                 	db	0
  1280  00DEDA  00                 	db	0
  1281  00DEDB  06                 	db	6
  1282  00DEDC  00                 	db	0
  1283  00DEDD  00                 	db	0
  1284  00DEDE  00                 	db	0
  1285  00DEDF  00                 	db	0
  1286  00DEE0  00                 	db	0
  1287  00DEE1  00                 	db	0
  1288  00DEE2  00                 	db	0
  1289  00DEE3  17                 	db	23
  1290  00DEE4  00                 	db	0
  1291  00DEE5  00                 	db	0
  1292  00DEE6  00                 	db	0
  1293  00DEE7  00                 	db	0
  1294  00DEE8  00                 	db	0
  1295  00DEE9  00                 	db	0
  1296  00DEEA  00                 	db	0
  1297  00DEEB  00                 	db	0
  1298  00DEEC  00                 	db	0
  1299  00DEED  00                 	db	0
  1300  00DEEE  00                 	db	0
  1301  00DEEF  00                 	db	0
  1302  00DEF0  00                 	db	0
  1303  00DEF1  00                 	db	0
  1304  00DEF2  00                 	db	0
  1305  00DEF3  00                 	db	0
  1306  00DEF4  00                 	db	0
  1307  00DEF5  00                 	db	0
  1308  00DEF6  00                 	db	0
  1309  00DEF7  00                 	db	0
  1310  00DEF8  1E                 	db	30
  1311  00DEF9  03                 	db	3
  1312  00DEFA  00                 	db	0
  1313  00DEFB  00                 	db	0
  1314  00DEFC  3F                 	db	63
  1315  00DEFD  06                 	db	6
  1316  00DEFE  00                 	db	0
  1317  00DEFF  00                 	db	0
  1318  00DF00  73                 	db	115
  1319  00DF01  86                 	db	134
  1320  00DF02  00                 	db	0
  1321  00DF03  00                 	db	0
  1322  00DF04  73                 	db	115
  1323  00DF05  8C                 	db	140
  1324  00DF06  00                 	db	0
  1325  00DF07  00                 	db	0
  1326  00DF08  73                 	db	115
  1327  00DF09  8C                 	db	140
  1328  00DF0A  00                 	db	0
  1329  00DF0B  00                 	db	0
  1330  00DF0C  73                 	db	115
  1331  00DF0D  98                 	db	152
  1332  00DF0E  F0                 	db	240
  1333  00DF0F  00                 	db	0
  1334  00DF10  73                 	db	115
  1335  00DF11  99                 	db	153
  1336  00DF12  F8                 	db	248
  1337  00DF13  00                 	db	0
  1338  00DF14  3F                 	db	63
  1339  00DF15  33                 	db	51
  1340  00DF16  9C                 	db	156
  1341  00DF17  00                 	db	0
  1342  00DF18  1E                 	db	30
  1343  00DF19  33                 	db	51
  1344  00DF1A  9C                 	db	156
  1345  00DF1B  00                 	db	0
  1346  00DF1C  00                 	db	0
  1347  00DF1D  63                 	db	99
  1348  00DF1E  9C                 	db	156
  1349  00DF1F  00                 	db	0
  1350  00DF20  00                 	db	0
  1351  00DF21  63                 	db	99
  1352  00DF22  9C                 	db	156
  1353  00DF23  00                 	db	0
  1354  00DF24  00                 	db	0
  1355  00DF25  C3                 	db	195
  1356  00DF26  9C                 	db	156
  1357  00DF27  00                 	db	0
  1358  00DF28  00                 	db	0
  1359  00DF29  C1                 	db	193
  1360  00DF2A  F8                 	db	248
  1361  00DF2B  00                 	db	0
  1362  00DF2C  01                 	db	1
  1363  00DF2D  80                 	db	128
  1364  00DF2E  F0                 	db	240
  1365  00DF2F  00                 	db	0
  1366  00DF30  00                 	db	0
  1367  00DF31  00                 	db	0
  1368  00DF32  00                 	db	0
  1369  00DF33  00                 	db	0
  1370  00DF34  00                 	db	0
  1371  00DF35  00                 	db	0
  1372  00DF36  00                 	db	0
  1373  00DF37  00                 	db	0
  1374  00DF38  00                 	db	0
  1375  00DF39  00                 	db	0
  1376  00DF3A  00                 	db	0
  1377  00DF3B  00                 	db	0
  1378  00DF3C  00                 	db	0
  1379  00DF3D  00                 	db	0
  1380  00DF3E  00                 	db	0
  1381  00DF3F  00                 	db	0
  1382  00DF40  0F                 	db	15
  1383  00DF41  00                 	db	0
  1384  00DF42  00                 	db	0
  1385  00DF43  00                 	db	0
  1386  00DF44  00                 	db	0
  1387  00DF45  00                 	db	0
  1388  00DF46  00                 	db	0
  1389  00DF47  00                 	db	0
  1390  00DF48  00                 	db	0
  1391  00DF49  00                 	db	0
  1392  00DF4A  00                 	db	0
  1393  00DF4B  00                 	db	0
  1394  00DF4C  00                 	db	0
  1395  00DF4D  00                 	db	0
  1396  00DF4E  00                 	db	0
  1397  00DF4F  00                 	db	0
  1398  00DF50  00                 	db	0
  1399  00DF51  00                 	db	0
  1400  00DF52  00                 	db	0
  1401  00DF53  00                 	db	0
  1402  00DF54  00                 	db	0
  1403  00DF55  0F                 	db	15
  1404  00DF56  80                 	db	128
  1405  00DF57  00                 	db	0
  1406  00DF58  00                 	db	0
  1407  00DF59  1F                 	db	31
  1408  00DF5A  E0                 	db	224
  1409  00DF5B  00                 	db	0
  1410  00DF5C  00                 	db	0
  1411  00DF5D  38                 	db	56
  1412  00DF5E  E0                 	db	224
  1413  00DF5F  00                 	db	0
  1414  00DF60  00                 	db	0
  1415  00DF61  38                 	db	56
  1416  00DF62  E0                 	db	224
  1417  00DF63  00                 	db	0
  1418  00DF64  00                 	db	0
  1419  00DF65  3C                 	db	60
  1420  00DF66  E0                 	db	224
  1421  00DF67  00                 	db	0
  1422  00DF68  00                 	db	0
  1423  00DF69  1F                 	db	31
  1424  00DF6A  C0                 	db	192
  1425  00DF6B  00                 	db	0
  1426  00DF6C  00                 	db	0
  1427  00DF6D  1F                 	db	31
  1428  00DF6E  1C                 	db	28
  1429  00DF6F  00                 	db	0
  1430  00DF70  00                 	db	0
  1431  00DF71  3F                 	db	63
  1432  00DF72  9C                 	db	156
  1433  00DF73  00                 	db	0
  1434  00DF74  00                 	db	0
  1435  00DF75  73                 	db	115
  1436  00DF76  DC                 	db	220
  1437  00DF77  00                 	db	0
  1438  00DF78  00                 	db	0
  1439  00DF79  71                 	db	113
  1440  00DF7A  F8                 	db	248
  1441  00DF7B  00                 	db	0
  1442  00DF7C  00                 	db	0
  1443  00DF7D  70                 	db	112
  1444  00DF7E  F8                 	db	248
  1445  00DF7F  00                 	db	0
  1446  00DF80  00                 	db	0
  1447  00DF81  78                 	db	120
  1448  00DF82  78                 	db	120
  1449  00DF83  00                 	db	0
  1450  00DF84  00                 	db	0
  1451  00DF85  3F                 	db	63
  1452  00DF86  FE                 	db	254
  1453  00DF87  00                 	db	0
  1454  00DF88  00                 	db	0
  1455  00DF89  0F                 	db	15
  1456  00DF8A  9F                 	db	159
  1457  00DF8B  00                 	db	0
  1458  00DF8C  00                 	db	0
  1459  00DF8D  00                 	db	0
  1460  00DF8E  00                 	db	0
  1461  00DF8F  00                 	db	0
  1462  00DF90  00                 	db	0
  1463  00DF91  00                 	db	0
  1464  00DF92  00                 	db	0
  1465  00DF93  00                 	db	0
  1466  00DF94  00                 	db	0
  1467  00DF95  00                 	db	0
  1468  00DF96  00                 	db	0
  1469  00DF97  00                 	db	0
  1470  00DF98  00                 	db	0
  1471  00DF99  00                 	db	0
  1472  00DF9A  00                 	db	0
  1473  00DF9B  00                 	db	0
  1474  00DF9C  00                 	db	0
  1475  00DF9D  05                 	db	5
  1476  00DF9E  00                 	db	0
  1477  00DF9F  00                 	db	0
  1478  00DFA0  00                 	db	0
  1479  00DFA1  00                 	db	0
  1480  00DFA2  00                 	db	0
  1481  00DFA3  00                 	db	0
  1482  00DFA4  00                 	db	0
  1483  00DFA5  00                 	db	0
  1484  00DFA6  00                 	db	0
  1485  00DFA7  00                 	db	0
  1486  00DFA8  00                 	db	0
  1487  00DFA9  00                 	db	0
  1488  00DFAA  00                 	db	0
  1489  00DFAB  00                 	db	0
  1490  00DFAC  00                 	db	0
  1491  00DFAD  00                 	db	0
  1492  00DFAE  70                 	db	112
  1493  00DFAF  00                 	db	0
  1494  00DFB0  00                 	db	0
  1495  00DFB1  00                 	db	0
  1496  00DFB2  70                 	db	112
  1497  00DFB3  00                 	db	0
  1498  00DFB4  00                 	db	0
  1499  00DFB5  00                 	db	0
  1500  00DFB6  70                 	db	112
  1501  00DFB7  00                 	db	0
  1502  00DFB8  00                 	db	0
  1503  00DFB9  00                 	db	0
  1504  00DFBA  70                 	db	112
  1505  00DFBB  00                 	db	0
  1506  00DFBC  00                 	db	0
  1507  00DFBD  00                 	db	0
  1508  00DFBE  70                 	db	112
  1509  00DFBF  00                 	db	0
  1510  00DFC0  00                 	db	0
  1511  00DFC1  00                 	db	0
  1512  00DFC2  00                 	db	0
  1513  00DFC3  00                 	db	0
  1514  00DFC4  00                 	db	0
  1515  00DFC5  00                 	db	0
  1516  00DFC6  00                 	db	0
  1517  00DFC7  00                 	db	0
  1518  00DFC8  00                 	db	0
  1519  00DFC9  00                 	db	0
  1520  00DFCA  00                 	db	0
  1521  00DFCB  00                 	db	0
  1522  00DFCC  00                 	db	0
  1523  00DFCD  00                 	db	0
  1524  00DFCE  00                 	db	0
  1525  00DFCF  00                 	db	0
  1526  00DFD0  00                 	db	0
  1527  00DFD1  00                 	db	0
  1528  00DFD2  00                 	db	0
  1529  00DFD3  00                 	db	0
  1530  00DFD4  00                 	db	0
  1531  00DFD5  00                 	db	0
  1532  00DFD6  00                 	db	0
  1533  00DFD7  00                 	db	0
  1534  00DFD8  00                 	db	0
  1535  00DFD9  00                 	db	0
  1536  00DFDA  00                 	db	0
  1537  00DFDB  00                 	db	0
  1538  00DFDC  00                 	db	0
  1539  00DFDD  00                 	db	0
  1540  00DFDE  00                 	db	0
  1541  00DFDF  00                 	db	0
  1542  00DFE0  00                 	db	0
  1543  00DFE1  00                 	db	0
  1544  00DFE2  00                 	db	0
  1545  00DFE3  00                 	db	0
  1546  00DFE4  00                 	db	0
  1547  00DFE5  00                 	db	0
  1548  00DFE6  00                 	db	0
  1549  00DFE7  00                 	db	0
  1550  00DFE8  00                 	db	0
  1551  00DFE9  00                 	db	0
  1552  00DFEA  00                 	db	0
  1553  00DFEB  00                 	db	0
  1554  00DFEC  00                 	db	0
  1555  00DFED  00                 	db	0
  1556  00DFEE  00                 	db	0
  1557  00DFEF  00                 	db	0
  1558  00DFF0  00                 	db	0
  1559  00DFF1  00                 	db	0
  1560  00DFF2  00                 	db	0
  1561  00DFF3  00                 	db	0
  1562  00DFF4  00                 	db	0
  1563  00DFF5  00                 	db	0
  1564  00DFF6  00                 	db	0
  1565  00DFF7  00                 	db	0
  1566  00DFF8  00                 	db	0
  1567  00DFF9  00                 	db	0
  1568  00DFFA  09                 	db	9
  1569  00DFFB  00                 	db	0
  1570  00DFFC  00                 	db	0
  1571  00DFFD  00                 	db	0
  1572  00DFFE  00                 	db	0
  1573  00DFFF  00                 	db	0
  1574  00E000  00                 	db	0
  1575  00E001  00                 	db	0
  1576  00E002  00                 	db	0
  1577  00E003  00                 	db	0
  1578  00E004  00                 	db	0
  1579  00E005  00                 	db	0
  1580  00E006  00                 	db	0
  1581  00E007  00                 	db	0
  1582  00E008  00                 	db	0
  1583  00E009  00                 	db	0
  1584  00E00A  00                 	db	0
  1585  00E00B  0F                 	db	15
  1586  00E00C  00                 	db	0
  1587  00E00D  00                 	db	0
  1588  00E00E  00                 	db	0
  1589  00E00F  1E                 	db	30
  1590  00E010  00                 	db	0
  1591  00E011  00                 	db	0
  1592  00E012  00                 	db	0
  1593  00E013  1C                 	db	28
  1594  00E014  00                 	db	0
  1595  00E015  00                 	db	0
  1596  00E016  00                 	db	0
  1597  00E017  3C                 	db	60
  1598  00E018  00                 	db	0
  1599  00E019  00                 	db	0
  1600  00E01A  00                 	db	0
  1601  00E01B  38                 	db	56
  1602  00E01C  00                 	db	0
  1603  00E01D  00                 	db	0
  1604  00E01E  00                 	db	0
  1605  00E01F  38                 	db	56
  1606  00E020  00                 	db	0
  1607  00E021  00                 	db	0
  1608  00E022  00                 	db	0
  1609  00E023  70                 	db	112
  1610  00E024  00                 	db	0
  1611  00E025  00                 	db	0
  1612  00E026  00                 	db	0
  1613  00E027  70                 	db	112
  1614  00E028  00                 	db	0
  1615  00E029  00                 	db	0
  1616  00E02A  00                 	db	0
  1617  00E02B  70                 	db	112
  1618  00E02C  00                 	db	0
  1619  00E02D  00                 	db	0
  1620  00E02E  00                 	db	0
  1621  00E02F  70                 	db	112
  1622  00E030  00                 	db	0
  1623  00E031  00                 	db	0
  1624  00E032  00                 	db	0
  1625  00E033  70                 	db	112
  1626  00E034  00                 	db	0
  1627  00E035  00                 	db	0
  1628  00E036  00                 	db	0
  1629  00E037  70                 	db	112
  1630  00E038  00                 	db	0
  1631  00E039  00                 	db	0
  1632  00E03A  00                 	db	0
  1633  00E03B  70                 	db	112
  1634  00E03C  00                 	db	0
  1635  00E03D  00                 	db	0
  1636  00E03E  00                 	db	0
  1637  00E03F  38                 	db	56
  1638  00E040  00                 	db	0
  1639  00E041  00                 	db	0
  1640  00E042  00                 	db	0
  1641  00E043  38                 	db	56
  1642  00E044  00                 	db	0
  1643  00E045  00                 	db	0
  1644  00E046  00                 	db	0
  1645  00E047  3C                 	db	60
  1646  00E048  00                 	db	0
  1647  00E049  00                 	db	0
  1648  00E04A  00                 	db	0
  1649  00E04B  1C                 	db	28
  1650  00E04C  00                 	db	0
  1651  00E04D  00                 	db	0
  1652  00E04E  00                 	db	0
  1653  00E04F  1E                 	db	30
  1654  00E050  00                 	db	0
  1655  00E051  00                 	db	0
  1656  00E052  00                 	db	0
  1657  00E053  0F                 	db	15
  1658  00E054  00                 	db	0
  1659  00E055  00                 	db	0
  1660  00E056  00                 	db	0
  1661  00E057  09                 	db	9
  1662  00E058  00                 	db	0
  1663  00E059  00                 	db	0
  1664  00E05A  00                 	db	0
  1665  00E05B  00                 	db	0
  1666  00E05C  00                 	db	0
  1667  00E05D  00                 	db	0
  1668  00E05E  00                 	db	0
  1669  00E05F  00                 	db	0
  1670  00E060  00                 	db	0
  1671  00E061  00                 	db	0
  1672  00E062  00                 	db	0
  1673  00E063  00                 	db	0
  1674  00E064  00                 	db	0
  1675  00E065  00                 	db	0
  1676  00E066  00                 	db	0
  1677  00E067  00                 	db	0
  1678  00E068  78                 	db	120
  1679  00E069  00                 	db	0
  1680  00E06A  00                 	db	0
  1681  00E06B  00                 	db	0
  1682  00E06C  3C                 	db	60
  1683  00E06D  00                 	db	0
  1684  00E06E  00                 	db	0
  1685  00E06F  00                 	db	0
  1686  00E070  1C                 	db	28
  1687  00E071  00                 	db	0
  1688  00E072  00                 	db	0
  1689  00E073  00                 	db	0
  1690  00E074  1E                 	db	30
  1691  00E075  00                 	db	0
  1692  00E076  00                 	db	0
  1693  00E077  00                 	db	0
  1694  00E078  0E                 	db	14
  1695  00E079  00                 	db	0
  1696  00E07A  00                 	db	0
  1697  00E07B  00                 	db	0
  1698  00E07C  0E                 	db	14
  1699  00E07D  00                 	db	0
  1700  00E07E  00                 	db	0
  1701  00E07F  00                 	db	0
  1702  00E080  07                 	db	7
  1703  00E081  00                 	db	0
  1704  00E082  00                 	db	0
  1705  00E083  00                 	db	0
  1706  00E084  07                 	db	7
  1707  00E085  00                 	db	0
  1708  00E086  00                 	db	0
  1709  00E087  00                 	db	0
  1710  00E088  07                 	db	7
  1711  00E089  00                 	db	0
  1712  00E08A  00                 	db	0
  1713  00E08B  00                 	db	0
  1714  00E08C  07                 	db	7
  1715  00E08D  00                 	db	0
  1716  00E08E  00                 	db	0
  1717  00E08F  00                 	db	0
  1718  00E090  07                 	db	7
  1719  00E091  00                 	db	0
  1720  00E092  00                 	db	0
  1721  00E093  00                 	db	0
  1722  00E094  07                 	db	7
  1723  00E095  00                 	db	0
  1724  00E096  00                 	db	0
  1725  00E097  00                 	db	0
  1726  00E098  07                 	db	7
  1727  00E099  00                 	db	0
  1728  00E09A  00                 	db	0
  1729  00E09B  00                 	db	0
  1730  00E09C  0E                 	db	14
  1731  00E09D  00                 	db	0
  1732  00E09E  00                 	db	0
  1733  00E09F  00                 	db	0
  1734  00E0A0  0E                 	db	14
  1735  00E0A1  00                 	db	0
  1736  00E0A2  00                 	db	0
  1737  00E0A3  00                 	db	0
  1738  00E0A4  1E                 	db	30
  1739  00E0A5  00                 	db	0
  1740  00E0A6  00                 	db	0
  1741  00E0A7  00                 	db	0
  1742  00E0A8  1C                 	db	28
  1743  00E0A9  00                 	db	0
  1744  00E0AA  00                 	db	0
  1745  00E0AB  00                 	db	0
  1746  00E0AC  3C                 	db	60
  1747  00E0AD  00                 	db	0
  1748  00E0AE  00                 	db	0
  1749  00E0AF  00                 	db	0
  1750  00E0B0  78                 	db	120
  1751  00E0B1  00                 	db	0
  1752  00E0B2  00                 	db	0
  1753  00E0B3  00                 	db	0
  1754  00E0B4  0C                 	db	12
  1755  00E0B5  00                 	db	0
  1756  00E0B6  00                 	db	0
  1757  00E0B7  00                 	db	0
  1758  00E0B8  00                 	db	0
  1759  00E0B9  00                 	db	0
  1760  00E0BA  00                 	db	0
  1761  00E0BB  00                 	db	0
  1762  00E0BC  00                 	db	0
  1763  00E0BD  00                 	db	0
  1764  00E0BE  00                 	db	0
  1765  00E0BF  00                 	db	0
  1766  00E0C0  00                 	db	0
  1767  00E0C1  00                 	db	0
  1768  00E0C2  00                 	db	0
  1769  00E0C3  00                 	db	0
  1770  00E0C4  00                 	db	0
  1771  00E0C5  06                 	db	6
  1772  00E0C6  00                 	db	0
  1773  00E0C7  00                 	db	0
  1774  00E0C8  00                 	db	0
  1775  00E0C9  26                 	db	38
  1776  00E0CA  40                 	db	64
  1777  00E0CB  00                 	db	0
  1778  00E0CC  00                 	db	0
  1779  00E0CD  76                 	db	118
  1780  00E0CE  E0                 	db	224
  1781  00E0CF  00                 	db	0
  1782  00E0D0  00                 	db	0
  1783  00E0D1  1F                 	db	31
  1784  00E0D2  80                 	db	128
  1785  00E0D3  00                 	db	0
  1786  00E0D4  00                 	db	0
  1787  00E0D5  0F                 	db	15
  1788  00E0D6  00                 	db	0
  1789  00E0D7  00                 	db	0
  1790  00E0D8  00                 	db	0
  1791  00E0D9  1F                 	db	31
  1792  00E0DA  80                 	db	128
  1793  00E0DB  00                 	db	0
  1794  00E0DC  00                 	db	0
  1795  00E0DD  76                 	db	118
  1796  00E0DE  E0                 	db	224
  1797  00E0DF  00                 	db	0
  1798  00E0E0  00                 	db	0
  1799  00E0E1  26                 	db	38
  1800  00E0E2  40                 	db	64
  1801  00E0E3  00                 	db	0
  1802  00E0E4  00                 	db	0
  1803  00E0E5  06                 	db	6
  1804  00E0E6  00                 	db	0
  1805  00E0E7  00                 	db	0
  1806  00E0E8  00                 	db	0
  1807  00E0E9  00                 	db	0
  1808  00E0EA  00                 	db	0
  1809  00E0EB  00                 	db	0
  1810  00E0EC  00                 	db	0
  1811  00E0ED  00                 	db	0
  1812  00E0EE  00                 	db	0
  1813  00E0EF  00                 	db	0
  1814  00E0F0  00                 	db	0
  1815  00E0F1  00                 	db	0
  1816  00E0F2  00                 	db	0
  1817  00E0F3  00                 	db	0
  1818  00E0F4  00                 	db	0
  1819  00E0F5  00                 	db	0
  1820  00E0F6  00                 	db	0
  1821  00E0F7  00                 	db	0
  1822  00E0F8  00                 	db	0
  1823  00E0F9  00                 	db	0
  1824  00E0FA  00                 	db	0
  1825  00E0FB  00                 	db	0
  1826  00E0FC  00                 	db	0
  1827  00E0FD  00                 	db	0
  1828  00E0FE  00                 	db	0
  1829  00E0FF  00                 	db	0
  1830  00E100  00                 	db	0
  1831  00E101  00                 	db	0
  1832  00E102  00                 	db	0
  1833  00E103  00                 	db	0
  1834  00E104  00                 	db	0
  1835  00E105  00                 	db	0
  1836  00E106  00                 	db	0
  1837  00E107  00                 	db	0
  1838  00E108  00                 	db	0
  1839  00E109  00                 	db	0
  1840  00E10A  00                 	db	0
  1841  00E10B  00                 	db	0
  1842  00E10C  00                 	db	0
  1843  00E10D  00                 	db	0
  1844  00E10E  00                 	db	0
  1845  00E10F  00                 	db	0
  1846  00E110  00                 	db	0
  1847  00E111  10                 	db	16
  1848  00E112  00                 	db	0
  1849  00E113  00                 	db	0
  1850  00E114  00                 	db	0
  1851  00E115  00                 	db	0
  1852  00E116  00                 	db	0
  1853  00E117  00                 	db	0
  1854  00E118  00                 	db	0
  1855  00E119  00                 	db	0
  1856  00E11A  00                 	db	0
  1857  00E11B  00                 	db	0
  1858  00E11C  00                 	db	0
  1859  00E11D  00                 	db	0
  1860  00E11E  00                 	db	0
  1861  00E11F  00                 	db	0
  1862  00E120  00                 	db	0
  1863  00E121  00                 	db	0
  1864  00E122  00                 	db	0
  1865  00E123  00                 	db	0
  1866  00E124  00                 	db	0
  1867  00E125  00                 	db	0
  1868  00E126  00                 	db	0
  1869  00E127  00                 	db	0
  1870  00E128  00                 	db	0
  1871  00E129  00                 	db	0
  1872  00E12A  00                 	db	0
  1873  00E12B  00                 	db	0
  1874  00E12C  00                 	db	0
  1875  00E12D  00                 	db	0
  1876  00E12E  01                 	db	1
  1877  00E12F  80                 	db	128
  1878  00E130  00                 	db	0
  1879  00E131  00                 	db	0
  1880  00E132  01                 	db	1
  1881  00E133  80                 	db	128
  1882  00E134  00                 	db	0
  1883  00E135  00                 	db	0
  1884  00E136  01                 	db	1
  1885  00E137  80                 	db	128
  1886  00E138  00                 	db	0
  1887  00E139  00                 	db	0
  1888  00E13A  01                 	db	1
  1889  00E13B  80                 	db	128
  1890  00E13C  00                 	db	0
  1891  00E13D  00                 	db	0
  1892  00E13E  01                 	db	1
  1893  00E13F  80                 	db	128
  1894  00E140  00                 	db	0
  1895  00E141  00                 	db	0
  1896  00E142  3F                 	db	63
  1897  00E143  FC                 	db	252
  1898  00E144  00                 	db	0
  1899  00E145  00                 	db	0
  1900  00E146  3F                 	db	63
  1901  00E147  FC                 	db	252
  1902  00E148  00                 	db	0
  1903  00E149  00                 	db	0
  1904  00E14A  01                 	db	1
  1905  00E14B  80                 	db	128
  1906  00E14C  00                 	db	0
  1907  00E14D  00                 	db	0
  1908  00E14E  01                 	db	1
  1909  00E14F  80                 	db	128
  1910  00E150  00                 	db	0
  1911  00E151  00                 	db	0
  1912  00E152  01                 	db	1
  1913  00E153  80                 	db	128
  1914  00E154  00                 	db	0
  1915  00E155  00                 	db	0
  1916  00E156  01                 	db	1
  1917  00E157  80                 	db	128
  1918  00E158  00                 	db	0
  1919  00E159  00                 	db	0
  1920  00E15A  01                 	db	1
  1921  00E15B  80                 	db	128
  1922  00E15C  00                 	db	0
  1923  00E15D  00                 	db	0
  1924  00E15E  00                 	db	0
  1925  00E15F  00                 	db	0
  1926  00E160  00                 	db	0
  1927  00E161  00                 	db	0
  1928  00E162  00                 	db	0
  1929  00E163  00                 	db	0
  1930  00E164  00                 	db	0
  1931  00E165  00                 	db	0
  1932  00E166  00                 	db	0
  1933  00E167  00                 	db	0
  1934  00E168  00                 	db	0
  1935  00E169  00                 	db	0
  1936  00E16A  00                 	db	0
  1937  00E16B  00                 	db	0
  1938  00E16C  00                 	db	0
  1939  00E16D  00                 	db	0
  1940  00E16E  06                 	db	6
  1941  00E16F  00                 	db	0
  1942  00E170  00                 	db	0
  1943  00E171  00                 	db	0
  1944  00E172  00                 	db	0
  1945  00E173  00                 	db	0
  1946  00E174  00                 	db	0
  1947  00E175  00                 	db	0
  1948  00E176  00                 	db	0
  1949  00E177  00                 	db	0
  1950  00E178  00                 	db	0
  1951  00E179  00                 	db	0
  1952  00E17A  00                 	db	0
  1953  00E17B  00                 	db	0
  1954  00E17C  00                 	db	0
  1955  00E17D  00                 	db	0
  1956  00E17E  00                 	db	0
  1957  00E17F  00                 	db	0
  1958  00E180  00                 	db	0
  1959  00E181  00                 	db	0
  1960  00E182  00                 	db	0
  1961  00E183  00                 	db	0
  1962  00E184  00                 	db	0
  1963  00E185  00                 	db	0
  1964  00E186  00                 	db	0
  1965  00E187  00                 	db	0
  1966  00E188  00                 	db	0
  1967  00E189  00                 	db	0
  1968  00E18A  00                 	db	0
  1969  00E18B  00                 	db	0
  1970  00E18C  00                 	db	0
  1971  00E18D  00                 	db	0
  1972  00E18E  00                 	db	0
  1973  00E18F  00                 	db	0
  1974  00E190  00                 	db	0
  1975  00E191  00                 	db	0
  1976  00E192  00                 	db	0
  1977  00E193  00                 	db	0
  1978  00E194  00                 	db	0
  1979  00E195  00                 	db	0
  1980  00E196  00                 	db	0
  1981  00E197  00                 	db	0
  1982  00E198  00                 	db	0
  1983  00E199  00                 	db	0
  1984  00E19A  00                 	db	0
  1985  00E19B  00                 	db	0
  1986  00E19C  00                 	db	0
  1987  00E19D  00                 	db	0
  1988  00E19E  00                 	db	0
  1989  00E19F  00                 	db	0
  1990  00E1A0  00                 	db	0
  1991  00E1A1  00                 	db	0
  1992  00E1A2  00                 	db	0
  1993  00E1A3  00                 	db	0
  1994  00E1A4  00                 	db	0
  1995  00E1A5  00                 	db	0
  1996  00E1A6  00                 	db	0
  1997  00E1A7  00                 	db	0
  1998  00E1A8  00                 	db	0
  1999  00E1A9  00                 	db	0
  2000  00E1AA  00                 	db	0
  2001  00E1AB  38                 	db	56
  2002  00E1AC  00                 	db	0
  2003  00E1AD  00                 	db	0
  2004  00E1AE  00                 	db	0
  2005  00E1AF  70                 	db	112
  2006  00E1B0  00                 	db	0
  2007  00E1B1  00                 	db	0
  2008  00E1B2  00                 	db	0
  2009  00E1B3  70                 	db	112
  2010  00E1B4  00                 	db	0
  2011  00E1B5  00                 	db	0
  2012  00E1B6  00                 	db	0
  2013  00E1B7  60                 	db	96
  2014  00E1B8  00                 	db	0
  2015  00E1B9  00                 	db	0
  2016  00E1BA  00                 	db	0
  2017  00E1BB  60                 	db	96
  2018  00E1BC  00                 	db	0
  2019  00E1BD  00                 	db	0
  2020  00E1BE  00                 	db	0
  2021  00E1BF  E0                 	db	224
  2022  00E1C0  00                 	db	0
  2023  00E1C1  00                 	db	0
  2024  00E1C2  00                 	db	0
  2025  00E1C3  C0                 	db	192
  2026  00E1C4  00                 	db	0
  2027  00E1C5  00                 	db	0
  2028  00E1C6  00                 	db	0
  2029  00E1C7  00                 	db	0
  2030  00E1C8  00                 	db	0
  2031  00E1C9  00                 	db	0
  2032  00E1CA  00                 	db	0
  2033  00E1CB  08                 	db	8
  2034  00E1CC  00                 	db	0
  2035  00E1CD  00                 	db	0
  2036  00E1CE  00                 	db	0
  2037  00E1CF  00                 	db	0
  2038  00E1D0  00                 	db	0
  2039  00E1D1  00                 	db	0
  2040  00E1D2  00                 	db	0
  2041  00E1D3  00                 	db	0
  2042  00E1D4  00                 	db	0
  2043  00E1D5  00                 	db	0
  2044  00E1D6  00                 	db	0
  2045  00E1D7  00                 	db	0
  2046  00E1D8  00                 	db	0
  2047  00E1D9  00                 	db	0
  2048  00E1DA  00                 	db	0
  2049  00E1DB  00                 	db	0
  2050  00E1DC  00                 	db	0
  2051  00E1DD  00                 	db	0
  2052  00E1DE  00                 	db	0
  2053  00E1DF  00                 	db	0
  2054  00E1E0  00                 	db	0
  2055  00E1E1  00                 	db	0
  2056  00E1E2  00                 	db	0
  2057  00E1E3  00                 	db	0
  2058  00E1E4  00                 	db	0
  2059  00E1E5  00                 	db	0
  2060  00E1E6  00                 	db	0
  2061  00E1E7  00                 	db	0
  2062  00E1E8  00                 	db	0
  2063  00E1E9  00                 	db	0
  2064  00E1EA  00                 	db	0
  2065  00E1EB  00                 	db	0
  2066  00E1EC  00                 	db	0
  2067  00E1ED  00                 	db	0
  2068  00E1EE  00                 	db	0
  2069  00E1EF  00                 	db	0
  2070  00E1F0  00                 	db	0
  2071  00E1F1  00                 	db	0
  2072  00E1F2  00                 	db	0
  2073  00E1F3  00                 	db	0
  2074  00E1F4  00                 	db	0
  2075  00E1F5  00                 	db	0
  2076  00E1F6  00                 	db	0
  2077  00E1F7  00                 	db	0
  2078  00E1F8  00                 	db	0
  2079  00E1F9  00                 	db	0
  2080  00E1FA  00                 	db	0
  2081  00E1FB  00                 	db	0
  2082  00E1FC  7E                 	db	126
  2083  00E1FD  00                 	db	0
  2084  00E1FE  00                 	db	0
  2085  00E1FF  00                 	db	0
  2086  00E200  7E                 	db	126
  2087  00E201  00                 	db	0
  2088  00E202  00                 	db	0
  2089  00E203  00                 	db	0
  2090  00E204  7E                 	db	126
  2091  00E205  00                 	db	0
  2092  00E206  00                 	db	0
  2093  00E207  00                 	db	0
  2094  00E208  00                 	db	0
  2095  00E209  00                 	db	0
  2096  00E20A  00                 	db	0
  2097  00E20B  00                 	db	0
  2098  00E20C  00                 	db	0
  2099  00E20D  00                 	db	0
  2100  00E20E  00                 	db	0
  2101  00E20F  00                 	db	0
  2102  00E210  00                 	db	0
  2103  00E211  00                 	db	0
  2104  00E212  00                 	db	0
  2105  00E213  00                 	db	0
  2106  00E214  00                 	db	0
  2107  00E215  00                 	db	0
  2108  00E216  00                 	db	0
  2109  00E217  00                 	db	0
  2110  00E218  00                 	db	0
  2111  00E219  00                 	db	0
  2112  00E21A  00                 	db	0
  2113  00E21B  00                 	db	0
  2114  00E21C  00                 	db	0
  2115  00E21D  00                 	db	0
  2116  00E21E  00                 	db	0
  2117  00E21F  00                 	db	0
  2118  00E220  00                 	db	0
  2119  00E221  00                 	db	0
  2120  00E222  00                 	db	0
  2121  00E223  00                 	db	0
  2122  00E224  00                 	db	0
  2123  00E225  00                 	db	0
  2124  00E226  00                 	db	0
  2125  00E227  00                 	db	0
  2126  00E228  06                 	db	6
  2127  00E229  00                 	db	0
  2128  00E22A  00                 	db	0
  2129  00E22B  00                 	db	0
  2130  00E22C  00                 	db	0
  2131  00E22D  00                 	db	0
  2132  00E22E  00                 	db	0
  2133  00E22F  00                 	db	0
  2134  00E230  00                 	db	0
  2135  00E231  00                 	db	0
  2136  00E232  00                 	db	0
  2137  00E233  00                 	db	0
  2138  00E234  00                 	db	0
  2139  00E235  00                 	db	0
  2140  00E236  00                 	db	0
  2141  00E237  00                 	db	0
  2142  00E238  00                 	db	0
  2143  00E239  00                 	db	0
  2144  00E23A  00                 	db	0
  2145  00E23B  00                 	db	0
  2146  00E23C  00                 	db	0
  2147  00E23D  00                 	db	0
  2148  00E23E  00                 	db	0
  2149  00E23F  00                 	db	0
  2150  00E240  00                 	db	0
  2151  00E241  00                 	db	0
  2152  00E242  00                 	db	0
  2153  00E243  00                 	db	0
  2154  00E244  00                 	db	0
  2155  00E245  00                 	db	0
  2156  00E246  00                 	db	0
  2157  00E247  00                 	db	0
  2158  00E248  00                 	db	0
  2159  00E249  00                 	db	0
  2160  00E24A  00                 	db	0
  2161  00E24B  00                 	db	0
  2162  00E24C  00                 	db	0
  2163  00E24D  00                 	db	0
  2164  00E24E  00                 	db	0
  2165  00E24F  00                 	db	0
  2166  00E250  00                 	db	0
  2167  00E251  00                 	db	0
  2168  00E252  00                 	db	0
  2169  00E253  00                 	db	0
  2170  00E254  00                 	db	0
  2171  00E255  00                 	db	0
  2172  00E256  00                 	db	0
  2173  00E257  00                 	db	0
  2174  00E258  00                 	db	0
  2175  00E259  00                 	db	0
  2176  00E25A  00                 	db	0
  2177  00E25B  00                 	db	0
  2178  00E25C  00                 	db	0
  2179  00E25D  00                 	db	0
  2180  00E25E  00                 	db	0
  2181  00E25F  00                 	db	0
  2182  00E260  00                 	db	0
  2183  00E261  00                 	db	0
  2184  00E262  00                 	db	0
  2185  00E263  00                 	db	0
  2186  00E264  00                 	db	0
  2187  00E265  70                 	db	112
  2188  00E266  00                 	db	0
  2189  00E267  00                 	db	0
  2190  00E268  00                 	db	0
  2191  00E269  70                 	db	112
  2192  00E26A  00                 	db	0
  2193  00E26B  00                 	db	0
  2194  00E26C  00                 	db	0
  2195  00E26D  70                 	db	112
  2196  00E26E  00                 	db	0
  2197  00E26F  00                 	db	0
  2198  00E270  00                 	db	0
  2199  00E271  70                 	db	112
  2200  00E272  00                 	db	0
  2201  00E273  00                 	db	0
  2202  00E274  00                 	db	0
  2203  00E275  00                 	db	0
  2204  00E276  00                 	db	0
  2205  00E277  00                 	db	0
  2206  00E278  00                 	db	0
  2207  00E279  00                 	db	0
  2208  00E27A  00                 	db	0
  2209  00E27B  00                 	db	0
  2210  00E27C  00                 	db	0
  2211  00E27D  00                 	db	0
  2212  00E27E  00                 	db	0
  2213  00E27F  00                 	db	0
  2214  00E280  00                 	db	0
  2215  00E281  00                 	db	0
  2216  00E282  00                 	db	0
  2217  00E283  00                 	db	0
  2218  00E284  00                 	db	0
  2219  00E285  0B                 	db	11
  2220  00E286  00                 	db	0
  2221  00E287  00                 	db	0
  2222  00E288  00                 	db	0
  2223  00E289  00                 	db	0
  2224  00E28A  00                 	db	0
  2225  00E28B  00                 	db	0
  2226  00E28C  00                 	db	0
  2227  00E28D  00                 	db	0
  2228  00E28E  00                 	db	0
  2229  00E28F  00                 	db	0
  2230  00E290  00                 	db	0
  2231  00E291  00                 	db	0
  2232  00E292  00                 	db	0
  2233  00E293  00                 	db	0
  2234  00E294  00                 	db	0
  2235  00E295  00                 	db	0
  2236  00E296  03                 	db	3
  2237  00E297  80                 	db	128
  2238  00E298  00                 	db	0
  2239  00E299  00                 	db	0
  2240  00E29A  03                 	db	3
  2241  00E29B  80                 	db	128
  2242  00E29C  00                 	db	0
  2243  00E29D  00                 	db	0
  2244  00E29E  07                 	db	7
  2245  00E29F  00                 	db	0
  2246  00E2A0  00                 	db	0
  2247  00E2A1  00                 	db	0
  2248  00E2A2  07                 	db	7
  2249  00E2A3  00                 	db	0
  2250  00E2A4  00                 	db	0
  2251  00E2A5  00                 	db	0
  2252  00E2A6  07                 	db	7
  2253  00E2A7  00                 	db	0
  2254  00E2A8  00                 	db	0
  2255  00E2A9  00                 	db	0
  2256  00E2AA  0E                 	db	14
  2257  00E2AB  00                 	db	0
  2258  00E2AC  00                 	db	0
  2259  00E2AD  00                 	db	0
  2260  00E2AE  0E                 	db	14
  2261  00E2AF  00                 	db	0
  2262  00E2B0  00                 	db	0
  2263  00E2B1  00                 	db	0
  2264  00E2B2  0E                 	db	14
  2265  00E2B3  00                 	db	0
  2266  00E2B4  00                 	db	0
  2267  00E2B5  00                 	db	0
  2268  00E2B6  0E                 	db	14
  2269  00E2B7  00                 	db	0
  2270  00E2B8  00                 	db	0
  2271  00E2B9  00                 	db	0
  2272  00E2BA  1C                 	db	28
  2273  00E2BB  00                 	db	0
  2274  00E2BC  00                 	db	0
  2275  00E2BD  00                 	db	0
  2276  00E2BE  1C                 	db	28
  2277  00E2BF  00                 	db	0
  2278  00E2C0  00                 	db	0
  2279  00E2C1  00                 	db	0
  2280  00E2C2  1C                 	db	28
  2281  00E2C3  00                 	db	0
  2282  00E2C4  00                 	db	0
  2283  00E2C5  00                 	db	0
  2284  00E2C6  1C                 	db	28
  2285  00E2C7  00                 	db	0
  2286  00E2C8  00                 	db	0
  2287  00E2C9  00                 	db	0
  2288  00E2CA  38                 	db	56
  2289  00E2CB  00                 	db	0
  2290  00E2CC  00                 	db	0
  2291  00E2CD  00                 	db	0
  2292  00E2CE  38                 	db	56
  2293  00E2CF  00                 	db	0
  2294  00E2D0  00                 	db	0
  2295  00E2D1  00                 	db	0
  2296  00E2D2  38                 	db	56
  2297  00E2D3  00                 	db	0
  2298  00E2D4  00                 	db	0
  2299  00E2D5  00                 	db	0
  2300  00E2D6  70                 	db	112
  2301  00E2D7  00                 	db	0
  2302  00E2D8  00                 	db	0
  2303  00E2D9  00                 	db	0
  2304  00E2DA  70                 	db	112
  2305  00E2DB  00                 	db	0
  2306  00E2DC  00                 	db	0
  2307  00E2DD  00                 	db	0
  2308  00E2DE  00                 	db	0
  2309  00E2DF  00                 	db	0
  2310  00E2E0  00                 	db	0
  2311  00E2E1  00                 	db	0
  2312  00E2E2  0C                 	db	12
  2313  00E2E3  00                 	db	0
  2314  00E2E4  00                 	db	0
  2315  00E2E5  00                 	db	0
  2316  00E2E6  00                 	db	0
  2317  00E2E7  00                 	db	0
  2318  00E2E8  00                 	db	0
  2319  00E2E9  00                 	db	0
  2320  00E2EA  00                 	db	0
  2321  00E2EB  00                 	db	0
  2322  00E2EC  00                 	db	0
  2323  00E2ED  00                 	db	0
  2324  00E2EE  00                 	db	0
  2325  00E2EF  00                 	db	0
  2326  00E2F0  00                 	db	0
  2327  00E2F1  00                 	db	0
  2328  00E2F2  00                 	db	0
  2329  00E2F3  00                 	db	0
  2330  00E2F4  00                 	db	0
  2331  00E2F5  00                 	db	0
  2332  00E2F6  00                 	db	0
  2333  00E2F7  0F                 	db	15
  2334  00E2F8  00                 	db	0
  2335  00E2F9  00                 	db	0
  2336  00E2FA  00                 	db	0
  2337  00E2FB  3F                 	db	63
  2338  00E2FC  C0                 	db	192
  2339  00E2FD  00                 	db	0
  2340  00E2FE  00                 	db	0
  2341  00E2FF  39                 	db	57
  2342  00E300  C0                 	db	192
  2343  00E301  00                 	db	0
  2344  00E302  00                 	db	0
  2345  00E303  70                 	db	112
  2346  00E304  E0                 	db	224
  2347  00E305  00                 	db	0
  2348  00E306  00                 	db	0
  2349  00E307  70                 	db	112
  2350  00E308  E0                 	db	224
  2351  00E309  00                 	db	0
  2352  00E30A  00                 	db	0
  2353  00E30B  70                 	db	112
  2354  00E30C  E0                 	db	224
  2355  00E30D  00                 	db	0
  2356  00E30E  00                 	db	0
  2357  00E30F  70                 	db	112
  2358  00E310  E0                 	db	224
  2359  00E311  00                 	db	0
  2360  00E312  00                 	db	0
  2361  00E313  70                 	db	112
  2362  00E314  E0                 	db	224
  2363  00E315  00                 	db	0
  2364  00E316  00                 	db	0
  2365  00E317  70                 	db	112
  2366  00E318  E0                 	db	224
  2367  00E319  00                 	db	0
  2368  00E31A  00                 	db	0
  2369  00E31B  70                 	db	112
  2370  00E31C  E0                 	db	224
  2371  00E31D  00                 	db	0
  2372  00E31E  00                 	db	0
  2373  00E31F  70                 	db	112
  2374  00E320  E0                 	db	224
  2375  00E321  00                 	db	0
  2376  00E322  00                 	db	0
  2377  00E323  39                 	db	57
  2378  00E324  C0                 	db	192
  2379  00E325  00                 	db	0
  2380  00E326  00                 	db	0
  2381  00E327  3F                 	db	63
  2382  00E328  C0                 	db	192
  2383  00E329  00                 	db	0
  2384  00E32A  00                 	db	0
  2385  00E32B  0F                 	db	15
  2386  00E32C  00                 	db	0
  2387  00E32D  00                 	db	0
  2388  00E32E  00                 	db	0
  2389  00E32F  00                 	db	0
  2390  00E330  00                 	db	0
  2391  00E331  00                 	db	0
  2392  00E332  00                 	db	0
  2393  00E333  00                 	db	0
  2394  00E334  00                 	db	0
  2395  00E335  00                 	db	0
  2396  00E336  00                 	db	0
  2397  00E337  00                 	db	0
  2398  00E338  00                 	db	0
  2399  00E339  00                 	db	0
  2400  00E33A  00                 	db	0
  2401  00E33B  00                 	db	0
  2402  00E33C  00                 	db	0
  2403  00E33D  00                 	db	0
  2404  00E33E  00                 	db	0
  2405  00E33F  0C                 	db	12
  2406  00E340  00                 	db	0
  2407  00E341  00                 	db	0
  2408  00E342  00                 	db	0
  2409  00E343  00                 	db	0
  2410  00E344  00                 	db	0
  2411  00E345  00                 	db	0
  2412  00E346  00                 	db	0
  2413  00E347  00                 	db	0
  2414  00E348  00                 	db	0
  2415  00E349  00                 	db	0
  2416  00E34A  00                 	db	0
  2417  00E34B  00                 	db	0
  2418  00E34C  00                 	db	0
  2419  00E34D  00                 	db	0
  2420  00E34E  00                 	db	0
  2421  00E34F  00                 	db	0
  2422  00E350  00                 	db	0
  2423  00E351  00                 	db	0
  2424  00E352  00                 	db	0
  2425  00E353  00                 	db	0
  2426  00E354  07                 	db	7
  2427  00E355  00                 	db	0
  2428  00E356  00                 	db	0
  2429  00E357  00                 	db	0
  2430  00E358  07                 	db	7
  2431  00E359  00                 	db	0
  2432  00E35A  00                 	db	0
  2433  00E35B  00                 	db	0
  2434  00E35C  3F                 	db	63
  2435  00E35D  00                 	db	0
  2436  00E35E  00                 	db	0
  2437  00E35F  00                 	db	0
  2438  00E360  3F                 	db	63
  2439  00E361  00                 	db	0
  2440  00E362  00                 	db	0
  2441  00E363  00                 	db	0
  2442  00E364  07                 	db	7
  2443  00E365  00                 	db	0
  2444  00E366  00                 	db	0
  2445  00E367  00                 	db	0
  2446  00E368  07                 	db	7
  2447  00E369  00                 	db	0
  2448  00E36A  00                 	db	0
  2449  00E36B  00                 	db	0
  2450  00E36C  07                 	db	7
  2451  00E36D  00                 	db	0
  2452  00E36E  00                 	db	0
  2453  00E36F  00                 	db	0
  2454  00E370  07                 	db	7
  2455  00E371  00                 	db	0
  2456  00E372  00                 	db	0
  2457  00E373  00                 	db	0
  2458  00E374  07                 	db	7
  2459  00E375  00                 	db	0
  2460  00E376  00                 	db	0
  2461  00E377  00                 	db	0
  2462  00E378  07                 	db	7
  2463  00E379  00                 	db	0
  2464  00E37A  00                 	db	0
  2465  00E37B  00                 	db	0
  2466  00E37C  07                 	db	7
  2467  00E37D  00                 	db	0
  2468  00E37E  00                 	db	0
  2469  00E37F  00                 	db	0
  2470  00E380  07                 	db	7
  2471  00E381  00                 	db	0
  2472  00E382  00                 	db	0
  2473  00E383  00                 	db	0
  2474  00E384  3F                 	db	63
  2475  00E385  E0                 	db	224
  2476  00E386  00                 	db	0
  2477  00E387  00                 	db	0
  2478  00E388  3F                 	db	63
  2479  00E389  E0                 	db	224
  2480  00E38A  00                 	db	0
  2481  00E38B  00                 	db	0
  2482  00E38C  00                 	db	0
  2483  00E38D  00                 	db	0
  2484  00E38E  00                 	db	0
  2485  00E38F  00                 	db	0
  2486  00E390  00                 	db	0
  2487  00E391  00                 	db	0
  2488  00E392  00                 	db	0
  2489  00E393  00                 	db	0
  2490  00E394  00                 	db	0
  2491  00E395  00                 	db	0
  2492  00E396  00                 	db	0
  2493  00E397  00                 	db	0
  2494  00E398  00                 	db	0
  2495  00E399  00                 	db	0
  2496  00E39A  00                 	db	0
  2497  00E39B  00                 	db	0
  2498  00E39C  0C                 	db	12
  2499  00E39D  00                 	db	0
  2500  00E39E  00                 	db	0
  2501  00E39F  00                 	db	0
  2502  00E3A0  00                 	db	0
  2503  00E3A1  00                 	db	0
  2504  00E3A2  00                 	db	0
  2505  00E3A3  00                 	db	0
  2506  00E3A4  00                 	db	0
  2507  00E3A5  00                 	db	0
  2508  00E3A6  00                 	db	0
  2509  00E3A7  00                 	db	0
  2510  00E3A8  00                 	db	0
  2511  00E3A9  00                 	db	0
  2512  00E3AA  00                 	db	0
  2513  00E3AB  00                 	db	0
  2514  00E3AC  00                 	db	0
  2515  00E3AD  00                 	db	0
  2516  00E3AE  00                 	db	0
  2517  00E3AF  00                 	db	0
  2518  00E3B0  00                 	db	0
  2519  00E3B1  3F                 	db	63
  2520  00E3B2  80                 	db	128
  2521  00E3B3  00                 	db	0
  2522  00E3B4  00                 	db	0
  2523  00E3B5  7F                 	db	127
  2524  00E3B6  C0                 	db	192
  2525  00E3B7  00                 	db	0
  2526  00E3B8  00                 	db	0
  2527  00E3B9  61                 	db	97
  2528  00E3BA  E0                 	db	224
  2529  00E3BB  00                 	db	0
  2530  00E3BC  00                 	db	0
  2531  00E3BD  40                 	db	64
  2532  00E3BE  E0                 	db	224
  2533  00E3BF  00                 	db	0
  2534  00E3C0  00                 	db	0
  2535  00E3C1  00                 	db	0
  2536  00E3C2  E0                 	db	224
  2537  00E3C3  00                 	db	0
  2538  00E3C4  00                 	db	0
  2539  00E3C5  00                 	db	0
  2540  00E3C6  E0                 	db	224
  2541  00E3C7  00                 	db	0
  2542  00E3C8  00                 	db	0
  2543  00E3C9  01                 	db	1
  2544  00E3CA  E0                 	db	224
  2545  00E3CB  00                 	db	0
  2546  00E3CC  00                 	db	0
  2547  00E3CD  03                 	db	3
  2548  00E3CE  C0                 	db	192
  2549  00E3CF  00                 	db	0
  2550  00E3D0  00                 	db	0
  2551  00E3D1  07                 	db	7
  2552  00E3D2  80                 	db	128
  2553  00E3D3  00                 	db	0
  2554  00E3D4  00                 	db	0
  2555  00E3D5  0F                 	db	15
  2556  00E3D6  00                 	db	0
  2557  00E3D7  00                 	db	0
  2558  00E3D8  00                 	db	0
  2559  00E3D9  1E                 	db	30
  2560  00E3DA  00                 	db	0
  2561  00E3DB  00                 	db	0
  2562  00E3DC  00                 	db	0
  2563  00E3DD  3C                 	db	60
  2564  00E3DE  00                 	db	0
  2565  00E3DF  00                 	db	0
  2566  00E3E0  00                 	db	0
  2567  00E3E1  7F                 	db	127
  2568  00E3E2  F0                 	db	240
  2569  00E3E3  00                 	db	0
  2570  00E3E4  00                 	db	0
  2571  00E3E5  7F                 	db	127
  2572  00E3E6  F0                 	db	240
  2573  00E3E7  00                 	db	0
  2574  00E3E8  00                 	db	0
  2575  00E3E9  00                 	db	0
  2576  00E3EA  00                 	db	0
  2577  00E3EB  00                 	db	0
  2578  00E3EC  00                 	db	0
  2579  00E3ED  00                 	db	0
  2580  00E3EE  00                 	db	0
  2581  00E3EF  00                 	db	0
  2582  00E3F0  00                 	db	0
  2583  00E3F1  00                 	db	0
  2584  00E3F2  00                 	db	0
  2585  00E3F3  00                 	db	0
  2586  00E3F4  00                 	db	0
  2587  00E3F5  00                 	db	0
  2588  00E3F6  00                 	db	0
  2589  00E3F7  00                 	db	0
  2590  00E3F8  00                 	db	0
  2591  00E3F9  0C                 	db	12
  2592  00E3FA  00                 	db	0
  2593  00E3FB  00                 	db	0
  2594  00E3FC  00                 	db	0
  2595  00E3FD  00                 	db	0
  2596  00E3FE  00                 	db	0
  2597  00E3FF  00                 	db	0
  2598  00E400  00                 	db	0
  2599  00E401  00                 	db	0
  2600  00E402  00                 	db	0
  2601  00E403  00                 	db	0
  2602  00E404  00                 	db	0
  2603  00E405  00                 	db	0
  2604  00E406  00                 	db	0
  2605  00E407  00                 	db	0
  2606  00E408  00                 	db	0
  2607  00E409  00                 	db	0
  2608  00E40A  00                 	db	0
  2609  00E40B  00                 	db	0
  2610  00E40C  00                 	db	0
  2611  00E40D  00                 	db	0
  2612  00E40E  3F                 	db	63
  2613  00E40F  80                 	db	128
  2614  00E410  00                 	db	0
  2615  00E411  00                 	db	0
  2616  00E412  7F                 	db	127
  2617  00E413  C0                 	db	192
  2618  00E414  00                 	db	0
  2619  00E415  00                 	db	0
  2620  00E416  60                 	db	96
  2621  00E417  E0                 	db	224
  2622  00E418  00                 	db	0
  2623  00E419  00                 	db	0
  2624  00E41A  40                 	db	64
  2625  00E41B  E0                 	db	224
  2626  00E41C  00                 	db	0
  2627  00E41D  00                 	db	0
  2628  00E41E  01                 	db	1
  2629  00E41F  E0                 	db	224
  2630  00E420  00                 	db	0
  2631  00E421  00                 	db	0
  2632  00E422  0F                 	db	15
  2633  00E423  80                 	db	128
  2634  00E424  00                 	db	0
  2635  00E425  00                 	db	0
  2636  00E426  0F                 	db	15
  2637  00E427  C0                 	db	192
  2638  00E428  00                 	db	0
  2639  00E429  00                 	db	0
  2640  00E42A  01                 	db	1
  2641  00E42B  E0                 	db	224
  2642  00E42C  00                 	db	0
  2643  00E42D  00                 	db	0
  2644  00E42E  00                 	db	0
  2645  00E42F  E0                 	db	224
  2646  00E430  00                 	db	0
  2647  00E431  00                 	db	0
  2648  00E432  00                 	db	0
  2649  00E433  E0                 	db	224
  2650  00E434  00                 	db	0
  2651  00E435  00                 	db	0
  2652  00E436  40                 	db	64
  2653  00E437  E0                 	db	224
  2654  00E438  00                 	db	0
  2655  00E439  00                 	db	0
  2656  00E43A  61                 	db	97
  2657  00E43B  E0                 	db	224
  2658  00E43C  00                 	db	0
  2659  00E43D  00                 	db	0
  2660  00E43E  7F                 	db	127
  2661  00E43F  C0                 	db	192
  2662  00E440  00                 	db	0
  2663  00E441  00                 	db	0
  2664  00E442  3F                 	db	63
  2665  00E443  00                 	db	0
  2666  00E444  00                 	db	0
  2667  00E445  00                 	db	0
  2668  00E446  00                 	db	0
  2669  00E447  00                 	db	0
  2670  00E448  00                 	db	0
  2671  00E449  00                 	db	0
  2672  00E44A  00                 	db	0
  2673  00E44B  00                 	db	0
  2674  00E44C  00                 	db	0
  2675  00E44D  00                 	db	0
  2676  00E44E  00                 	db	0
  2677  00E44F  00                 	db	0
  2678  00E450  00                 	db	0
  2679  00E451  00                 	db	0
  2680  00E452  00                 	db	0
  2681  00E453  00                 	db	0
  2682  00E454  00                 	db	0
  2683  00E455  00                 	db	0
  2684  00E456  0C                 	db	12
  2685  00E457  00                 	db	0
  2686  00E458  00                 	db	0
  2687  00E459  00                 	db	0
  2688  00E45A  00                 	db	0
  2689  00E45B  00                 	db	0
  2690  00E45C  00                 	db	0
  2691  00E45D  00                 	db	0
  2692  00E45E  00                 	db	0
  2693  00E45F  00                 	db	0
  2694  00E460  00                 	db	0
  2695  00E461  00                 	db	0
  2696  00E462  00                 	db	0
  2697  00E463  00                 	db	0
  2698  00E464  00                 	db	0
  2699  00E465  00                 	db	0
  2700  00E466  00                 	db	0
  2701  00E467  00                 	db	0
  2702  00E468  00                 	db	0
  2703  00E469  00                 	db	0
  2704  00E46A  00                 	db	0
  2705  00E46B  01                 	db	1
  2706  00E46C  C0                 	db	192
  2707  00E46D  00                 	db	0
  2708  00E46E  00                 	db	0
  2709  00E46F  03                 	db	3
  2710  00E470  C0                 	db	192
  2711  00E471  00                 	db	0
  2712  00E472  00                 	db	0
  2713  00E473  07                 	db	7
  2714  00E474  C0                 	db	192
  2715  00E475  00                 	db	0
  2716  00E476  00                 	db	0
  2717  00E477  07                 	db	7
  2718  00E478  C0                 	db	192
  2719  00E479  00                 	db	0
  2720  00E47A  00                 	db	0
  2721  00E47B  0D                 	db	13
  2722  00E47C  C0                 	db	192
  2723  00E47D  00                 	db	0
  2724  00E47E  00                 	db	0
  2725  00E47F  19                 	db	25
  2726  00E480  C0                 	db	192
  2727  00E481  00                 	db	0
  2728  00E482  00                 	db	0
  2729  00E483  19                 	db	25
  2730  00E484  C0                 	db	192
  2731  00E485  00                 	db	0
  2732  00E486  00                 	db	0
  2733  00E487  31                 	db	49
  2734  00E488  C0                 	db	192
  2735  00E489  00                 	db	0
  2736  00E48A  00                 	db	0
  2737  00E48B  61                 	db	97
  2738  00E48C  C0                 	db	192
  2739  00E48D  00                 	db	0
  2740  00E48E  00                 	db	0
  2741  00E48F  7F                 	db	127
  2742  00E490  F0                 	db	240
  2743  00E491  00                 	db	0
  2744  00E492  00                 	db	0
  2745  00E493  7F                 	db	127
  2746  00E494  F0                 	db	240
  2747  00E495  00                 	db	0
  2748  00E496  00                 	db	0
  2749  00E497  01                 	db	1
  2750  00E498  C0                 	db	192
  2751  00E499  00                 	db	0
  2752  00E49A  00                 	db	0
  2753  00E49B  01                 	db	1
  2754  00E49C  C0                 	db	192
  2755  00E49D  00                 	db	0
  2756  00E49E  00                 	db	0
  2757  00E49F  01                 	db	1
  2758  00E4A0  C0                 	db	192
  2759  00E4A1  00                 	db	0
  2760  00E4A2  00                 	db	0
  2761  00E4A3  00                 	db	0
  2762  00E4A4  00                 	db	0
  2763  00E4A5  00                 	db	0
  2764  00E4A6  00                 	db	0
  2765  00E4A7  00                 	db	0
  2766  00E4A8  00                 	db	0
  2767  00E4A9  00                 	db	0
  2768  00E4AA  00                 	db	0
  2769  00E4AB  00                 	db	0
  2770  00E4AC  00                 	db	0
  2771  00E4AD  00                 	db	0
  2772  00E4AE  00                 	db	0
  2773  00E4AF  00                 	db	0
  2774  00E4B0  00                 	db	0
  2775  00E4B1  00                 	db	0
  2776  00E4B2  00                 	db	0
  2777  00E4B3  0C                 	db	12
  2778  00E4B4  00                 	db	0
  2779  00E4B5  00                 	db	0
  2780  00E4B6  00                 	db	0
  2781  00E4B7  00                 	db	0
  2782  00E4B8  00                 	db	0
  2783  00E4B9  00                 	db	0
  2784  00E4BA  00                 	db	0
  2785  00E4BB  00                 	db	0
  2786  00E4BC  00                 	db	0
  2787  00E4BD  00                 	db	0
  2788  00E4BE  00                 	db	0
  2789  00E4BF  00                 	db	0
  2790  00E4C0  00                 	db	0
  2791  00E4C1  00                 	db	0
  2792  00E4C2  00                 	db	0
  2793  00E4C3  00                 	db	0
  2794  00E4C4  00                 	db	0
  2795  00E4C5  00                 	db	0
  2796  00E4C6  00                 	db	0
  2797  00E4C7  00                 	db	0
  2798  00E4C8  3F                 	db	63
  2799  00E4C9  E0                 	db	224
  2800  00E4CA  00                 	db	0
  2801  00E4CB  00                 	db	0
  2802  00E4CC  3F                 	db	63
  2803  00E4CD  E0                 	db	224
  2804  00E4CE  00                 	db	0
  2805  00E4CF  00                 	db	0
  2806  00E4D0  38                 	db	56
  2807  00E4D1  00                 	db	0
  2808  00E4D2  00                 	db	0
  2809  00E4D3  00                 	db	0
  2810  00E4D4  38                 	db	56
  2811  00E4D5  00                 	db	0
  2812  00E4D6  00                 	db	0
  2813  00E4D7  00                 	db	0
  2814  00E4D8  38                 	db	56
  2815  00E4D9  00                 	db	0
  2816  00E4DA  00                 	db	0
  2817  00E4DB  00                 	db	0
  2818  00E4DC  3F                 	db	63
  2819  00E4DD  80                 	db	128
  2820  00E4DE  00                 	db	0
  2821  00E4DF  00                 	db	0
  2822  00E4E0  3F                 	db	63
  2823  00E4E1  C0                 	db	192
  2824  00E4E2  00                 	db	0
  2825  00E4E3  00                 	db	0
  2826  00E4E4  01                 	db	1
  2827  00E4E5  E0                 	db	224
  2828  00E4E6  00                 	db	0
  2829  00E4E7  00                 	db	0
  2830  00E4E8  00                 	db	0
  2831  00E4E9  E0                 	db	224
  2832  00E4EA  00                 	db	0
  2833  00E4EB  00                 	db	0
  2834  00E4EC  00                 	db	0
  2835  00E4ED  E0                 	db	224
  2836  00E4EE  00                 	db	0
  2837  00E4EF  00                 	db	0
  2838  00E4F0  40                 	db	64
  2839  00E4F1  E0                 	db	224
  2840  00E4F2  00                 	db	0
  2841  00E4F3  00                 	db	0
  2842  00E4F4  61                 	db	97
  2843  00E4F5  C0                 	db	192
  2844  00E4F6  00                 	db	0
  2845  00E4F7  00                 	db	0
  2846  00E4F8  7F                 	db	127
  2847  00E4F9  C0                 	db	192
  2848  00E4FA  00                 	db	0
  2849  00E4FB  00                 	db	0
  2850  00E4FC  3F                 	db	63
  2851  00E4FD  00                 	db	0
  2852  00E4FE  00                 	db	0
  2853  00E4FF  00                 	db	0
  2854  00E500  00                 	db	0
  2855  00E501  00                 	db	0
  2856  00E502  00                 	db	0
  2857  00E503  00                 	db	0
  2858  00E504  00                 	db	0
  2859  00E505  00                 	db	0
  2860  00E506  00                 	db	0
  2861  00E507  00                 	db	0
  2862  00E508  00                 	db	0
  2863  00E509  00                 	db	0
  2864  00E50A  00                 	db	0
  2865  00E50B  00                 	db	0
  2866  00E50C  00                 	db	0
  2867  00E50D  00                 	db	0
  2868  00E50E  00                 	db	0
  2869  00E50F  00                 	db	0
  2870  00E510  0C                 	db	12
  2871  00E511  00                 	db	0
  2872  00E512  00                 	db	0
  2873  00E513  00                 	db	0
  2874  00E514  00                 	db	0
  2875  00E515  00                 	db	0
  2876  00E516  00                 	db	0
  2877  00E517  00                 	db	0
  2878  00E518  00                 	db	0
  2879  00E519  00                 	db	0
  2880  00E51A  00                 	db	0
  2881  00E51B  00                 	db	0
  2882  00E51C  00                 	db	0
  2883  00E51D  00                 	db	0
  2884  00E51E  00                 	db	0
  2885  00E51F  00                 	db	0
  2886  00E520  00                 	db	0
  2887  00E521  00                 	db	0
  2888  00E522  00                 	db	0
  2889  00E523  00                 	db	0
  2890  00E524  00                 	db	0
  2891  00E525  07                 	db	7
  2892  00E526  C0                 	db	192
  2893  00E527  00                 	db	0
  2894  00E528  00                 	db	0
  2895  00E529  1F                 	db	31
  2896  00E52A  C0                 	db	192
  2897  00E52B  00                 	db	0
  2898  00E52C  00                 	db	0
  2899  00E52D  3C                 	db	60
  2900  00E52E  00                 	db	0
  2901  00E52F  00                 	db	0
  2902  00E530  00                 	db	0
  2903  00E531  38                 	db	56
  2904  00E532  00                 	db	0
  2905  00E533  00                 	db	0
  2906  00E534  00                 	db	0
  2907  00E535  70                 	db	112
  2908  00E536  00                 	db	0
  2909  00E537  00                 	db	0
  2910  00E538  00                 	db	0
  2911  00E539  77                 	db	119
  2912  00E53A  80                 	db	128
  2913  00E53B  00                 	db	0
  2914  00E53C  00                 	db	0
  2915  00E53D  7F                 	db	127
  2916  00E53E  C0                 	db	192
  2917  00E53F  00                 	db	0
  2918  00E540  00                 	db	0
  2919  00E541  71                 	db	113
  2920  00E542  E0                 	db	224
  2921  00E543  00                 	db	0
  2922  00E544  00                 	db	0
  2923  00E545  70                 	db	112
  2924  00E546  E0                 	db	224
  2925  00E547  00                 	db	0
  2926  00E548  00                 	db	0
  2927  00E549  70                 	db	112
  2928  00E54A  E0                 	db	224
  2929  00E54B  00                 	db	0
  2930  00E54C  00                 	db	0
  2931  00E54D  70                 	db	112
  2932  00E54E  E0                 	db	224
  2933  00E54F  00                 	db	0
  2934  00E550  00                 	db	0
  2935  00E551  39                 	db	57
  2936  00E552  E0                 	db	224
  2937  00E553  00                 	db	0
  2938  00E554  00                 	db	0
  2939  00E555  3F                 	db	63
  2940  00E556  C0                 	db	192
  2941  00E557  00                 	db	0
  2942  00E558  00                 	db	0
  2943  00E559  0F                 	db	15
  2944  00E55A  80                 	db	128
  2945  00E55B  00                 	db	0
  2946  00E55C  00                 	db	0
  2947  00E55D  00                 	db	0
  2948  00E55E  00                 	db	0
  2949  00E55F  00                 	db	0
  2950  00E560  00                 	db	0
  2951  00E561  00                 	db	0
  2952  00E562  00                 	db	0
  2953  00E563  00                 	db	0
  2954  00E564  00                 	db	0
  2955  00E565  00                 	db	0
  2956  00E566  00                 	db	0
  2957  00E567  00                 	db	0
  2958  00E568  00                 	db	0
  2959  00E569  00                 	db	0
  2960  00E56A  00                 	db	0
  2961  00E56B  00                 	db	0
  2962  00E56C  00                 	db	0
  2963  00E56D  0C                 	db	12
  2964  00E56E  00                 	db	0
  2965  00E56F  00                 	db	0
  2966  00E570  00                 	db	0
  2967  00E571  00                 	db	0
  2968  00E572  00                 	db	0
  2969  00E573  00                 	db	0
  2970  00E574  00                 	db	0
  2971  00E575  00                 	db	0
  2972  00E576  00                 	db	0
  2973  00E577  00                 	db	0
  2974  00E578  00                 	db	0
  2975  00E579  00                 	db	0
  2976  00E57A  00                 	db	0
  2977  00E57B  00                 	db	0
  2978  00E57C  00                 	db	0
  2979  00E57D  00                 	db	0
  2980  00E57E  00                 	db	0
  2981  00E57F  00                 	db	0
  2982  00E580  00                 	db	0
  2983  00E581  00                 	db	0
  2984  00E582  7F                 	db	127
  2985  00E583  E0                 	db	224
  2986  00E584  00                 	db	0
  2987  00E585  00                 	db	0
  2988  00E586  7F                 	db	127
  2989  00E587  E0                 	db	224
  2990  00E588  00                 	db	0
  2991  00E589  00                 	db	0
  2992  00E58A  00                 	db	0
  2993  00E58B  E0                 	db	224
  2994  00E58C  00                 	db	0
  2995  00E58D  00                 	db	0
  2996  00E58E  01                 	db	1
  2997  00E58F  C0                 	db	192
  2998  00E590  00                 	db	0
  2999  00E591  00                 	db	0
  3000  00E592  01                 	db	1
  3001  00E593  C0                 	db	192
  3002  00E594  00                 	db	0
  3003  00E595  00                 	db	0
  3004  00E596  03                 	db	3
  3005  00E597  80                 	db	128
  3006  00E598  00                 	db	0
  3007  00E599  00                 	db	0
  3008  00E59A  07                 	db	7
  3009  00E59B  00                 	db	0
  3010  00E59C  00                 	db	0
  3011  00E59D  00                 	db	0
  3012  00E59E  07                 	db	7
  3013  00E59F  00                 	db	0
  3014  00E5A0  00                 	db	0
  3015  00E5A1  00                 	db	0
  3016  00E5A2  0E                 	db	14
  3017  00E5A3  00                 	db	0
  3018  00E5A4  00                 	db	0
  3019  00E5A5  00                 	db	0
  3020  00E5A6  0E                 	db	14
  3021  00E5A7  00                 	db	0
  3022  00E5A8  00                 	db	0
  3023  00E5A9  00                 	db	0
  3024  00E5AA  1C                 	db	28
  3025  00E5AB  00                 	db	0
  3026  00E5AC  00                 	db	0
  3027  00E5AD  00                 	db	0
  3028  00E5AE  38                 	db	56
  3029  00E5AF  00                 	db	0
  3030  00E5B0  00                 	db	0
  3031  00E5B1  00                 	db	0
  3032  00E5B2  38                 	db	56
  3033  00E5B3  00                 	db	0
  3034  00E5B4  00                 	db	0
  3035  00E5B5  00                 	db	0
  3036  00E5B6  70                 	db	112
  3037  00E5B7  00                 	db	0
  3038  00E5B8  00                 	db	0
  3039  00E5B9  00                 	db	0
  3040  00E5BA  00                 	db	0
  3041  00E5BB  00                 	db	0
  3042  00E5BC  00                 	db	0
  3043  00E5BD  00                 	db	0
  3044  00E5BE  00                 	db	0
  3045  00E5BF  00                 	db	0
  3046  00E5C0  00                 	db	0
  3047  00E5C1  00                 	db	0
  3048  00E5C2  00                 	db	0
  3049  00E5C3  00                 	db	0
  3050  00E5C4  00                 	db	0
  3051  00E5C5  00                 	db	0
  3052  00E5C6  00                 	db	0
  3053  00E5C7  00                 	db	0
  3054  00E5C8  00                 	db	0
  3055  00E5C9  00                 	db	0
  3056  00E5CA  0C                 	db	12
  3057  00E5CB  00                 	db	0
  3058  00E5CC  00                 	db	0
  3059  00E5CD  00                 	db	0
  3060  00E5CE  00                 	db	0
  3061  00E5CF  00                 	db	0
  3062  00E5D0  00                 	db	0
  3063  00E5D1  00                 	db	0
  3064  00E5D2  00                 	db	0
  3065  00E5D3  00                 	db	0
  3066  00E5D4  00                 	db	0
  3067  00E5D5  00                 	db	0
  3068  00E5D6  00                 	db	0
  3069  00E5D7  00                 	db	0
  3070  00E5D8  00                 	db	0
  3071  00E5D9  00                 	db	0
  3072  00E5DA  00                 	db	0
  3073  00E5DB  00                 	db	0
  3074  00E5DC  00                 	db	0
  3075  00E5DD  00                 	db	0
  3076  00E5DE  00                 	db	0
  3077  00E5DF  1F                 	db	31
  3078  00E5E0  80                 	db	128
  3079  00E5E1  00                 	db	0
  3080  00E5E2  00                 	db	0
  3081  00E5E3  3F                 	db	63
  3082  00E5E4  C0                 	db	192
  3083  00E5E5  00                 	db	0
  3084  00E5E6  00                 	db	0
  3085  00E5E7  70                 	db	112
  3086  00E5E8  E0                 	db	224
  3087  00E5E9  00                 	db	0
  3088  00E5EA  00                 	db	0
  3089  00E5EB  70                 	db	112
  3090  00E5EC  E0                 	db	224
  3091  00E5ED  00                 	db	0
  3092  00E5EE  00                 	db	0
  3093  00E5EF  70                 	db	112
  3094  00E5F0  E0                 	db	224
  3095  00E5F1  00                 	db	0
  3096  00E5F2  00                 	db	0
  3097  00E5F3  3F                 	db	63
  3098  00E5F4  C0                 	db	192
  3099  00E5F5  00                 	db	0
  3100  00E5F6  00                 	db	0
  3101  00E5F7  1F                 	db	31
  3102  00E5F8  80                 	db	128
  3103  00E5F9  00                 	db	0
  3104  00E5FA  00                 	db	0
  3105  00E5FB  3F                 	db	63
  3106  00E5FC  C0                 	db	192
  3107  00E5FD  00                 	db	0
  3108  00E5FE  00                 	db	0
  3109  00E5FF  71                 	db	113
  3110  00E600  E0                 	db	224
  3111  00E601  00                 	db	0
  3112  00E602  00                 	db	0
  3113  00E603  70                 	db	112
  3114  00E604  E0                 	db	224
  3115  00E605  00                 	db	0
  3116  00E606  00                 	db	0
  3117  00E607  70                 	db	112
  3118  00E608  E0                 	db	224
  3119  00E609  00                 	db	0
  3120  00E60A  00                 	db	0
  3121  00E60B  79                 	db	121
  3122  00E60C  E0                 	db	224
  3123  00E60D  00                 	db	0
  3124  00E60E  00                 	db	0
  3125  00E60F  3F                 	db	63
  3126  00E610  C0                 	db	192
  3127  00E611  00                 	db	0
  3128  00E612  00                 	db	0
  3129  00E613  1F                 	db	31
  3130  00E614  80                 	db	128
  3131  00E615  00                 	db	0
  3132  00E616  00                 	db	0
  3133  00E617  00                 	db	0
  3134  00E618  00                 	db	0
  3135  00E619  00                 	db	0
  3136  00E61A  00                 	db	0
  3137  00E61B  00                 	db	0
  3138  00E61C  00                 	db	0
  3139  00E61D  00                 	db	0
  3140  00E61E  00                 	db	0
  3141  00E61F  00                 	db	0
  3142  00E620  00                 	db	0
  3143  00E621  00                 	db	0
  3144  00E622  00                 	db	0
  3145  00E623  00                 	db	0
  3146  00E624  00                 	db	0
  3147  00E625  00                 	db	0
  3148  00E626  00                 	db	0
  3149  00E627  0C                 	db	12
  3150  00E628  00                 	db	0
  3151  00E629  00                 	db	0
  3152  00E62A  00                 	db	0
  3153  00E62B  00                 	db	0
  3154  00E62C  00                 	db	0
  3155  00E62D  00                 	db	0
  3156  00E62E  00                 	db	0
  3157  00E62F  00                 	db	0
  3158  00E630  00                 	db	0
  3159  00E631  00                 	db	0
  3160  00E632  00                 	db	0
  3161  00E633  00                 	db	0
  3162  00E634  00                 	db	0
  3163  00E635  00                 	db	0
  3164  00E636  00                 	db	0
  3165  00E637  00                 	db	0
  3166  00E638  00                 	db	0
  3167  00E639  00                 	db	0
  3168  00E63A  00                 	db	0
  3169  00E63B  00                 	db	0
  3170  00E63C  0F                 	db	15
  3171  00E63D  00                 	db	0
  3172  00E63E  00                 	db	0
  3173  00E63F  00                 	db	0
  3174  00E640  3F                 	db	63
  3175  00E641  C0                 	db	192
  3176  00E642  00                 	db	0
  3177  00E643  00                 	db	0
  3178  00E644  39                 	db	57
  3179  00E645  C0                 	db	192
  3180  00E646  00                 	db	0
  3181  00E647  00                 	db	0
  3182  00E648  70                 	db	112
  3183  00E649  E0                 	db	224
  3184  00E64A  00                 	db	0
  3185  00E64B  00                 	db	0
  3186  00E64C  70                 	db	112
  3187  00E64D  E0                 	db	224
  3188  00E64E  00                 	db	0
  3189  00E64F  00                 	db	0
  3190  00E650  70                 	db	112
  3191  00E651  E0                 	db	224
  3192  00E652  00                 	db	0
  3193  00E653  00                 	db	0
  3194  00E654  78                 	db	120
  3195  00E655  E0                 	db	224
  3196  00E656  00                 	db	0
  3197  00E657  00                 	db	0
  3198  00E658  3F                 	db	63
  3199  00E659  E0                 	db	224
  3200  00E65A  00                 	db	0
  3201  00E65B  00                 	db	0
  3202  00E65C  1E                 	db	30
  3203  00E65D  E0                 	db	224
  3204  00E65E  00                 	db	0
  3205  00E65F  00                 	db	0
  3206  00E660  00                 	db	0
  3207  00E661  E0                 	db	224
  3208  00E662  00                 	db	0
  3209  00E663  00                 	db	0
  3210  00E664  01                 	db	1
  3211  00E665  C0                 	db	192
  3212  00E666  00                 	db	0
  3213  00E667  00                 	db	0
  3214  00E668  03                 	db	3
  3215  00E669  C0                 	db	192
  3216  00E66A  00                 	db	0
  3217  00E66B  00                 	db	0
  3218  00E66C  3F                 	db	63
  3219  00E66D  80                 	db	128
  3220  00E66E  00                 	db	0
  3221  00E66F  00                 	db	0
  3222  00E670  3E                 	db	62
  3223  00E671  00                 	db	0
  3224  00E672  00                 	db	0
  3225  00E673  00                 	db	0
  3226  00E674  00                 	db	0
  3227  00E675  00                 	db	0
  3228  00E676  00                 	db	0
  3229  00E677  00                 	db	0
  3230  00E678  00                 	db	0
  3231  00E679  00                 	db	0
  3232  00E67A  00                 	db	0
  3233  00E67B  00                 	db	0
  3234  00E67C  00                 	db	0
  3235  00E67D  00                 	db	0
  3236  00E67E  00                 	db	0
  3237  00E67F  00                 	db	0
  3238  00E680  00                 	db	0
  3239  00E681  00                 	db	0
  3240  00E682  00                 	db	0
  3241  00E683  00                 	db	0
  3242  00E684  07                 	db	7
  3243  00E685  00                 	db	0
  3244  00E686  00                 	db	0
  3245  00E687  00                 	db	0
  3246  00E688  00                 	db	0
  3247  00E689  00                 	db	0
  3248  00E68A  00                 	db	0
  3249  00E68B  00                 	db	0
  3250  00E68C  00                 	db	0
  3251  00E68D  00                 	db	0
  3252  00E68E  00                 	db	0
  3253  00E68F  00                 	db	0
  3254  00E690  00                 	db	0
  3255  00E691  00                 	db	0
  3256  00E692  00                 	db	0
  3257  00E693  00                 	db	0
  3258  00E694  00                 	db	0
  3259  00E695  00                 	db	0
  3260  00E696  00                 	db	0
  3261  00E697  00                 	db	0
  3262  00E698  00                 	db	0
  3263  00E699  00                 	db	0
  3264  00E69A  00                 	db	0
  3265  00E69B  00                 	db	0
  3266  00E69C  00                 	db	0
  3267  00E69D  00                 	db	0
  3268  00E69E  00                 	db	0
  3269  00E69F  00                 	db	0
  3270  00E6A0  00                 	db	0
  3271  00E6A1  00                 	db	0
  3272  00E6A2  00                 	db	0
  3273  00E6A3  00                 	db	0
  3274  00E6A4  00                 	db	0
  3275  00E6A5  00                 	db	0
  3276  00E6A6  00                 	db	0
  3277  00E6A7  00                 	db	0
  3278  00E6A8  00                 	db	0
  3279  00E6A9  38                 	db	56
  3280  00E6AA  00                 	db	0
  3281  00E6AB  00                 	db	0
  3282  00E6AC  00                 	db	0
  3283  00E6AD  38                 	db	56
  3284  00E6AE  00                 	db	0
  3285  00E6AF  00                 	db	0
  3286  00E6B0  00                 	db	0
  3287  00E6B1  38                 	db	56
  3288  00E6B2  00                 	db	0
  3289  00E6B3  00                 	db	0
  3290  00E6B4  00                 	db	0
  3291  00E6B5  38                 	db	56
  3292  00E6B6  00                 	db	0
  3293  00E6B7  00                 	db	0
  3294  00E6B8  00                 	db	0
  3295  00E6B9  00                 	db	0
  3296  00E6BA  00                 	db	0
  3297  00E6BB  00                 	db	0
  3298  00E6BC  00                 	db	0
  3299  00E6BD  00                 	db	0
  3300  00E6BE  00                 	db	0
  3301  00E6BF  00                 	db	0
  3302  00E6C0  00                 	db	0
  3303  00E6C1  38                 	db	56
  3304  00E6C2  00                 	db	0
  3305  00E6C3  00                 	db	0
  3306  00E6C4  00                 	db	0
  3307  00E6C5  38                 	db	56
  3308  00E6C6  00                 	db	0
  3309  00E6C7  00                 	db	0
  3310  00E6C8  00                 	db	0
  3311  00E6C9  38                 	db	56
  3312  00E6CA  00                 	db	0
  3313  00E6CB  00                 	db	0
  3314  00E6CC  00                 	db	0
  3315  00E6CD  38                 	db	56
  3316  00E6CE  00                 	db	0
  3317  00E6CF  00                 	db	0
  3318  00E6D0  00                 	db	0
  3319  00E6D1  00                 	db	0
  3320  00E6D2  00                 	db	0
  3321  00E6D3  00                 	db	0
  3322  00E6D4  00                 	db	0
  3323  00E6D5  00                 	db	0
  3324  00E6D6  00                 	db	0
  3325  00E6D7  00                 	db	0
  3326  00E6D8  00                 	db	0
  3327  00E6D9  00                 	db	0
  3328  00E6DA  00                 	db	0
  3329  00E6DB  00                 	db	0
  3330  00E6DC  00                 	db	0
  3331  00E6DD  00                 	db	0
  3332  00E6DE  00                 	db	0
  3333  00E6DF  00                 	db	0
  3334  00E6E0  00                 	db	0
  3335  00E6E1  07                 	db	7
  3336  00E6E2  00                 	db	0
  3337  00E6E3  00                 	db	0
  3338  00E6E4  00                 	db	0
  3339  00E6E5  00                 	db	0
  3340  00E6E6  00                 	db	0
  3341  00E6E7  00                 	db	0
  3342  00E6E8  00                 	db	0
  3343  00E6E9  00                 	db	0
  3344  00E6EA  00                 	db	0
  3345  00E6EB  00                 	db	0
  3346  00E6EC  00                 	db	0
  3347  00E6ED  00                 	db	0
  3348  00E6EE  00                 	db	0
  3349  00E6EF  00                 	db	0
  3350  00E6F0  00                 	db	0
  3351  00E6F1  00                 	db	0
  3352  00E6F2  00                 	db	0
  3353  00E6F3  00                 	db	0
  3354  00E6F4  00                 	db	0
  3355  00E6F5  00                 	db	0
  3356  00E6F6  00                 	db	0
  3357  00E6F7  00                 	db	0
  3358  00E6F8  00                 	db	0
  3359  00E6F9  00                 	db	0
  3360  00E6FA  00                 	db	0
  3361  00E6FB  00                 	db	0
  3362  00E6FC  00                 	db	0
  3363  00E6FD  00                 	db	0
  3364  00E6FE  00                 	db	0
  3365  00E6FF  00                 	db	0
  3366  00E700  00                 	db	0
  3367  00E701  00                 	db	0
  3368  00E702  00                 	db	0
  3369  00E703  00                 	db	0
  3370  00E704  00                 	db	0
  3371  00E705  00                 	db	0
  3372  00E706  38                 	db	56
  3373  00E707  00                 	db	0
  3374  00E708  00                 	db	0
  3375  00E709  00                 	db	0
  3376  00E70A  38                 	db	56
  3377  00E70B  00                 	db	0
  3378  00E70C  00                 	db	0
  3379  00E70D  00                 	db	0
  3380  00E70E  38                 	db	56
  3381  00E70F  00                 	db	0
  3382  00E710  00                 	db	0
  3383  00E711  00                 	db	0
  3384  00E712  38                 	db	56
  3385  00E713  00                 	db	0
  3386  00E714  00                 	db	0
  3387  00E715  00                 	db	0
  3388  00E716  00                 	db	0
  3389  00E717  00                 	db	0
  3390  00E718  00                 	db	0
  3391  00E719  00                 	db	0
  3392  00E71A  00                 	db	0
  3393  00E71B  00                 	db	0
  3394  00E71C  00                 	db	0
  3395  00E71D  00                 	db	0
  3396  00E71E  1C                 	db	28
  3397  00E71F  00                 	db	0
  3398  00E720  00                 	db	0
  3399  00E721  00                 	db	0
  3400  00E722  38                 	db	56
  3401  00E723  00                 	db	0
  3402  00E724  00                 	db	0
  3403  00E725  00                 	db	0
  3404  00E726  38                 	db	56
  3405  00E727  00                 	db	0
  3406  00E728  00                 	db	0
  3407  00E729  00                 	db	0
  3408  00E72A  30                 	db	48
  3409  00E72B  00                 	db	0
  3410  00E72C  00                 	db	0
  3411  00E72D  00                 	db	0
  3412  00E72E  30                 	db	48
  3413  00E72F  00                 	db	0
  3414  00E730  00                 	db	0
  3415  00E731  00                 	db	0
  3416  00E732  70                 	db	112
  3417  00E733  00                 	db	0
  3418  00E734  00                 	db	0
  3419  00E735  00                 	db	0
  3420  00E736  60                 	db	96
  3421  00E737  00                 	db	0
  3422  00E738  00                 	db	0
  3423  00E739  00                 	db	0
  3424  00E73A  00                 	db	0
  3425  00E73B  00                 	db	0
  3426  00E73C  00                 	db	0
  3427  00E73D  00                 	db	0
  3428  00E73E  10                 	db	16
  3429  00E73F  00                 	db	0
  3430  00E740  00                 	db	0
  3431  00E741  00                 	db	0
  3432  00E742  00                 	db	0
  3433  00E743  00                 	db	0
  3434  00E744  00                 	db	0
  3435  00E745  00                 	db	0
  3436  00E746  00                 	db	0
  3437  00E747  00                 	db	0
  3438  00E748  00                 	db	0
  3439  00E749  00                 	db	0
  3440  00E74A  00                 	db	0
  3441  00E74B  00                 	db	0
  3442  00E74C  00                 	db	0
  3443  00E74D  00                 	db	0
  3444  00E74E  00                 	db	0
  3445  00E74F  00                 	db	0
  3446  00E750  00                 	db	0
  3447  00E751  00                 	db	0
  3448  00E752  00                 	db	0
  3449  00E753  00                 	db	0
  3450  00E754  00                 	db	0
  3451  00E755  00                 	db	0
  3452  00E756  00                 	db	0
  3453  00E757  00                 	db	0
  3454  00E758  00                 	db	0
  3455  00E759  00                 	db	0
  3456  00E75A  00                 	db	0
  3457  00E75B  00                 	db	0
  3458  00E75C  04                 	db	4
  3459  00E75D  00                 	db	0
  3460  00E75E  00                 	db	0
  3461  00E75F  00                 	db	0
  3462  00E760  3C                 	db	60
  3463  00E761  00                 	db	0
  3464  00E762  00                 	db	0
  3465  00E763  00                 	db	0
  3466  00E764  FC                 	db	252
  3467  00E765  00                 	db	0
  3468  00E766  00                 	db	0
  3469  00E767  03                 	db	3
  3470  00E768  F8                 	db	248
  3471  00E769  00                 	db	0
  3472  00E76A  00                 	db	0
  3473  00E76B  1F                 	db	31
  3474  00E76C  C0                 	db	192
  3475  00E76D  00                 	db	0
  3476  00E76E  00                 	db	0
  3477  00E76F  3F                 	db	63
  3478  00E770  00                 	db	0
  3479  00E771  00                 	db	0
  3480  00E772  00                 	db	0
  3481  00E773  3F                 	db	63
  3482  00E774  00                 	db	0
  3483  00E775  00                 	db	0
  3484  00E776  00                 	db	0
  3485  00E777  1F                 	db	31
  3486  00E778  C0                 	db	192
  3487  00E779  00                 	db	0
  3488  00E77A  00                 	db	0
  3489  00E77B  03                 	db	3
  3490  00E77C  F8                 	db	248
  3491  00E77D  00                 	db	0
  3492  00E77E  00                 	db	0
  3493  00E77F  00                 	db	0
  3494  00E780  FC                 	db	252
  3495  00E781  00                 	db	0
  3496  00E782  00                 	db	0
  3497  00E783  00                 	db	0
  3498  00E784  3C                 	db	60
  3499  00E785  00                 	db	0
  3500  00E786  00                 	db	0
  3501  00E787  00                 	db	0
  3502  00E788  04                 	db	4
  3503  00E789  00                 	db	0
  3504  00E78A  00                 	db	0
  3505  00E78B  00                 	db	0
  3506  00E78C  00                 	db	0
  3507  00E78D  00                 	db	0
  3508  00E78E  00                 	db	0
  3509  00E78F  00                 	db	0
  3510  00E790  00                 	db	0
  3511  00E791  00                 	db	0
  3512  00E792  00                 	db	0
  3513  00E793  00                 	db	0
  3514  00E794  00                 	db	0
  3515  00E795  00                 	db	0
  3516  00E796  00                 	db	0
  3517  00E797  00                 	db	0
  3518  00E798  00                 	db	0
  3519  00E799  00                 	db	0
  3520  00E79A  00                 	db	0
  3521  00E79B  10                 	db	16
  3522  00E79C  00                 	db	0
  3523  00E79D  00                 	db	0
  3524  00E79E  00                 	db	0
  3525  00E79F  00                 	db	0
  3526  00E7A0  00                 	db	0
  3527  00E7A1  00                 	db	0
  3528  00E7A2  00                 	db	0
  3529  00E7A3  00                 	db	0
  3530  00E7A4  00                 	db	0
  3531  00E7A5  00                 	db	0
  3532  00E7A6  00                 	db	0
  3533  00E7A7  00                 	db	0
  3534  00E7A8  00                 	db	0
  3535  00E7A9  00                 	db	0
  3536  00E7AA  00                 	db	0
  3537  00E7AB  00                 	db	0
  3538  00E7AC  00                 	db	0
  3539  00E7AD  00                 	db	0
  3540  00E7AE  00                 	db	0
  3541  00E7AF  00                 	db	0
  3542  00E7B0  00                 	db	0
  3543  00E7B1  00                 	db	0
  3544  00E7B2  00                 	db	0
  3545  00E7B3  00                 	db	0
  3546  00E7B4  00                 	db	0
  3547  00E7B5  00                 	db	0
  3548  00E7B6  00                 	db	0
  3549  00E7B7  00                 	db	0
  3550  00E7B8  00                 	db	0
  3551  00E7B9  00                 	db	0
  3552  00E7BA  00                 	db	0
  3553  00E7BB  00                 	db	0
  3554  00E7BC  00                 	db	0
  3555  00E7BD  00                 	db	0
  3556  00E7BE  00                 	db	0
  3557  00E7BF  00                 	db	0
  3558  00E7C0  3F                 	db	63
  3559  00E7C1  F8                 	db	248
  3560  00E7C2  00                 	db	0
  3561  00E7C3  00                 	db	0
  3562  00E7C4  3F                 	db	63
  3563  00E7C5  F8                 	db	248
  3564  00E7C6  00                 	db	0
  3565  00E7C7  00                 	db	0
  3566  00E7C8  00                 	db	0
  3567  00E7C9  00                 	db	0
  3568  00E7CA  00                 	db	0
  3569  00E7CB  00                 	db	0
  3570  00E7CC  00                 	db	0
  3571  00E7CD  00                 	db	0
  3572  00E7CE  00                 	db	0
  3573  00E7CF  00                 	db	0
  3574  00E7D0  00                 	db	0
  3575  00E7D1  00                 	db	0
  3576  00E7D2  00                 	db	0
  3577  00E7D3  00                 	db	0
  3578  00E7D4  3F                 	db	63
  3579  00E7D5  F8                 	db	248
  3580  00E7D6  00                 	db	0
  3581  00E7D7  00                 	db	0
  3582  00E7D8  3F                 	db	63
  3583  00E7D9  F8                 	db	248
  3584  00E7DA  00                 	db	0
  3585  00E7DB  00                 	db	0
  3586  00E7DC  00                 	db	0
  3587  00E7DD  00                 	db	0
  3588  00E7DE  00                 	db	0
  3589  00E7DF  00                 	db	0
  3590  00E7E0  00                 	db	0
  3591  00E7E1  00                 	db	0
  3592  00E7E2  00                 	db	0
  3593  00E7E3  00                 	db	0
  3594  00E7E4  00                 	db	0
  3595  00E7E5  00                 	db	0
  3596  00E7E6  00                 	db	0
  3597  00E7E7  00                 	db	0
  3598  00E7E8  00                 	db	0
  3599  00E7E9  00                 	db	0
  3600  00E7EA  00                 	db	0
  3601  00E7EB  00                 	db	0
  3602  00E7EC  00                 	db	0
  3603  00E7ED  00                 	db	0
  3604  00E7EE  00                 	db	0
  3605  00E7EF  00                 	db	0
  3606  00E7F0  00                 	db	0
  3607  00E7F1  00                 	db	0
  3608  00E7F2  00                 	db	0
  3609  00E7F3  00                 	db	0
  3610  00E7F4  00                 	db	0
  3611  00E7F5  00                 	db	0
  3612  00E7F6  00                 	db	0
  3613  00E7F7  00                 	db	0
  3614  00E7F8  10                 	db	16
  3615  00E7F9  00                 	db	0
  3616  00E7FA  00                 	db	0
  3617  00E7FB  00                 	db	0
  3618  00E7FC  00                 	db	0
  3619  00E7FD  00                 	db	0
  3620  00E7FE  00                 	db	0
  3621  00E7FF  00                 	db	0
  3622  00E800  00                 	db	0
  3623  00E801  00                 	db	0
  3624  00E802  00                 	db	0
  3625  00E803  00                 	db	0
  3626  00E804  00                 	db	0
  3627  00E805  00                 	db	0
  3628  00E806  00                 	db	0
  3629  00E807  00                 	db	0
  3630  00E808  00                 	db	0
  3631  00E809  00                 	db	0
  3632  00E80A  00                 	db	0
  3633  00E80B  00                 	db	0
  3634  00E80C  00                 	db	0
  3635  00E80D  00                 	db	0
  3636  00E80E  00                 	db	0
  3637  00E80F  00                 	db	0
  3638  00E810  00                 	db	0
  3639  00E811  00                 	db	0
  3640  00E812  00                 	db	0
  3641  00E813  00                 	db	0
  3642  00E814  00                 	db	0
  3643  00E815  20                 	db	32
  3644  00E816  00                 	db	0
  3645  00E817  00                 	db	0
  3646  00E818  00                 	db	0
  3647  00E819  3C                 	db	60
  3648  00E81A  00                 	db	0
  3649  00E81B  00                 	db	0
  3650  00E81C  00                 	db	0
  3651  00E81D  3F                 	db	63
  3652  00E81E  00                 	db	0
  3653  00E81F  00                 	db	0
  3654  00E820  00                 	db	0
  3655  00E821  1F                 	db	31
  3656  00E822  C0                 	db	192
  3657  00E823  00                 	db	0
  3658  00E824  00                 	db	0
  3659  00E825  03                 	db	3
  3660  00E826  F8                 	db	248
  3661  00E827  00                 	db	0
  3662  00E828  00                 	db	0
  3663  00E829  00                 	db	0
  3664  00E82A  FC                 	db	252
  3665  00E82B  00                 	db	0
  3666  00E82C  00                 	db	0
  3667  00E82D  00                 	db	0
  3668  00E82E  FC                 	db	252
  3669  00E82F  00                 	db	0
  3670  00E830  00                 	db	0
  3671  00E831  03                 	db	3
  3672  00E832  F8                 	db	248
  3673  00E833  00                 	db	0
  3674  00E834  00                 	db	0
  3675  00E835  1F                 	db	31
  3676  00E836  C0                 	db	192
  3677  00E837  00                 	db	0
  3678  00E838  00                 	db	0
  3679  00E839  3F                 	db	63
  3680  00E83A  00                 	db	0
  3681  00E83B  00                 	db	0
  3682  00E83C  00                 	db	0
  3683  00E83D  3C                 	db	60
  3684  00E83E  00                 	db	0
  3685  00E83F  00                 	db	0
  3686  00E840  00                 	db	0
  3687  00E841  20                 	db	32
  3688  00E842  00                 	db	0
  3689  00E843  00                 	db	0
  3690  00E844  00                 	db	0
  3691  00E845  00                 	db	0
  3692  00E846  00                 	db	0
  3693  00E847  00                 	db	0
  3694  00E848  00                 	db	0
  3695  00E849  00                 	db	0
  3696  00E84A  00                 	db	0
  3697  00E84B  00                 	db	0
  3698  00E84C  00                 	db	0
  3699  00E84D  00                 	db	0
  3700  00E84E  00                 	db	0
  3701  00E84F  00                 	db	0
  3702  00E850  00                 	db	0
  3703  00E851  00                 	db	0
  3704  00E852  00                 	db	0
  3705  00E853  00                 	db	0
  3706  00E854  00                 	db	0
  3707  00E855  0B                 	db	11
  3708  00E856  00                 	db	0
  3709  00E857  00                 	db	0
  3710  00E858  00                 	db	0
  3711  00E859  00                 	db	0
  3712  00E85A  00                 	db	0
  3713  00E85B  00                 	db	0
  3714  00E85C  00                 	db	0
  3715  00E85D  00                 	db	0
  3716  00E85E  00                 	db	0
  3717  00E85F  00                 	db	0
  3718  00E860  00                 	db	0
  3719  00E861  00                 	db	0
  3720  00E862  00                 	db	0
  3721  00E863  00                 	db	0
  3722  00E864  00                 	db	0
  3723  00E865  00                 	db	0
  3724  00E866  00                 	db	0
  3725  00E867  00                 	db	0
  3726  00E868  00                 	db	0
  3727  00E869  00                 	db	0
  3728  00E86A  3F                 	db	63
  3729  00E86B  00                 	db	0
  3730  00E86C  00                 	db	0
  3731  00E86D  00                 	db	0
  3732  00E86E  7F                 	db	127
  3733  00E86F  80                 	db	128
  3734  00E870  00                 	db	0
  3735  00E871  00                 	db	0
  3736  00E872  7F                 	db	127
  3737  00E873  C0                 	db	192
  3738  00E874  00                 	db	0
  3739  00E875  00                 	db	0
  3740  00E876  43                 	db	67
  3741  00E877  C0                 	db	192
  3742  00E878  00                 	db	0
  3743  00E879  00                 	db	0
  3744  00E87A  01                 	db	1
  3745  00E87B  C0                 	db	192
  3746  00E87C  00                 	db	0
  3747  00E87D  00                 	db	0
  3748  00E87E  01                 	db	1
  3749  00E87F  C0                 	db	192
  3750  00E880  00                 	db	0
  3751  00E881  00                 	db	0
  3752  00E882  03                 	db	3
  3753  00E883  80                 	db	128
  3754  00E884  00                 	db	0
  3755  00E885  00                 	db	0
  3756  00E886  0F                 	db	15
  3757  00E887  00                 	db	0
  3758  00E888  00                 	db	0
  3759  00E889  00                 	db	0
  3760  00E88A  1E                 	db	30
  3761  00E88B  00                 	db	0
  3762  00E88C  00                 	db	0
  3763  00E88D  00                 	db	0
  3764  00E88E  1C                 	db	28
  3765  00E88F  00                 	db	0
  3766  00E890  00                 	db	0
  3767  00E891  00                 	db	0
  3768  00E892  1C                 	db	28
  3769  00E893  00                 	db	0
  3770  00E894  00                 	db	0
  3771  00E895  00                 	db	0
  3772  00E896  00                 	db	0
  3773  00E897  00                 	db	0
  3774  00E898  00                 	db	0
  3775  00E899  00                 	db	0
  3776  00E89A  1C                 	db	28
  3777  00E89B  00                 	db	0
  3778  00E89C  00                 	db	0
  3779  00E89D  00                 	db	0
  3780  00E89E  1C                 	db	28
  3781  00E89F  00                 	db	0
  3782  00E8A0  00                 	db	0
  3783  00E8A1  00                 	db	0
  3784  00E8A2  00                 	db	0
  3785  00E8A3  00                 	db	0
  3786  00E8A4  00                 	db	0
  3787  00E8A5  00                 	db	0
  3788  00E8A6  00                 	db	0
  3789  00E8A7  00                 	db	0
  3790  00E8A8  00                 	db	0
  3791  00E8A9  00                 	db	0
  3792  00E8AA  00                 	db	0
  3793  00E8AB  00                 	db	0
  3794  00E8AC  00                 	db	0
  3795  00E8AD  00                 	db	0
  3796  00E8AE  00                 	db	0
  3797  00E8AF  00                 	db	0
  3798  00E8B0  00                 	db	0
  3799  00E8B1  00                 	db	0
  3800  00E8B2  11                 	db	17
  3801  00E8B3  00                 	db	0
  3802  00E8B4  00                 	db	0
  3803  00E8B5  00                 	db	0
  3804  00E8B6  00                 	db	0
  3805  00E8B7  00                 	db	0
  3806  00E8B8  00                 	db	0
  3807  00E8B9  00                 	db	0
  3808  00E8BA  00                 	db	0
  3809  00E8BB  00                 	db	0
  3810  00E8BC  00                 	db	0
  3811  00E8BD  00                 	db	0
  3812  00E8BE  00                 	db	0
  3813  00E8BF  00                 	db	0
  3814  00E8C0  00                 	db	0
  3815  00E8C1  00                 	db	0
  3816  00E8C2  00                 	db	0
  3817  00E8C3  00                 	db	0
  3818  00E8C4  00                 	db	0
  3819  00E8C5  00                 	db	0
  3820  00E8C6  00                 	db	0
  3821  00E8C7  03                 	db	3
  3822  00E8C8  E0                 	db	224
  3823  00E8C9  00                 	db	0
  3824  00E8CA  00                 	db	0
  3825  00E8CB  0F                 	db	15
  3826  00E8CC  F8                 	db	248
  3827  00E8CD  00                 	db	0
  3828  00E8CE  00                 	db	0
  3829  00E8CF  1C                 	db	28
  3830  00E8D0  1C                 	db	28
  3831  00E8D1  00                 	db	0
  3832  00E8D2  00                 	db	0
  3833  00E8D3  38                 	db	56
  3834  00E8D4  06                 	db	6
  3835  00E8D5  00                 	db	0
  3836  00E8D6  00                 	db	0
  3837  00E8D7  31                 	db	49
  3838  00E8D8  F6                 	db	246
  3839  00E8D9  00                 	db	0
  3840  00E8DA  00                 	db	0
  3841  00E8DB  63                 	db	99
  3842  00E8DC  F3                 	db	243
  3843  00E8DD  00                 	db	0
  3844  00E8DE  00                 	db	0
  3845  00E8DF  66                 	db	102
  3846  00E8E0  33                 	db	51
  3847  00E8E1  00                 	db	0
  3848  00E8E2  00                 	db	0
  3849  00E8E3  66                 	db	102
  3850  00E8E4  33                 	db	51
  3851  00E8E5  00                 	db	0
  3852  00E8E6  00                 	db	0
  3853  00E8E7  66                 	db	102
  3854  00E8E8  33                 	db	51
  3855  00E8E9  00                 	db	0
  3856  00E8EA  00                 	db	0
  3857  00E8EB  66                 	db	102
  3858  00E8EC  33                 	db	51
  3859  00E8ED  00                 	db	0
  3860  00E8EE  00                 	db	0
  3861  00E8EF  63                 	db	99
  3862  00E8F0  FE                 	db	254
  3863  00E8F1  00                 	db	0
  3864  00E8F2  00                 	db	0
  3865  00E8F3  33                 	db	51
  3866  00E8F4  FE                 	db	254
  3867  00E8F5  00                 	db	0
  3868  00E8F6  00                 	db	0
  3869  00E8F7  38                 	db	56
  3870  00E8F8  00                 	db	0
  3871  00E8F9  00                 	db	0
  3872  00E8FA  00                 	db	0
  3873  00E8FB  1C                 	db	28
  3874  00E8FC  10                 	db	16
  3875  00E8FD  00                 	db	0
  3876  00E8FE  00                 	db	0
  3877  00E8FF  0F                 	db	15
  3878  00E900  F0                 	db	240
  3879  00E901  00                 	db	0
  3880  00E902  00                 	db	0
  3881  00E903  03                 	db	3
  3882  00E904  F0                 	db	240
  3883  00E905  00                 	db	0
  3884  00E906  00                 	db	0
  3885  00E907  00                 	db	0
  3886  00E908  00                 	db	0
  3887  00E909  00                 	db	0
  3888  00E90A  00                 	db	0
  3889  00E90B  00                 	db	0
  3890  00E90C  00                 	db	0
  3891  00E90D  00                 	db	0
  3892  00E90E  00                 	db	0
  3893  00E90F  0D                 	db	13
  3894  00E910  00                 	db	0
  3895  00E911  00                 	db	0
  3896  00E912  00                 	db	0
  3897  00E913  00                 	db	0
  3898  00E914  00                 	db	0
  3899  00E915  00                 	db	0
  3900  00E916  00                 	db	0
  3901  00E917  00                 	db	0
  3902  00E918  00                 	db	0
  3903  00E919  00                 	db	0
  3904  00E91A  00                 	db	0
  3905  00E91B  00                 	db	0
  3906  00E91C  00                 	db	0
  3907  00E91D  00                 	db	0
  3908  00E91E  00                 	db	0
  3909  00E91F  00                 	db	0
  3910  00E920  00                 	db	0
  3911  00E921  00                 	db	0
  3912  00E922  00                 	db	0
  3913  00E923  00                 	db	0
  3914  00E924  0F                 	db	15
  3915  00E925  80                 	db	128
  3916  00E926  00                 	db	0
  3917  00E927  00                 	db	0
  3918  00E928  0F                 	db	15
  3919  00E929  80                 	db	128
  3920  00E92A  00                 	db	0
  3921  00E92B  00                 	db	0
  3922  00E92C  0F                 	db	15
  3923  00E92D  80                 	db	128
  3924  00E92E  00                 	db	0
  3925  00E92F  00                 	db	0
  3926  00E930  1D                 	db	29
  3927  00E931  C0                 	db	192
  3928  00E932  00                 	db	0
  3929  00E933  00                 	db	0
  3930  00E934  1D                 	db	29
  3931  00E935  C0                 	db	192
  3932  00E936  00                 	db	0
  3933  00E937  00                 	db	0
  3934  00E938  1D                 	db	29
  3935  00E939  C0                 	db	192
  3936  00E93A  00                 	db	0
  3937  00E93B  00                 	db	0
  3938  00E93C  38                 	db	56
  3939  00E93D  E0                 	db	224
  3940  00E93E  00                 	db	0
  3941  00E93F  00                 	db	0
  3942  00E940  38                 	db	56
  3943  00E941  E0                 	db	224
  3944  00E942  00                 	db	0
  3945  00E943  00                 	db	0
  3946  00E944  38                 	db	56
  3947  00E945  E0                 	db	224
  3948  00E946  00                 	db	0
  3949  00E947  00                 	db	0
  3950  00E948  7F                 	db	127
  3951  00E949  F0                 	db	240
  3952  00E94A  00                 	db	0
  3953  00E94B  00                 	db	0
  3954  00E94C  7F                 	db	127
  3955  00E94D  F0                 	db	240
  3956  00E94E  00                 	db	0
  3957  00E94F  00                 	db	0
  3958  00E950  70                 	db	112
  3959  00E951  70                 	db	112
  3960  00E952  00                 	db	0
  3961  00E953  00                 	db	0
  3962  00E954  F0                 	db	240
  3963  00E955  78                 	db	120
  3964  00E956  00                 	db	0
  3965  00E957  00                 	db	0
  3966  00E958  E0                 	db	224
  3967  00E959  38                 	db	56
  3968  00E95A  00                 	db	0
  3969  00E95B  00                 	db	0
  3970  00E95C  00                 	db	0
  3971  00E95D  00                 	db	0
  3972  00E95E  00                 	db	0
  3973  00E95F  00                 	db	0
  3974  00E960  00                 	db	0
  3975  00E961  00                 	db	0
  3976  00E962  00                 	db	0
  3977  00E963  00                 	db	0
  3978  00E964  00                 	db	0
  3979  00E965  00                 	db	0
  3980  00E966  00                 	db	0
  3981  00E967  00                 	db	0
  3982  00E968  00                 	db	0
  3983  00E969  00                 	db	0
  3984  00E96A  00                 	db	0
  3985  00E96B  00                 	db	0
  3986  00E96C  0D                 	db	13
  3987  00E96D  00                 	db	0
  3988  00E96E  00                 	db	0
  3989  00E96F  00                 	db	0
  3990  00E970  00                 	db	0
  3991  00E971  00                 	db	0
  3992  00E972  00                 	db	0
  3993  00E973  00                 	db	0
  3994  00E974  00                 	db	0
  3995  00E975  00                 	db	0
  3996  00E976  00                 	db	0
  3997  00E977  00                 	db	0
  3998  00E978  00                 	db	0
  3999  00E979  00                 	db	0
  4000  00E97A  00                 	db	0
  4001  00E97B  00                 	db	0
  4002  00E97C  00                 	db	0
  4003  00E97D  00                 	db	0
  4004  00E97E  00                 	db	0
  4005  00E97F  00                 	db	0
  4006  00E980  00                 	db	0
  4007  00E981  7F                 	db	127
  4008  00E982  80                 	db	128
  4009  00E983  00                 	db	0
  4010  00E984  00                 	db	0
  4011  00E985  7F                 	db	127
  4012  00E986  C0                 	db	192
  4013  00E987  00                 	db	0
  4014  00E988  00                 	db	0
  4015  00E989  71                 	db	113
  4016  00E98A  E0                 	db	224
  4017  00E98B  00                 	db	0
  4018  00E98C  00                 	db	0
  4019  00E98D  70                 	db	112
  4020  00E98E  E0                 	db	224
  4021  00E98F  00                 	db	0
  4022  00E990  00                 	db	0
  4023  00E991  70                 	db	112
  4024  00E992  E0                 	db	224
  4025  00E993  00                 	db	0
  4026  00E994  00                 	db	0
  4027  00E995  71                 	db	113
  4028  00E996  C0                 	db	192
  4029  00E997  00                 	db	0
  4030  00E998  00                 	db	0
  4031  00E999  7F                 	db	127
  4032  00E99A  80                 	db	128
  4033  00E99B  00                 	db	0
  4034  00E99C  00                 	db	0
  4035  00E99D  7F                 	db	127
  4036  00E99E  E0                 	db	224
  4037  00E99F  00                 	db	0
  4038  00E9A0  00                 	db	0
  4039  00E9A1  70                 	db	112
  4040  00E9A2  F0                 	db	240
  4041  00E9A3  00                 	db	0
  4042  00E9A4  00                 	db	0
  4043  00E9A5  70                 	db	112
  4044  00E9A6  70                 	db	112
  4045  00E9A7  00                 	db	0
  4046  00E9A8  00                 	db	0
  4047  00E9A9  70                 	db	112
  4048  00E9AA  70                 	db	112
  4049  00E9AB  00                 	db	0
  4050  00E9AC  00                 	db	0
  4051  00E9AD  70                 	db	112
  4052  00E9AE  F0                 	db	240
  4053  00E9AF  00                 	db	0
  4054  00E9B0  00                 	db	0
  4055  00E9B1  7F                 	db	127
  4056  00E9B2  E0                 	db	224
  4057  00E9B3  00                 	db	0
  4058  00E9B4  00                 	db	0
  4059  00E9B5  7F                 	db	127
  4060  00E9B6  C0                 	db	192
  4061  00E9B7  00                 	db	0
  4062  00E9B8  00                 	db	0
  4063  00E9B9  00                 	db	0
  4064  00E9BA  00                 	db	0
  4065  00E9BB  00                 	db	0
  4066  00E9BC  00                 	db	0
  4067  00E9BD  00                 	db	0
  4068  00E9BE  00                 	db	0
  4069  00E9BF  00                 	db	0
  4070  00E9C0  00                 	db	0
  4071  00E9C1  00                 	db	0
  4072  00E9C2  00                 	db	0
  4073  00E9C3  00                 	db	0
  4074  00E9C4  00                 	db	0
  4075  00E9C5  00                 	db	0
  4076  00E9C6  00                 	db	0
  4077  00E9C7  00                 	db	0
  4078  00E9C8  00                 	db	0
  4079  00E9C9  0D                 	db	13
  4080  00E9CA  00                 	db	0
  4081  00E9CB  00                 	db	0
  4082  00E9CC  00                 	db	0
  4083  00E9CD  00                 	db	0
  4084  00E9CE  00                 	db	0
  4085  00E9CF  00                 	db	0
  4086  00E9D0  00                 	db	0
  4087  00E9D1  00                 	db	0
  4088  00E9D2  00                 	db	0
  4089  00E9D3  00                 	db	0
  4090  00E9D4  00                 	db	0
  4091  00E9D5  00                 	db	0
  4092  00E9D6  00                 	db	0
  4093  00E9D7  00                 	db	0
  4094  00E9D8  00                 	db	0
  4095  00E9D9  00                 	db	0
  4096  00E9DA  00                 	db	0
  4097  00E9DB  00                 	db	0
  4098  00E9DC  00                 	db	0
  4099  00E9DD  00                 	db	0
  4100  00E9DE  07                 	db	7
  4101  00E9DF  E0                 	db	224
  4102  00E9E0  00                 	db	0
  4103  00E9E1  00                 	db	0
  4104  00E9E2  1F                 	db	31
  4105  00E9E3  F0                 	db	240
  4106  00E9E4  00                 	db	0
  4107  00E9E5  00                 	db	0
  4108  00E9E6  3C                 	db	60
  4109  00E9E7  30                 	db	48
  4110  00E9E8  00                 	db	0
  4111  00E9E9  00                 	db	0
  4112  00E9EA  38                 	db	56
  4113  00E9EB  10                 	db	16
  4114  00E9EC  00                 	db	0
  4115  00E9ED  00                 	db	0
  4116  00E9EE  70                 	db	112
  4117  00E9EF  00                 	db	0
  4118  00E9F0  00                 	db	0
  4119  00E9F1  00                 	db	0
  4120  00E9F2  70                 	db	112
  4121  00E9F3  00                 	db	0
  4122  00E9F4  00                 	db	0
  4123  00E9F5  00                 	db	0
  4124  00E9F6  70                 	db	112
  4125  00E9F7  00                 	db	0
  4126  00E9F8  00                 	db	0
  4127  00E9F9  00                 	db	0
  4128  00E9FA  70                 	db	112
  4129  00E9FB  00                 	db	0
  4130  00E9FC  00                 	db	0
  4131  00E9FD  00                 	db	0
  4132  00E9FE  70                 	db	112
  4133  00E9FF  00                 	db	0
  4134  00EA00  00                 	db	0
  4135  00EA01  00                 	db	0
  4136  00EA02  70                 	db	112
  4137  00EA03  00                 	db	0
  4138  00EA04  00                 	db	0
  4139  00EA05  00                 	db	0
  4140  00EA06  38                 	db	56
  4141  00EA07  10                 	db	16
  4142  00EA08  00                 	db	0
  4143  00EA09  00                 	db	0
  4144  00EA0A  3C                 	db	60
  4145  00EA0B  30                 	db	48
  4146  00EA0C  00                 	db	0
  4147  00EA0D  00                 	db	0
  4148  00EA0E  1F                 	db	31
  4149  00EA0F  F0                 	db	240
  4150  00EA10  00                 	db	0
  4151  00EA11  00                 	db	0
  4152  00EA12  07                 	db	7
  4153  00EA13  E0                 	db	224
  4154  00EA14  00                 	db	0
  4155  00EA15  00                 	db	0
  4156  00EA16  00                 	db	0
  4157  00EA17  00                 	db	0
  4158  00EA18  00                 	db	0
  4159  00EA19  00                 	db	0
  4160  00EA1A  00                 	db	0
  4161  00EA1B  00                 	db	0
  4162  00EA1C  00                 	db	0
  4163  00EA1D  00                 	db	0
  4164  00EA1E  00                 	db	0
  4165  00EA1F  00                 	db	0
  4166  00EA20  00                 	db	0
  4167  00EA21  00                 	db	0
  4168  00EA22  00                 	db	0
  4169  00EA23  00                 	db	0
  4170  00EA24  00                 	db	0
  4171  00EA25  00                 	db	0
  4172  00EA26  0E                 	db	14
  4173  00EA27  00                 	db	0
  4174  00EA28  00                 	db	0
  4175  00EA29  00                 	db	0
  4176  00EA2A  00                 	db	0
  4177  00EA2B  00                 	db	0
  4178  00EA2C  00                 	db	0
  4179  00EA2D  00                 	db	0
  4180  00EA2E  00                 	db	0
  4181  00EA2F  00                 	db	0
  4182  00EA30  00                 	db	0
  4183  00EA31  00                 	db	0
  4184  00EA32  00                 	db	0
  4185  00EA33  00                 	db	0
  4186  00EA34  00                 	db	0
  4187  00EA35  00                 	db	0
  4188  00EA36  00                 	db	0
  4189  00EA37  00                 	db	0
  4190  00EA38  00                 	db	0
  4191  00EA39  00                 	db	0
  4192  00EA3A  00                 	db	0
  4193  00EA3B  7F                 	db	127
  4194  00EA3C  80                 	db	128
  4195  00EA3D  00                 	db	0
  4196  00EA3E  00                 	db	0
  4197  00EA3F  7F                 	db	127
  4198  00EA40  E0                 	db	224
  4199  00EA41  00                 	db	0
  4200  00EA42  00                 	db	0
  4201  00EA43  70                 	db	112
  4202  00EA44  F0                 	db	240
  4203  00EA45  00                 	db	0
  4204  00EA46  00                 	db	0
  4205  00EA47  70                 	db	112
  4206  00EA48  70                 	db	112
  4207  00EA49  00                 	db	0
  4208  00EA4A  00                 	db	0
  4209  00EA4B  70                 	db	112
  4210  00EA4C  38                 	db	56
  4211  00EA4D  00                 	db	0
  4212  00EA4E  00                 	db	0
  4213  00EA4F  70                 	db	112
  4214  00EA50  38                 	db	56
  4215  00EA51  00                 	db	0
  4216  00EA52  00                 	db	0
  4217  00EA53  70                 	db	112
  4218  00EA54  38                 	db	56
  4219  00EA55  00                 	db	0
  4220  00EA56  00                 	db	0
  4221  00EA57  70                 	db	112
  4222  00EA58  38                 	db	56
  4223  00EA59  00                 	db	0
  4224  00EA5A  00                 	db	0
  4225  00EA5B  70                 	db	112
  4226  00EA5C  38                 	db	56
  4227  00EA5D  00                 	db	0
  4228  00EA5E  00                 	db	0
  4229  00EA5F  70                 	db	112
  4230  00EA60  38                 	db	56
  4231  00EA61  00                 	db	0
  4232  00EA62  00                 	db	0
  4233  00EA63  70                 	db	112
  4234  00EA64  70                 	db	112
  4235  00EA65  00                 	db	0
  4236  00EA66  00                 	db	0
  4237  00EA67  70                 	db	112
  4238  00EA68  F0                 	db	240
  4239  00EA69  00                 	db	0
  4240  00EA6A  00                 	db	0
  4241  00EA6B  7F                 	db	127
  4242  00EA6C  E0                 	db	224
  4243  00EA6D  00                 	db	0
  4244  00EA6E  00                 	db	0
  4245  00EA6F  7F                 	db	127
  4246  00EA70  80                 	db	128
  4247  00EA71  00                 	db	0
  4248  00EA72  00                 	db	0
  4249  00EA73  00                 	db	0
  4250  00EA74  00                 	db	0
  4251  00EA75  00                 	db	0
  4252  00EA76  00                 	db	0
  4253  00EA77  00                 	db	0
  4254  00EA78  00                 	db	0
  4255  00EA79  00                 	db	0
  4256  00EA7A  00                 	db	0
  4257  00EA7B  00                 	db	0
  4258  00EA7C  00                 	db	0
  4259  00EA7D  00                 	db	0
  4260  00EA7E  00                 	db	0
  4261  00EA7F  00                 	db	0
  4262  00EA80  00                 	db	0
  4263  00EA81  00                 	db	0
  4264  00EA82  00                 	db	0
  4265  00EA83  0C                 	db	12
  4266  00EA84  00                 	db	0
  4267  00EA85  00                 	db	0
  4268  00EA86  00                 	db	0
  4269  00EA87  00                 	db	0
  4270  00EA88  00                 	db	0
  4271  00EA89  00                 	db	0
  4272  00EA8A  00                 	db	0
  4273  00EA8B  00                 	db	0
  4274  00EA8C  00                 	db	0
  4275  00EA8D  00                 	db	0
  4276  00EA8E  00                 	db	0
  4277  00EA8F  00                 	db	0
  4278  00EA90  00                 	db	0
  4279  00EA91  00                 	db	0
  4280  00EA92  00                 	db	0
  4281  00EA93  00                 	db	0
  4282  00EA94  00                 	db	0
  4283  00EA95  00                 	db	0
  4284  00EA96  00                 	db	0
  4285  00EA97  00                 	db	0
  4286  00EA98  7F                 	db	127
  4287  00EA99  E0                 	db	224
  4288  00EA9A  00                 	db	0
  4289  00EA9B  00                 	db	0
  4290  00EA9C  7F                 	db	127
  4291  00EA9D  E0                 	db	224
  4292  00EA9E  00                 	db	0
  4293  00EA9F  00                 	db	0
  4294  00EAA0  70                 	db	112
  4295  00EAA1  00                 	db	0
  4296  00EAA2  00                 	db	0
  4297  00EAA3  00                 	db	0
  4298  00EAA4  70                 	db	112
  4299  00EAA5  00                 	db	0
  4300  00EAA6  00                 	db	0
  4301  00EAA7  00                 	db	0
  4302  00EAA8  70                 	db	112
  4303  00EAA9  00                 	db	0
  4304  00EAAA  00                 	db	0
  4305  00EAAB  00                 	db	0
  4306  00EAAC  7F                 	db	127
  4307  00EAAD  E0                 	db	224
  4308  00EAAE  00                 	db	0
  4309  00EAAF  00                 	db	0
  4310  00EAB0  7F                 	db	127
  4311  00EAB1  E0                 	db	224
  4312  00EAB2  00                 	db	0
  4313  00EAB3  00                 	db	0
  4314  00EAB4  70                 	db	112
  4315  00EAB5  00                 	db	0
  4316  00EAB6  00                 	db	0
  4317  00EAB7  00                 	db	0
  4318  00EAB8  70                 	db	112
  4319  00EAB9  00                 	db	0
  4320  00EABA  00                 	db	0
  4321  00EABB  00                 	db	0
  4322  00EABC  70                 	db	112
  4323  00EABD  00                 	db	0
  4324  00EABE  00                 	db	0
  4325  00EABF  00                 	db	0
  4326  00EAC0  70                 	db	112
  4327  00EAC1  00                 	db	0
  4328  00EAC2  00                 	db	0
  4329  00EAC3  00                 	db	0
  4330  00EAC4  70                 	db	112
  4331  00EAC5  00                 	db	0
  4332  00EAC6  00                 	db	0
  4333  00EAC7  00                 	db	0
  4334  00EAC8  7F                 	db	127
  4335  00EAC9  E0                 	db	224
  4336  00EACA  00                 	db	0
  4337  00EACB  00                 	db	0
  4338  00EACC  7F                 	db	127
  4339  00EACD  E0                 	db	224
  4340  00EACE  00                 	db	0
  4341  00EACF  00                 	db	0
  4342  00EAD0  00                 	db	0
  4343  00EAD1  00                 	db	0
  4344  00EAD2  00                 	db	0
  4345  00EAD3  00                 	db	0
  4346  00EAD4  00                 	db	0
  4347  00EAD5  00                 	db	0
  4348  00EAD6  00                 	db	0
  4349  00EAD7  00                 	db	0
  4350  00EAD8  00                 	db	0
  4351  00EAD9  00                 	db	0
  4352  00EADA  00                 	db	0
  4353  00EADB  00                 	db	0
  4354  00EADC  00                 	db	0
  4355  00EADD  00                 	db	0
  4356  00EADE  00                 	db	0
  4357  00EADF  00                 	db	0
  4358  00EAE0  0B                 	db	11
  4359  00EAE1  00                 	db	0
  4360  00EAE2  00                 	db	0
  4361  00EAE3  00                 	db	0
  4362  00EAE4  00                 	db	0
  4363  00EAE5  00                 	db	0
  4364  00EAE6  00                 	db	0
  4365  00EAE7  00                 	db	0
  4366  00EAE8  00                 	db	0
  4367  00EAE9  00                 	db	0
  4368  00EAEA  00                 	db	0
  4369  00EAEB  00                 	db	0
  4370  00EAEC  00                 	db	0
  4371  00EAED  00                 	db	0
  4372  00EAEE  00                 	db	0
  4373  00EAEF  00                 	db	0
  4374  00EAF0  00                 	db	0
  4375  00EAF1  00                 	db	0
  4376  00EAF2  00                 	db	0
  4377  00EAF3  00                 	db	0
  4378  00EAF4  00                 	db	0
  4379  00EAF5  7F                 	db	127
  4380  00EAF6  E0                 	db	224
  4381  00EAF7  00                 	db	0
  4382  00EAF8  00                 	db	0
  4383  00EAF9  7F                 	db	127
  4384  00EAFA  E0                 	db	224
  4385  00EAFB  00                 	db	0
  4386  00EAFC  00                 	db	0
  4387  00EAFD  70                 	db	112
  4388  00EAFE  00                 	db	0
  4389  00EAFF  00                 	db	0
  4390  00EB00  00                 	db	0
  4391  00EB01  70                 	db	112
  4392  00EB02  00                 	db	0
  4393  00EB03  00                 	db	0
  4394  00EB04  00                 	db	0
  4395  00EB05  70                 	db	112
  4396  00EB06  00                 	db	0
  4397  00EB07  00                 	db	0
  4398  00EB08  00                 	db	0
  4399  00EB09  7F                 	db	127
  4400  00EB0A  E0                 	db	224
  4401  00EB0B  00                 	db	0
  4402  00EB0C  00                 	db	0
  4403  00EB0D  7F                 	db	127
  4404  00EB0E  E0                 	db	224
  4405  00EB0F  00                 	db	0
  4406  00EB10  00                 	db	0
  4407  00EB11  70                 	db	112
  4408  00EB12  00                 	db	0
  4409  00EB13  00                 	db	0
  4410  00EB14  00                 	db	0
  4411  00EB15  70                 	db	112
  4412  00EB16  00                 	db	0
  4413  00EB17  00                 	db	0
  4414  00EB18  00                 	db	0
  4415  00EB19  70                 	db	112
  4416  00EB1A  00                 	db	0
  4417  00EB1B  00                 	db	0
  4418  00EB1C  00                 	db	0
  4419  00EB1D  70                 	db	112
  4420  00EB1E  00                 	db	0
  4421  00EB1F  00                 	db	0
  4422  00EB20  00                 	db	0
  4423  00EB21  70                 	db	112
  4424  00EB22  00                 	db	0
  4425  00EB23  00                 	db	0
  4426  00EB24  00                 	db	0
  4427  00EB25  70                 	db	112
  4428  00EB26  00                 	db	0
  4429  00EB27  00                 	db	0
  4430  00EB28  00                 	db	0
  4431  00EB29  70                 	db	112
  4432  00EB2A  00                 	db	0
  4433  00EB2B  00                 	db	0
  4434  00EB2C  00                 	db	0
  4435  00EB2D  00                 	db	0
  4436  00EB2E  00                 	db	0
  4437  00EB2F  00                 	db	0
  4438  00EB30  00                 	db	0
  4439  00EB31  00                 	db	0
  4440  00EB32  00                 	db	0
  4441  00EB33  00                 	db	0
  4442  00EB34  00                 	db	0
  4443  00EB35  00                 	db	0
  4444  00EB36  00                 	db	0
  4445  00EB37  00                 	db	0
  4446  00EB38  00                 	db	0
  4447  00EB39  00                 	db	0
  4448  00EB3A  00                 	db	0
  4449  00EB3B  00                 	db	0
  4450  00EB3C  00                 	db	0
  4451  00EB3D  0E                 	db	14
  4452  00EB3E  00                 	db	0
  4453  00EB3F  00                 	db	0
  4454  00EB40  00                 	db	0
  4455  00EB41  00                 	db	0
  4456  00EB42  00                 	db	0
  4457  00EB43  00                 	db	0
  4458  00EB44  00                 	db	0
  4459  00EB45  00                 	db	0
  4460  00EB46  00                 	db	0
  4461  00EB47  00                 	db	0
  4462  00EB48  00                 	db	0
  4463  00EB49  00                 	db	0
  4464  00EB4A  00                 	db	0
  4465  00EB4B  00                 	db	0
  4466  00EB4C  00                 	db	0
  4467  00EB4D  00                 	db	0
  4468  00EB4E  00                 	db	0
  4469  00EB4F  00                 	db	0
  4470  00EB50  00                 	db	0
  4471  00EB51  00                 	db	0
  4472  00EB52  07                 	db	7
  4473  00EB53  E0                 	db	224
  4474  00EB54  00                 	db	0
  4475  00EB55  00                 	db	0
  4476  00EB56  1F                 	db	31
  4477  00EB57  F8                 	db	248
  4478  00EB58  00                 	db	0
  4479  00EB59  00                 	db	0
  4480  00EB5A  3C                 	db	60
  4481  00EB5B  38                 	db	56
  4482  00EB5C  00                 	db	0
  4483  00EB5D  00                 	db	0
  4484  00EB5E  38                 	db	56
  4485  00EB5F  08                 	db	8
  4486  00EB60  00                 	db	0
  4487  00EB61  00                 	db	0
  4488  00EB62  70                 	db	112
  4489  00EB63  00                 	db	0
  4490  00EB64  00                 	db	0
  4491  00EB65  00                 	db	0
  4492  00EB66  70                 	db	112
  4493  00EB67  00                 	db	0
  4494  00EB68  00                 	db	0
  4495  00EB69  00                 	db	0
  4496  00EB6A  71                 	db	113
  4497  00EB6B  F8                 	db	248
  4498  00EB6C  00                 	db	0
  4499  00EB6D  00                 	db	0
  4500  00EB6E  71                 	db	113
  4501  00EB6F  F8                 	db	248
  4502  00EB70  00                 	db	0
  4503  00EB71  00                 	db	0
  4504  00EB72  70                 	db	112
  4505  00EB73  38                 	db	56
  4506  00EB74  00                 	db	0
  4507  00EB75  00                 	db	0
  4508  00EB76  70                 	db	112
  4509  00EB77  38                 	db	56
  4510  00EB78  00                 	db	0
  4511  00EB79  00                 	db	0
  4512  00EB7A  38                 	db	56
  4513  00EB7B  38                 	db	56
  4514  00EB7C  00                 	db	0
  4515  00EB7D  00                 	db	0
  4516  00EB7E  3C                 	db	60
  4517  00EB7F  38                 	db	56
  4518  00EB80  00                 	db	0
  4519  00EB81  00                 	db	0
  4520  00EB82  1F                 	db	31
  4521  00EB83  F8                 	db	248
  4522  00EB84  00                 	db	0
  4523  00EB85  00                 	db	0
  4524  00EB86  07                 	db	7
  4525  00EB87  E0                 	db	224
  4526  00EB88  00                 	db	0
  4527  00EB89  00                 	db	0
  4528  00EB8A  00                 	db	0
  4529  00EB8B  00                 	db	0
  4530  00EB8C  00                 	db	0
  4531  00EB8D  00                 	db	0
  4532  00EB8E  00                 	db	0
  4533  00EB8F  00                 	db	0
  4534  00EB90  00                 	db	0
  4535  00EB91  00                 	db	0
  4536  00EB92  00                 	db	0
  4537  00EB93  00                 	db	0
  4538  00EB94  00                 	db	0
  4539  00EB95  00                 	db	0
  4540  00EB96  00                 	db	0
  4541  00EB97  00                 	db	0
  4542  00EB98  00                 	db	0
  4543  00EB99  00                 	db	0
  4544  00EB9A  0F                 	db	15
  4545  00EB9B  00                 	db	0
  4546  00EB9C  00                 	db	0
  4547  00EB9D  00                 	db	0
  4548  00EB9E  00                 	db	0
  4549  00EB9F  00                 	db	0
  4550  00EBA0  00                 	db	0
  4551  00EBA1  00                 	db	0
  4552  00EBA2  00                 	db	0
  4553  00EBA3  00                 	db	0
  4554  00EBA4  00                 	db	0
  4555  00EBA5  00                 	db	0
  4556  00EBA6  00                 	db	0
  4557  00EBA7  00                 	db	0
  4558  00EBA8  00                 	db	0
  4559  00EBA9  00                 	db	0
  4560  00EBAA  00                 	db	0
  4561  00EBAB  00                 	db	0
  4562  00EBAC  00                 	db	0
  4563  00EBAD  00                 	db	0
  4564  00EBAE  00                 	db	0
  4565  00EBAF  70                 	db	112
  4566  00EBB0  1C                 	db	28
  4567  00EBB1  00                 	db	0
  4568  00EBB2  00                 	db	0
  4569  00EBB3  70                 	db	112
  4570  00EBB4  1C                 	db	28
  4571  00EBB5  00                 	db	0
  4572  00EBB6  00                 	db	0
  4573  00EBB7  70                 	db	112
  4574  00EBB8  1C                 	db	28
  4575  00EBB9  00                 	db	0
  4576  00EBBA  00                 	db	0
  4577  00EBBB  70                 	db	112
  4578  00EBBC  1C                 	db	28
  4579  00EBBD  00                 	db	0
  4580  00EBBE  00                 	db	0
  4581  00EBBF  70                 	db	112
  4582  00EBC0  1C                 	db	28
  4583  00EBC1  00                 	db	0
  4584  00EBC2  00                 	db	0
  4585  00EBC3  7F                 	db	127
  4586  00EBC4  FC                 	db	252
  4587  00EBC5  00                 	db	0
  4588  00EBC6  00                 	db	0
  4589  00EBC7  7F                 	db	127
  4590  00EBC8  FC                 	db	252
  4591  00EBC9  00                 	db	0
  4592  00EBCA  00                 	db	0
  4593  00EBCB  70                 	db	112
  4594  00EBCC  1C                 	db	28
  4595  00EBCD  00                 	db	0
  4596  00EBCE  00                 	db	0
  4597  00EBCF  70                 	db	112
  4598  00EBD0  1C                 	db	28
  4599  00EBD1  00                 	db	0
  4600  00EBD2  00                 	db	0
  4601  00EBD3  70                 	db	112
  4602  00EBD4  1C                 	db	28
  4603  00EBD5  00                 	db	0
  4604  00EBD6  00                 	db	0
  4605  00EBD7  70                 	db	112
  4606  00EBD8  1C                 	db	28
  4607  00EBD9  00                 	db	0
  4608  00EBDA  00                 	db	0
  4609  00EBDB  70                 	db	112
  4610  00EBDC  1C                 	db	28
  4611  00EBDD  00                 	db	0
  4612  00EBDE  00                 	db	0
  4613  00EBDF  70                 	db	112
  4614  00EBE0  1C                 	db	28
  4615  00EBE1  00                 	db	0
  4616  00EBE2  00                 	db	0
  4617  00EBE3  70                 	db	112
  4618  00EBE4  1C                 	db	28
  4619  00EBE5  00                 	db	0
  4620  00EBE6  00                 	db	0
  4621  00EBE7  00                 	db	0
  4622  00EBE8  00                 	db	0
  4623  00EBE9  00                 	db	0
  4624  00EBEA  00                 	db	0
  4625  00EBEB  00                 	db	0
  4626  00EBEC  00                 	db	0
  4627  00EBED  00                 	db	0
  4628  00EBEE  00                 	db	0
  4629  00EBEF  00                 	db	0
  4630  00EBF0  00                 	db	0
  4631  00EBF1  00                 	db	0
  4632  00EBF2  00                 	db	0
  4633  00EBF3  00                 	db	0
  4634  00EBF4  00                 	db	0
  4635  00EBF5  00                 	db	0
  4636  00EBF6  00                 	db	0
  4637  00EBF7  09                 	db	9
  4638  00EBF8  00                 	db	0
  4639  00EBF9  00                 	db	0
  4640  00EBFA  00                 	db	0
  4641  00EBFB  00                 	db	0
  4642  00EBFC  00                 	db	0
  4643  00EBFD  00                 	db	0
  4644  00EBFE  00                 	db	0
  4645  00EBFF  00                 	db	0
  4646  00EC00  00                 	db	0
  4647  00EC01  00                 	db	0
  4648  00EC02  00                 	db	0
  4649  00EC03  00                 	db	0
  4650  00EC04  00                 	db	0
  4651  00EC05  00                 	db	0
  4652  00EC06  00                 	db	0
  4653  00EC07  00                 	db	0
  4654  00EC08  00                 	db	0
  4655  00EC09  00                 	db	0
  4656  00EC0A  00                 	db	0
  4657  00EC0B  00                 	db	0
  4658  00EC0C  7F                 	db	127
  4659  00EC0D  00                 	db	0
  4660  00EC0E  00                 	db	0
  4661  00EC0F  00                 	db	0
  4662  00EC10  7F                 	db	127
  4663  00EC11  00                 	db	0
  4664  00EC12  00                 	db	0
  4665  00EC13  00                 	db	0
  4666  00EC14  1C                 	db	28
  4667  00EC15  00                 	db	0
  4668  00EC16  00                 	db	0
  4669  00EC17  00                 	db	0
  4670  00EC18  1C                 	db	28
  4671  00EC19  00                 	db	0
  4672  00EC1A  00                 	db	0
  4673  00EC1B  00                 	db	0
  4674  00EC1C  1C                 	db	28
  4675  00EC1D  00                 	db	0
  4676  00EC1E  00                 	db	0
  4677  00EC1F  00                 	db	0
  4678  00EC20  1C                 	db	28
  4679  00EC21  00                 	db	0
  4680  00EC22  00                 	db	0
  4681  00EC23  00                 	db	0
  4682  00EC24  1C                 	db	28
  4683  00EC25  00                 	db	0
  4684  00EC26  00                 	db	0
  4685  00EC27  00                 	db	0
  4686  00EC28  1C                 	db	28
  4687  00EC29  00                 	db	0
  4688  00EC2A  00                 	db	0
  4689  00EC2B  00                 	db	0
  4690  00EC2C  1C                 	db	28
  4691  00EC2D  00                 	db	0
  4692  00EC2E  00                 	db	0
  4693  00EC2F  00                 	db	0
  4694  00EC30  1C                 	db	28
  4695  00EC31  00                 	db	0
  4696  00EC32  00                 	db	0
  4697  00EC33  00                 	db	0
  4698  00EC34  1C                 	db	28
  4699  00EC35  00                 	db	0
  4700  00EC36  00                 	db	0
  4701  00EC37  00                 	db	0
  4702  00EC38  1C                 	db	28
  4703  00EC39  00                 	db	0
  4704  00EC3A  00                 	db	0
  4705  00EC3B  00                 	db	0
  4706  00EC3C  7F                 	db	127
  4707  00EC3D  00                 	db	0
  4708  00EC3E  00                 	db	0
  4709  00EC3F  00                 	db	0
  4710  00EC40  7F                 	db	127
  4711  00EC41  00                 	db	0
  4712  00EC42  00                 	db	0
  4713  00EC43  00                 	db	0
  4714  00EC44  00                 	db	0
  4715  00EC45  00                 	db	0
  4716  00EC46  00                 	db	0
  4717  00EC47  00                 	db	0
  4718  00EC48  00                 	db	0
  4719  00EC49  00                 	db	0
  4720  00EC4A  00                 	db	0
  4721  00EC4B  00                 	db	0
  4722  00EC4C  00                 	db	0
  4723  00EC4D  00                 	db	0
  4724  00EC4E  00                 	db	0
  4725  00EC4F  00                 	db	0
  4726  00EC50  00                 	db	0
  4727  00EC51  00                 	db	0
  4728  00EC52  00                 	db	0
  4729  00EC53  00                 	db	0
  4730  00EC54  0A                 	db	10
  4731  00EC55  00                 	db	0
  4732  00EC56  00                 	db	0
  4733  00EC57  00                 	db	0
  4734  00EC58  00                 	db	0
  4735  00EC59  00                 	db	0
  4736  00EC5A  00                 	db	0
  4737  00EC5B  00                 	db	0
  4738  00EC5C  00                 	db	0
  4739  00EC5D  00                 	db	0
  4740  00EC5E  00                 	db	0
  4741  00EC5F  00                 	db	0
  4742  00EC60  00                 	db	0
  4743  00EC61  00                 	db	0
  4744  00EC62  00                 	db	0
  4745  00EC63  00                 	db	0
  4746  00EC64  00                 	db	0
  4747  00EC65  00                 	db	0
  4748  00EC66  00                 	db	0
  4749  00EC67  00                 	db	0
  4750  00EC68  00                 	db	0
  4751  00EC69  3F                 	db	63
  4752  00EC6A  80                 	db	128
  4753  00EC6B  00                 	db	0
  4754  00EC6C  00                 	db	0
  4755  00EC6D  3F                 	db	63
  4756  00EC6E  80                 	db	128
  4757  00EC6F  00                 	db	0
  4758  00EC70  00                 	db	0
  4759  00EC71  03                 	db	3
  4760  00EC72  80                 	db	128
  4761  00EC73  00                 	db	0
  4762  00EC74  00                 	db	0
  4763  00EC75  03                 	db	3
  4764  00EC76  80                 	db	128
  4765  00EC77  00                 	db	0
  4766  00EC78  00                 	db	0
  4767  00EC79  03                 	db	3
  4768  00EC7A  80                 	db	128
  4769  00EC7B  00                 	db	0
  4770  00EC7C  00                 	db	0
  4771  00EC7D  03                 	db	3
  4772  00EC7E  80                 	db	128
  4773  00EC7F  00                 	db	0
  4774  00EC80  00                 	db	0
  4775  00EC81  03                 	db	3
  4776  00EC82  80                 	db	128
  4777  00EC83  00                 	db	0
  4778  00EC84  00                 	db	0
  4779  00EC85  03                 	db	3
  4780  00EC86  80                 	db	128
  4781  00EC87  00                 	db	0
  4782  00EC88  00                 	db	0
  4783  00EC89  03                 	db	3
  4784  00EC8A  80                 	db	128
  4785  00EC8B  00                 	db	0
  4786  00EC8C  00                 	db	0
  4787  00EC8D  03                 	db	3
  4788  00EC8E  80                 	db	128
  4789  00EC8F  00                 	db	0
  4790  00EC90  00                 	db	0
  4791  00EC91  03                 	db	3
  4792  00EC92  80                 	db	128
  4793  00EC93  00                 	db	0
  4794  00EC94  00                 	db	0
  4795  00EC95  07                 	db	7
  4796  00EC96  80                 	db	128
  4797  00EC97  00                 	db	0
  4798  00EC98  00                 	db	0
  4799  00EC99  FF                 	db	255
  4800  00EC9A  00                 	db	0
  4801  00EC9B  00                 	db	0
  4802  00EC9C  00                 	db	0
  4803  00EC9D  FC                 	db	252
  4804  00EC9E  00                 	db	0
  4805  00EC9F  00                 	db	0
  4806  00ECA0  00                 	db	0
  4807  00ECA1  00                 	db	0
  4808  00ECA2  00                 	db	0
  4809  00ECA3  00                 	db	0
  4810  00ECA4  00                 	db	0
  4811  00ECA5  00                 	db	0
  4812  00ECA6  00                 	db	0
  4813  00ECA7  00                 	db	0
  4814  00ECA8  00                 	db	0
  4815  00ECA9  00                 	db	0
  4816  00ECAA  00                 	db	0
  4817  00ECAB  00                 	db	0
  4818  00ECAC  00                 	db	0
  4819  00ECAD  00                 	db	0
  4820  00ECAE  00                 	db	0
  4821  00ECAF  00                 	db	0
  4822  00ECB0  00                 	db	0
  4823  00ECB1  0D                 	db	13
  4824  00ECB2  00                 	db	0
  4825  00ECB3  00                 	db	0
  4826  00ECB4  00                 	db	0
  4827  00ECB5  00                 	db	0
  4828  00ECB6  00                 	db	0
  4829  00ECB7  00                 	db	0
  4830  00ECB8  00                 	db	0
  4831  00ECB9  00                 	db	0
  4832  00ECBA  00                 	db	0
  4833  00ECBB  00                 	db	0
  4834  00ECBC  00                 	db	0
  4835  00ECBD  00                 	db	0
  4836  00ECBE  00                 	db	0
  4837  00ECBF  00                 	db	0
  4838  00ECC0  00                 	db	0
  4839  00ECC1  00                 	db	0
  4840  00ECC2  00                 	db	0
  4841  00ECC3  00                 	db	0
  4842  00ECC4  00                 	db	0
  4843  00ECC5  00                 	db	0
  4844  00ECC6  70                 	db	112
  4845  00ECC7  78                 	db	120
  4846  00ECC8  00                 	db	0
  4847  00ECC9  00                 	db	0
  4848  00ECCA  70                 	db	112
  4849  00ECCB  F0                 	db	240
  4850  00ECCC  00                 	db	0
  4851  00ECCD  00                 	db	0
  4852  00ECCE  71                 	db	113
  4853  00ECCF  E0                 	db	224
  4854  00ECD0  00                 	db	0
  4855  00ECD1  00                 	db	0
  4856  00ECD2  73                 	db	115
  4857  00ECD3  C0                 	db	192
  4858  00ECD4  00                 	db	0
  4859  00ECD5  00                 	db	0
  4860  00ECD6  73                 	db	115
  4861  00ECD7  80                 	db	128
  4862  00ECD8  00                 	db	0
  4863  00ECD9  00                 	db	0
  4864  00ECDA  77                 	db	119
  4865  00ECDB  80                 	db	128
  4866  00ECDC  00                 	db	0
  4867  00ECDD  00                 	db	0
  4868  00ECDE  7F                 	db	127
  4869  00ECDF  00                 	db	0
  4870  00ECE0  00                 	db	0
  4871  00ECE1  00                 	db	0
  4872  00ECE2  7F                 	db	127
  4873  00ECE3  00                 	db	0
  4874  00ECE4  00                 	db	0
  4875  00ECE5  00                 	db	0
  4876  00ECE6  7B                 	db	123
  4877  00ECE7  80                 	db	128
  4878  00ECE8  00                 	db	0
  4879  00ECE9  00                 	db	0
  4880  00ECEA  73                 	db	115
  4881  00ECEB  C0                 	db	192
  4882  00ECEC  00                 	db	0
  4883  00ECED  00                 	db	0
  4884  00ECEE  71                 	db	113
  4885  00ECEF  E0                 	db	224
  4886  00ECF0  00                 	db	0
  4887  00ECF1  00                 	db	0
  4888  00ECF2  70                 	db	112
  4889  00ECF3  E0                 	db	224
  4890  00ECF4  00                 	db	0
  4891  00ECF5  00                 	db	0
  4892  00ECF6  70                 	db	112
  4893  00ECF7  F0                 	db	240
  4894  00ECF8  00                 	db	0
  4895  00ECF9  00                 	db	0
  4896  00ECFA  70                 	db	112
  4897  00ECFB  78                 	db	120
  4898  00ECFC  00                 	db	0
  4899  00ECFD  00                 	db	0
  4900  00ECFE  00                 	db	0
  4901  00ECFF  00                 	db	0
  4902  00ED00  00                 	db	0
  4903  00ED01  00                 	db	0
  4904  00ED02  00                 	db	0
  4905  00ED03  00                 	db	0
  4906  00ED04  00                 	db	0
  4907  00ED05  00                 	db	0
  4908  00ED06  00                 	db	0
  4909  00ED07  00                 	db	0
  4910  00ED08  00                 	db	0
  4911  00ED09  00                 	db	0
  4912  00ED0A  00                 	db	0
  4913  00ED0B  00                 	db	0
  4914  00ED0C  00                 	db	0
  4915  00ED0D  00                 	db	0
  4916  00ED0E  0B                 	db	11
  4917  00ED0F  00                 	db	0
  4918  00ED10  00                 	db	0
  4919  00ED11  00                 	db	0
  4920  00ED12  00                 	db	0
  4921  00ED13  00                 	db	0
  4922  00ED14  00                 	db	0
  4923  00ED15  00                 	db	0
  4924  00ED16  00                 	db	0
  4925  00ED17  00                 	db	0
  4926  00ED18  00                 	db	0
  4927  00ED19  00                 	db	0
  4928  00ED1A  00                 	db	0
  4929  00ED1B  00                 	db	0
  4930  00ED1C  00                 	db	0
  4931  00ED1D  00                 	db	0
  4932  00ED1E  00                 	db	0
  4933  00ED1F  00                 	db	0
  4934  00ED20  00                 	db	0
  4935  00ED21  00                 	db	0
  4936  00ED22  00                 	db	0
  4937  00ED23  70                 	db	112
  4938  00ED24  00                 	db	0
  4939  00ED25  00                 	db	0
  4940  00ED26  00                 	db	0
  4941  00ED27  70                 	db	112
  4942  00ED28  00                 	db	0
  4943  00ED29  00                 	db	0
  4944  00ED2A  00                 	db	0
  4945  00ED2B  70                 	db	112
  4946  00ED2C  00                 	db	0
  4947  00ED2D  00                 	db	0
  4948  00ED2E  00                 	db	0
  4949  00ED2F  70                 	db	112
  4950  00ED30  00                 	db	0
  4951  00ED31  00                 	db	0
  4952  00ED32  00                 	db	0
  4953  00ED33  70                 	db	112
  4954  00ED34  00                 	db	0
  4955  00ED35  00                 	db	0
  4956  00ED36  00                 	db	0
  4957  00ED37  70                 	db	112
  4958  00ED38  00                 	db	0
  4959  00ED39  00                 	db	0
  4960  00ED3A  00                 	db	0
  4961  00ED3B  70                 	db	112
  4962  00ED3C  00                 	db	0
  4963  00ED3D  00                 	db	0
  4964  00ED3E  00                 	db	0
  4965  00ED3F  70                 	db	112
  4966  00ED40  00                 	db	0
  4967  00ED41  00                 	db	0
  4968  00ED42  00                 	db	0
  4969  00ED43  70                 	db	112
  4970  00ED44  00                 	db	0
  4971  00ED45  00                 	db	0
  4972  00ED46  00                 	db	0
  4973  00ED47  70                 	db	112
  4974  00ED48  00                 	db	0
  4975  00ED49  00                 	db	0
  4976  00ED4A  00                 	db	0
  4977  00ED4B  70                 	db	112
  4978  00ED4C  00                 	db	0
  4979  00ED4D  00                 	db	0
  4980  00ED4E  00                 	db	0
  4981  00ED4F  70                 	db	112
  4982  00ED50  00                 	db	0
  4983  00ED51  00                 	db	0
  4984  00ED52  00                 	db	0
  4985  00ED53  7F                 	db	127
  4986  00ED54  E0                 	db	224
  4987  00ED55  00                 	db	0
  4988  00ED56  00                 	db	0
  4989  00ED57  7F                 	db	127
  4990  00ED58  E0                 	db	224
  4991  00ED59  00                 	db	0
  4992  00ED5A  00                 	db	0
  4993  00ED5B  00                 	db	0
  4994  00ED5C  00                 	db	0
  4995  00ED5D  00                 	db	0
  4996  00ED5E  00                 	db	0
  4997  00ED5F  00                 	db	0
  4998  00ED60  00                 	db	0
  4999  00ED61  00                 	db	0
  5000  00ED62  00                 	db	0
  5001  00ED63  00                 	db	0
  5002  00ED64  00                 	db	0
  5003  00ED65  00                 	db	0
  5004  00ED66  00                 	db	0
  5005  00ED67  00                 	db	0
  5006  00ED68  00                 	db	0
  5007  00ED69  00                 	db	0
  5008  00ED6A  00                 	db	0
  5009  00ED6B  11                 	db	17
  5010  00ED6C  00                 	db	0
  5011  00ED6D  00                 	db	0
  5012  00ED6E  00                 	db	0
  5013  00ED6F  00                 	db	0
  5014  00ED70  00                 	db	0
  5015  00ED71  00                 	db	0
  5016  00ED72  00                 	db	0
  5017  00ED73  00                 	db	0
  5018  00ED74  00                 	db	0
  5019  00ED75  00                 	db	0
  5020  00ED76  00                 	db	0
  5021  00ED77  00                 	db	0
  5022  00ED78  00                 	db	0
  5023  00ED79  00                 	db	0
  5024  00ED7A  00                 	db	0
  5025  00ED7B  00                 	db	0
  5026  00ED7C  00                 	db	0
  5027  00ED7D  00                 	db	0
  5028  00ED7E  00                 	db	0
  5029  00ED7F  00                 	db	0
  5030  00ED80  78                 	db	120
  5031  00ED81  0F                 	db	15
  5032  00ED82  00                 	db	0
  5033  00ED83  00                 	db	0
  5034  00ED84  7C                 	db	124
  5035  00ED85  0F                 	db	15
  5036  00ED86  00                 	db	0
  5037  00ED87  00                 	db	0
  5038  00ED88  7C                 	db	124
  5039  00ED89  1F                 	db	31
  5040  00ED8A  00                 	db	0
  5041  00ED8B  00                 	db	0
  5042  00ED8C  7E                 	db	126
  5043  00ED8D  1F                 	db	31
  5044  00ED8E  00                 	db	0
  5045  00ED8F  00                 	db	0
  5046  00ED90  7E                 	db	126
  5047  00ED91  3F                 	db	63
  5048  00ED92  00                 	db	0
  5049  00ED93  00                 	db	0
  5050  00ED94  76                 	db	118
  5051  00ED95  37                 	db	55
  5052  00ED96  00                 	db	0
  5053  00ED97  00                 	db	0
  5054  00ED98  77                 	db	119
  5055  00ED99  77                 	db	119
  5056  00ED9A  00                 	db	0
  5057  00ED9B  00                 	db	0
  5058  00ED9C  73                 	db	115
  5059  00ED9D  67                 	db	103
  5060  00ED9E  00                 	db	0
  5061  00ED9F  00                 	db	0
  5062  00EDA0  73                 	db	115
  5063  00EDA1  E7                 	db	231
  5064  00EDA2  00                 	db	0
  5065  00EDA3  00                 	db	0
  5066  00EDA4  73                 	db	115
  5067  00EDA5  E7                 	db	231
  5068  00EDA6  00                 	db	0
  5069  00EDA7  00                 	db	0
  5070  00EDA8  71                 	db	113
  5071  00EDA9  C7                 	db	199
  5072  00EDAA  00                 	db	0
  5073  00EDAB  00                 	db	0
  5074  00EDAC  70                 	db	112
  5075  00EDAD  07                 	db	7
  5076  00EDAE  00                 	db	0
  5077  00EDAF  00                 	db	0
  5078  00EDB0  70                 	db	112
  5079  00EDB1  07                 	db	7
  5080  00EDB2  00                 	db	0
  5081  00EDB3  00                 	db	0
  5082  00EDB4  70                 	db	112
  5083  00EDB5  07                 	db	7
  5084  00EDB6  00                 	db	0
  5085  00EDB7  00                 	db	0
  5086  00EDB8  00                 	db	0
  5087  00EDB9  00                 	db	0
  5088  00EDBA  00                 	db	0
  5089  00EDBB  00                 	db	0
  5090  00EDBC  00                 	db	0
  5091  00EDBD  00                 	db	0
  5092  00EDBE  00                 	db	0
  5093  00EDBF  00                 	db	0
  5094  00EDC0  00                 	db	0
  5095  00EDC1  00                 	db	0
  5096  00EDC2  00                 	db	0
  5097  00EDC3  00                 	db	0
  5098  00EDC4  00                 	db	0
  5099  00EDC5  00                 	db	0
  5100  00EDC6  00                 	db	0
  5101  00EDC7  00                 	db	0
  5102  00EDC8  0F                 	db	15
  5103  00EDC9  00                 	db	0
  5104  00EDCA  00                 	db	0
  5105  00EDCB  00                 	db	0
  5106  00EDCC  00                 	db	0
  5107  00EDCD  00                 	db	0
  5108  00EDCE  00                 	db	0
  5109  00EDCF  00                 	db	0
  5110  00EDD0  00                 	db	0
  5111  00EDD1  00                 	db	0
  5112  00EDD2  00                 	db	0
  5113  00EDD3  00                 	db	0
  5114  00EDD4  00                 	db	0
  5115  00EDD5  00                 	db	0
  5116  00EDD6  00                 	db	0
  5117  00EDD7  00                 	db	0
  5118  00EDD8  00                 	db	0
  5119  00EDD9  00                 	db	0
  5120  00EDDA  00                 	db	0
  5121  00EDDB  00                 	db	0
  5122  00EDDC  00                 	db	0
  5123  00EDDD  7C                 	db	124
  5124  00EDDE  1C                 	db	28
  5125  00EDDF  00                 	db	0
  5126  00EDE0  00                 	db	0
  5127  00EDE1  7C                 	db	124
  5128  00EDE2  1C                 	db	28
  5129  00EDE3  00                 	db	0
  5130  00EDE4  00                 	db	0
  5131  00EDE5  7E                 	db	126
  5132  00EDE6  1C                 	db	28
  5133  00EDE7  00                 	db	0
  5134  00EDE8  00                 	db	0
  5135  00EDE9  7F                 	db	127
  5136  00EDEA  1C                 	db	28
  5137  00EDEB  00                 	db	0
  5138  00EDEC  00                 	db	0
  5139  00EDED  77                 	db	119
  5140  00EDEE  1C                 	db	28
  5141  00EDEF  00                 	db	0
  5142  00EDF0  00                 	db	0
  5143  00EDF1  77                 	db	119
  5144  00EDF2  9C                 	db	156
  5145  00EDF3  00                 	db	0
  5146  00EDF4  00                 	db	0
  5147  00EDF5  73                 	db	115
  5148  00EDF6  9C                 	db	156
  5149  00EDF7  00                 	db	0
  5150  00EDF8  00                 	db	0
  5151  00EDF9  71                 	db	113
  5152  00EDFA  DC                 	db	220
  5153  00EDFB  00                 	db	0
  5154  00EDFC  00                 	db	0
  5155  00EDFD  71                 	db	113
  5156  00EDFE  FC                 	db	252
  5157  00EDFF  00                 	db	0
  5158  00EE00  00                 	db	0
  5159  00EE01  70                 	db	112
  5160  00EE02  FC                 	db	252
  5161  00EE03  00                 	db	0
  5162  00EE04  00                 	db	0
  5163  00EE05  70                 	db	112
  5164  00EE06  7C                 	db	124
  5165  00EE07  00                 	db	0
  5166  00EE08  00                 	db	0
  5167  00EE09  70                 	db	112
  5168  00EE0A  7C                 	db	124
  5169  00EE0B  00                 	db	0
  5170  00EE0C  00                 	db	0
  5171  00EE0D  70                 	db	112
  5172  00EE0E  3C                 	db	60
  5173  00EE0F  00                 	db	0
  5174  00EE10  00                 	db	0
  5175  00EE11  70                 	db	112
  5176  00EE12  3C                 	db	60
  5177  00EE13  00                 	db	0
  5178  00EE14  00                 	db	0
  5179  00EE15  00                 	db	0
  5180  00EE16  00                 	db	0
  5181  00EE17  00                 	db	0
  5182  00EE18  00                 	db	0
  5183  00EE19  00                 	db	0
  5184  00EE1A  00                 	db	0
  5185  00EE1B  00                 	db	0
  5186  00EE1C  00                 	db	0
  5187  00EE1D  00                 	db	0
  5188  00EE1E  00                 	db	0
  5189  00EE1F  00                 	db	0
  5190  00EE20  00                 	db	0
  5191  00EE21  00                 	db	0
  5192  00EE22  00                 	db	0
  5193  00EE23  00                 	db	0
  5194  00EE24  00                 	db	0
  5195  00EE25  0F                 	db	15
  5196  00EE26  00                 	db	0
  5197  00EE27  00                 	db	0
  5198  00EE28  00                 	db	0
  5199  00EE29  00                 	db	0
  5200  00EE2A  00                 	db	0
  5201  00EE2B  00                 	db	0
  5202  00EE2C  00                 	db	0
  5203  00EE2D  00                 	db	0
  5204  00EE2E  00                 	db	0
  5205  00EE2F  00                 	db	0
  5206  00EE30  00                 	db	0
  5207  00EE31  00                 	db	0
  5208  00EE32  00                 	db	0
  5209  00EE33  00                 	db	0
  5210  00EE34  00                 	db	0
  5211  00EE35  00                 	db	0
  5212  00EE36  00                 	db	0
  5213  00EE37  00                 	db	0
  5214  00EE38  00                 	db	0
  5215  00EE39  00                 	db	0
  5216  00EE3A  07                 	db	7
  5217  00EE3B  C0                 	db	192
  5218  00EE3C  00                 	db	0
  5219  00EE3D  00                 	db	0
  5220  00EE3E  1F                 	db	31
  5221  00EE3F  F0                 	db	240
  5222  00EE40  00                 	db	0
  5223  00EE41  00                 	db	0
  5224  00EE42  3C                 	db	60
  5225  00EE43  78                 	db	120
  5226  00EE44  00                 	db	0
  5227  00EE45  00                 	db	0
  5228  00EE46  38                 	db	56
  5229  00EE47  38                 	db	56
  5230  00EE48  00                 	db	0
  5231  00EE49  00                 	db	0
  5232  00EE4A  70                 	db	112
  5233  00EE4B  1C                 	db	28
  5234  00EE4C  00                 	db	0
  5235  00EE4D  00                 	db	0
  5236  00EE4E  70                 	db	112
  5237  00EE4F  1C                 	db	28
  5238  00EE50  00                 	db	0
  5239  00EE51  00                 	db	0
  5240  00EE52  70                 	db	112
  5241  00EE53  1C                 	db	28
  5242  00EE54  00                 	db	0
  5243  00EE55  00                 	db	0
  5244  00EE56  70                 	db	112
  5245  00EE57  1C                 	db	28
  5246  00EE58  00                 	db	0
  5247  00EE59  00                 	db	0
  5248  00EE5A  70                 	db	112
  5249  00EE5B  1C                 	db	28
  5250  00EE5C  00                 	db	0
  5251  00EE5D  00                 	db	0
  5252  00EE5E  70                 	db	112
  5253  00EE5F  1C                 	db	28
  5254  00EE60  00                 	db	0
  5255  00EE61  00                 	db	0
  5256  00EE62  38                 	db	56
  5257  00EE63  38                 	db	56
  5258  00EE64  00                 	db	0
  5259  00EE65  00                 	db	0
  5260  00EE66  3C                 	db	60
  5261  00EE67  78                 	db	120
  5262  00EE68  00                 	db	0
  5263  00EE69  00                 	db	0
  5264  00EE6A  1F                 	db	31
  5265  00EE6B  F0                 	db	240
  5266  00EE6C  00                 	db	0
  5267  00EE6D  00                 	db	0
  5268  00EE6E  07                 	db	7
  5269  00EE6F  C0                 	db	192
  5270  00EE70  00                 	db	0
  5271  00EE71  00                 	db	0
  5272  00EE72  00                 	db	0
  5273  00EE73  00                 	db	0
  5274  00EE74  00                 	db	0
  5275  00EE75  00                 	db	0
  5276  00EE76  00                 	db	0
  5277  00EE77  00                 	db	0
  5278  00EE78  00                 	db	0
  5279  00EE79  00                 	db	0
  5280  00EE7A  00                 	db	0
  5281  00EE7B  00                 	db	0
  5282  00EE7C  00                 	db	0
  5283  00EE7D  00                 	db	0
  5284  00EE7E  00                 	db	0
  5285  00EE7F  00                 	db	0
  5286  00EE80  00                 	db	0
  5287  00EE81  00                 	db	0
  5288  00EE82  0C                 	db	12
  5289  00EE83  00                 	db	0
  5290  00EE84  00                 	db	0
  5291  00EE85  00                 	db	0
  5292  00EE86  00                 	db	0
  5293  00EE87  00                 	db	0
  5294  00EE88  00                 	db	0
  5295  00EE89  00                 	db	0
  5296  00EE8A  00                 	db	0
  5297  00EE8B  00                 	db	0
  5298  00EE8C  00                 	db	0
  5299  00EE8D  00                 	db	0
  5300  00EE8E  00                 	db	0
  5301  00EE8F  00                 	db	0
  5302  00EE90  00                 	db	0
  5303  00EE91  00                 	db	0
  5304  00EE92  00                 	db	0
  5305  00EE93  00                 	db	0
  5306  00EE94  00                 	db	0
  5307  00EE95  00                 	db	0
  5308  00EE96  00                 	db	0
  5309  00EE97  7F                 	db	127
  5310  00EE98  C0                 	db	192
  5311  00EE99  00                 	db	0
  5312  00EE9A  00                 	db	0
  5313  00EE9B  7F                 	db	127
  5314  00EE9C  E0                 	db	224
  5315  00EE9D  00                 	db	0
  5316  00EE9E  00                 	db	0
  5317  00EE9F  70                 	db	112
  5318  00EEA0  F0                 	db	240
  5319  00EEA1  00                 	db	0
  5320  00EEA2  00                 	db	0
  5321  00EEA3  70                 	db	112
  5322  00EEA4  70                 	db	112
  5323  00EEA5  00                 	db	0
  5324  00EEA6  00                 	db	0
  5325  00EEA7  70                 	db	112
  5326  00EEA8  70                 	db	112
  5327  00EEA9  00                 	db	0
  5328  00EEAA  00                 	db	0
  5329  00EEAB  70                 	db	112
  5330  00EEAC  70                 	db	112
  5331  00EEAD  00                 	db	0
  5332  00EEAE  00                 	db	0
  5333  00EEAF  70                 	db	112
  5334  00EEB0  E0                 	db	224
  5335  00EEB1  00                 	db	0
  5336  00EEB2  00                 	db	0
  5337  00EEB3  7F                 	db	127
  5338  00EEB4  E0                 	db	224
  5339  00EEB5  00                 	db	0
  5340  00EEB6  00                 	db	0
  5341  00EEB7  7F                 	db	127
  5342  00EEB8  80                 	db	128
  5343  00EEB9  00                 	db	0
  5344  00EEBA  00                 	db	0
  5345  00EEBB  70                 	db	112
  5346  00EEBC  00                 	db	0
  5347  00EEBD  00                 	db	0
  5348  00EEBE  00                 	db	0
  5349  00EEBF  70                 	db	112
  5350  00EEC0  00                 	db	0
  5351  00EEC1  00                 	db	0
  5352  00EEC2  00                 	db	0
  5353  00EEC3  70                 	db	112
  5354  00EEC4  00                 	db	0
  5355  00EEC5  00                 	db	0
  5356  00EEC6  00                 	db	0
  5357  00EEC7  70                 	db	112
  5358  00EEC8  00                 	db	0
  5359  00EEC9  00                 	db	0
  5360  00EECA  00                 	db	0
  5361  00EECB  70                 	db	112
  5362  00EECC  00                 	db	0
  5363  00EECD  00                 	db	0
  5364  00EECE  00                 	db	0
  5365  00EECF  00                 	db	0
  5366  00EED0  00                 	db	0
  5367  00EED1  00                 	db	0
  5368  00EED2  00                 	db	0
  5369  00EED3  00                 	db	0
  5370  00EED4  00                 	db	0
  5371  00EED5  00                 	db	0
  5372  00EED6  00                 	db	0
  5373  00EED7  00                 	db	0
  5374  00EED8  00                 	db	0
  5375  00EED9  00                 	db	0
  5376  00EEDA  00                 	db	0
  5377  00EEDB  00                 	db	0
  5378  00EEDC  00                 	db	0
  5379  00EEDD  00                 	db	0
  5380  00EEDE  00                 	db	0
  5381  00EEDF  0F                 	db	15
  5382  00EEE0  00                 	db	0
  5383  00EEE1  00                 	db	0
  5384  00EEE2  00                 	db	0
  5385  00EEE3  00                 	db	0
  5386  00EEE4  00                 	db	0
  5387  00EEE5  00                 	db	0
  5388  00EEE6  00                 	db	0
  5389  00EEE7  00                 	db	0
  5390  00EEE8  00                 	db	0
  5391  00EEE9  00                 	db	0
  5392  00EEEA  00                 	db	0
  5393  00EEEB  00                 	db	0
  5394  00EEEC  00                 	db	0
  5395  00EEED  00                 	db	0
  5396  00EEEE  00                 	db	0
  5397  00EEEF  00                 	db	0
  5398  00EEF0  00                 	db	0
  5399  00EEF1  00                 	db	0
  5400  00EEF2  00                 	db	0
  5401  00EEF3  00                 	db	0
  5402  00EEF4  07                 	db	7
  5403  00EEF5  C0                 	db	192
  5404  00EEF6  00                 	db	0
  5405  00EEF7  00                 	db	0
  5406  00EEF8  1F                 	db	31
  5407  00EEF9  F0                 	db	240
  5408  00EEFA  00                 	db	0
  5409  00EEFB  00                 	db	0
  5410  00EEFC  3C                 	db	60
  5411  00EEFD  78                 	db	120
  5412  00EEFE  00                 	db	0
  5413  00EEFF  00                 	db	0
  5414  00EF00  38                 	db	56
  5415  00EF01  38                 	db	56
  5416  00EF02  00                 	db	0
  5417  00EF03  00                 	db	0
  5418  00EF04  70                 	db	112
  5419  00EF05  1C                 	db	28
  5420  00EF06  00                 	db	0
  5421  00EF07  00                 	db	0
  5422  00EF08  70                 	db	112
  5423  00EF09  1C                 	db	28
  5424  00EF0A  00                 	db	0
  5425  00EF0B  00                 	db	0
  5426  00EF0C  70                 	db	112
  5427  00EF0D  1C                 	db	28
  5428  00EF0E  00                 	db	0
  5429  00EF0F  00                 	db	0
  5430  00EF10  70                 	db	112
  5431  00EF11  1C                 	db	28
  5432  00EF12  00                 	db	0
  5433  00EF13  00                 	db	0
  5434  00EF14  70                 	db	112
  5435  00EF15  1C                 	db	28
  5436  00EF16  00                 	db	0
  5437  00EF17  00                 	db	0
  5438  00EF18  70                 	db	112
  5439  00EF19  1C                 	db	28
  5440  00EF1A  00                 	db	0
  5441  00EF1B  00                 	db	0
  5442  00EF1C  38                 	db	56
  5443  00EF1D  38                 	db	56
  5444  00EF1E  00                 	db	0
  5445  00EF1F  00                 	db	0
  5446  00EF20  3C                 	db	60
  5447  00EF21  78                 	db	120
  5448  00EF22  00                 	db	0
  5449  00EF23  00                 	db	0
  5450  00EF24  1F                 	db	31
  5451  00EF25  F0                 	db	240
  5452  00EF26  00                 	db	0
  5453  00EF27  00                 	db	0
  5454  00EF28  07                 	db	7
  5455  00EF29  C0                 	db	192
  5456  00EF2A  00                 	db	0
  5457  00EF2B  00                 	db	0
  5458  00EF2C  01                 	db	1
  5459  00EF2D  C0                 	db	192
  5460  00EF2E  00                 	db	0
  5461  00EF2F  00                 	db	0
  5462  00EF30  01                 	db	1
  5463  00EF31  C0                 	db	192
  5464  00EF32  00                 	db	0
  5465  00EF33  00                 	db	0
  5466  00EF34  00                 	db	0
  5467  00EF35  FC                 	db	252
  5468  00EF36  00                 	db	0
  5469  00EF37  00                 	db	0
  5470  00EF38  00                 	db	0
  5471  00EF39  7C                 	db	124
  5472  00EF3A  00                 	db	0
  5473  00EF3B  00                 	db	0
  5474  00EF3C  0E                 	db	14
  5475  00EF3D  00                 	db	0
  5476  00EF3E  00                 	db	0
  5477  00EF3F  00                 	db	0
  5478  00EF40  00                 	db	0
  5479  00EF41  00                 	db	0
  5480  00EF42  00                 	db	0
  5481  00EF43  00                 	db	0
  5482  00EF44  00                 	db	0
  5483  00EF45  00                 	db	0
  5484  00EF46  00                 	db	0
  5485  00EF47  00                 	db	0
  5486  00EF48  00                 	db	0
  5487  00EF49  00                 	db	0
  5488  00EF4A  00                 	db	0
  5489  00EF4B  00                 	db	0
  5490  00EF4C  00                 	db	0
  5491  00EF4D  00                 	db	0
  5492  00EF4E  00                 	db	0
  5493  00EF4F  00                 	db	0
  5494  00EF50  00                 	db	0
  5495  00EF51  7F                 	db	127
  5496  00EF52  C0                 	db	192
  5497  00EF53  00                 	db	0
  5498  00EF54  00                 	db	0
  5499  00EF55  7F                 	db	127
  5500  00EF56  E0                 	db	224
  5501  00EF57  00                 	db	0
  5502  00EF58  00                 	db	0
  5503  00EF59  70                 	db	112
  5504  00EF5A  F0                 	db	240
  5505  00EF5B  00                 	db	0
  5506  00EF5C  00                 	db	0
  5507  00EF5D  70                 	db	112
  5508  00EF5E  70                 	db	112
  5509  00EF5F  00                 	db	0
  5510  00EF60  00                 	db	0
  5511  00EF61  70                 	db	112
  5512  00EF62  70                 	db	112
  5513  00EF63  00                 	db	0
  5514  00EF64  00                 	db	0
  5515  00EF65  70                 	db	112
  5516  00EF66  70                 	db	112
  5517  00EF67  00                 	db	0
  5518  00EF68  00                 	db	0
  5519  00EF69  70                 	db	112
  5520  00EF6A  E0                 	db	224
  5521  00EF6B  00                 	db	0
  5522  00EF6C  00                 	db	0
  5523  00EF6D  7F                 	db	127
  5524  00EF6E  C0                 	db	192
  5525  00EF6F  00                 	db	0
  5526  00EF70  00                 	db	0
  5527  00EF71  7F                 	db	127
  5528  00EF72  C0                 	db	192
  5529  00EF73  00                 	db	0
  5530  00EF74  00                 	db	0
  5531  00EF75  71                 	db	113
  5532  00EF76  C0                 	db	192
  5533  00EF77  00                 	db	0
  5534  00EF78  00                 	db	0
  5535  00EF79  71                 	db	113
  5536  00EF7A  E0                 	db	224
  5537  00EF7B  00                 	db	0
  5538  00EF7C  00                 	db	0
  5539  00EF7D  70                 	db	112
  5540  00EF7E  F0                 	db	240
  5541  00EF7F  00                 	db	0
  5542  00EF80  00                 	db	0
  5543  00EF81  70                 	db	112
  5544  00EF82  78                 	db	120
  5545  00EF83  00                 	db	0
  5546  00EF84  00                 	db	0
  5547  00EF85  70                 	db	112
  5548  00EF86  3C                 	db	60
  5549  00EF87  00                 	db	0
  5550  00EF88  00                 	db	0
  5551  00EF89  00                 	db	0
  5552  00EF8A  00                 	db	0
  5553  00EF8B  00                 	db	0
  5554  00EF8C  00                 	db	0
  5555  00EF8D  00                 	db	0
  5556  00EF8E  00                 	db	0
  5557  00EF8F  00                 	db	0
  5558  00EF90  00                 	db	0
  5559  00EF91  00                 	db	0
  5560  00EF92  00                 	db	0
  5561  00EF93  00                 	db	0
  5562  00EF94  00                 	db	0
  5563  00EF95  00                 	db	0
  5564  00EF96  00                 	db	0
  5565  00EF97  00                 	db	0
  5566  00EF98  00                 	db	0
  5567  00EF99  0C                 	db	12
  5568  00EF9A  00                 	db	0
  5569  00EF9B  00                 	db	0
  5570  00EF9C  00                 	db	0
  5571  00EF9D  00                 	db	0
  5572  00EF9E  00                 	db	0
  5573  00EF9F  00                 	db	0
  5574  00EFA0  00                 	db	0
  5575  00EFA1  00                 	db	0
  5576  00EFA2  00                 	db	0
  5577  00EFA3  00                 	db	0
  5578  00EFA4  00                 	db	0
  5579  00EFA5  00                 	db	0
  5580  00EFA6  00                 	db	0
  5581  00EFA7  00                 	db	0
  5582  00EFA8  00                 	db	0
  5583  00EFA9  00                 	db	0
  5584  00EFAA  00                 	db	0
  5585  00EFAB  00                 	db	0
  5586  00EFAC  00                 	db	0
  5587  00EFAD  00                 	db	0
  5588  00EFAE  1F                 	db	31
  5589  00EFAF  80                 	db	128
  5590  00EFB0  00                 	db	0
  5591  00EFB1  00                 	db	0
  5592  00EFB2  3F                 	db	63
  5593  00EFB3  C0                 	db	192
  5594  00EFB4  00                 	db	0
  5595  00EFB5  00                 	db	0
  5596  00EFB6  78                 	db	120
  5597  00EFB7  C0                 	db	192
  5598  00EFB8  00                 	db	0
  5599  00EFB9  00                 	db	0
  5600  00EFBA  70                 	db	112
  5601  00EFBB  40                 	db	64
  5602  00EFBC  00                 	db	0
  5603  00EFBD  00                 	db	0
  5604  00EFBE  70                 	db	112
  5605  00EFBF  00                 	db	0
  5606  00EFC0  00                 	db	0
  5607  00EFC1  00                 	db	0
  5608  00EFC2  7E                 	db	126
  5609  00EFC3  00                 	db	0
  5610  00EFC4  00                 	db	0
  5611  00EFC5  00                 	db	0
  5612  00EFC6  3F                 	db	63
  5613  00EFC7  80                 	db	128
  5614  00EFC8  00                 	db	0
  5615  00EFC9  00                 	db	0
  5616  00EFCA  1F                 	db	31
  5617  00EFCB  E0                 	db	224
  5618  00EFCC  00                 	db	0
  5619  00EFCD  00                 	db	0
  5620  00EFCE  07                 	db	7
  5621  00EFCF  E0                 	db	224
  5622  00EFD0  00                 	db	0
  5623  00EFD1  00                 	db	0
  5624  00EFD2  00                 	db	0
  5625  00EFD3  E0                 	db	224
  5626  00EFD4  00                 	db	0
  5627  00EFD5  00                 	db	0
  5628  00EFD6  40                 	db	64
  5629  00EFD7  E0                 	db	224
  5630  00EFD8  00                 	db	0
  5631  00EFD9  00                 	db	0
  5632  00EFDA  61                 	db	97
  5633  00EFDB  E0                 	db	224
  5634  00EFDC  00                 	db	0
  5635  00EFDD  00                 	db	0
  5636  00EFDE  7F                 	db	127
  5637  00EFDF  C0                 	db	192
  5638  00EFE0  00                 	db	0
  5639  00EFE1  00                 	db	0
  5640  00EFE2  3F                 	db	63
  5641  00EFE3  00                 	db	0
  5642  00EFE4  00                 	db	0
  5643  00EFE5  00                 	db	0
  5644  00EFE6  00                 	db	0
  5645  00EFE7  00                 	db	0
  5646  00EFE8  00                 	db	0
  5647  00EFE9  00                 	db	0
  5648  00EFEA  00                 	db	0
  5649  00EFEB  00                 	db	0
  5650  00EFEC  00                 	db	0
  5651  00EFED  00                 	db	0
  5652  00EFEE  00                 	db	0
  5653  00EFEF  00                 	db	0
  5654  00EFF0  00                 	db	0
  5655  00EFF1  00                 	db	0
  5656  00EFF2  00                 	db	0
  5657  00EFF3  00                 	db	0
  5658  00EFF4  00                 	db	0
  5659  00EFF5  00                 	db	0
  5660  00EFF6  0C                 	db	12
  5661  00EFF7  00                 	db	0
  5662  00EFF8  00                 	db	0
  5663  00EFF9  00                 	db	0
  5664  00EFFA  00                 	db	0
  5665  00EFFB  00                 	db	0
  5666  00EFFC  00                 	db	0
  5667  00EFFD  00                 	db	0
  5668  00EFFE  00                 	db	0
  5669  00EFFF  00                 	db	0
  5670  00F000  00                 	db	0
  5671  00F001  00                 	db	0
  5672  00F002  00                 	db	0
  5673  00F003  00                 	db	0
  5674  00F004  00                 	db	0
  5675  00F005  00                 	db	0
  5676  00F006  00                 	db	0
  5677  00F007  00                 	db	0
  5678  00F008  00                 	db	0
  5679  00F009  00                 	db	0
  5680  00F00A  00                 	db	0
  5681  00F00B  FF                 	db	255
  5682  00F00C  E0                 	db	224
  5683  00F00D  00                 	db	0
  5684  00F00E  00                 	db	0
  5685  00F00F  FF                 	db	255
  5686  00F010  E0                 	db	224
  5687  00F011  00                 	db	0
  5688  00F012  00                 	db	0
  5689  00F013  0E                 	db	14
  5690  00F014  00                 	db	0
  5691  00F015  00                 	db	0
  5692  00F016  00                 	db	0
  5693  00F017  0E                 	db	14
  5694  00F018  00                 	db	0
  5695  00F019  00                 	db	0
  5696  00F01A  00                 	db	0
  5697  00F01B  0E                 	db	14
  5698  00F01C  00                 	db	0
  5699  00F01D  00                 	db	0
  5700  00F01E  00                 	db	0
  5701  00F01F  0E                 	db	14
  5702  00F020  00                 	db	0
  5703  00F021  00                 	db	0
  5704  00F022  00                 	db	0
  5705  00F023  0E                 	db	14
  5706  00F024  00                 	db	0
  5707  00F025  00                 	db	0
  5708  00F026  00                 	db	0
  5709  00F027  0E                 	db	14
  5710  00F028  00                 	db	0
  5711  00F029  00                 	db	0
  5712  00F02A  00                 	db	0
  5713  00F02B  0E                 	db	14
  5714  00F02C  00                 	db	0
  5715  00F02D  00                 	db	0
  5716  00F02E  00                 	db	0
  5717  00F02F  0E                 	db	14
  5718  00F030  00                 	db	0
  5719  00F031  00                 	db	0
  5720  00F032  00                 	db	0
  5721  00F033  0E                 	db	14
  5722  00F034  00                 	db	0
  5723  00F035  00                 	db	0
  5724  00F036  00                 	db	0
  5725  00F037  0E                 	db	14
  5726  00F038  00                 	db	0
  5727  00F039  00                 	db	0
  5728  00F03A  00                 	db	0
  5729  00F03B  0E                 	db	14
  5730  00F03C  00                 	db	0
  5731  00F03D  00                 	db	0
  5732  00F03E  00                 	db	0
  5733  00F03F  0E                 	db	14
  5734  00F040  00                 	db	0
  5735  00F041  00                 	db	0
  5736  00F042  00                 	db	0
  5737  00F043  00                 	db	0
  5738  00F044  00                 	db	0
  5739  00F045  00                 	db	0
  5740  00F046  00                 	db	0
  5741  00F047  00                 	db	0
  5742  00F048  00                 	db	0
  5743  00F049  00                 	db	0
  5744  00F04A  00                 	db	0
  5745  00F04B  00                 	db	0
  5746  00F04C  00                 	db	0
  5747  00F04D  00                 	db	0
  5748  00F04E  00                 	db	0
  5749  00F04F  00                 	db	0
  5750  00F050  00                 	db	0
  5751  00F051  00                 	db	0
  5752  00F052  00                 	db	0
  5753  00F053  0E                 	db	14
  5754  00F054  00                 	db	0
  5755  00F055  00                 	db	0
  5756  00F056  00                 	db	0
  5757  00F057  00                 	db	0
  5758  00F058  00                 	db	0
  5759  00F059  00                 	db	0
  5760  00F05A  00                 	db	0
  5761  00F05B  00                 	db	0
  5762  00F05C  00                 	db	0
  5763  00F05D  00                 	db	0
  5764  00F05E  00                 	db	0
  5765  00F05F  00                 	db	0
  5766  00F060  00                 	db	0
  5767  00F061  00                 	db	0
  5768  00F062  00                 	db	0
  5769  00F063  00                 	db	0
  5770  00F064  00                 	db	0
  5771  00F065  00                 	db	0
  5772  00F066  00                 	db	0
  5773  00F067  00                 	db	0
  5774  00F068  70                 	db	112
  5775  00F069  38                 	db	56
  5776  00F06A  00                 	db	0
  5777  00F06B  00                 	db	0
  5778  00F06C  70                 	db	112
  5779  00F06D  38                 	db	56
  5780  00F06E  00                 	db	0
  5781  00F06F  00                 	db	0
  5782  00F070  70                 	db	112
  5783  00F071  38                 	db	56
  5784  00F072  00                 	db	0
  5785  00F073  00                 	db	0
  5786  00F074  70                 	db	112
  5787  00F075  38                 	db	56
  5788  00F076  00                 	db	0
  5789  00F077  00                 	db	0
  5790  00F078  70                 	db	112
  5791  00F079  38                 	db	56
  5792  00F07A  00                 	db	0
  5793  00F07B  00                 	db	0
  5794  00F07C  70                 	db	112
  5795  00F07D  38                 	db	56
  5796  00F07E  00                 	db	0
  5797  00F07F  00                 	db	0
  5798  00F080  70                 	db	112
  5799  00F081  38                 	db	56
  5800  00F082  00                 	db	0
  5801  00F083  00                 	db	0
  5802  00F084  70                 	db	112
  5803  00F085  38                 	db	56
  5804  00F086  00                 	db	0
  5805  00F087  00                 	db	0
  5806  00F088  70                 	db	112
  5807  00F089  38                 	db	56
  5808  00F08A  00                 	db	0
  5809  00F08B  00                 	db	0
  5810  00F08C  70                 	db	112
  5811  00F08D  38                 	db	56
  5812  00F08E  00                 	db	0
  5813  00F08F  00                 	db	0
  5814  00F090  70                 	db	112
  5815  00F091  38                 	db	56
  5816  00F092  00                 	db	0
  5817  00F093  00                 	db	0
  5818  00F094  38                 	db	56
  5819  00F095  70                 	db	112
  5820  00F096  00                 	db	0
  5821  00F097  00                 	db	0
  5822  00F098  3F                 	db	63
  5823  00F099  F0                 	db	240
  5824  00F09A  00                 	db	0
  5825  00F09B  00                 	db	0
  5826  00F09C  0F                 	db	15
  5827  00F09D  C0                 	db	192
  5828  00F09E  00                 	db	0
  5829  00F09F  00                 	db	0
  5830  00F0A0  00                 	db	0
  5831  00F0A1  00                 	db	0
  5832  00F0A2  00                 	db	0
  5833  00F0A3  00                 	db	0
  5834  00F0A4  00                 	db	0
  5835  00F0A5  00                 	db	0
  5836  00F0A6  00                 	db	0
  5837  00F0A7  00                 	db	0
  5838  00F0A8  00                 	db	0
  5839  00F0A9  00                 	db	0
  5840  00F0AA  00                 	db	0
  5841  00F0AB  00                 	db	0
  5842  00F0AC  00                 	db	0
  5843  00F0AD  00                 	db	0
  5844  00F0AE  00                 	db	0
  5845  00F0AF  00                 	db	0
  5846  00F0B0  0D                 	db	13
  5847  00F0B1  00                 	db	0
  5848  00F0B2  00                 	db	0
  5849  00F0B3  00                 	db	0
  5850  00F0B4  00                 	db	0
  5851  00F0B5  00                 	db	0
  5852  00F0B6  00                 	db	0
  5853  00F0B7  00                 	db	0
  5854  00F0B8  00                 	db	0
  5855  00F0B9  00                 	db	0
  5856  00F0BA  00                 	db	0
  5857  00F0BB  00                 	db	0
  5858  00F0BC  00                 	db	0
  5859  00F0BD  00                 	db	0
  5860  00F0BE  00                 	db	0
  5861  00F0BF  00                 	db	0
  5862  00F0C0  00                 	db	0
  5863  00F0C1  00                 	db	0
  5864  00F0C2  00                 	db	0
  5865  00F0C3  00                 	db	0
  5866  00F0C4  00                 	db	0
  5867  00F0C5  E0                 	db	224
  5868  00F0C6  38                 	db	56
  5869  00F0C7  00                 	db	0
  5870  00F0C8  00                 	db	0
  5871  00F0C9  70                 	db	112
  5872  00F0CA  70                 	db	112
  5873  00F0CB  00                 	db	0
  5874  00F0CC  00                 	db	0
  5875  00F0CD  70                 	db	112
  5876  00F0CE  70                 	db	112
  5877  00F0CF  00                 	db	0
  5878  00F0D0  00                 	db	0
  5879  00F0D1  70                 	db	112
  5880  00F0D2  70                 	db	112
  5881  00F0D3  00                 	db	0
  5882  00F0D4  00                 	db	0
  5883  00F0D5  38                 	db	56
  5884  00F0D6  E0                 	db	224
  5885  00F0D7  00                 	db	0
  5886  00F0D8  00                 	db	0
  5887  00F0D9  38                 	db	56
  5888  00F0DA  E0                 	db	224
  5889  00F0DB  00                 	db	0
  5890  00F0DC  00                 	db	0
  5891  00F0DD  38                 	db	56
  5892  00F0DE  E0                 	db	224
  5893  00F0DF  00                 	db	0
  5894  00F0E0  00                 	db	0
  5895  00F0E1  1D                 	db	29
  5896  00F0E2  C0                 	db	192
  5897  00F0E3  00                 	db	0
  5898  00F0E4  00                 	db	0
  5899  00F0E5  1D                 	db	29
  5900  00F0E6  C0                 	db	192
  5901  00F0E7  00                 	db	0
  5902  00F0E8  00                 	db	0
  5903  00F0E9  1D                 	db	29
  5904  00F0EA  C0                 	db	192
  5905  00F0EB  00                 	db	0
  5906  00F0EC  00                 	db	0
  5907  00F0ED  0D                 	db	13
  5908  00F0EE  80                 	db	128
  5909  00F0EF  00                 	db	0
  5910  00F0F0  00                 	db	0
  5911  00F0F1  0F                 	db	15
  5912  00F0F2  80                 	db	128
  5913  00F0F3  00                 	db	0
  5914  00F0F4  00                 	db	0
  5915  00F0F5  0F                 	db	15
  5916  00F0F6  80                 	db	128
  5917  00F0F7  00                 	db	0
  5918  00F0F8  00                 	db	0
  5919  00F0F9  07                 	db	7
  5920  00F0FA  00                 	db	0
  5921  00F0FB  00                 	db	0
  5922  00F0FC  00                 	db	0
  5923  00F0FD  00                 	db	0
  5924  00F0FE  00                 	db	0
  5925  00F0FF  00                 	db	0
  5926  00F100  00                 	db	0
  5927  00F101  00                 	db	0
  5928  00F102  00                 	db	0
  5929  00F103  00                 	db	0
  5930  00F104  00                 	db	0
  5931  00F105  00                 	db	0
  5932  00F106  00                 	db	0
  5933  00F107  00                 	db	0
  5934  00F108  00                 	db	0
  5935  00F109  00                 	db	0
  5936  00F10A  00                 	db	0
  5937  00F10B  00                 	db	0
  5938  00F10C  00                 	db	0
  5939  00F10D  14                 	db	20
  5940  00F10E  00                 	db	0
  5941  00F10F  00                 	db	0
  5942  00F110  00                 	db	0
  5943  00F111  00                 	db	0
  5944  00F112  00                 	db	0
  5945  00F113  00                 	db	0
  5946  00F114  00                 	db	0
  5947  00F115  00                 	db	0
  5948  00F116  00                 	db	0
  5949  00F117  00                 	db	0
  5950  00F118  00                 	db	0
  5951  00F119  00                 	db	0
  5952  00F11A  00                 	db	0
  5953  00F11B  00                 	db	0
  5954  00F11C  00                 	db	0
  5955  00F11D  00                 	db	0
  5956  00F11E  00                 	db	0
  5957  00F11F  00                 	db	0
  5958  00F120  00                 	db	0
  5959  00F121  00                 	db	0
  5960  00F122  E0                 	db	224
  5961  00F123  F0                 	db	240
  5962  00F124  70                 	db	112
  5963  00F125  00                 	db	0
  5964  00F126  E0                 	db	224
  5965  00F127  F0                 	db	240
  5966  00F128  70                 	db	112
  5967  00F129  00                 	db	0
  5968  00F12A  70                 	db	112
  5969  00F12B  F0                 	db	240
  5970  00F12C  E0                 	db	224
  5971  00F12D  00                 	db	0
  5972  00F12E  70                 	db	112
  5973  00F12F  F0                 	db	240
  5974  00F130  E0                 	db	224
  5975  00F131  00                 	db	0
  5976  00F132  71                 	db	113
  5977  00F133  F8                 	db	248
  5978  00F134  E0                 	db	224
  5979  00F135  00                 	db	0
  5980  00F136  71                 	db	113
  5981  00F137  F8                 	db	248
  5982  00F138  E0                 	db	224
  5983  00F139  00                 	db	0
  5984  00F13A  39                 	db	57
  5985  00F13B  99                 	db	153
  5986  00F13C  C0                 	db	192
  5987  00F13D  00                 	db	0
  5988  00F13E  3B                 	db	59
  5989  00F13F  9D                 	db	157
  5990  00F140  C0                 	db	192
  5991  00F141  00                 	db	0
  5992  00F142  3B                 	db	59
  5993  00F143  9D                 	db	157
  5994  00F144  C0                 	db	192
  5995  00F145  00                 	db	0
  5996  00F146  1B                 	db	27
  5997  00F147  0D                 	db	13
  5998  00F148  80                 	db	128
  5999  00F149  00                 	db	0
  6000  00F14A  1B                 	db	27
  6001  00F14B  0F                 	db	15
  6002  00F14C  80                 	db	128
  6003  00F14D  00                 	db	0
  6004  00F14E  1F                 	db	31
  6005  00F14F  0F                 	db	15
  6006  00F150  80                 	db	128
  6007  00F151  00                 	db	0
  6008  00F152  1E                 	db	30
  6009  00F153  0F                 	db	15
  6010  00F154  80                 	db	128
  6011  00F155  00                 	db	0
  6012  00F156  0E                 	db	14
  6013  00F157  07                 	db	7
  6014  00F158  00                 	db	0
  6015  00F159  00                 	db	0
  6016  00F15A  00                 	db	0
  6017  00F15B  00                 	db	0
  6018  00F15C  00                 	db	0
  6019  00F15D  00                 	db	0
  6020  00F15E  00                 	db	0
  6021  00F15F  00                 	db	0
  6022  00F160  00                 	db	0
  6023  00F161  00                 	db	0
  6024  00F162  00                 	db	0
  6025  00F163  00                 	db	0
  6026  00F164  00                 	db	0
  6027  00F165  00                 	db	0
  6028  00F166  00                 	db	0
  6029  00F167  00                 	db	0
  6030  00F168  00                 	db	0
  6031  00F169  00                 	db	0
  6032  00F16A  0D                 	db	13
  6033  00F16B  00                 	db	0
  6034  00F16C  00                 	db	0
  6035  00F16D  00                 	db	0
  6036  00F16E  00                 	db	0
  6037  00F16F  00                 	db	0
  6038  00F170  00                 	db	0
  6039  00F171  00                 	db	0
  6040  00F172  00                 	db	0
  6041  00F173  00                 	db	0
  6042  00F174  00                 	db	0
  6043  00F175  00                 	db	0
  6044  00F176  00                 	db	0
  6045  00F177  00                 	db	0
  6046  00F178  00                 	db	0
  6047  00F179  00                 	db	0
  6048  00F17A  00                 	db	0
  6049  00F17B  00                 	db	0
  6050  00F17C  00                 	db	0
  6051  00F17D  00                 	db	0
  6052  00F17E  00                 	db	0
  6053  00F17F  E0                 	db	224
  6054  00F180  38                 	db	56
  6055  00F181  00                 	db	0
  6056  00F182  00                 	db	0
  6057  00F183  70                 	db	112
  6058  00F184  70                 	db	112
  6059  00F185  00                 	db	0
  6060  00F186  00                 	db	0
  6061  00F187  38                 	db	56
  6062  00F188  E0                 	db	224
  6063  00F189  00                 	db	0
  6064  00F18A  00                 	db	0
  6065  00F18B  3D                 	db	61
  6066  00F18C  E0                 	db	224
  6067  00F18D  00                 	db	0
  6068  00F18E  00                 	db	0
  6069  00F18F  1D                 	db	29
  6070  00F190  C0                 	db	192
  6071  00F191  00                 	db	0
  6072  00F192  00                 	db	0
  6073  00F193  0F                 	db	15
  6074  00F194  80                 	db	128
  6075  00F195  00                 	db	0
  6076  00F196  00                 	db	0
  6077  00F197  07                 	db	7
  6078  00F198  00                 	db	0
  6079  00F199  00                 	db	0
  6080  00F19A  00                 	db	0
  6081  00F19B  07                 	db	7
  6082  00F19C  00                 	db	0
  6083  00F19D  00                 	db	0
  6084  00F19E  00                 	db	0
  6085  00F19F  0F                 	db	15
  6086  00F1A0  80                 	db	128
  6087  00F1A1  00                 	db	0
  6088  00F1A2  00                 	db	0
  6089  00F1A3  1D                 	db	29
  6090  00F1A4  C0                 	db	192
  6091  00F1A5  00                 	db	0
  6092  00F1A6  00                 	db	0
  6093  00F1A7  3D                 	db	61
  6094  00F1A8  E0                 	db	224
  6095  00F1A9  00                 	db	0
  6096  00F1AA  00                 	db	0
  6097  00F1AB  38                 	db	56
  6098  00F1AC  E0                 	db	224
  6099  00F1AD  00                 	db	0
  6100  00F1AE  00                 	db	0
  6101  00F1AF  70                 	db	112
  6102  00F1B0  70                 	db	112
  6103  00F1B1  00                 	db	0
  6104  00F1B2  00                 	db	0
  6105  00F1B3  E0                 	db	224
  6106  00F1B4  38                 	db	56
  6107  00F1B5  00                 	db	0
  6108  00F1B6  00                 	db	0
  6109  00F1B7  00                 	db	0
  6110  00F1B8  00                 	db	0
  6111  00F1B9  00                 	db	0
  6112  00F1BA  00                 	db	0
  6113  00F1BB  00                 	db	0
  6114  00F1BC  00                 	db	0
  6115  00F1BD  00                 	db	0
  6116  00F1BE  00                 	db	0
  6117  00F1BF  00                 	db	0
  6118  00F1C0  00                 	db	0
  6119  00F1C1  00                 	db	0
  6120  00F1C2  00                 	db	0
  6121  00F1C3  00                 	db	0
  6122  00F1C4  00                 	db	0
  6123  00F1C5  00                 	db	0
  6124  00F1C6  00                 	db	0
  6125  00F1C7  0D                 	db	13
  6126  00F1C8  00                 	db	0
  6127  00F1C9  00                 	db	0
  6128  00F1CA  00                 	db	0
  6129  00F1CB  00                 	db	0
  6130  00F1CC  00                 	db	0
  6131  00F1CD  00                 	db	0
  6132  00F1CE  00                 	db	0
  6133  00F1CF  00                 	db	0
  6134  00F1D0  00                 	db	0
  6135  00F1D1  00                 	db	0
  6136  00F1D2  00                 	db	0
  6137  00F1D3  00                 	db	0
  6138  00F1D4  00                 	db	0
  6139  00F1D5  00                 	db	0
  6140  00F1D6  00                 	db	0
  6141  00F1D7  00                 	db	0
  6142  00F1D8  00                 	db	0
  6143  00F1D9  00                 	db	0
  6144  00F1DA  00                 	db	0
  6145  00F1DB  00                 	db	0
  6146  00F1DC  F0                 	db	240
  6147  00F1DD  78                 	db	120
  6148  00F1DE  00                 	db	0
  6149  00F1DF  00                 	db	0
  6150  00F1E0  70                 	db	112
  6151  00F1E1  70                 	db	112
  6152  00F1E2  00                 	db	0
  6153  00F1E3  00                 	db	0
  6154  00F1E4  38                 	db	56
  6155  00F1E5  E0                 	db	224
  6156  00F1E6  00                 	db	0
  6157  00F1E7  00                 	db	0
  6158  00F1E8  38                 	db	56
  6159  00F1E9  E0                 	db	224
  6160  00F1EA  00                 	db	0
  6161  00F1EB  00                 	db	0
  6162  00F1EC  1D                 	db	29
  6163  00F1ED  C0                 	db	192
  6164  00F1EE  00                 	db	0
  6165  00F1EF  00                 	db	0
  6166  00F1F0  1F                 	db	31
  6167  00F1F1  C0                 	db	192
  6168  00F1F2  00                 	db	0
  6169  00F1F3  00                 	db	0
  6170  00F1F4  0F                 	db	15
  6171  00F1F5  80                 	db	128
  6172  00F1F6  00                 	db	0
  6173  00F1F7  00                 	db	0
  6174  00F1F8  07                 	db	7
  6175  00F1F9  00                 	db	0
  6176  00F1FA  00                 	db	0
  6177  00F1FB  00                 	db	0
  6178  00F1FC  07                 	db	7
  6179  00F1FD  00                 	db	0
  6180  00F1FE  00                 	db	0
  6181  00F1FF  00                 	db	0
  6182  00F200  07                 	db	7
  6183  00F201  00                 	db	0
  6184  00F202  00                 	db	0
  6185  00F203  00                 	db	0
  6186  00F204  07                 	db	7
  6187  00F205  00                 	db	0
  6188  00F206  00                 	db	0
  6189  00F207  00                 	db	0
  6190  00F208  07                 	db	7
  6191  00F209  00                 	db	0
  6192  00F20A  00                 	db	0
  6193  00F20B  00                 	db	0
  6194  00F20C  07                 	db	7
  6195  00F20D  00                 	db	0
  6196  00F20E  00                 	db	0
  6197  00F20F  00                 	db	0
  6198  00F210  07                 	db	7
  6199  00F211  00                 	db	0
  6200  00F212  00                 	db	0
  6201  00F213  00                 	db	0
  6202  00F214  00                 	db	0
  6203  00F215  00                 	db	0
  6204  00F216  00                 	db	0
  6205  00F217  00                 	db	0
  6206  00F218  00                 	db	0
  6207  00F219  00                 	db	0
  6208  00F21A  00                 	db	0
  6209  00F21B  00                 	db	0
  6210  00F21C  00                 	db	0
  6211  00F21D  00                 	db	0
  6212  00F21E  00                 	db	0
  6213  00F21F  00                 	db	0
  6214  00F220  00                 	db	0
  6215  00F221  00                 	db	0
  6216  00F222  00                 	db	0
  6217  00F223  00                 	db	0
  6218  00F224  0C                 	db	12
  6219  00F225  00                 	db	0
  6220  00F226  00                 	db	0
  6221  00F227  00                 	db	0
  6222  00F228  00                 	db	0
  6223  00F229  00                 	db	0
  6224  00F22A  00                 	db	0
  6225  00F22B  00                 	db	0
  6226  00F22C  00                 	db	0
  6227  00F22D  00                 	db	0
  6228  00F22E  00                 	db	0
  6229  00F22F  00                 	db	0
  6230  00F230  00                 	db	0
  6231  00F231  00                 	db	0
  6232  00F232  00                 	db	0
  6233  00F233  00                 	db	0
  6234  00F234  00                 	db	0
  6235  00F235  00                 	db	0
  6236  00F236  00                 	db	0
  6237  00F237  00                 	db	0
  6238  00F238  00                 	db	0
  6239  00F239  7F                 	db	127
  6240  00F23A  E0                 	db	224
  6241  00F23B  00                 	db	0
  6242  00F23C  00                 	db	0
  6243  00F23D  7F                 	db	127
  6244  00F23E  E0                 	db	224
  6245  00F23F  00                 	db	0
  6246  00F240  00                 	db	0
  6247  00F241  00                 	db	0
  6248  00F242  E0                 	db	224
  6249  00F243  00                 	db	0
  6250  00F244  00                 	db	0
  6251  00F245  01                 	db	1
  6252  00F246  C0                 	db	192
  6253  00F247  00                 	db	0
  6254  00F248  00                 	db	0
  6255  00F249  03                 	db	3
  6256  00F24A  80                 	db	128
  6257  00F24B  00                 	db	0
  6258  00F24C  00                 	db	0
  6259  00F24D  03                 	db	3
  6260  00F24E  80                 	db	128
  6261  00F24F  00                 	db	0
  6262  00F250  00                 	db	0
  6263  00F251  07                 	db	7
  6264  00F252  00                 	db	0
  6265  00F253  00                 	db	0
  6266  00F254  00                 	db	0
  6267  00F255  0E                 	db	14
  6268  00F256  00                 	db	0
  6269  00F257  00                 	db	0
  6270  00F258  00                 	db	0
  6271  00F259  1C                 	db	28
  6272  00F25A  00                 	db	0
  6273  00F25B  00                 	db	0
  6274  00F25C  00                 	db	0
  6275  00F25D  1C                 	db	28
  6276  00F25E  00                 	db	0
  6277  00F25F  00                 	db	0
  6278  00F260  00                 	db	0
  6279  00F261  38                 	db	56
  6280  00F262  00                 	db	0
  6281  00F263  00                 	db	0
  6282  00F264  00                 	db	0
  6283  00F265  70                 	db	112
  6284  00F266  00                 	db	0
  6285  00F267  00                 	db	0
  6286  00F268  00                 	db	0
  6287  00F269  7F                 	db	127
  6288  00F26A  E0                 	db	224
  6289  00F26B  00                 	db	0
  6290  00F26C  00                 	db	0
  6291  00F26D  7F                 	db	127
  6292  00F26E  E0                 	db	224
  6293  00F26F  00                 	db	0
  6294  00F270  00                 	db	0
  6295  00F271  00                 	db	0
  6296  00F272  00                 	db	0
  6297  00F273  00                 	db	0
  6298  00F274  00                 	db	0
  6299  00F275  00                 	db	0
  6300  00F276  00                 	db	0
  6301  00F277  00                 	db	0
  6302  00F278  00                 	db	0
  6303  00F279  00                 	db	0
  6304  00F27A  00                 	db	0
  6305  00F27B  00                 	db	0
  6306  00F27C  00                 	db	0
  6307  00F27D  00                 	db	0
  6308  00F27E  00                 	db	0
  6309  00F27F  00                 	db	0
  6310  00F280  00                 	db	0
  6311  00F281  08                 	db	8
  6312  00F282  00                 	db	0
  6313  00F283  00                 	db	0
  6314  00F284  00                 	db	0
  6315  00F285  00                 	db	0
  6316  00F286  00                 	db	0
  6317  00F287  00                 	db	0
  6318  00F288  00                 	db	0
  6319  00F289  00                 	db	0
  6320  00F28A  00                 	db	0
  6321  00F28B  00                 	db	0
  6322  00F28C  00                 	db	0
  6323  00F28D  00                 	db	0
  6324  00F28E  00                 	db	0
  6325  00F28F  00                 	db	0
  6326  00F290  00                 	db	0
  6327  00F291  00                 	db	0
  6328  00F292  00                 	db	0
  6329  00F293  00                 	db	0
  6330  00F294  00                 	db	0
  6331  00F295  00                 	db	0
  6332  00F296  00                 	db	0
  6333  00F297  00                 	db	0
  6334  00F298  00                 	db	0
  6335  00F299  00                 	db	0
  6336  00F29A  38                 	db	56
  6337  00F29B  00                 	db	0
  6338  00F29C  00                 	db	0
  6339  00F29D  00                 	db	0
  6340  00F29E  38                 	db	56
  6341  00F29F  00                 	db	0
  6342  00F2A0  00                 	db	0
  6343  00F2A1  00                 	db	0
  6344  00F2A2  38                 	db	56
  6345  00F2A3  00                 	db	0
  6346  00F2A4  00                 	db	0
  6347  00F2A5  00                 	db	0
  6348  00F2A6  7F                 	db	127
  6349  00F2A7  00                 	db	0
  6350  00F2A8  00                 	db	0
  6351  00F2A9  00                 	db	0
  6352  00F2AA  7F                 	db	127
  6353  00F2AB  00                 	db	0
  6354  00F2AC  00                 	db	0
  6355  00F2AD  00                 	db	0
  6356  00F2AE  38                 	db	56
  6357  00F2AF  00                 	db	0
  6358  00F2B0  00                 	db	0
  6359  00F2B1  00                 	db	0
  6360  00F2B2  38                 	db	56
  6361  00F2B3  00                 	db	0
  6362  00F2B4  00                 	db	0
  6363  00F2B5  00                 	db	0
  6364  00F2B6  38                 	db	56
  6365  00F2B7  00                 	db	0
  6366  00F2B8  00                 	db	0
  6367  00F2B9  00                 	db	0
  6368  00F2BA  38                 	db	56
  6369  00F2BB  00                 	db	0
  6370  00F2BC  00                 	db	0
  6371  00F2BD  00                 	db	0
  6372  00F2BE  38                 	db	56
  6373  00F2BF  00                 	db	0
  6374  00F2C0  00                 	db	0
  6375  00F2C1  00                 	db	0
  6376  00F2C2  38                 	db	56
  6377  00F2C3  00                 	db	0
  6378  00F2C4  00                 	db	0
  6379  00F2C5  00                 	db	0
  6380  00F2C6  3F                 	db	63
  6381  00F2C7  00                 	db	0
  6382  00F2C8  00                 	db	0
  6383  00F2C9  00                 	db	0
  6384  00F2CA  1F                 	db	31
  6385  00F2CB  00                 	db	0
  6386  00F2CC  00                 	db	0
  6387  00F2CD  00                 	db	0
  6388  00F2CE  00                 	db	0
  6389  00F2CF  00                 	db	0
  6390  00F2D0  00                 	db	0
  6391  00F2D1  00                 	db	0
  6392  00F2D2  00                 	db	0
  6393  00F2D3  00                 	db	0
  6394  00F2D4  00                 	db	0
  6395  00F2D5  00                 	db	0
  6396  00F2D6  00                 	db	0
  6397  00F2D7  00                 	db	0
  6398  00F2D8  00                 	db	0
  6399  00F2D9  00                 	db	0
  6400  00F2DA  00                 	db	0
  6401  00F2DB  00                 	db	0
  6402  00F2DC  00                 	db	0
  6403  00F2DD  00                 	db	0
  6404  00F2DE  10                 	db	16
  6405  00F2DF  00                 	db	0
  6406  00F2E0  00                 	db	0
  6407  00F2E1  00                 	db	0
  6408  00F2E2  00                 	db	0
  6409  00F2E3  00                 	db	0
  6410  00F2E4  00                 	db	0
  6411  00F2E5  00                 	db	0
  6412  00F2E6  00                 	db	0
  6413  00F2E7  00                 	db	0
  6414  00F2E8  00                 	db	0
  6415  00F2E9  00                 	db	0
  6416  00F2EA  00                 	db	0
  6417  00F2EB  00                 	db	0
  6418  00F2EC  00                 	db	0
  6419  00F2ED  00                 	db	0
  6420  00F2EE  00                 	db	0
  6421  00F2EF  00                 	db	0
  6422  00F2F0  00                 	db	0
  6423  00F2F1  00                 	db	0
  6424  00F2F2  00                 	db	0
  6425  00F2F3  00                 	db	0
  6426  00F2F4  00                 	db	0
  6427  00F2F5  00                 	db	0
  6428  00F2F6  00                 	db	0
  6429  00F2F7  00                 	db	0
  6430  00F2F8  00                 	db	0
  6431  00F2F9  00                 	db	0
  6432  00F2FA  00                 	db	0
  6433  00F2FB  00                 	db	0
  6434  00F2FC  00                 	db	0
  6435  00F2FD  00                 	db	0
  6436  00F2FE  00                 	db	0
  6437  00F2FF  00                 	db	0
  6438  00F300  00                 	db	0
  6439  00F301  00                 	db	0
  6440  00F302  00                 	db	0
  6441  00F303  00                 	db	0
  6442  00F304  00                 	db	0
  6443  00F305  00                 	db	0
  6444  00F306  00                 	db	0
  6445  00F307  1E                 	db	30
  6446  00F308  06                 	db	6
  6447  00F309  00                 	db	0
  6448  00F30A  00                 	db	0
  6449  00F30B  3F                 	db	63
  6450  00F30C  06                 	db	6
  6451  00F30D  00                 	db	0
  6452  00F30E  00                 	db	0
  6453  00F30F  33                 	db	51
  6454  00F310  86                 	db	134
  6455  00F311  00                 	db	0
  6456  00F312  00                 	db	0
  6457  00F313  61                 	db	97
  6458  00F314  CC                 	db	204
  6459  00F315  00                 	db	0
  6460  00F316  00                 	db	0
  6461  00F317  60                 	db	96
  6462  00F318  FC                 	db	252
  6463  00F319  00                 	db	0
  6464  00F31A  00                 	db	0
  6465  00F31B  60                 	db	96
  6466  00F31C  78                 	db	120
  6467  00F31D  00                 	db	0
  6468  00F31E  00                 	db	0
  6469  00F31F  00                 	db	0
  6470  00F320  00                 	db	0
  6471  00F321  00                 	db	0
  6472  00F322  00                 	db	0
  6473  00F323  00                 	db	0
  6474  00F324  00                 	db	0
  6475  00F325  00                 	db	0
  6476  00F326  00                 	db	0
  6477  00F327  00                 	db	0
  6478  00F328  00                 	db	0
  6479  00F329  00                 	db	0
  6480  00F32A  00                 	db	0
  6481  00F32B  00                 	db	0
  6482  00F32C  00                 	db	0
  6483  00F32D  00                 	db	0
  6484  00F32E  00                 	db	0
  6485  00F32F  00                 	db	0
  6486  00F330  00                 	db	0
  6487  00F331  00                 	db	0
  6488  00F332  00                 	db	0
  6489  00F333  00                 	db	0
  6490  00F334  00                 	db	0
  6491  00F335  00                 	db	0
  6492  00F336  00                 	db	0
  6493  00F337  00                 	db	0
  6494  00F338  00                 	db	0
  6495  00F339  00                 	db	0
  6496  00F33A  00                 	db	0
  6497  00F33B  0A                 	db	10
  6498  00F33C  00                 	db	0
  6499  00F33D  00                 	db	0
  6500  00F33E  00                 	db	0
  6501  00F33F  00                 	db	0
  6502  00F340  00                 	db	0
  6503  00F341  00                 	db	0
  6504  00F342  00                 	db	0
  6505  00F343  00                 	db	0
  6506  00F344  00                 	db	0
  6507  00F345  00                 	db	0
  6508  00F346  00                 	db	0
  6509  00F347  00                 	db	0
  6510  00F348  00                 	db	0
  6511  00F349  00                 	db	0
  6512  00F34A  00                 	db	0
  6513  00F34B  00                 	db	0
  6514  00F34C  00                 	db	0
  6515  00F34D  00                 	db	0
  6516  00F34E  00                 	db	0
  6517  00F34F  00                 	db	0
  6518  00F350  1E                 	db	30
  6519  00F351  00                 	db	0
  6520  00F352  00                 	db	0
  6521  00F353  00                 	db	0
  6522  00F354  3F                 	db	63
  6523  00F355  00                 	db	0
  6524  00F356  00                 	db	0
  6525  00F357  00                 	db	0
  6526  00F358  61                 	db	97
  6527  00F359  80                 	db	128
  6528  00F35A  00                 	db	0
  6529  00F35B  00                 	db	0
  6530  00F35C  61                 	db	97
  6531  00F35D  80                 	db	128
  6532  00F35E  00                 	db	0
  6533  00F35F  00                 	db	0
  6534  00F360  71                 	db	113
  6535  00F361  80                 	db	128
  6536  00F362  00                 	db	0
  6537  00F363  00                 	db	0
  6538  00F364  3F                 	db	63
  6539  00F365  00                 	db	0
  6540  00F366  00                 	db	0
  6541  00F367  00                 	db	0
  6542  00F368  1E                 	db	30
  6543  00F369  00                 	db	0
  6544  00F36A  00                 	db	0
  6545  00F36B  00                 	db	0
  6546  00F36C  00                 	db	0
  6547  00F36D  00                 	db	0
  6548  00F36E  00                 	db	0
  6549  00F36F  00                 	db	0
  6550  00F370  00                 	db	0
  6551  00F371  00                 	db	0
  6552  00F372  00                 	db	0
  6553  00F373  00                 	db	0
  6554  00F374  00                 	db	0
  6555  00F375  00                 	db	0
  6556  00F376  00                 	db	0
  6557  00F377  00                 	db	0
  6558  00F378  00                 	db	0
  6559  00F379  00                 	db	0
  6560  00F37A  00                 	db	0
  6561  00F37B  00                 	db	0
  6562  00F37C  00                 	db	0
  6563  00F37D  00                 	db	0
  6564  00F37E  00                 	db	0
  6565  00F37F  00                 	db	0
  6566  00F380  00                 	db	0
  6567  00F381  00                 	db	0
  6568  00F382  00                 	db	0
  6569  00F383  00                 	db	0
  6570  00F384  00                 	db	0
  6571  00F385  00                 	db	0
  6572  00F386  00                 	db	0
  6573  00F387  00                 	db	0
  6574  00F388  00                 	db	0
  6575  00F389  00                 	db	0
  6576  00F38A  00                 	db	0
  6577  00F38B  00                 	db	0
  6578  00F38C  00                 	db	0
  6579  00F38D  00                 	db	0
  6580  00F38E  00                 	db	0
  6581  00F38F  00                 	db	0
  6582  00F390  00                 	db	0
  6583  00F391  00                 	db	0
  6584  00F392  00                 	db	0
  6585  00F393  00                 	db	0
  6586  00F394  00                 	db	0
  6587  00F395  00                 	db	0
  6588  00F396  00                 	db	0
  6589  00F397  00                 	db	0
  6590  00F398  08                 	db	8
  6591  00F399  3F                 	db	63
  6592  00F39A  00                 	db	0
  6593  00F39B  00                 	db	0
  6594  00F39C  00                 	db	0
  6595  00F39D  3F                 	db	63
  6596  00F39E  00                 	db	0
  6597  00F39F  00                 	db	0
  6598  00F3A0  00                 	db	0
  6599  00F3A1  3E                 	db	62
  6600  00F3A2  00                 	db	0
  6601  00F3A3  00                 	db	0
  6602  00F3A4  00                 	db	0
  6603  00F3A5  7E                 	db	126
  6604  00F3A6  00                 	db	0
  6605  00F3A7  00                 	db	0
  6606  00F3A8  00                 	db	0
  6607  00F3A9  7C                 	db	124
  6608  00F3AA  00                 	db	0
  6609  00F3AB  00                 	db	0
  6610  00F3AC  00                 	db	0
  6611  00F3AD  7C                 	db	124
  6612  00F3AE  00                 	db	0
  6613  00F3AF  00                 	db	0
  6614  00F3B0  00                 	db	0
  6615  00F3B1  78                 	db	120
  6616  00F3B2  00                 	db	0
  6617  00F3B3  00                 	db	0
  6618  00F3B4  00                 	db	0
  6619  00F3B5  78                 	db	120
  6620  00F3B6  00                 	db	0
  6621  00F3B7  00                 	db	0
  6622  00F3B8  00                 	db	0
  6623  00F3B9  73                 	db	115
  6624  00F3BA  00                 	db	0
  6625  00F3BB  00                 	db	0
  6626  00F3BC  00                 	db	0
  6627  00F3BD  FF                 	db	255
  6628  00F3BE  00                 	db	0
  6629  00F3BF  00                 	db	0
  6630  00F3C0  00                 	db	0
  6631  00F3C1  FA                 	db	250
  6632  00F3C2  00                 	db	0
  6633  00F3C3  00                 	db	0
  6634  00F3C4  00                 	db	0
  6635  00F3C5  F6                 	db	246
  6636  00F3C6  00                 	db	0
  6637  00F3C7  00                 	db	0
  6638  00F3C8  00                 	db	0
  6639  00F3C9  C6                 	db	198
  6640  00F3CA  00                 	db	0
  6641  00F3CB  00                 	db	0
  6642  00F3CC  00                 	db	0
  6643  00F3CD  0C                 	db	12
  6644  00F3CE  00                 	db	0
  6645  00F3CF  00                 	db	0
  6646  00F3D0  00                 	db	0
  6647  00F3D1  0C                 	db	12
  6648  00F3D2  00                 	db	0
  6649  00F3D3  00                 	db	0
  6650  00F3D4  00                 	db	0
  6651  00F3D5  18                 	db	24
  6652  00F3D6  00                 	db	0
  6653  00F3D7  00                 	db	0
  6654  00F3D8  00                 	db	0
  6655  00F3D9  18                 	db	24
  6656  00F3DA  00                 	db	0
  6657  00F3DB  00                 	db	0
  6658  00F3DC  00                 	db	0
  6659  00F3DD  FF                 	db	255
  6660  00F3DE  00                 	db	0
  6661  00F3DF  00                 	db	0
  6662  00F3E0  00                 	db	0
  6663  00F3E1  7E                 	db	126
  6664  00F3E2  00                 	db	0
  6665  00F3E3  00                 	db	0
  6666  00F3E4  00                 	db	0
  6667  00F3E5  7C                 	db	124
  6668  00F3E6  00                 	db	0
  6669  00F3E7  00                 	db	0
  6670  00F3E8  00                 	db	0
  6671  00F3E9  38                 	db	56
  6672  00F3EA  00                 	db	0
  6673  00F3EB  00                 	db	0
  6674  00F3EC  00                 	db	0
  6675  00F3ED  30                 	db	48
  6676  00F3EE  00                 	db	0
  6677  00F3EF  00                 	db	0
  6678  00F3F0  00                 	db	0
  6679  00F3F1  00                 	db	0
  6680  00F3F2  00                 	db	0
  6681  00F3F3  00                 	db	0
  6682  00F3F4  00                 	db	0
  6683  00F3F5  20                 	db	32
  6684  00F3F6  00                 	db	0
  6685  00F3F7  C0                 	db	192
  6686  00F3F8  00                 	db	0
  6687  00F3F9  00                 	db	0
  6688  00F3FA  04                 	db	4
  6689  00F3FB  C8                 	db	200
  6690  00F3FC  00                 	db	0
  6691  00F3FD  00                 	db	0
  6692  00F3FE  06                 	db	6
  6693  00F3FF  D8                 	db	216
  6694  00F400  00                 	db	0
  6695  00F401  00                 	db	0
  6696  00F402  13                 	db	19
  6697  00F403  F2                 	db	242
  6698  00F404  00                 	db	0
  6699  00F405  00                 	db	0
  6700  00F406  11                 	db	17
  6701  00F407  E2                 	db	226
  6702  00F408  00                 	db	0
  6703  00F409  00                 	db	0
  6704  00F40A  B0                 	db	176
  6705  00F40B  C3                 	db	195
  6706  00F40C  40                 	db	64
  6707  00F40D  00                 	db	0
  6708  00F40E  F8                 	db	248
  6709  00F40F  C7                 	db	199
  6710  00F410  C0                 	db	192
  6711  00F411  00                 	db	0
  6712  00F412  78                 	db	120
  6713  00F413  C7                 	db	199
  6714  00F414  80                 	db	128
  6715  00F415  00                 	db	0
  6716  00F416  FC                 	db	252
  6717  00F417  CF                 	db	207
  6718  00F418  C0                 	db	192
  6719  00F419  00                 	db	0
  6720  00F41A  CF                 	db	207
  6721  00F41B  FC                 	db	252
  6722  00F41C  C0                 	db	192
  6723  00F41D  00                 	db	0
  6724  00F41E  07                 	db	7
  6725  00F41F  F8                 	db	248
  6726  00F420  00                 	db	0
  6727  00F421  00                 	db	0
  6728  00F422  03                 	db	3
  6729  00F423  F0                 	db	240
  6730  00F424  00                 	db	0
  6731  00F425  00                 	db	0
  6732  00F426  07                 	db	7
  6733  00F427  F8                 	db	248
  6734  00F428  00                 	db	0
  6735  00F429  00                 	db	0
  6736  00F42A  CF                 	db	207
  6737  00F42B  FC                 	db	252
  6738  00F42C  C0                 	db	192
  6739  00F42D  00                 	db	0
  6740  00F42E  FC                 	db	252
  6741  00F42F  CF                 	db	207
  6742  00F430  C0                 	db	192
  6743  00F431  00                 	db	0
  6744  00F432  78                 	db	120
  6745  00F433  C7                 	db	199
  6746  00F434  80                 	db	128
  6747  00F435  00                 	db	0
  6748  00F436  F8                 	db	248
  6749  00F437  C7                 	db	199
  6750  00F438  C0                 	db	192
  6751  00F439  00                 	db	0
  6752  00F43A  B1                 	db	177
  6753  00F43B  E3                 	db	227
  6754  00F43C  40                 	db	64
  6755  00F43D  00                 	db	0
  6756  00F43E  13                 	db	19
  6757  00F43F  F2                 	db	242
  6758  00F440  00                 	db	0
  6759  00F441  00                 	db	0
  6760  00F442  06                 	db	6
  6761  00F443  D8                 	db	216
  6762  00F444  00                 	db	0
  6763  00F445  00                 	db	0
  6764  00F446  04                 	db	4
  6765  00F447  C8                 	db	200
  6766  00F448  00                 	db	0
  6767  00F449  00                 	db	0
  6768  00F44A  00                 	db	0
  6769  00F44B  C0                 	db	192
  6770  00F44C  00                 	db	0
  6771  00F44D  00                 	db	0
  6772  00F44E  00                 	db	0
  6773  00F44F  00                 	db	0
  6774  00F450  00                 	db	0
  6775  00F451  00                 	db	0
  6776  00F452                     __end_of_font23:
  6777                           	opt stack 0
  6778  00F452                     _font13:
  6779                           	opt stack 0
  6780  00F452  0D                 	db	13
  6781  00F453  10                 	db	16
  6782  00F454  1B                 	db	27
  6783  00F455  04                 	db	4
  6784  00F456  00                 	db	0
  6785  00F457  00                 	db	0
  6786  00F458  00                 	db	0
  6787  00F459  00                 	db	0
  6788  00F45A  00                 	db	0
  6789  00F45B  00                 	db	0
  6790  00F45C  00                 	db	0
  6791  00F45D  00                 	db	0
  6792  00F45E  00                 	db	0
  6793  00F45F  00                 	db	0
  6794  00F460  00                 	db	0
  6795  00F461  00                 	db	0
  6796  00F462  00                 	db	0
  6797  00F463  00                 	db	0
  6798  00F464  00                 	db	0
  6799  00F465  00                 	db	0
  6800  00F466  00                 	db	0
  6801  00F467  00                 	db	0
  6802  00F468  00                 	db	0
  6803  00F469  00                 	db	0
  6804  00F46A  00                 	db	0
  6805  00F46B  00                 	db	0
  6806  00F46C  00                 	db	0
  6807  00F46D  00                 	db	0
  6808  00F46E  00                 	db	0
  6809  00F46F  00                 	db	0
  6810  00F470  04                 	db	4
  6811  00F471  00                 	db	0
  6812  00F472  00                 	db	0
  6813  00F473  00                 	db	0
  6814  00F474  00                 	db	0
  6815  00F475  60                 	db	96
  6816  00F476  00                 	db	0
  6817  00F477  60                 	db	96
  6818  00F478  00                 	db	0
  6819  00F479  60                 	db	96
  6820  00F47A  00                 	db	0
  6821  00F47B  60                 	db	96
  6822  00F47C  00                 	db	0
  6823  00F47D  60                 	db	96
  6824  00F47E  00                 	db	0
  6825  00F47F  60                 	db	96
  6826  00F480  00                 	db	0
  6827  00F481  60                 	db	96
  6828  00F482  00                 	db	0
  6829  00F483  00                 	db	0
  6830  00F484  00                 	db	0
  6831  00F485  60                 	db	96
  6832  00F486  00                 	db	0
  6833  00F487  00                 	db	0
  6834  00F488  00                 	db	0
  6835  00F489  00                 	db	0
  6836  00F48A  00                 	db	0
  6837  00F48B  06                 	db	6
  6838  00F48C  00                 	db	0
  6839  00F48D  00                 	db	0
  6840  00F48E  00                 	db	0
  6841  00F48F  00                 	db	0
  6842  00F490  6C                 	db	108
  6843  00F491  00                 	db	0
  6844  00F492  6C                 	db	108
  6845  00F493  00                 	db	0
  6846  00F494  6C                 	db	108
  6847  00F495  00                 	db	0
  6848  00F496  00                 	db	0
  6849  00F497  00                 	db	0
  6850  00F498  00                 	db	0
  6851  00F499  00                 	db	0
  6852  00F49A  00                 	db	0
  6853  00F49B  00                 	db	0
  6854  00F49C  00                 	db	0
  6855  00F49D  00                 	db	0
  6856  00F49E  00                 	db	0
  6857  00F49F  00                 	db	0
  6858  00F4A0  00                 	db	0
  6859  00F4A1  00                 	db	0
  6860  00F4A2  00                 	db	0
  6861  00F4A3  00                 	db	0
  6862  00F4A4  00                 	db	0
  6863  00F4A5  00                 	db	0
  6864  00F4A6  08                 	db	8
  6865  00F4A7  00                 	db	0
  6866  00F4A8  00                 	db	0
  6867  00F4A9  00                 	db	0
  6868  00F4AA  00                 	db	0
  6869  00F4AB  36                 	db	54
  6870  00F4AC  00                 	db	0
  6871  00F4AD  36                 	db	54
  6872  00F4AE  00                 	db	0
  6873  00F4AF  7F                 	db	127
  6874  00F4B0  00                 	db	0
  6875  00F4B1  36                 	db	54
  6876  00F4B2  00                 	db	0
  6877  00F4B3  36                 	db	54
  6878  00F4B4  00                 	db	0
  6879  00F4B5  36                 	db	54
  6880  00F4B6  00                 	db	0
  6881  00F4B7  7F                 	db	127
  6882  00F4B8  00                 	db	0
  6883  00F4B9  36                 	db	54
  6884  00F4BA  00                 	db	0
  6885  00F4BB  36                 	db	54
  6886  00F4BC  00                 	db	0
  6887  00F4BD  00                 	db	0
  6888  00F4BE  00                 	db	0
  6889  00F4BF  00                 	db	0
  6890  00F4C0  00                 	db	0
  6891  00F4C1  07                 	db	7
  6892  00F4C2  00                 	db	0
  6893  00F4C3  00                 	db	0
  6894  00F4C4  00                 	db	0
  6895  00F4C5  00                 	db	0
  6896  00F4C6  18                 	db	24
  6897  00F4C7  00                 	db	0
  6898  00F4C8  3C                 	db	60
  6899  00F4C9  00                 	db	0
  6900  00F4CA  7E                 	db	126
  6901  00F4CB  00                 	db	0
  6902  00F4CC  78                 	db	120
  6903  00F4CD  00                 	db	0
  6904  00F4CE  38                 	db	56
  6905  00F4CF  00                 	db	0
  6906  00F4D0  1C                 	db	28
  6907  00F4D1  00                 	db	0
  6908  00F4D2  1E                 	db	30
  6909  00F4D3  00                 	db	0
  6910  00F4D4  7E                 	db	126
  6911  00F4D5  00                 	db	0
  6912  00F4D6  3C                 	db	60
  6913  00F4D7  00                 	db	0
  6914  00F4D8  18                 	db	24
  6915  00F4D9  00                 	db	0
  6916  00F4DA  00                 	db	0
  6917  00F4DB  00                 	db	0
  6918  00F4DC  09                 	db	9
  6919  00F4DD  00                 	db	0
  6920  00F4DE  00                 	db	0
  6921  00F4DF  00                 	db	0
  6922  00F4E0  00                 	db	0
  6923  00F4E1  38                 	db	56
  6924  00F4E2  00                 	db	0
  6925  00F4E3  6D                 	db	109
  6926  00F4E4  80                 	db	128
  6927  00F4E5  3B                 	db	59
  6928  00F4E6  00                 	db	0
  6929  00F4E7  06                 	db	6
  6930  00F4E8  00                 	db	0
  6931  00F4E9  0C                 	db	12
  6932  00F4EA  00                 	db	0
  6933  00F4EB  18                 	db	24
  6934  00F4EC  00                 	db	0
  6935  00F4ED  37                 	db	55
  6936  00F4EE  00                 	db	0
  6937  00F4EF  6D                 	db	109
  6938  00F4F0  80                 	db	128
  6939  00F4F1  07                 	db	7
  6940  00F4F2  00                 	db	0
  6941  00F4F3  00                 	db	0
  6942  00F4F4  00                 	db	0
  6943  00F4F5  00                 	db	0
  6944  00F4F6  00                 	db	0
  6945  00F4F7  07                 	db	7
  6946  00F4F8  00                 	db	0
  6947  00F4F9  00                 	db	0
  6948  00F4FA  00                 	db	0
  6949  00F4FB  00                 	db	0
  6950  00F4FC  30                 	db	48
  6951  00F4FD  00                 	db	0
  6952  00F4FE  78                 	db	120
  6953  00F4FF  00                 	db	0
  6954  00F500  78                 	db	120
  6955  00F501  00                 	db	0
  6956  00F502  30                 	db	48
  6957  00F503  00                 	db	0
  6958  00F504  30                 	db	48
  6959  00F505  00                 	db	0
  6960  00F506  7E                 	db	126
  6961  00F507  00                 	db	0
  6962  00F508  6C                 	db	108
  6963  00F509  00                 	db	0
  6964  00F50A  6C                 	db	108
  6965  00F50B  00                 	db	0
  6966  00F50C  3E                 	db	62
  6967  00F50D  00                 	db	0
  6968  00F50E  00                 	db	0
  6969  00F50F  00                 	db	0
  6970  00F510  00                 	db	0
  6971  00F511  00                 	db	0
  6972  00F512  03                 	db	3
  6973  00F513  00                 	db	0
  6974  00F514  00                 	db	0
  6975  00F515  00                 	db	0
  6976  00F516  00                 	db	0
  6977  00F517  60                 	db	96
  6978  00F518  00                 	db	0
  6979  00F519  60                 	db	96
  6980  00F51A  00                 	db	0
  6981  00F51B  60                 	db	96
  6982  00F51C  00                 	db	0
  6983  00F51D  00                 	db	0
  6984  00F51E  00                 	db	0
  6985  00F51F  00                 	db	0
  6986  00F520  00                 	db	0
  6987  00F521  00                 	db	0
  6988  00F522  00                 	db	0
  6989  00F523  00                 	db	0
  6990  00F524  00                 	db	0
  6991  00F525  00                 	db	0
  6992  00F526  00                 	db	0
  6993  00F527  00                 	db	0
  6994  00F528  00                 	db	0
  6995  00F529  00                 	db	0
  6996  00F52A  00                 	db	0
  6997  00F52B  00                 	db	0
  6998  00F52C  00                 	db	0
  6999  00F52D  04                 	db	4
  7000  00F52E  00                 	db	0
  7001  00F52F  00                 	db	0
  7002  00F530  00                 	db	0
  7003  00F531  00                 	db	0
  7004  00F532  30                 	db	48
  7005  00F533  00                 	db	0
  7006  00F534  60                 	db	96
  7007  00F535  00                 	db	0
  7008  00F536  60                 	db	96
  7009  00F537  00                 	db	0
  7010  00F538  60                 	db	96
  7011  00F539  00                 	db	0
  7012  00F53A  60                 	db	96
  7013  00F53B  00                 	db	0
  7014  00F53C  60                 	db	96
  7015  00F53D  00                 	db	0
  7016  00F53E  60                 	db	96
  7017  00F53F  00                 	db	0
  7018  00F540  60                 	db	96
  7019  00F541  00                 	db	0
  7020  00F542  60                 	db	96
  7021  00F543  00                 	db	0
  7022  00F544  60                 	db	96
  7023  00F545  00                 	db	0
  7024  00F546  30                 	db	48
  7025  00F547  00                 	db	0
  7026  00F548  04                 	db	4
  7027  00F549  00                 	db	0
  7028  00F54A  00                 	db	0
  7029  00F54B  00                 	db	0
  7030  00F54C  00                 	db	0
  7031  00F54D  60                 	db	96
  7032  00F54E  00                 	db	0
  7033  00F54F  30                 	db	48
  7034  00F550  00                 	db	0
  7035  00F551  30                 	db	48
  7036  00F552  00                 	db	0
  7037  00F553  30                 	db	48
  7038  00F554  00                 	db	0
  7039  00F555  30                 	db	48
  7040  00F556  00                 	db	0
  7041  00F557  30                 	db	48
  7042  00F558  00                 	db	0
  7043  00F559  30                 	db	48
  7044  00F55A  00                 	db	0
  7045  00F55B  30                 	db	48
  7046  00F55C  00                 	db	0
  7047  00F55D  30                 	db	48
  7048  00F55E  00                 	db	0
  7049  00F55F  30                 	db	48
  7050  00F560  00                 	db	0
  7051  00F561  60                 	db	96
  7052  00F562  00                 	db	0
  7053  00F563  05                 	db	5
  7054  00F564  00                 	db	0
  7055  00F565  00                 	db	0
  7056  00F566  00                 	db	0
  7057  00F567  00                 	db	0
  7058  00F568  78                 	db	120
  7059  00F569  00                 	db	0
  7060  00F56A  30                 	db	48
  7061  00F56B  00                 	db	0
  7062  00F56C  78                 	db	120
  7063  00F56D  00                 	db	0
  7064  00F56E  00                 	db	0
  7065  00F56F  00                 	db	0
  7066  00F570  00                 	db	0
  7067  00F571  00                 	db	0
  7068  00F572  00                 	db	0
  7069  00F573  00                 	db	0
  7070  00F574  00                 	db	0
  7071  00F575  00                 	db	0
  7072  00F576  00                 	db	0
  7073  00F577  00                 	db	0
  7074  00F578  00                 	db	0
  7075  00F579  00                 	db	0
  7076  00F57A  00                 	db	0
  7077  00F57B  00                 	db	0
  7078  00F57C  00                 	db	0
  7079  00F57D  00                 	db	0
  7080  00F57E  07                 	db	7
  7081  00F57F  00                 	db	0
  7082  00F580  00                 	db	0
  7083  00F581  00                 	db	0
  7084  00F582  00                 	db	0
  7085  00F583  00                 	db	0
  7086  00F584  00                 	db	0
  7087  00F585  00                 	db	0
  7088  00F586  00                 	db	0
  7089  00F587  00                 	db	0
  7090  00F588  00                 	db	0
  7091  00F589  18                 	db	24
  7092  00F58A  00                 	db	0
  7093  00F58B  18                 	db	24
  7094  00F58C  00                 	db	0
  7095  00F58D  7E                 	db	126
  7096  00F58E  00                 	db	0
  7097  00F58F  18                 	db	24
  7098  00F590  00                 	db	0
  7099  00F591  18                 	db	24
  7100  00F592  00                 	db	0
  7101  00F593  00                 	db	0
  7102  00F594  00                 	db	0
  7103  00F595  00                 	db	0
  7104  00F596  00                 	db	0
  7105  00F597  00                 	db	0
  7106  00F598  00                 	db	0
  7107  00F599  04                 	db	4
  7108  00F59A  00                 	db	0
  7109  00F59B  00                 	db	0
  7110  00F59C  00                 	db	0
  7111  00F59D  00                 	db	0
  7112  00F59E  00                 	db	0
  7113  00F59F  00                 	db	0
  7114  00F5A0  00                 	db	0
  7115  00F5A1  00                 	db	0
  7116  00F5A2  00                 	db	0
  7117  00F5A3  00                 	db	0
  7118  00F5A4  00                 	db	0
  7119  00F5A5  00                 	db	0
  7120  00F5A6  00                 	db	0
  7121  00F5A7  00                 	db	0
  7122  00F5A8  00                 	db	0
  7123  00F5A9  00                 	db	0
  7124  00F5AA  00                 	db	0
  7125  00F5AB  00                 	db	0
  7126  00F5AC  00                 	db	0
  7127  00F5AD  00                 	db	0
  7128  00F5AE  30                 	db	48
  7129  00F5AF  00                 	db	0
  7130  00F5B0  60                 	db	96
  7131  00F5B1  00                 	db	0
  7132  00F5B2  00                 	db	0
  7133  00F5B3  00                 	db	0
  7134  00F5B4  04                 	db	4
  7135  00F5B5  00                 	db	0
  7136  00F5B6  00                 	db	0
  7137  00F5B7  00                 	db	0
  7138  00F5B8  00                 	db	0
  7139  00F5B9  00                 	db	0
  7140  00F5BA  00                 	db	0
  7141  00F5BB  00                 	db	0
  7142  00F5BC  00                 	db	0
  7143  00F5BD  00                 	db	0
  7144  00F5BE  00                 	db	0
  7145  00F5BF  00                 	db	0
  7146  00F5C0  00                 	db	0
  7147  00F5C1  00                 	db	0
  7148  00F5C2  00                 	db	0
  7149  00F5C3  70                 	db	112
  7150  00F5C4  00                 	db	0
  7151  00F5C5  00                 	db	0
  7152  00F5C6  00                 	db	0
  7153  00F5C7  00                 	db	0
  7154  00F5C8  00                 	db	0
  7155  00F5C9  00                 	db	0
  7156  00F5CA  00                 	db	0
  7157  00F5CB  00                 	db	0
  7158  00F5CC  00                 	db	0
  7159  00F5CD  00                 	db	0
  7160  00F5CE  00                 	db	0
  7161  00F5CF  04                 	db	4
  7162  00F5D0  00                 	db	0
  7163  00F5D1  00                 	db	0
  7164  00F5D2  00                 	db	0
  7165  00F5D3  00                 	db	0
  7166  00F5D4  00                 	db	0
  7167  00F5D5  00                 	db	0
  7168  00F5D6  00                 	db	0
  7169  00F5D7  00                 	db	0
  7170  00F5D8  00                 	db	0
  7171  00F5D9  00                 	db	0
  7172  00F5DA  00                 	db	0
  7173  00F5DB  00                 	db	0
  7174  00F5DC  00                 	db	0
  7175  00F5DD  00                 	db	0
  7176  00F5DE  00                 	db	0
  7177  00F5DF  00                 	db	0
  7178  00F5E0  00                 	db	0
  7179  00F5E1  00                 	db	0
  7180  00F5E2  00                 	db	0
  7181  00F5E3  00                 	db	0
  7182  00F5E4  60                 	db	96
  7183  00F5E5  00                 	db	0
  7184  00F5E6  00                 	db	0
  7185  00F5E7  00                 	db	0
  7186  00F5E8  00                 	db	0
  7187  00F5E9  00                 	db	0
  7188  00F5EA  06                 	db	6
  7189  00F5EB  00                 	db	0
  7190  00F5EC  00                 	db	0
  7191  00F5ED  00                 	db	0
  7192  00F5EE  00                 	db	0
  7193  00F5EF  0C                 	db	12
  7194  00F5F0  00                 	db	0
  7195  00F5F1  0C                 	db	12
  7196  00F5F2  00                 	db	0
  7197  00F5F3  0C                 	db	12
  7198  00F5F4  00                 	db	0
  7199  00F5F5  18                 	db	24
  7200  00F5F6  00                 	db	0
  7201  00F5F7  18                 	db	24
  7202  00F5F8  00                 	db	0
  7203  00F5F9  30                 	db	48
  7204  00F5FA  00                 	db	0
  7205  00F5FB  30                 	db	48
  7206  00F5FC  00                 	db	0
  7207  00F5FD  60                 	db	96
  7208  00F5FE  00                 	db	0
  7209  00F5FF  60                 	db	96
  7210  00F600  00                 	db	0
  7211  00F601  00                 	db	0
  7212  00F602  00                 	db	0
  7213  00F603  00                 	db	0
  7214  00F604  00                 	db	0
  7215  00F605  07                 	db	7
  7216  00F606  00                 	db	0
  7217  00F607  00                 	db	0
  7218  00F608  00                 	db	0
  7219  00F609  00                 	db	0
  7220  00F60A  3C                 	db	60
  7221  00F60B  00                 	db	0
  7222  00F60C  66                 	db	102
  7223  00F60D  00                 	db	0
  7224  00F60E  66                 	db	102
  7225  00F60F  00                 	db	0
  7226  00F610  66                 	db	102
  7227  00F611  00                 	db	0
  7228  00F612  66                 	db	102
  7229  00F613  00                 	db	0
  7230  00F614  66                 	db	102
  7231  00F615  00                 	db	0
  7232  00F616  66                 	db	102
  7233  00F617  00                 	db	0
  7234  00F618  66                 	db	102
  7235  00F619  00                 	db	0
  7236  00F61A  3C                 	db	60
  7237  00F61B  00                 	db	0
  7238  00F61C  00                 	db	0
  7239  00F61D  00                 	db	0
  7240  00F61E  00                 	db	0
  7241  00F61F  00                 	db	0
  7242  00F620  07                 	db	7
  7243  00F621  00                 	db	0
  7244  00F622  00                 	db	0
  7245  00F623  00                 	db	0
  7246  00F624  00                 	db	0
  7247  00F625  18                 	db	24
  7248  00F626  00                 	db	0
  7249  00F627  78                 	db	120
  7250  00F628  00                 	db	0
  7251  00F629  18                 	db	24
  7252  00F62A  00                 	db	0
  7253  00F62B  18                 	db	24
  7254  00F62C  00                 	db	0
  7255  00F62D  18                 	db	24
  7256  00F62E  00                 	db	0
  7257  00F62F  18                 	db	24
  7258  00F630  00                 	db	0
  7259  00F631  18                 	db	24
  7260  00F632  00                 	db	0
  7261  00F633  18                 	db	24
  7262  00F634  00                 	db	0
  7263  00F635  18                 	db	24
  7264  00F636  00                 	db	0
  7265  00F637  00                 	db	0
  7266  00F638  00                 	db	0
  7267  00F639  00                 	db	0
  7268  00F63A  00                 	db	0
  7269  00F63B  07                 	db	7
  7270  00F63C  00                 	db	0
  7271  00F63D  00                 	db	0
  7272  00F63E  00                 	db	0
  7273  00F63F  00                 	db	0
  7274  00F640  3C                 	db	60
  7275  00F641  00                 	db	0
  7276  00F642  66                 	db	102
  7277  00F643  00                 	db	0
  7278  00F644  06                 	db	6
  7279  00F645  00                 	db	0
  7280  00F646  06                 	db	6
  7281  00F647  00                 	db	0
  7282  00F648  0C                 	db	12
  7283  00F649  00                 	db	0
  7284  00F64A  18                 	db	24
  7285  00F64B  00                 	db	0
  7286  00F64C  30                 	db	48
  7287  00F64D  00                 	db	0
  7288  00F64E  60                 	db	96
  7289  00F64F  00                 	db	0
  7290  00F650  7E                 	db	126
  7291  00F651  00                 	db	0
  7292  00F652  00                 	db	0
  7293  00F653  00                 	db	0
  7294  00F654  00                 	db	0
  7295  00F655  00                 	db	0
  7296  00F656  07                 	db	7
  7297  00F657  00                 	db	0
  7298  00F658  00                 	db	0
  7299  00F659  00                 	db	0
  7300  00F65A  00                 	db	0
  7301  00F65B  3C                 	db	60
  7302  00F65C  00                 	db	0
  7303  00F65D  66                 	db	102
  7304  00F65E  00                 	db	0
  7305  00F65F  06                 	db	6
  7306  00F660  00                 	db	0
  7307  00F661  06                 	db	6
  7308  00F662  00                 	db	0
  7309  00F663  1C                 	db	28
  7310  00F664  00                 	db	0
  7311  00F665  06                 	db	6
  7312  00F666  00                 	db	0
  7313  00F667  06                 	db	6
  7314  00F668  00                 	db	0
  7315  00F669  66                 	db	102
  7316  00F66A  00                 	db	0
  7317  00F66B  3C                 	db	60
  7318  00F66C  00                 	db	0
  7319  00F66D  00                 	db	0
  7320  00F66E  00                 	db	0
  7321  00F66F  00                 	db	0
  7322  00F670  00                 	db	0
  7323  00F671  07                 	db	7
  7324  00F672  00                 	db	0
  7325  00F673  00                 	db	0
  7326  00F674  00                 	db	0
  7327  00F675  00                 	db	0
  7328  00F676  0C                 	db	12
  7329  00F677  00                 	db	0
  7330  00F678  1C                 	db	28
  7331  00F679  00                 	db	0
  7332  00F67A  1C                 	db	28
  7333  00F67B  00                 	db	0
  7334  00F67C  3C                 	db	60
  7335  00F67D  00                 	db	0
  7336  00F67E  3C                 	db	60
  7337  00F67F  00                 	db	0
  7338  00F680  6C                 	db	108
  7339  00F681  00                 	db	0
  7340  00F682  7E                 	db	126
  7341  00F683  00                 	db	0
  7342  00F684  0C                 	db	12
  7343  00F685  00                 	db	0
  7344  00F686  0C                 	db	12
  7345  00F687  00                 	db	0
  7346  00F688  00                 	db	0
  7347  00F689  00                 	db	0
  7348  00F68A  00                 	db	0
  7349  00F68B  00                 	db	0
  7350  00F68C  07                 	db	7
  7351  00F68D  00                 	db	0
  7352  00F68E  00                 	db	0
  7353  00F68F  00                 	db	0
  7354  00F690  00                 	db	0
  7355  00F691  7E                 	db	126
  7356  00F692  00                 	db	0
  7357  00F693  60                 	db	96
  7358  00F694  00                 	db	0
  7359  00F695  60                 	db	96
  7360  00F696  00                 	db	0
  7361  00F697  7C                 	db	124
  7362  00F698  00                 	db	0
  7363  00F699  66                 	db	102
  7364  00F69A  00                 	db	0
  7365  00F69B  06                 	db	6
  7366  00F69C  00                 	db	0
  7367  00F69D  06                 	db	6
  7368  00F69E  00                 	db	0
  7369  00F69F  66                 	db	102
  7370  00F6A0  00                 	db	0
  7371  00F6A1  3C                 	db	60
  7372  00F6A2  00                 	db	0
  7373  00F6A3  00                 	db	0
  7374  00F6A4  00                 	db	0
  7375  00F6A5  00                 	db	0
  7376  00F6A6  00                 	db	0
  7377  00F6A7  07                 	db	7
  7378  00F6A8  00                 	db	0
  7379  00F6A9  00                 	db	0
  7380  00F6AA  00                 	db	0
  7381  00F6AB  00                 	db	0
  7382  00F6AC  3C                 	db	60
  7383  00F6AD  00                 	db	0
  7384  00F6AE  66                 	db	102
  7385  00F6AF  00                 	db	0
  7386  00F6B0  60                 	db	96
  7387  00F6B1  00                 	db	0
  7388  00F6B2  60                 	db	96
  7389  00F6B3  00                 	db	0
  7390  00F6B4  7C                 	db	124
  7391  00F6B5  00                 	db	0
  7392  00F6B6  66                 	db	102
  7393  00F6B7  00                 	db	0
  7394  00F6B8  66                 	db	102
  7395  00F6B9  00                 	db	0
  7396  00F6BA  66                 	db	102
  7397  00F6BB  00                 	db	0
  7398  00F6BC  3C                 	db	60
  7399  00F6BD  00                 	db	0
  7400  00F6BE  00                 	db	0
  7401  00F6BF  00                 	db	0
  7402  00F6C0  00                 	db	0
  7403  00F6C1  00                 	db	0
  7404  00F6C2  07                 	db	7
  7405  00F6C3  00                 	db	0
  7406  00F6C4  00                 	db	0
  7407  00F6C5  00                 	db	0
  7408  00F6C6  00                 	db	0
  7409  00F6C7  7E                 	db	126
  7410  00F6C8  00                 	db	0
  7411  00F6C9  06                 	db	6
  7412  00F6CA  00                 	db	0
  7413  00F6CB  0C                 	db	12
  7414  00F6CC  00                 	db	0
  7415  00F6CD  0C                 	db	12
  7416  00F6CE  00                 	db	0
  7417  00F6CF  18                 	db	24
  7418  00F6D0  00                 	db	0
  7419  00F6D1  18                 	db	24
  7420  00F6D2  00                 	db	0
  7421  00F6D3  30                 	db	48
  7422  00F6D4  00                 	db	0
  7423  00F6D5  30                 	db	48
  7424  00F6D6  00                 	db	0
  7425  00F6D7  30                 	db	48
  7426  00F6D8  00                 	db	0
  7427  00F6D9  00                 	db	0
  7428  00F6DA  00                 	db	0
  7429  00F6DB  00                 	db	0
  7430  00F6DC  00                 	db	0
  7431  00F6DD  07                 	db	7
  7432  00F6DE  00                 	db	0
  7433  00F6DF  00                 	db	0
  7434  00F6E0  00                 	db	0
  7435  00F6E1  00                 	db	0
  7436  00F6E2  3C                 	db	60
  7437  00F6E3  00                 	db	0
  7438  00F6E4  66                 	db	102
  7439  00F6E5  00                 	db	0
  7440  00F6E6  66                 	db	102
  7441  00F6E7  00                 	db	0
  7442  00F6E8  66                 	db	102
  7443  00F6E9  00                 	db	0
  7444  00F6EA  3C                 	db	60
  7445  00F6EB  00                 	db	0
  7446  00F6EC  66                 	db	102
  7447  00F6ED  00                 	db	0
  7448  00F6EE  66                 	db	102
  7449  00F6EF  00                 	db	0
  7450  00F6F0  66                 	db	102
  7451  00F6F1  00                 	db	0
  7452  00F6F2  3C                 	db	60
  7453  00F6F3  00                 	db	0
  7454  00F6F4  00                 	db	0
  7455  00F6F5  00                 	db	0
  7456  00F6F6  00                 	db	0
  7457  00F6F7  00                 	db	0
  7458  00F6F8  07                 	db	7
  7459  00F6F9  00                 	db	0
  7460  00F6FA  00                 	db	0
  7461  00F6FB  00                 	db	0
  7462  00F6FC  00                 	db	0
  7463  00F6FD  3C                 	db	60
  7464  00F6FE  00                 	db	0
  7465  00F6FF  66                 	db	102
  7466  00F700  00                 	db	0
  7467  00F701  66                 	db	102
  7468  00F702  00                 	db	0
  7469  00F703  66                 	db	102
  7470  00F704  00                 	db	0
  7471  00F705  3E                 	db	62
  7472  00F706  00                 	db	0
  7473  00F707  06                 	db	6
  7474  00F708  00                 	db	0
  7475  00F709  06                 	db	6
  7476  00F70A  00                 	db	0
  7477  00F70B  66                 	db	102
  7478  00F70C  00                 	db	0
  7479  00F70D  3C                 	db	60
  7480  00F70E  00                 	db	0
  7481  00F70F  00                 	db	0
  7482  00F710  00                 	db	0
  7483  00F711  00                 	db	0
  7484  00F712  00                 	db	0
  7485  00F713  04                 	db	4
  7486  00F714  00                 	db	0
  7487  00F715  00                 	db	0
  7488  00F716  00                 	db	0
  7489  00F717  00                 	db	0
  7490  00F718  00                 	db	0
  7491  00F719  00                 	db	0
  7492  00F71A  00                 	db	0
  7493  00F71B  00                 	db	0
  7494  00F71C  00                 	db	0
  7495  00F71D  00                 	db	0
  7496  00F71E  60                 	db	96
  7497  00F71F  00                 	db	0
  7498  00F720  00                 	db	0
  7499  00F721  00                 	db	0
  7500  00F722  00                 	db	0
  7501  00F723  00                 	db	0
  7502  00F724  00                 	db	0
  7503  00F725  00                 	db	0
  7504  00F726  00                 	db	0
  7505  00F727  00                 	db	0
  7506  00F728  60                 	db	96
  7507  00F729  00                 	db	0
  7508  00F72A  00                 	db	0
  7509  00F72B  00                 	db	0
  7510  00F72C  00                 	db	0
  7511  00F72D  00                 	db	0
  7512  00F72E  04                 	db	4
  7513  00F72F  00                 	db	0
  7514  00F730  00                 	db	0
  7515  00F731  00                 	db	0
  7516  00F732  00                 	db	0
  7517  00F733  00                 	db	0
  7518  00F734  00                 	db	0
  7519  00F735  00                 	db	0
  7520  00F736  00                 	db	0
  7521  00F737  00                 	db	0
  7522  00F738  00                 	db	0
  7523  00F739  30                 	db	48
  7524  00F73A  00                 	db	0
  7525  00F73B  00                 	db	0
  7526  00F73C  00                 	db	0
  7527  00F73D  00                 	db	0
  7528  00F73E  00                 	db	0
  7529  00F73F  00                 	db	0
  7530  00F740  00                 	db	0
  7531  00F741  00                 	db	0
  7532  00F742  00                 	db	0
  7533  00F743  30                 	db	48
  7534  00F744  00                 	db	0
  7535  00F745  60                 	db	96
  7536  00F746  00                 	db	0
  7537  00F747  00                 	db	0
  7538  00F748  00                 	db	0
  7539  00F749  07                 	db	7
  7540  00F74A  00                 	db	0
  7541  00F74B  00                 	db	0
  7542  00F74C  00                 	db	0
  7543  00F74D  00                 	db	0
  7544  00F74E  00                 	db	0
  7545  00F74F  00                 	db	0
  7546  00F750  00                 	db	0
  7547  00F751  00                 	db	0
  7548  00F752  0C                 	db	12
  7549  00F753  00                 	db	0
  7550  00F754  18                 	db	24
  7551  00F755  00                 	db	0
  7552  00F756  30                 	db	48
  7553  00F757  00                 	db	0
  7554  00F758  60                 	db	96
  7555  00F759  00                 	db	0
  7556  00F75A  30                 	db	48
  7557  00F75B  00                 	db	0
  7558  00F75C  18                 	db	24
  7559  00F75D  00                 	db	0
  7560  00F75E  0C                 	db	12
  7561  00F75F  00                 	db	0
  7562  00F760  00                 	db	0
  7563  00F761  00                 	db	0
  7564  00F762  00                 	db	0
  7565  00F763  00                 	db	0
  7566  00F764  07                 	db	7
  7567  00F765  00                 	db	0
  7568  00F766  00                 	db	0
  7569  00F767  00                 	db	0
  7570  00F768  00                 	db	0
  7571  00F769  00                 	db	0
  7572  00F76A  00                 	db	0
  7573  00F76B  00                 	db	0
  7574  00F76C  00                 	db	0
  7575  00F76D  00                 	db	0
  7576  00F76E  00                 	db	0
  7577  00F76F  00                 	db	0
  7578  00F770  00                 	db	0
  7579  00F771  7E                 	db	126
  7580  00F772  00                 	db	0
  7581  00F773  00                 	db	0
  7582  00F774  00                 	db	0
  7583  00F775  7E                 	db	126
  7584  00F776  00                 	db	0
  7585  00F777  00                 	db	0
  7586  00F778  00                 	db	0
  7587  00F779  00                 	db	0
  7588  00F77A  00                 	db	0
  7589  00F77B  00                 	db	0
  7590  00F77C  00                 	db	0
  7591  00F77D  00                 	db	0
  7592  00F77E  00                 	db	0
  7593  00F77F  07                 	db	7
  7594  00F780  00                 	db	0
  7595  00F781  00                 	db	0
  7596  00F782  00                 	db	0
  7597  00F783  00                 	db	0
  7598  00F784  00                 	db	0
  7599  00F785  00                 	db	0
  7600  00F786  00                 	db	0
  7601  00F787  00                 	db	0
  7602  00F788  60                 	db	96
  7603  00F789  00                 	db	0
  7604  00F78A  30                 	db	48
  7605  00F78B  00                 	db	0
  7606  00F78C  18                 	db	24
  7607  00F78D  00                 	db	0
  7608  00F78E  0C                 	db	12
  7609  00F78F  00                 	db	0
  7610  00F790  18                 	db	24
  7611  00F791  00                 	db	0
  7612  00F792  30                 	db	48
  7613  00F793  00                 	db	0
  7614  00F794  60                 	db	96
  7615  00F795  00                 	db	0
  7616  00F796  00                 	db	0
  7617  00F797  00                 	db	0
  7618  00F798  00                 	db	0
  7619  00F799  00                 	db	0
  7620  00F79A  07                 	db	7
  7621  00F79B  00                 	db	0
  7622  00F79C  00                 	db	0
  7623  00F79D  00                 	db	0
  7624  00F79E  00                 	db	0
  7625  00F79F  3C                 	db	60
  7626  00F7A0  00                 	db	0
  7627  00F7A1  66                 	db	102
  7628  00F7A2  00                 	db	0
  7629  00F7A3  06                 	db	6
  7630  00F7A4  00                 	db	0
  7631  00F7A5  06                 	db	6
  7632  00F7A6  00                 	db	0
  7633  00F7A7  0C                 	db	12
  7634  00F7A8  00                 	db	0
  7635  00F7A9  18                 	db	24
  7636  00F7AA  00                 	db	0
  7637  00F7AB  18                 	db	24
  7638  00F7AC  00                 	db	0
  7639  00F7AD  00                 	db	0
  7640  00F7AE  00                 	db	0
  7641  00F7AF  18                 	db	24
  7642  00F7B0  00                 	db	0
  7643  00F7B1  00                 	db	0
  7644  00F7B2  00                 	db	0
  7645  00F7B3  00                 	db	0
  7646  00F7B4  00                 	db	0
  7647  00F7B5  0C                 	db	12
  7648  00F7B6  00                 	db	0
  7649  00F7B7  00                 	db	0
  7650  00F7B8  00                 	db	0
  7651  00F7B9  00                 	db	0
  7652  00F7BA  0F                 	db	15
  7653  00F7BB  80                 	db	128
  7654  00F7BC  38                 	db	56
  7655  00F7BD  E0                 	db	224
  7656  00F7BE  30                 	db	48
  7657  00F7BF  60                 	db	96
  7658  00F7C0  67                 	db	103
  7659  00F7C1  B0                 	db	176
  7660  00F7C2  6D                 	db	109
  7661  00F7C3  B0                 	db	176
  7662  00F7C4  6D                 	db	109
  7663  00F7C5  B0                 	db	176
  7664  00F7C6  67                 	db	103
  7665  00F7C7  F0                 	db	240
  7666  00F7C8  30                 	db	48
  7667  00F7C9  00                 	db	0
  7668  00F7CA  38                 	db	56
  7669  00F7CB  00                 	db	0
  7670  00F7CC  0F                 	db	15
  7671  00F7CD  C0                 	db	192
  7672  00F7CE  00                 	db	0
  7673  00F7CF  00                 	db	0
  7674  00F7D0  08                 	db	8
  7675  00F7D1  00                 	db	0
  7676  00F7D2  00                 	db	0
  7677  00F7D3  00                 	db	0
  7678  00F7D4  00                 	db	0
  7679  00F7D5  18                 	db	24
  7680  00F7D6  00                 	db	0
  7681  00F7D7  18                 	db	24
  7682  00F7D8  00                 	db	0
  7683  00F7D9  3C                 	db	60
  7684  00F7DA  00                 	db	0
  7685  00F7DB  3C                 	db	60
  7686  00F7DC  00                 	db	0
  7687  00F7DD  66                 	db	102
  7688  00F7DE  00                 	db	0
  7689  00F7DF  66                 	db	102
  7690  00F7E0  00                 	db	0
  7691  00F7E1  7E                 	db	126
  7692  00F7E2  00                 	db	0
  7693  00F7E3  C3                 	db	195
  7694  00F7E4  00                 	db	0
  7695  00F7E5  C3                 	db	195
  7696  00F7E6  00                 	db	0
  7697  00F7E7  00                 	db	0
  7698  00F7E8  00                 	db	0
  7699  00F7E9  00                 	db	0
  7700  00F7EA  00                 	db	0
  7701  00F7EB  08                 	db	8
  7702  00F7EC  00                 	db	0
  7703  00F7ED  00                 	db	0
  7704  00F7EE  00                 	db	0
  7705  00F7EF  00                 	db	0
  7706  00F7F0  7C                 	db	124
  7707  00F7F1  00                 	db	0
  7708  00F7F2  66                 	db	102
  7709  00F7F3  00                 	db	0
  7710  00F7F4  66                 	db	102
  7711  00F7F5  00                 	db	0
  7712  00F7F6  66                 	db	102
  7713  00F7F7  00                 	db	0
  7714  00F7F8  7C                 	db	124
  7715  00F7F9  00                 	db	0
  7716  00F7FA  66                 	db	102
  7717  00F7FB  00                 	db	0
  7718  00F7FC  66                 	db	102
  7719  00F7FD  00                 	db	0
  7720  00F7FE  66                 	db	102
  7721  00F7FF  00                 	db	0
  7722  00F800  7C                 	db	124
  7723  00F801  00                 	db	0
  7724  00F802  00                 	db	0
  7725  00F803  00                 	db	0
  7726  00F804  00                 	db	0
  7727  00F805  00                 	db	0
  7728  00F806  08                 	db	8
  7729  00F807  00                 	db	0
  7730  00F808  00                 	db	0
  7731  00F809  00                 	db	0
  7732  00F80A  00                 	db	0
  7733  00F80B  3E                 	db	62
  7734  00F80C  00                 	db	0
  7735  00F80D  63                 	db	99
  7736  00F80E  00                 	db	0
  7737  00F80F  60                 	db	96
  7738  00F810  00                 	db	0
  7739  00F811  60                 	db	96
  7740  00F812  00                 	db	0
  7741  00F813  60                 	db	96
  7742  00F814  00                 	db	0
  7743  00F815  60                 	db	96
  7744  00F816  00                 	db	0
  7745  00F817  60                 	db	96
  7746  00F818  00                 	db	0
  7747  00F819  63                 	db	99
  7748  00F81A  00                 	db	0
  7749  00F81B  3E                 	db	62
  7750  00F81C  00                 	db	0
  7751  00F81D  00                 	db	0
  7752  00F81E  00                 	db	0
  7753  00F81F  00                 	db	0
  7754  00F820  00                 	db	0
  7755  00F821  09                 	db	9
  7756  00F822  00                 	db	0
  7757  00F823  00                 	db	0
  7758  00F824  00                 	db	0
  7759  00F825  00                 	db	0
  7760  00F826  7C                 	db	124
  7761  00F827  00                 	db	0
  7762  00F828  66                 	db	102
  7763  00F829  00                 	db	0
  7764  00F82A  63                 	db	99
  7765  00F82B  00                 	db	0
  7766  00F82C  63                 	db	99
  7767  00F82D  00                 	db	0
  7768  00F82E  63                 	db	99
  7769  00F82F  00                 	db	0
  7770  00F830  63                 	db	99
  7771  00F831  00                 	db	0
  7772  00F832  63                 	db	99
  7773  00F833  00                 	db	0
  7774  00F834  66                 	db	102
  7775  00F835  00                 	db	0
  7776  00F836  7C                 	db	124
  7777  00F837  00                 	db	0
  7778  00F838  00                 	db	0
  7779  00F839  00                 	db	0
  7780  00F83A  00                 	db	0
  7781  00F83B  00                 	db	0
  7782  00F83C  08                 	db	8
  7783  00F83D  00                 	db	0
  7784  00F83E  00                 	db	0
  7785  00F83F  00                 	db	0
  7786  00F840  00                 	db	0
  7787  00F841  7E                 	db	126
  7788  00F842  00                 	db	0
  7789  00F843  60                 	db	96
  7790  00F844  00                 	db	0
  7791  00F845  60                 	db	96
  7792  00F846  00                 	db	0
  7793  00F847  60                 	db	96
  7794  00F848  00                 	db	0
  7795  00F849  7C                 	db	124
  7796  00F84A  00                 	db	0
  7797  00F84B  60                 	db	96
  7798  00F84C  00                 	db	0
  7799  00F84D  60                 	db	96
  7800  00F84E  00                 	db	0
  7801  00F84F  60                 	db	96
  7802  00F850  00                 	db	0
  7803  00F851  7E                 	db	126
  7804  00F852  00                 	db	0
  7805  00F853  00                 	db	0
  7806  00F854  00                 	db	0
  7807  00F855  00                 	db	0
  7808  00F856  00                 	db	0
  7809  00F857  07                 	db	7
  7810  00F858  00                 	db	0
  7811  00F859  00                 	db	0
  7812  00F85A  00                 	db	0
  7813  00F85B  00                 	db	0
  7814  00F85C  7E                 	db	126
  7815  00F85D  00                 	db	0
  7816  00F85E  60                 	db	96
  7817  00F85F  00                 	db	0
  7818  00F860  60                 	db	96
  7819  00F861  00                 	db	0
  7820  00F862  60                 	db	96
  7821  00F863  00                 	db	0
  7822  00F864  7C                 	db	124
  7823  00F865  00                 	db	0
  7824  00F866  60                 	db	96
  7825  00F867  00                 	db	0
  7826  00F868  60                 	db	96
  7827  00F869  00                 	db	0
  7828  00F86A  60                 	db	96
  7829  00F86B  00                 	db	0
  7830  00F86C  60                 	db	96
  7831  00F86D  00                 	db	0
  7832  00F86E  00                 	db	0
  7833  00F86F  00                 	db	0
  7834  00F870  00                 	db	0
  7835  00F871  00                 	db	0
  7836  00F872  09                 	db	9
  7837  00F873  00                 	db	0
  7838  00F874  00                 	db	0
  7839  00F875  00                 	db	0
  7840  00F876  00                 	db	0
  7841  00F877  3E                 	db	62
  7842  00F878  00                 	db	0
  7843  00F879  63                 	db	99
  7844  00F87A  00                 	db	0
  7845  00F87B  60                 	db	96
  7846  00F87C  00                 	db	0
  7847  00F87D  60                 	db	96
  7848  00F87E  00                 	db	0
  7849  00F87F  6F                 	db	111
  7850  00F880  00                 	db	0
  7851  00F881  63                 	db	99
  7852  00F882  00                 	db	0
  7853  00F883  63                 	db	99
  7854  00F884  00                 	db	0
  7855  00F885  67                 	db	103
  7856  00F886  00                 	db	0
  7857  00F887  3F                 	db	63
  7858  00F888  00                 	db	0
  7859  00F889  00                 	db	0
  7860  00F88A  00                 	db	0
  7861  00F88B  00                 	db	0
  7862  00F88C  00                 	db	0
  7863  00F88D  09                 	db	9
  7864  00F88E  00                 	db	0
  7865  00F88F  00                 	db	0
  7866  00F890  00                 	db	0
  7867  00F891  00                 	db	0
  7868  00F892  63                 	db	99
  7869  00F893  00                 	db	0
  7870  00F894  63                 	db	99
  7871  00F895  00                 	db	0
  7872  00F896  63                 	db	99
  7873  00F897  00                 	db	0
  7874  00F898  63                 	db	99
  7875  00F899  00                 	db	0
  7876  00F89A  7F                 	db	127
  7877  00F89B  00                 	db	0
  7878  00F89C  63                 	db	99
  7879  00F89D  00                 	db	0
  7880  00F89E  63                 	db	99
  7881  00F89F  00                 	db	0
  7882  00F8A0  63                 	db	99
  7883  00F8A1  00                 	db	0
  7884  00F8A2  63                 	db	99
  7885  00F8A3  00                 	db	0
  7886  00F8A4  00                 	db	0
  7887  00F8A5  00                 	db	0
  7888  00F8A6  00                 	db	0
  7889  00F8A7  00                 	db	0
  7890  00F8A8  04                 	db	4
  7891  00F8A9  00                 	db	0
  7892  00F8AA  00                 	db	0
  7893  00F8AB  00                 	db	0
  7894  00F8AC  00                 	db	0
  7895  00F8AD  60                 	db	96
  7896  00F8AE  00                 	db	0
  7897  00F8AF  60                 	db	96
  7898  00F8B0  00                 	db	0
  7899  00F8B1  60                 	db	96
  7900  00F8B2  00                 	db	0
  7901  00F8B3  60                 	db	96
  7902  00F8B4  00                 	db	0
  7903  00F8B5  60                 	db	96
  7904  00F8B6  00                 	db	0
  7905  00F8B7  60                 	db	96
  7906  00F8B8  00                 	db	0
  7907  00F8B9  60                 	db	96
  7908  00F8BA  00                 	db	0
  7909  00F8BB  60                 	db	96
  7910  00F8BC  00                 	db	0
  7911  00F8BD  60                 	db	96
  7912  00F8BE  00                 	db	0
  7913  00F8BF  00                 	db	0
  7914  00F8C0  00                 	db	0
  7915  00F8C1  00                 	db	0
  7916  00F8C2  00                 	db	0
  7917  00F8C3  06                 	db	6
  7918  00F8C4  00                 	db	0
  7919  00F8C5  00                 	db	0
  7920  00F8C6  00                 	db	0
  7921  00F8C7  00                 	db	0
  7922  00F8C8  18                 	db	24
  7923  00F8C9  00                 	db	0
  7924  00F8CA  18                 	db	24
  7925  00F8CB  00                 	db	0
  7926  00F8CC  18                 	db	24
  7927  00F8CD  00                 	db	0
  7928  00F8CE  18                 	db	24
  7929  00F8CF  00                 	db	0
  7930  00F8D0  18                 	db	24
  7931  00F8D1  00                 	db	0
  7932  00F8D2  18                 	db	24
  7933  00F8D3  00                 	db	0
  7934  00F8D4  D8                 	db	216
  7935  00F8D5  00                 	db	0
  7936  00F8D6  D8                 	db	216
  7937  00F8D7  00                 	db	0
  7938  00F8D8  70                 	db	112
  7939  00F8D9  00                 	db	0
  7940  00F8DA  00                 	db	0
  7941  00F8DB  00                 	db	0
  7942  00F8DC  00                 	db	0
  7943  00F8DD  00                 	db	0
  7944  00F8DE  08                 	db	8
  7945  00F8DF  00                 	db	0
  7946  00F8E0  00                 	db	0
  7947  00F8E1  00                 	db	0
  7948  00F8E2  00                 	db	0
  7949  00F8E3  66                 	db	102
  7950  00F8E4  00                 	db	0
  7951  00F8E5  6C                 	db	108
  7952  00F8E6  00                 	db	0
  7953  00F8E7  78                 	db	120
  7954  00F8E8  00                 	db	0
  7955  00F8E9  70                 	db	112
  7956  00F8EA  00                 	db	0
  7957  00F8EB  70                 	db	112
  7958  00F8EC  00                 	db	0
  7959  00F8ED  78                 	db	120
  7960  00F8EE  00                 	db	0
  7961  00F8EF  6C                 	db	108
  7962  00F8F0  00                 	db	0
  7963  00F8F1  66                 	db	102
  7964  00F8F2  00                 	db	0
  7965  00F8F3  63                 	db	99
  7966  00F8F4  00                 	db	0
  7967  00F8F5  00                 	db	0
  7968  00F8F6  00                 	db	0
  7969  00F8F7  00                 	db	0
  7970  00F8F8  00                 	db	0
  7971  00F8F9  07                 	db	7
  7972  00F8FA  00                 	db	0
  7973  00F8FB  00                 	db	0
  7974  00F8FC  00                 	db	0
  7975  00F8FD  00                 	db	0
  7976  00F8FE  60                 	db	96
  7977  00F8FF  00                 	db	0
  7978  00F900  60                 	db	96
  7979  00F901  00                 	db	0
  7980  00F902  60                 	db	96
  7981  00F903  00                 	db	0
  7982  00F904  60                 	db	96
  7983  00F905  00                 	db	0
  7984  00F906  60                 	db	96
  7985  00F907  00                 	db	0
  7986  00F908  60                 	db	96
  7987  00F909  00                 	db	0
  7988  00F90A  60                 	db	96
  7989  00F90B  00                 	db	0
  7990  00F90C  60                 	db	96
  7991  00F90D  00                 	db	0
  7992  00F90E  7E                 	db	126
  7993  00F90F  00                 	db	0
  7994  00F910  00                 	db	0
  7995  00F911  00                 	db	0
  7996  00F912  00                 	db	0
  7997  00F913  00                 	db	0
  7998  00F914  0A                 	db	10
  7999  00F915  00                 	db	0
  8000  00F916  00                 	db	0
  8001  00F917  00                 	db	0
  8002  00F918  00                 	db	0
  8003  00F919  61                 	db	97
  8004  00F91A  80                 	db	128
  8005  00F91B  61                 	db	97
  8006  00F91C  80                 	db	128
  8007  00F91D  73                 	db	115
  8008  00F91E  80                 	db	128
  8009  00F91F  73                 	db	115
  8010  00F920  80                 	db	128
  8011  00F921  7F                 	db	127
  8012  00F922  80                 	db	128
  8013  00F923  7F                 	db	127
  8014  00F924  80                 	db	128
  8015  00F925  6D                 	db	109
  8016  00F926  80                 	db	128
  8017  00F927  6D                 	db	109
  8018  00F928  80                 	db	128
  8019  00F929  61                 	db	97
  8020  00F92A  80                 	db	128
  8021  00F92B  00                 	db	0
  8022  00F92C  00                 	db	0
  8023  00F92D  00                 	db	0
  8024  00F92E  00                 	db	0
  8025  00F92F  09                 	db	9
  8026  00F930  00                 	db	0
  8027  00F931  00                 	db	0
  8028  00F932  00                 	db	0
  8029  00F933  00                 	db	0
  8030  00F934  63                 	db	99
  8031  00F935  00                 	db	0
  8032  00F936  73                 	db	115
  8033  00F937  00                 	db	0
  8034  00F938  73                 	db	115
  8035  00F939  00                 	db	0
  8036  00F93A  7B                 	db	123
  8037  00F93B  00                 	db	0
  8038  00F93C  7B                 	db	123
  8039  00F93D  00                 	db	0
  8040  00F93E  6F                 	db	111
  8041  00F93F  00                 	db	0
  8042  00F940  67                 	db	103
  8043  00F941  00                 	db	0
  8044  00F942  67                 	db	103
  8045  00F943  00                 	db	0
  8046  00F944  63                 	db	99
  8047  00F945  00                 	db	0
  8048  00F946  00                 	db	0
  8049  00F947  00                 	db	0
  8050  00F948  00                 	db	0
  8051  00F949  00                 	db	0
  8052  00F94A  09                 	db	9
  8053  00F94B  00                 	db	0
  8054  00F94C  00                 	db	0
  8055  00F94D  00                 	db	0
  8056  00F94E  00                 	db	0
  8057  00F94F  3E                 	db	62
  8058  00F950  00                 	db	0
  8059  00F951  63                 	db	99
  8060  00F952  00                 	db	0
  8061  00F953  63                 	db	99
  8062  00F954  00                 	db	0
  8063  00F955  63                 	db	99
  8064  00F956  00                 	db	0
  8065  00F957  63                 	db	99
  8066  00F958  00                 	db	0
  8067  00F959  63                 	db	99
  8068  00F95A  00                 	db	0
  8069  00F95B  63                 	db	99
  8070  00F95C  00                 	db	0
  8071  00F95D  63                 	db	99
  8072  00F95E  00                 	db	0
  8073  00F95F  3E                 	db	62
  8074  00F960  00                 	db	0
  8075  00F961  00                 	db	0
  8076  00F962  00                 	db	0
  8077  00F963  00                 	db	0
  8078  00F964  00                 	db	0
  8079  00F965  08                 	db	8
  8080  00F966  00                 	db	0
  8081  00F967  00                 	db	0
  8082  00F968  00                 	db	0
  8083  00F969  00                 	db	0
  8084  00F96A  7E                 	db	126
  8085  00F96B  00                 	db	0
  8086  00F96C  63                 	db	99
  8087  00F96D  00                 	db	0
  8088  00F96E  63                 	db	99
  8089  00F96F  00                 	db	0
  8090  00F970  63                 	db	99
  8091  00F971  00                 	db	0
  8092  00F972  7E                 	db	126
  8093  00F973  00                 	db	0
  8094  00F974  60                 	db	96
  8095  00F975  00                 	db	0
  8096  00F976  60                 	db	96
  8097  00F977  00                 	db	0
  8098  00F978  60                 	db	96
  8099  00F979  00                 	db	0
  8100  00F97A  60                 	db	96
  8101  00F97B  00                 	db	0
  8102  00F97C  00                 	db	0
  8103  00F97D  00                 	db	0
  8104  00F97E  00                 	db	0
  8105  00F97F  00                 	db	0
  8106  00F980  09                 	db	9
  8107  00F981  00                 	db	0
  8108  00F982  00                 	db	0
  8109  00F983  00                 	db	0
  8110  00F984  00                 	db	0
  8111  00F985  3E                 	db	62
  8112  00F986  00                 	db	0
  8113  00F987  63                 	db	99
  8114  00F988  00                 	db	0
  8115  00F989  63                 	db	99
  8116  00F98A  00                 	db	0
  8117  00F98B  63                 	db	99
  8118  00F98C  00                 	db	0
  8119  00F98D  63                 	db	99
  8120  00F98E  00                 	db	0
  8121  00F98F  63                 	db	99
  8122  00F990  00                 	db	0
  8123  00F991  6F                 	db	111
  8124  00F992  00                 	db	0
  8125  00F993  67                 	db	103
  8126  00F994  00                 	db	0
  8127  00F995  3E                 	db	62
  8128  00F996  00                 	db	0
  8129  00F997  03                 	db	3
  8130  00F998  00                 	db	0
  8131  00F999  00                 	db	0
  8132  00F99A  00                 	db	0
  8133  00F99B  09                 	db	9
  8134  00F99C  00                 	db	0
  8135  00F99D  00                 	db	0
  8136  00F99E  00                 	db	0
  8137  00F99F  00                 	db	0
  8138  00F9A0  7E                 	db	126
  8139  00F9A1  00                 	db	0
  8140  00F9A2  63                 	db	99
  8141  00F9A3  00                 	db	0
  8142  00F9A4  63                 	db	99
  8143  00F9A5  00                 	db	0
  8144  00F9A6  63                 	db	99
  8145  00F9A7  00                 	db	0
  8146  00F9A8  7E                 	db	126
  8147  00F9A9  00                 	db	0
  8148  00F9AA  63                 	db	99
  8149  00F9AB  00                 	db	0
  8150  00F9AC  63                 	db	99
  8151  00F9AD  00                 	db	0
  8152  00F9AE  63                 	db	99
  8153  00F9AF  00                 	db	0
  8154  00F9B0  63                 	db	99
  8155  00F9B1  00                 	db	0
  8156  00F9B2  00                 	db	0
  8157  00F9B3  00                 	db	0
  8158  00F9B4  00                 	db	0
  8159  00F9B5  00                 	db	0
  8160  00F9B6  08                 	db	8
  8161  00F9B7  00                 	db	0
  8162  00F9B8  00                 	db	0
  8163  00F9B9  00                 	db	0
  8164  00F9BA  00                 	db	0
  8165  00F9BB  3C                 	db	60
  8166  00F9BC  00                 	db	0
  8167  00F9BD  66                 	db	102
  8168  00F9BE  00                 	db	0
  8169  00F9BF  60                 	db	96
  8170  00F9C0  00                 	db	0
  8171  00F9C1  60                 	db	96
  8172  00F9C2  00                 	db	0
  8173  00F9C3  3C                 	db	60
  8174  00F9C4  00                 	db	0
  8175  00F9C5  06                 	db	6
  8176  00F9C6  00                 	db	0
  8177  00F9C7  06                 	db	6
  8178  00F9C8  00                 	db	0
  8179  00F9C9  66                 	db	102
  8180  00F9CA  00                 	db	0
  8181  00F9CB  3C                 	db	60
  8182  00F9CC  00                 	db	0
  8183  00F9CD  00                 	db	0
  8184  00F9CE  00                 	db	0
  8185  00F9CF  00                 	db	0
  8186  00F9D0  00                 	db	0
  8187  00F9D1  08                 	db	8
  8188  00F9D2  00                 	db	0
  8189  00F9D3  00                 	db	0
  8190  00F9D4  00                 	db	0
  8191  00F9D5  00                 	db	0
  8192  00F9D6  7E                 	db	126
  8193  00F9D7  00                 	db	0
  8194  00F9D8  18                 	db	24
  8195  00F9D9  00                 	db	0
  8196  00F9DA  18                 	db	24
  8197  00F9DB  00                 	db	0
  8198  00F9DC  18                 	db	24
  8199  00F9DD  00                 	db	0
  8200  00F9DE  18                 	db	24
  8201  00F9DF  00                 	db	0
  8202  00F9E0  18                 	db	24
  8203  00F9E1  00                 	db	0
  8204  00F9E2  18                 	db	24
  8205  00F9E3  00                 	db	0
  8206  00F9E4  18                 	db	24
  8207  00F9E5  00                 	db	0
  8208  00F9E6  18                 	db	24
  8209  00F9E7  00                 	db	0
  8210  00F9E8  00                 	db	0
  8211  00F9E9  00                 	db	0
  8212  00F9EA  00                 	db	0
  8213  00F9EB  00                 	db	0
  8214  00F9EC  09                 	db	9
  8215  00F9ED  00                 	db	0
  8216  00F9EE  00                 	db	0
  8217  00F9EF  00                 	db	0
  8218  00F9F0  00                 	db	0
  8219  00F9F1  63                 	db	99
  8220  00F9F2  00                 	db	0
  8221  00F9F3  63                 	db	99
  8222  00F9F4  00                 	db	0
  8223  00F9F5  63                 	db	99
  8224  00F9F6  00                 	db	0
  8225  00F9F7  63                 	db	99
  8226  00F9F8  00                 	db	0
  8227  00F9F9  63                 	db	99
  8228  00F9FA  00                 	db	0
  8229  00F9FB  63                 	db	99
  8230  00F9FC  00                 	db	0
  8231  00F9FD  63                 	db	99
  8232  00F9FE  00                 	db	0
  8233  00F9FF  63                 	db	99
  8234  00FA00  00                 	db	0
  8235  00FA01  3E                 	db	62
  8236  00FA02  00                 	db	0
  8237  00FA03  00                 	db	0
  8238  00FA04  00                 	db	0
  8239  00FA05  00                 	db	0
  8240  00FA06  00                 	db	0
  8241  00FA07  08                 	db	8
  8242  00FA08  00                 	db	0
  8243  00FA09  00                 	db	0
  8244  00FA0A  00                 	db	0
  8245  00FA0B  00                 	db	0
  8246  00FA0C  C3                 	db	195
  8247  00FA0D  00                 	db	0
  8248  00FA0E  C3                 	db	195
  8249  00FA0F  00                 	db	0
  8250  00FA10  66                 	db	102
  8251  00FA11  00                 	db	0
  8252  00FA12  66                 	db	102
  8253  00FA13  00                 	db	0
  8254  00FA14  66                 	db	102
  8255  00FA15  00                 	db	0
  8256  00FA16  3C                 	db	60
  8257  00FA17  00                 	db	0
  8258  00FA18  3C                 	db	60
  8259  00FA19  00                 	db	0
  8260  00FA1A  18                 	db	24
  8261  00FA1B  00                 	db	0
  8262  00FA1C  18                 	db	24
  8263  00FA1D  00                 	db	0
  8264  00FA1E  00                 	db	0
  8265  00FA1F  00                 	db	0
  8266  00FA20  00                 	db	0
  8267  00FA21  00                 	db	0
  8268  00FA22  0C                 	db	12
  8269  00FA23  00                 	db	0
  8270  00FA24  00                 	db	0
  8271  00FA25  00                 	db	0
  8272  00FA26  00                 	db	0
  8273  00FA27  C0                 	db	192
  8274  00FA28  30                 	db	48
  8275  00FA29  C0                 	db	192
  8276  00FA2A  30                 	db	48
  8277  00FA2B  66                 	db	102
  8278  00FA2C  60                 	db	96
  8279  00FA2D  66                 	db	102
  8280  00FA2E  60                 	db	96
  8281  00FA2F  66                 	db	102
  8282  00FA30  60                 	db	96
  8283  00FA31  3F                 	db	63
  8284  00FA32  C0                 	db	192
  8285  00FA33  3F                 	db	63
  8286  00FA34  C0                 	db	192
  8287  00FA35  19                 	db	25
  8288  00FA36  80                 	db	128
  8289  00FA37  19                 	db	25
  8290  00FA38  80                 	db	128
  8291  00FA39  00                 	db	0
  8292  00FA3A  00                 	db	0
  8293  00FA3B  00                 	db	0
  8294  00FA3C  00                 	db	0
  8295  00FA3D  08                 	db	8
  8296  00FA3E  00                 	db	0
  8297  00FA3F  00                 	db	0
  8298  00FA40  00                 	db	0
  8299  00FA41  00                 	db	0
  8300  00FA42  C3                 	db	195
  8301  00FA43  00                 	db	0
  8302  00FA44  C3                 	db	195
  8303  00FA45  00                 	db	0
  8304  00FA46  66                 	db	102
  8305  00FA47  00                 	db	0
  8306  00FA48  3C                 	db	60
  8307  00FA49  00                 	db	0
  8308  00FA4A  18                 	db	24
  8309  00FA4B  00                 	db	0
  8310  00FA4C  3C                 	db	60
  8311  00FA4D  00                 	db	0
  8312  00FA4E  66                 	db	102
  8313  00FA4F  00                 	db	0
  8314  00FA50  C3                 	db	195
  8315  00FA51  00                 	db	0
  8316  00FA52  C3                 	db	195
  8317  00FA53  00                 	db	0
  8318  00FA54  00                 	db	0
  8319  00FA55  00                 	db	0
  8320  00FA56  00                 	db	0
  8321  00FA57  00                 	db	0
  8322  00FA58  08                 	db	8
  8323  00FA59  00                 	db	0
  8324  00FA5A  00                 	db	0
  8325  00FA5B  00                 	db	0
  8326  00FA5C  00                 	db	0
  8327  00FA5D  C3                 	db	195
  8328  00FA5E  00                 	db	0
  8329  00FA5F  C3                 	db	195
  8330  00FA60  00                 	db	0
  8331  00FA61  66                 	db	102
  8332  00FA62  00                 	db	0
  8333  00FA63  3C                 	db	60
  8334  00FA64  00                 	db	0
  8335  00FA65  18                 	db	24
  8336  00FA66  00                 	db	0
  8337  00FA67  18                 	db	24
  8338  00FA68  00                 	db	0
  8339  00FA69  18                 	db	24
  8340  00FA6A  00                 	db	0
  8341  00FA6B  18                 	db	24
  8342  00FA6C  00                 	db	0
  8343  00FA6D  18                 	db	24
  8344  00FA6E  00                 	db	0
  8345  00FA6F  00                 	db	0
  8346  00FA70  00                 	db	0
  8347  00FA71  00                 	db	0
  8348  00FA72  00                 	db	0
  8349  00FA73  08                 	db	8
  8350  00FA74  00                 	db	0
  8351  00FA75  00                 	db	0
  8352  00FA76  00                 	db	0
  8353  00FA77  00                 	db	0
  8354  00FA78  FF                 	db	255
  8355  00FA79  00                 	db	0
  8356  00FA7A  03                 	db	3
  8357  00FA7B  00                 	db	0
  8358  00FA7C  06                 	db	6
  8359  00FA7D  00                 	db	0
  8360  00FA7E  0C                 	db	12
  8361  00FA7F  00                 	db	0
  8362  00FA80  18                 	db	24
  8363  00FA81  00                 	db	0
  8364  00FA82  30                 	db	48
  8365  00FA83  00                 	db	0
  8366  00FA84  60                 	db	96
  8367  00FA85  00                 	db	0
  8368  00FA86  C0                 	db	192
  8369  00FA87  00                 	db	0
  8370  00FA88  FF                 	db	255
  8371  00FA89  00                 	db	0
  8372  00FA8A  00                 	db	0
  8373  00FA8B  00                 	db	0
  8374  00FA8C  00                 	db	0
  8375  00FA8D  00                 	db	0
  8376  00FA8E  04                 	db	4
  8377  00FA8F  00                 	db	0
  8378  00FA90  00                 	db	0
  8379  00FA91  00                 	db	0
  8380  00FA92  00                 	db	0
  8381  00FA93  70                 	db	112
  8382  00FA94  00                 	db	0
  8383  00FA95  60                 	db	96
  8384  00FA96  00                 	db	0
  8385  00FA97  60                 	db	96
  8386  00FA98  00                 	db	0
  8387  00FA99  60                 	db	96
  8388  00FA9A  00                 	db	0
  8389  00FA9B  60                 	db	96
  8390  00FA9C  00                 	db	0
  8391  00FA9D  60                 	db	96
  8392  00FA9E  00                 	db	0
  8393  00FA9F  60                 	db	96
  8394  00FAA0  00                 	db	0
  8395  00FAA1  60                 	db	96
  8396  00FAA2  00                 	db	0
  8397  00FAA3  60                 	db	96
  8398  00FAA4  00                 	db	0
  8399  00FAA5  60                 	db	96
  8400  00FAA6  00                 	db	0
  8401  00FAA7  70                 	db	112
  8402  00FAA8  00                 	db	0
  8403  00FAA9  06                 	db	6
  8404  00FAAA  00                 	db	0
  8405  00FAAB  00                 	db	0
  8406  00FAAC  00                 	db	0
  8407  00FAAD  00                 	db	0
  8408  00FAAE  60                 	db	96
  8409  00FAAF  00                 	db	0
  8410  00FAB0  60                 	db	96
  8411  00FAB1  00                 	db	0
  8412  00FAB2  60                 	db	96
  8413  00FAB3  00                 	db	0
  8414  00FAB4  30                 	db	48
  8415  00FAB5  00                 	db	0
  8416  00FAB6  30                 	db	48
  8417  00FAB7  00                 	db	0
  8418  00FAB8  18                 	db	24
  8419  00FAB9  00                 	db	0
  8420  00FABA  18                 	db	24
  8421  00FABB  00                 	db	0
  8422  00FABC  0C                 	db	12
  8423  00FABD  00                 	db	0
  8424  00FABE  0C                 	db	12
  8425  00FABF  00                 	db	0
  8426  00FAC0  00                 	db	0
  8427  00FAC1  00                 	db	0
  8428  00FAC2  00                 	db	0
  8429  00FAC3  00                 	db	0
  8430  00FAC4  04                 	db	4
  8431  00FAC5  00                 	db	0
  8432  00FAC6  00                 	db	0
  8433  00FAC7  00                 	db	0
  8434  00FAC8  00                 	db	0
  8435  00FAC9  70                 	db	112
  8436  00FACA  00                 	db	0
  8437  00FACB  30                 	db	48
  8438  00FACC  00                 	db	0
  8439  00FACD  30                 	db	48
  8440  00FACE  00                 	db	0
  8441  00FACF  30                 	db	48
  8442  00FAD0  00                 	db	0
  8443  00FAD1  30                 	db	48
  8444  00FAD2  00                 	db	0
  8445  00FAD3  30                 	db	48
  8446  00FAD4  00                 	db	0
  8447  00FAD5  30                 	db	48
  8448  00FAD6  00                 	db	0
  8449  00FAD7  30                 	db	48
  8450  00FAD8  00                 	db	0
  8451  00FAD9  30                 	db	48
  8452  00FADA  00                 	db	0
  8453  00FADB  30                 	db	48
  8454  00FADC  00                 	db	0
  8455  00FADD  70                 	db	112
  8456  00FADE  00                 	db	0
  8457  00FADF  07                 	db	7
  8458  00FAE0  00                 	db	0
  8459  00FAE1  00                 	db	0
  8460  00FAE2  18                 	db	24
  8461  00FAE3  00                 	db	0
  8462  00FAE4  3C                 	db	60
  8463  00FAE5  00                 	db	0
  8464  00FAE6  66                 	db	102
  8465  00FAE7  00                 	db	0
  8466  00FAE8  00                 	db	0
  8467  00FAE9  00                 	db	0
  8468  00FAEA  00                 	db	0
  8469  00FAEB  00                 	db	0
  8470  00FAEC  00                 	db	0
  8471  00FAED  00                 	db	0
  8472  00FAEE  00                 	db	0
  8473  00FAEF  00                 	db	0
  8474  00FAF0  00                 	db	0
  8475  00FAF1  00                 	db	0
  8476  00FAF2  00                 	db	0
  8477  00FAF3  00                 	db	0
  8478  00FAF4  00                 	db	0
  8479  00FAF5  00                 	db	0
  8480  00FAF6  00                 	db	0
  8481  00FAF7  00                 	db	0
  8482  00FAF8  00                 	db	0
  8483  00FAF9  00                 	db	0
  8484  00FAFA  07                 	db	7
  8485  00FAFB  00                 	db	0
  8486  00FAFC  00                 	db	0
  8487  00FAFD  00                 	db	0
  8488  00FAFE  00                 	db	0
  8489  00FAFF  00                 	db	0
  8490  00FB00  00                 	db	0
  8491  00FB01  00                 	db	0
  8492  00FB02  00                 	db	0
  8493  00FB03  00                 	db	0
  8494  00FB04  00                 	db	0
  8495  00FB05  00                 	db	0
  8496  00FB06  00                 	db	0
  8497  00FB07  00                 	db	0
  8498  00FB08  00                 	db	0
  8499  00FB09  00                 	db	0
  8500  00FB0A  00                 	db	0
  8501  00FB0B  00                 	db	0
  8502  00FB0C  00                 	db	0
  8503  00FB0D  00                 	db	0
  8504  00FB0E  00                 	db	0
  8505  00FB0F  00                 	db	0
  8506  00FB10  00                 	db	0
  8507  00FB11  00                 	db	0
  8508  00FB12  00                 	db	0
  8509  00FB13  FE                 	db	254
  8510  00FB14  00                 	db	0
  8511  00FB15  04                 	db	4
  8512  00FB16  00                 	db	0
  8513  00FB17  00                 	db	0
  8514  00FB18  00                 	db	0
  8515  00FB19  00                 	db	0
  8516  00FB1A  60                 	db	96
  8517  00FB1B  00                 	db	0
  8518  00FB1C  30                 	db	48
  8519  00FB1D  00                 	db	0
  8520  00FB1E  00                 	db	0
  8521  00FB1F  00                 	db	0
  8522  00FB20  00                 	db	0
  8523  00FB21  00                 	db	0
  8524  00FB22  00                 	db	0
  8525  00FB23  00                 	db	0
  8526  00FB24  00                 	db	0
  8527  00FB25  00                 	db	0
  8528  00FB26  00                 	db	0
  8529  00FB27  00                 	db	0
  8530  00FB28  00                 	db	0
  8531  00FB29  00                 	db	0
  8532  00FB2A  00                 	db	0
  8533  00FB2B  00                 	db	0
  8534  00FB2C  00                 	db	0
  8535  00FB2D  00                 	db	0
  8536  00FB2E  00                 	db	0
  8537  00FB2F  00                 	db	0
  8538  00FB30  07                 	db	7
  8539  00FB31  00                 	db	0
  8540  00FB32  00                 	db	0
  8541  00FB33  00                 	db	0
  8542  00FB34  00                 	db	0
  8543  00FB35  00                 	db	0
  8544  00FB36  00                 	db	0
  8545  00FB37  00                 	db	0
  8546  00FB38  00                 	db	0
  8547  00FB39  00                 	db	0
  8548  00FB3A  00                 	db	0
  8549  00FB3B  3C                 	db	60
  8550  00FB3C  00                 	db	0
  8551  00FB3D  06                 	db	6
  8552  00FB3E  00                 	db	0
  8553  00FB3F  3E                 	db	62
  8554  00FB40  00                 	db	0
  8555  00FB41  66                 	db	102
  8556  00FB42  00                 	db	0
  8557  00FB43  66                 	db	102
  8558  00FB44  00                 	db	0
  8559  00FB45  3E                 	db	62
  8560  00FB46  00                 	db	0
  8561  00FB47  00                 	db	0
  8562  00FB48  00                 	db	0
  8563  00FB49  00                 	db	0
  8564  00FB4A  00                 	db	0
  8565  00FB4B  07                 	db	7
  8566  00FB4C  00                 	db	0
  8567  00FB4D  00                 	db	0
  8568  00FB4E  00                 	db	0
  8569  00FB4F  00                 	db	0
  8570  00FB50  60                 	db	96
  8571  00FB51  00                 	db	0
  8572  00FB52  60                 	db	96
  8573  00FB53  00                 	db	0
  8574  00FB54  60                 	db	96
  8575  00FB55  00                 	db	0
  8576  00FB56  7C                 	db	124
  8577  00FB57  00                 	db	0
  8578  00FB58  66                 	db	102
  8579  00FB59  00                 	db	0
  8580  00FB5A  66                 	db	102
  8581  00FB5B  00                 	db	0
  8582  00FB5C  66                 	db	102
  8583  00FB5D  00                 	db	0
  8584  00FB5E  66                 	db	102
  8585  00FB5F  00                 	db	0
  8586  00FB60  7C                 	db	124
  8587  00FB61  00                 	db	0
  8588  00FB62  00                 	db	0
  8589  00FB63  00                 	db	0
  8590  00FB64  00                 	db	0
  8591  00FB65  00                 	db	0
  8592  00FB66  07                 	db	7
  8593  00FB67  00                 	db	0
  8594  00FB68  00                 	db	0
  8595  00FB69  00                 	db	0
  8596  00FB6A  00                 	db	0
  8597  00FB6B  00                 	db	0
  8598  00FB6C  00                 	db	0
  8599  00FB6D  00                 	db	0
  8600  00FB6E  00                 	db	0
  8601  00FB6F  00                 	db	0
  8602  00FB70  00                 	db	0
  8603  00FB71  3C                 	db	60
  8604  00FB72  00                 	db	0
  8605  00FB73  66                 	db	102
  8606  00FB74  00                 	db	0
  8607  00FB75  60                 	db	96
  8608  00FB76  00                 	db	0
  8609  00FB77  60                 	db	96
  8610  00FB78  00                 	db	0
  8611  00FB79  66                 	db	102
  8612  00FB7A  00                 	db	0
  8613  00FB7B  3C                 	db	60
  8614  00FB7C  00                 	db	0
  8615  00FB7D  00                 	db	0
  8616  00FB7E  00                 	db	0
  8617  00FB7F  00                 	db	0
  8618  00FB80  00                 	db	0
  8619  00FB81  07                 	db	7
  8620  00FB82  00                 	db	0
  8621  00FB83  00                 	db	0
  8622  00FB84  00                 	db	0
  8623  00FB85  00                 	db	0
  8624  00FB86  06                 	db	6
  8625  00FB87  00                 	db	0
  8626  00FB88  06                 	db	6
  8627  00FB89  00                 	db	0
  8628  00FB8A  06                 	db	6
  8629  00FB8B  00                 	db	0
  8630  00FB8C  3E                 	db	62
  8631  00FB8D  00                 	db	0
  8632  00FB8E  66                 	db	102
  8633  00FB8F  00                 	db	0
  8634  00FB90  66                 	db	102
  8635  00FB91  00                 	db	0
  8636  00FB92  66                 	db	102
  8637  00FB93  00                 	db	0
  8638  00FB94  66                 	db	102
  8639  00FB95  00                 	db	0
  8640  00FB96  3E                 	db	62
  8641  00FB97  00                 	db	0
  8642  00FB98  00                 	db	0
  8643  00FB99  00                 	db	0
  8644  00FB9A  00                 	db	0
  8645  00FB9B  00                 	db	0
  8646  00FB9C  07                 	db	7
  8647  00FB9D  00                 	db	0
  8648  00FB9E  00                 	db	0
  8649  00FB9F  00                 	db	0
  8650  00FBA0  00                 	db	0
  8651  00FBA1  00                 	db	0
  8652  00FBA2  00                 	db	0
  8653  00FBA3  00                 	db	0
  8654  00FBA4  00                 	db	0
  8655  00FBA5  00                 	db	0
  8656  00FBA6  00                 	db	0
  8657  00FBA7  3C                 	db	60
  8658  00FBA8  00                 	db	0
  8659  00FBA9  66                 	db	102
  8660  00FBAA  00                 	db	0
  8661  00FBAB  7E                 	db	126
  8662  00FBAC  00                 	db	0
  8663  00FBAD  60                 	db	96
  8664  00FBAE  00                 	db	0
  8665  00FBAF  66                 	db	102
  8666  00FBB0  00                 	db	0
  8667  00FBB1  3C                 	db	60
  8668  00FBB2  00                 	db	0
  8669  00FBB3  00                 	db	0
  8670  00FBB4  00                 	db	0
  8671  00FBB5  00                 	db	0
  8672  00FBB6  00                 	db	0
  8673  00FBB7  04                 	db	4
  8674  00FBB8  00                 	db	0
  8675  00FBB9  00                 	db	0
  8676  00FBBA  00                 	db	0
  8677  00FBBB  00                 	db	0
  8678  00FBBC  30                 	db	48
  8679  00FBBD  00                 	db	0
  8680  00FBBE  60                 	db	96
  8681  00FBBF  00                 	db	0
  8682  00FBC0  60                 	db	96
  8683  00FBC1  00                 	db	0
  8684  00FBC2  70                 	db	112
  8685  00FBC3  00                 	db	0
  8686  00FBC4  60                 	db	96
  8687  00FBC5  00                 	db	0
  8688  00FBC6  60                 	db	96
  8689  00FBC7  00                 	db	0
  8690  00FBC8  60                 	db	96
  8691  00FBC9  00                 	db	0
  8692  00FBCA  60                 	db	96
  8693  00FBCB  00                 	db	0
  8694  00FBCC  60                 	db	96
  8695  00FBCD  00                 	db	0
  8696  00FBCE  00                 	db	0
  8697  00FBCF  00                 	db	0
  8698  00FBD0  00                 	db	0
  8699  00FBD1  00                 	db	0
  8700  00FBD2  07                 	db	7
  8701  00FBD3  00                 	db	0
  8702  00FBD4  00                 	db	0
  8703  00FBD5  00                 	db	0
  8704  00FBD6  00                 	db	0
  8705  00FBD7  00                 	db	0
  8706  00FBD8  00                 	db	0
  8707  00FBD9  00                 	db	0
  8708  00FBDA  00                 	db	0
  8709  00FBDB  00                 	db	0
  8710  00FBDC  00                 	db	0
  8711  00FBDD  3E                 	db	62
  8712  00FBDE  00                 	db	0
  8713  00FBDF  66                 	db	102
  8714  00FBE0  00                 	db	0
  8715  00FBE1  66                 	db	102
  8716  00FBE2  00                 	db	0
  8717  00FBE3  66                 	db	102
  8718  00FBE4  00                 	db	0
  8719  00FBE5  66                 	db	102
  8720  00FBE6  00                 	db	0
  8721  00FBE7  3E                 	db	62
  8722  00FBE8  00                 	db	0
  8723  00FBE9  06                 	db	6
  8724  00FBEA  00                 	db	0
  8725  00FBEB  7C                 	db	124
  8726  00FBEC  00                 	db	0
  8727  00FBED  07                 	db	7
  8728  00FBEE  00                 	db	0
  8729  00FBEF  00                 	db	0
  8730  00FBF0  00                 	db	0
  8731  00FBF1  00                 	db	0
  8732  00FBF2  60                 	db	96
  8733  00FBF3  00                 	db	0
  8734  00FBF4  60                 	db	96
  8735  00FBF5  00                 	db	0
  8736  00FBF6  60                 	db	96
  8737  00FBF7  00                 	db	0
  8738  00FBF8  7C                 	db	124
  8739  00FBF9  00                 	db	0
  8740  00FBFA  76                 	db	118
  8741  00FBFB  00                 	db	0
  8742  00FBFC  66                 	db	102
  8743  00FBFD  00                 	db	0
  8744  00FBFE  66                 	db	102
  8745  00FBFF  00                 	db	0
  8746  00FC00  66                 	db	102
  8747  00FC01  00                 	db	0
  8748  00FC02  66                 	db	102
  8749  00FC03  00                 	db	0
  8750  00FC04  00                 	db	0
  8751  00FC05  00                 	db	0
  8752  00FC06  00                 	db	0
  8753  00FC07  00                 	db	0
  8754  00FC08  03                 	db	3
  8755  00FC09  00                 	db	0
  8756  00FC0A  00                 	db	0
  8757  00FC0B  00                 	db	0
  8758  00FC0C  00                 	db	0
  8759  00FC0D  60                 	db	96
  8760  00FC0E  00                 	db	0
  8761  00FC0F  00                 	db	0
  8762  00FC10  00                 	db	0
  8763  00FC11  00                 	db	0
  8764  00FC12  00                 	db	0
  8765  00FC13  60                 	db	96
  8766  00FC14  00                 	db	0
  8767  00FC15  60                 	db	96
  8768  00FC16  00                 	db	0
  8769  00FC17  60                 	db	96
  8770  00FC18  00                 	db	0
  8771  00FC19  60                 	db	96
  8772  00FC1A  00                 	db	0
  8773  00FC1B  60                 	db	96
  8774  00FC1C  00                 	db	0
  8775  00FC1D  60                 	db	96
  8776  00FC1E  00                 	db	0
  8777  00FC1F  00                 	db	0
  8778  00FC20  00                 	db	0
  8779  00FC21  00                 	db	0
  8780  00FC22  00                 	db	0
  8781  00FC23  03                 	db	3
  8782  00FC24  00                 	db	0
  8783  00FC25  00                 	db	0
  8784  00FC26  00                 	db	0
  8785  00FC27  00                 	db	0
  8786  00FC28  60                 	db	96
  8787  00FC29  00                 	db	0
  8788  00FC2A  00                 	db	0
  8789  00FC2B  00                 	db	0
  8790  00FC2C  00                 	db	0
  8791  00FC2D  00                 	db	0
  8792  00FC2E  60                 	db	96
  8793  00FC2F  00                 	db	0
  8794  00FC30  60                 	db	96
  8795  00FC31  00                 	db	0
  8796  00FC32  60                 	db	96
  8797  00FC33  00                 	db	0
  8798  00FC34  60                 	db	96
  8799  00FC35  00                 	db	0
  8800  00FC36  60                 	db	96
  8801  00FC37  00                 	db	0
  8802  00FC38  60                 	db	96
  8803  00FC39  00                 	db	0
  8804  00FC3A  60                 	db	96
  8805  00FC3B  00                 	db	0
  8806  00FC3C  60                 	db	96
  8807  00FC3D  00                 	db	0
  8808  00FC3E  07                 	db	7
  8809  00FC3F  00                 	db	0
  8810  00FC40  00                 	db	0
  8811  00FC41  00                 	db	0
  8812  00FC42  00                 	db	0
  8813  00FC43  60                 	db	96
  8814  00FC44  00                 	db	0
  8815  00FC45  60                 	db	96
  8816  00FC46  00                 	db	0
  8817  00FC47  60                 	db	96
  8818  00FC48  00                 	db	0
  8819  00FC49  6C                 	db	108
  8820  00FC4A  00                 	db	0
  8821  00FC4B  78                 	db	120
  8822  00FC4C  00                 	db	0
  8823  00FC4D  70                 	db	112
  8824  00FC4E  00                 	db	0
  8825  00FC4F  78                 	db	120
  8826  00FC50  00                 	db	0
  8827  00FC51  6C                 	db	108
  8828  00FC52  00                 	db	0
  8829  00FC53  66                 	db	102
  8830  00FC54  00                 	db	0
  8831  00FC55  00                 	db	0
  8832  00FC56  00                 	db	0
  8833  00FC57  00                 	db	0
  8834  00FC58  00                 	db	0
  8835  00FC59  03                 	db	3
  8836  00FC5A  00                 	db	0
  8837  00FC5B  00                 	db	0
  8838  00FC5C  00                 	db	0
  8839  00FC5D  00                 	db	0
  8840  00FC5E  60                 	db	96
  8841  00FC5F  00                 	db	0
  8842  00FC60  60                 	db	96
  8843  00FC61  00                 	db	0
  8844  00FC62  60                 	db	96
  8845  00FC63  00                 	db	0
  8846  00FC64  60                 	db	96
  8847  00FC65  00                 	db	0
  8848  00FC66  60                 	db	96
  8849  00FC67  00                 	db	0
  8850  00FC68  60                 	db	96
  8851  00FC69  00                 	db	0
  8852  00FC6A  60                 	db	96
  8853  00FC6B  00                 	db	0
  8854  00FC6C  60                 	db	96
  8855  00FC6D  00                 	db	0
  8856  00FC6E  60                 	db	96
  8857  00FC6F  00                 	db	0
  8858  00FC70  00                 	db	0
  8859  00FC71  00                 	db	0
  8860  00FC72  00                 	db	0
  8861  00FC73  00                 	db	0
  8862  00FC74  09                 	db	9
  8863  00FC75  00                 	db	0
  8864  00FC76  00                 	db	0
  8865  00FC77  00                 	db	0
  8866  00FC78  00                 	db	0
  8867  00FC79  00                 	db	0
  8868  00FC7A  00                 	db	0
  8869  00FC7B  00                 	db	0
  8870  00FC7C  00                 	db	0
  8871  00FC7D  00                 	db	0
  8872  00FC7E  00                 	db	0
  8873  00FC7F  7F                 	db	127
  8874  00FC80  00                 	db	0
  8875  00FC81  6D                 	db	109
  8876  00FC82  80                 	db	128
  8877  00FC83  6D                 	db	109
  8878  00FC84  80                 	db	128
  8879  00FC85  6D                 	db	109
  8880  00FC86  80                 	db	128
  8881  00FC87  6D                 	db	109
  8882  00FC88  80                 	db	128
  8883  00FC89  6D                 	db	109
  8884  00FC8A  80                 	db	128
  8885  00FC8B  00                 	db	0
  8886  00FC8C  00                 	db	0
  8887  00FC8D  00                 	db	0
  8888  00FC8E  00                 	db	0
  8889  00FC8F  07                 	db	7
  8890  00FC90  00                 	db	0
  8891  00FC91  00                 	db	0
  8892  00FC92  00                 	db	0
  8893  00FC93  00                 	db	0
  8894  00FC94  00                 	db	0
  8895  00FC95  00                 	db	0
  8896  00FC96  00                 	db	0
  8897  00FC97  00                 	db	0
  8898  00FC98  00                 	db	0
  8899  00FC99  00                 	db	0
  8900  00FC9A  7C                 	db	124
  8901  00FC9B  00                 	db	0
  8902  00FC9C  76                 	db	118
  8903  00FC9D  00                 	db	0
  8904  00FC9E  66                 	db	102
  8905  00FC9F  00                 	db	0
  8906  00FCA0  66                 	db	102
  8907  00FCA1  00                 	db	0
  8908  00FCA2  66                 	db	102
  8909  00FCA3  00                 	db	0
  8910  00FCA4  66                 	db	102
  8911  00FCA5  00                 	db	0
  8912  00FCA6  00                 	db	0
  8913  00FCA7  00                 	db	0
  8914  00FCA8  00                 	db	0
  8915  00FCA9  00                 	db	0
  8916  00FCAA  07                 	db	7
  8917  00FCAB  00                 	db	0
  8918  00FCAC  00                 	db	0
  8919  00FCAD  00                 	db	0
  8920  00FCAE  00                 	db	0
  8921  00FCAF  00                 	db	0
  8922  00FCB0  00                 	db	0
  8923  00FCB1  00                 	db	0
  8924  00FCB2  00                 	db	0
  8925  00FCB3  00                 	db	0
  8926  00FCB4  00                 	db	0
  8927  00FCB5  3C                 	db	60
  8928  00FCB6  00                 	db	0
  8929  00FCB7  66                 	db	102
  8930  00FCB8  00                 	db	0
  8931  00FCB9  66                 	db	102
  8932  00FCBA  00                 	db	0
  8933  00FCBB  66                 	db	102
  8934  00FCBC  00                 	db	0
  8935  00FCBD  66                 	db	102
  8936  00FCBE  00                 	db	0
  8937  00FCBF  3C                 	db	60
  8938  00FCC0  00                 	db	0
  8939  00FCC1  00                 	db	0
  8940  00FCC2  00                 	db	0
  8941  00FCC3  00                 	db	0
  8942  00FCC4  00                 	db	0
  8943  00FCC5  07                 	db	7
  8944  00FCC6  00                 	db	0
  8945  00FCC7  00                 	db	0
  8946  00FCC8  00                 	db	0
  8947  00FCC9  00                 	db	0
  8948  00FCCA  00                 	db	0
  8949  00FCCB  00                 	db	0
  8950  00FCCC  00                 	db	0
  8951  00FCCD  00                 	db	0
  8952  00FCCE  00                 	db	0
  8953  00FCCF  00                 	db	0
  8954  00FCD0  7C                 	db	124
  8955  00FCD1  00                 	db	0
  8956  00FCD2  66                 	db	102
  8957  00FCD3  00                 	db	0
  8958  00FCD4  66                 	db	102
  8959  00FCD5  00                 	db	0
  8960  00FCD6  66                 	db	102
  8961  00FCD7  00                 	db	0
  8962  00FCD8  66                 	db	102
  8963  00FCD9  00                 	db	0
  8964  00FCDA  7C                 	db	124
  8965  00FCDB  00                 	db	0
  8966  00FCDC  60                 	db	96
  8967  00FCDD  00                 	db	0
  8968  00FCDE  60                 	db	96
  8969  00FCDF  00                 	db	0
  8970  00FCE0  07                 	db	7
  8971  00FCE1  00                 	db	0
  8972  00FCE2  00                 	db	0
  8973  00FCE3  00                 	db	0
  8974  00FCE4  00                 	db	0
  8975  00FCE5  00                 	db	0
  8976  00FCE6  00                 	db	0
  8977  00FCE7  00                 	db	0
  8978  00FCE8  00                 	db	0
  8979  00FCE9  00                 	db	0
  8980  00FCEA  00                 	db	0
  8981  00FCEB  3E                 	db	62
  8982  00FCEC  00                 	db	0
  8983  00FCED  66                 	db	102
  8984  00FCEE  00                 	db	0
  8985  00FCEF  66                 	db	102
  8986  00FCF0  00                 	db	0
  8987  00FCF1  66                 	db	102
  8988  00FCF2  00                 	db	0
  8989  00FCF3  66                 	db	102
  8990  00FCF4  00                 	db	0
  8991  00FCF5  3E                 	db	62
  8992  00FCF6  00                 	db	0
  8993  00FCF7  06                 	db	6
  8994  00FCF8  00                 	db	0
  8995  00FCF9  06                 	db	6
  8996  00FCFA  00                 	db	0
  8997  00FCFB  04                 	db	4
  8998  00FCFC  00                 	db	0
  8999  00FCFD  00                 	db	0
  9000  00FCFE  00                 	db	0
  9001  00FCFF  00                 	db	0
  9002  00FD00  00                 	db	0
  9003  00FD01  00                 	db	0
  9004  00FD02  00                 	db	0
  9005  00FD03  00                 	db	0
  9006  00FD04  00                 	db	0
  9007  00FD05  00                 	db	0
  9008  00FD06  70                 	db	112
  9009  00FD07  00                 	db	0
  9010  00FD08  60                 	db	96
  9011  00FD09  00                 	db	0
  9012  00FD0A  60                 	db	96
  9013  00FD0B  00                 	db	0
  9014  00FD0C  60                 	db	96
  9015  00FD0D  00                 	db	0
  9016  00FD0E  60                 	db	96
  9017  00FD0F  00                 	db	0
  9018  00FD10  60                 	db	96
  9019  00FD11  00                 	db	0
  9020  00FD12  00                 	db	0
  9021  00FD13  00                 	db	0
  9022  00FD14  00                 	db	0
  9023  00FD15  00                 	db	0
  9024  00FD16  06                 	db	6
  9025  00FD17  00                 	db	0
  9026  00FD18  00                 	db	0
  9027  00FD19  00                 	db	0
  9028  00FD1A  00                 	db	0
  9029  00FD1B  00                 	db	0
  9030  00FD1C  00                 	db	0
  9031  00FD1D  00                 	db	0
  9032  00FD1E  00                 	db	0
  9033  00FD1F  00                 	db	0
  9034  00FD20  00                 	db	0
  9035  00FD21  38                 	db	56
  9036  00FD22  00                 	db	0
  9037  00FD23  6C                 	db	108
  9038  00FD24  00                 	db	0
  9039  00FD25  30                 	db	48
  9040  00FD26  00                 	db	0
  9041  00FD27  18                 	db	24
  9042  00FD28  00                 	db	0
  9043  00FD29  6C                 	db	108
  9044  00FD2A  00                 	db	0
  9045  00FD2B  38                 	db	56
  9046  00FD2C  00                 	db	0
  9047  00FD2D  00                 	db	0
  9048  00FD2E  00                 	db	0
  9049  00FD2F  00                 	db	0
  9050  00FD30  00                 	db	0
  9051  00FD31  04                 	db	4
  9052  00FD32  00                 	db	0
  9053  00FD33  00                 	db	0
  9054  00FD34  00                 	db	0
  9055  00FD35  00                 	db	0
  9056  00FD36  00                 	db	0
  9057  00FD37  00                 	db	0
  9058  00FD38  60                 	db	96
  9059  00FD39  00                 	db	0
  9060  00FD3A  60                 	db	96
  9061  00FD3B  00                 	db	0
  9062  00FD3C  70                 	db	112
  9063  00FD3D  00                 	db	0
  9064  00FD3E  60                 	db	96
  9065  00FD3F  00                 	db	0
  9066  00FD40  60                 	db	96
  9067  00FD41  00                 	db	0
  9068  00FD42  60                 	db	96
  9069  00FD43  00                 	db	0
  9070  00FD44  60                 	db	96
  9071  00FD45  00                 	db	0
  9072  00FD46  30                 	db	48
  9073  00FD47  00                 	db	0
  9074  00FD48  00                 	db	0
  9075  00FD49  00                 	db	0
  9076  00FD4A  00                 	db	0
  9077  00FD4B  00                 	db	0
  9078  00FD4C  07                 	db	7
  9079  00FD4D  00                 	db	0
  9080  00FD4E  00                 	db	0
  9081  00FD4F  00                 	db	0
  9082  00FD50  00                 	db	0
  9083  00FD51  00                 	db	0
  9084  00FD52  00                 	db	0
  9085  00FD53  00                 	db	0
  9086  00FD54  00                 	db	0
  9087  00FD55  00                 	db	0
  9088  00FD56  00                 	db	0
  9089  00FD57  66                 	db	102
  9090  00FD58  00                 	db	0
  9091  00FD59  66                 	db	102
  9092  00FD5A  00                 	db	0
  9093  00FD5B  66                 	db	102
  9094  00FD5C  00                 	db	0
  9095  00FD5D  66                 	db	102
  9096  00FD5E  00                 	db	0
  9097  00FD5F  6E                 	db	110
  9098  00FD60  00                 	db	0
  9099  00FD61  3E                 	db	62
  9100  00FD62  00                 	db	0
  9101  00FD63  00                 	db	0
  9102  00FD64  00                 	db	0
  9103  00FD65  00                 	db	0
  9104  00FD66  00                 	db	0
  9105  00FD67  07                 	db	7
  9106  00FD68  00                 	db	0
  9107  00FD69  00                 	db	0
  9108  00FD6A  00                 	db	0
  9109  00FD6B  00                 	db	0
  9110  00FD6C  00                 	db	0
  9111  00FD6D  00                 	db	0
  9112  00FD6E  00                 	db	0
  9113  00FD6F  00                 	db	0
  9114  00FD70  00                 	db	0
  9115  00FD71  00                 	db	0
  9116  00FD72  66                 	db	102
  9117  00FD73  00                 	db	0
  9118  00FD74  66                 	db	102
  9119  00FD75  00                 	db	0
  9120  00FD76  3C                 	db	60
  9121  00FD77  00                 	db	0
  9122  00FD78  3C                 	db	60
  9123  00FD79  00                 	db	0
  9124  00FD7A  18                 	db	24
  9125  00FD7B  00                 	db	0
  9126  00FD7C  18                 	db	24
  9127  00FD7D  00                 	db	0
  9128  00FD7E  00                 	db	0
  9129  00FD7F  00                 	db	0
  9130  00FD80  00                 	db	0
  9131  00FD81  00                 	db	0
  9132  00FD82  09                 	db	9
  9133  00FD83  00                 	db	0
  9134  00FD84  00                 	db	0
  9135  00FD85  00                 	db	0
  9136  00FD86  00                 	db	0
  9137  00FD87  00                 	db	0
  9138  00FD88  00                 	db	0
  9139  00FD89  00                 	db	0
  9140  00FD8A  00                 	db	0
  9141  00FD8B  00                 	db	0
  9142  00FD8C  00                 	db	0
  9143  00FD8D  6D                 	db	109
  9144  00FD8E  80                 	db	128
  9145  00FD8F  6D                 	db	109
  9146  00FD90  80                 	db	128
  9147  00FD91  7F                 	db	127
  9148  00FD92  80                 	db	128
  9149  00FD93  7F                 	db	127
  9150  00FD94  80                 	db	128
  9151  00FD95  33                 	db	51
  9152  00FD96  00                 	db	0
  9153  00FD97  33                 	db	51
  9154  00FD98  00                 	db	0
  9155  00FD99  00                 	db	0
  9156  00FD9A  00                 	db	0
  9157  00FD9B  00                 	db	0
  9158  00FD9C  00                 	db	0
  9159  00FD9D  06                 	db	6
  9160  00FD9E  00                 	db	0
  9161  00FD9F  00                 	db	0
  9162  00FDA0  00                 	db	0
  9163  00FDA1  00                 	db	0
  9164  00FDA2  00                 	db	0
  9165  00FDA3  00                 	db	0
  9166  00FDA4  00                 	db	0
  9167  00FDA5  00                 	db	0
  9168  00FDA6  00                 	db	0
  9169  00FDA7  00                 	db	0
  9170  00FDA8  6C                 	db	108
  9171  00FDA9  00                 	db	0
  9172  00FDAA  6C                 	db	108
  9173  00FDAB  00                 	db	0
  9174  00FDAC  38                 	db	56
  9175  00FDAD  00                 	db	0
  9176  00FDAE  38                 	db	56
  9177  00FDAF  00                 	db	0
  9178  00FDB0  6C                 	db	108
  9179  00FDB1  00                 	db	0
  9180  00FDB2  6C                 	db	108
  9181  00FDB3  00                 	db	0
  9182  00FDB4  00                 	db	0
  9183  00FDB5  00                 	db	0
  9184  00FDB6  00                 	db	0
  9185  00FDB7  00                 	db	0
  9186  00FDB8  06                 	db	6
  9187  00FDB9  00                 	db	0
  9188  00FDBA  00                 	db	0
  9189  00FDBB  00                 	db	0
  9190  00FDBC  00                 	db	0
  9191  00FDBD  00                 	db	0
  9192  00FDBE  00                 	db	0
  9193  00FDBF  00                 	db	0
  9194  00FDC0  00                 	db	0
  9195  00FDC1  00                 	db	0
  9196  00FDC2  00                 	db	0
  9197  00FDC3  6C                 	db	108
  9198  00FDC4  00                 	db	0
  9199  00FDC5  6C                 	db	108
  9200  00FDC6  00                 	db	0
  9201  00FDC7  6C                 	db	108
  9202  00FDC8  00                 	db	0
  9203  00FDC9  6C                 	db	108
  9204  00FDCA  00                 	db	0
  9205  00FDCB  38                 	db	56
  9206  00FDCC  00                 	db	0
  9207  00FDCD  30                 	db	48
  9208  00FDCE  00                 	db	0
  9209  00FDCF  30                 	db	48
  9210  00FDD0  00                 	db	0
  9211  00FDD1  E0                 	db	224
  9212  00FDD2  00                 	db	0
  9213  00FDD3  06                 	db	6
  9214  00FDD4  00                 	db	0
  9215  00FDD5  00                 	db	0
  9216  00FDD6  00                 	db	0
  9217  00FDD7  00                 	db	0
  9218  00FDD8  00                 	db	0
  9219  00FDD9  00                 	db	0
  9220  00FDDA  00                 	db	0
  9221  00FDDB  00                 	db	0
  9222  00FDDC  00                 	db	0
  9223  00FDDD  00                 	db	0
  9224  00FDDE  7C                 	db	124
  9225  00FDDF  00                 	db	0
  9226  00FDE0  0C                 	db	12
  9227  00FDE1  00                 	db	0
  9228  00FDE2  18                 	db	24
  9229  00FDE3  00                 	db	0
  9230  00FDE4  30                 	db	48
  9231  00FDE5  00                 	db	0
  9232  00FDE6  60                 	db	96
  9233  00FDE7  00                 	db	0
  9234  00FDE8  7C                 	db	124
  9235  00FDE9  00                 	db	0
  9236  00FDEA  00                 	db	0
  9237  00FDEB  00                 	db	0
  9238  00FDEC  00                 	db	0
  9239  00FDED  00                 	db	0
  9240  00FDEE  05                 	db	5
  9241  00FDEF  00                 	db	0
  9242  00FDF0  00                 	db	0
  9243  00FDF1  18                 	db	24
  9244  00FDF2  00                 	db	0
  9245  00FDF3  30                 	db	48
  9246  00FDF4  00                 	db	0
  9247  00FDF5  30                 	db	48
  9248  00FDF6  00                 	db	0
  9249  00FDF7  30                 	db	48
  9250  00FDF8  00                 	db	0
  9251  00FDF9  30                 	db	48
  9252  00FDFA  00                 	db	0
  9253  00FDFB  60                 	db	96
  9254  00FDFC  00                 	db	0
  9255  00FDFD  30                 	db	48
  9256  00FDFE  00                 	db	0
  9257  00FDFF  30                 	db	48
  9258  00FE00  00                 	db	0
  9259  00FE01  30                 	db	48
  9260  00FE02  00                 	db	0
  9261  00FE03  30                 	db	48
  9262  00FE04  00                 	db	0
  9263  00FE05  18                 	db	24
  9264  00FE06  00                 	db	0
  9265  00FE07  00                 	db	0
  9266  00FE08  00                 	db	0
  9267  00FE09  03                 	db	3
  9268  00FE0A  00                 	db	0
  9269  00FE0B  00                 	db	0
  9270  00FE0C  00                 	db	0
  9271  00FE0D  00                 	db	0
  9272  00FE0E  60                 	db	96
  9273  00FE0F  00                 	db	0
  9274  00FE10  60                 	db	96
  9275  00FE11  00                 	db	0
  9276  00FE12  60                 	db	96
  9277  00FE13  00                 	db	0
  9278  00FE14  60                 	db	96
  9279  00FE15  00                 	db	0
  9280  00FE16  60                 	db	96
  9281  00FE17  00                 	db	0
  9282  00FE18  60                 	db	96
  9283  00FE19  00                 	db	0
  9284  00FE1A  60                 	db	96
  9285  00FE1B  00                 	db	0
  9286  00FE1C  60                 	db	96
  9287  00FE1D  00                 	db	0
  9288  00FE1E  60                 	db	96
  9289  00FE1F  00                 	db	0
  9290  00FE20  60                 	db	96
  9291  00FE21  00                 	db	0
  9292  00FE22  00                 	db	0
  9293  00FE23  00                 	db	0
  9294  00FE24  05                 	db	5
  9295  00FE25  00                 	db	0
  9296  00FE26  00                 	db	0
  9297  00FE27  60                 	db	96
  9298  00FE28  00                 	db	0
  9299  00FE29  30                 	db	48
  9300  00FE2A  00                 	db	0
  9301  00FE2B  30                 	db	48
  9302  00FE2C  00                 	db	0
  9303  00FE2D  30                 	db	48
  9304  00FE2E  00                 	db	0
  9305  00FE2F  30                 	db	48
  9306  00FE30  00                 	db	0
  9307  00FE31  18                 	db	24
  9308  00FE32  00                 	db	0
  9309  00FE33  30                 	db	48
  9310  00FE34  00                 	db	0
  9311  00FE35  30                 	db	48
  9312  00FE36  00                 	db	0
  9313  00FE37  30                 	db	48
  9314  00FE38  00                 	db	0
  9315  00FE39  30                 	db	48
  9316  00FE3A  00                 	db	0
  9317  00FE3B  60                 	db	96
  9318  00FE3C  00                 	db	0
  9319  00FE3D  00                 	db	0
  9320  00FE3E  00                 	db	0
  9321  00FE3F  08                 	db	8
  9322  00FE40  00                 	db	0
  9323  00FE41  00                 	db	0
  9324  00FE42  00                 	db	0
  9325  00FE43  00                 	db	0
  9326  00FE44  00                 	db	0
  9327  00FE45  00                 	db	0
  9328  00FE46  3B                 	db	59
  9329  00FE47  00                 	db	0
  9330  00FE48  6E                 	db	110
  9331  00FE49  00                 	db	0
  9332  00FE4A  00                 	db	0
  9333  00FE4B  00                 	db	0
  9334  00FE4C  00                 	db	0
  9335  00FE4D  00                 	db	0
  9336  00FE4E  00                 	db	0
  9337  00FE4F  00                 	db	0
  9338  00FE50  00                 	db	0
  9339  00FE51  00                 	db	0
  9340  00FE52  00                 	db	0
  9341  00FE53  00                 	db	0
  9342  00FE54  00                 	db	0
  9343  00FE55  00                 	db	0
  9344  00FE56  00                 	db	0
  9345  00FE57  00                 	db	0
  9346  00FE58  00                 	db	0
  9347  00FE59  00                 	db	0
  9348  00FE5A  04                 	db	4
  9349  00FE5B  00                 	db	0
  9350  00FE5C  00                 	db	0
  9351  00FE5D  00                 	db	0
  9352  00FE5E  00                 	db	0
  9353  00FE5F  00                 	db	0
  9354  00FE60  00                 	db	0
  9355  00FE61  F0                 	db	240
  9356  00FE62  00                 	db	0
  9357  00FE63  F0                 	db	240
  9358  00FE64  00                 	db	0
  9359  00FE65  F0                 	db	240
  9360  00FE66  00                 	db	0
  9361  00FE67  F0                 	db	240
  9362  00FE68  00                 	db	0
  9363  00FE69  F0                 	db	240
  9364  00FE6A  00                 	db	0
  9365  00FE6B  F0                 	db	240
  9366  00FE6C  00                 	db	0
  9367  00FE6D  F0                 	db	240
  9368  00FE6E  00                 	db	0
  9369  00FE6F  F0                 	db	240
  9370  00FE70  00                 	db	0
  9371  00FE71  00                 	db	0
  9372  00FE72  00                 	db	0
  9373  00FE73  00                 	db	0
  9374  00FE74  00                 	db	0
  9375  00FE75  0A                 	db	10
  9376  00FE76  00                 	db	0
  9377  00FE77  00                 	db	0
  9378  00FE78  00                 	db	0
  9379  00FE79  00                 	db	0
  9380  00FE7A  FF                 	db	255
  9381  00FE7B  00                 	db	0
  9382  00FE7C  18                 	db	24
  9383  00FE7D  00                 	db	0
  9384  00FE7E  18                 	db	24
  9385  00FE7F  00                 	db	0
  9386  00FE80  18                 	db	24
  9387  00FE81  00                 	db	0
  9388  00FE82  1F                 	db	31
  9389  00FE83  00                 	db	0
  9390  00FE84  19                 	db	25
  9391  00FE85  80                 	db	128
  9392  00FE86  19                 	db	25
  9393  00FE87  80                 	db	128
  9394  00FE88  1F                 	db	31
  9395  00FE89  80                 	db	128
  9396  00FE8A  1F                 	db	31
  9397  00FE8B  00                 	db	0
  9398  00FE8C  00                 	db	0
  9399  00FE8D  00                 	db	0
  9400  00FE8E  00                 	db	0
  9401  00FE8F  00                 	db	0
  9402  00FE90  07                 	db	7
  9403  00FE91  0C                 	db	12
  9404  00FE92  00                 	db	0
  9405  00FE93  18                 	db	24
  9406  00FE94  00                 	db	0
  9407  00FE95  7E                 	db	126
  9408  00FE96  00                 	db	0
  9409  00FE97  60                 	db	96
  9410  00FE98  00                 	db	0
  9411  00FE99  60                 	db	96
  9412  00FE9A  00                 	db	0
  9413  00FE9B  60                 	db	96
  9414  00FE9C  00                 	db	0
  9415  00FE9D  60                 	db	96
  9416  00FE9E  00                 	db	0
  9417  00FE9F  60                 	db	96
  9418  00FEA0  00                 	db	0
  9419  00FEA1  60                 	db	96
  9420  00FEA2  00                 	db	0
  9421  00FEA3  60                 	db	96
  9422  00FEA4  00                 	db	0
  9423  00FEA5  60                 	db	96
  9424  00FEA6  00                 	db	0
  9425  00FEA7  00                 	db	0
  9426  00FEA8  00                 	db	0
  9427  00FEA9  00                 	db	0
  9428  00FEAA  00                 	db	0
  9429  00FEAB  04                 	db	4
  9430  00FEAC  00                 	db	0
  9431  00FEAD  00                 	db	0
  9432  00FEAE  00                 	db	0
  9433  00FEAF  00                 	db	0
  9434  00FEB0  00                 	db	0
  9435  00FEB1  00                 	db	0
  9436  00FEB2  00                 	db	0
  9437  00FEB3  00                 	db	0
  9438  00FEB4  00                 	db	0
  9439  00FEB5  00                 	db	0
  9440  00FEB6  00                 	db	0
  9441  00FEB7  00                 	db	0
  9442  00FEB8  00                 	db	0
  9443  00FEB9  00                 	db	0
  9444  00FEBA  00                 	db	0
  9445  00FEBB  00                 	db	0
  9446  00FEBC  00                 	db	0
  9447  00FEBD  00                 	db	0
  9448  00FEBE  00                 	db	0
  9449  00FEBF  00                 	db	0
  9450  00FEC0  30                 	db	48
  9451  00FEC1  00                 	db	0
  9452  00FEC2  60                 	db	96
  9453  00FEC3  00                 	db	0
  9454  00FEC4  00                 	db	0
  9455  00FEC5  00                 	db	0
  9456  00FEC6  06                 	db	6
  9457  00FEC7  00                 	db	0
  9458  00FEC8  00                 	db	0
  9459  00FEC9  00                 	db	0
  9460  00FECA  00                 	db	0
  9461  00FECB  0C                 	db	12
  9462  00FECC  00                 	db	0
  9463  00FECD  18                 	db	24
  9464  00FECE  00                 	db	0
  9465  00FECF  00                 	db	0
  9466  00FED0  00                 	db	0
  9467  00FED1  7C                 	db	124
  9468  00FED2  00                 	db	0
  9469  00FED3  60                 	db	96
  9470  00FED4  00                 	db	0
  9471  00FED5  60                 	db	96
  9472  00FED6  00                 	db	0
  9473  00FED7  60                 	db	96
  9474  00FED8  00                 	db	0
  9475  00FED9  60                 	db	96
  9476  00FEDA  00                 	db	0
  9477  00FEDB  60                 	db	96
  9478  00FEDC  00                 	db	0
  9479  00FEDD  00                 	db	0
  9480  00FEDE  00                 	db	0
  9481  00FEDF  00                 	db	0
  9482  00FEE0  00                 	db	0
  9483  00FEE1  0E                 	db	14
  9484  00FEE2  02                 	db	2
  9485  00FEE3  00                 	db	0
  9486  00FEE4  0A                 	db	10
  9487  00FEE5  80                 	db	128
  9488  00FEE6  07                 	db	7
  9489  00FEE7  00                 	db	0
  9490  00FEE8  52                 	db	82
  9491  00FEE9  50                 	db	80
  9492  00FEEA  32                 	db	50
  9493  00FEEB  60                 	db	96
  9494  00FEEC  6F                 	db	111
  9495  00FEED  B0                 	db	176
  9496  00FEEE  07                 	db	7
  9497  00FEEF  00                 	db	0
  9498  00FEF0  6F                 	db	111
  9499  00FEF1  B0                 	db	176
  9500  00FEF2  32                 	db	50
  9501  00FEF3  60                 	db	96
  9502  00FEF4  52                 	db	82
  9503  00FEF5  50                 	db	80
  9504  00FEF6  07                 	db	7
  9505  00FEF7  00                 	db	0
  9506  00FEF8  0A                 	db	10
  9507  00FEF9  80                 	db	128
  9508  00FEFA  02                 	db	2
  9509  00FEFB  00                 	db	0
  9510  00FEFC  0E                 	db	14
  9511  00FEFD  03                 	db	3
  9512  00FEFE  80                 	db	128
  9513  00FEFF  07                 	db	7
  9514  00FF00  80                 	db	128
  9515  00FF01  07                 	db	7
  9516  00FF02  80                 	db	128
  9517  00FF03  07                 	db	7
  9518  00FF04  80                 	db	128
  9519  00FF05  07                 	db	7
  9520  00FF06  80                 	db	128
  9521  00FF07  07                 	db	7
  9522  00FF08  00                 	db	0
  9523  00FF09  0F                 	db	15
  9524  00FF0A  80                 	db	128
  9525  00FF0B  7D                 	db	125
  9526  00FF0C  E0                 	db	224
  9527  00FF0D  FF                 	db	255
  9528  00FF0E  F0                 	db	240
  9529  00FF0F  F7                 	db	247
  9530  00FF10  78                 	db	120
  9531  00FF11  E0                 	db	224
  9532  00FF12  7C                 	db	124
  9533  00FF13  C0                 	db	192
  9534  00FF14  3C                 	db	60
  9535  00FF15  00                 	db	0
  9536  00FF16  1C                 	db	28
  9537  00FF17  0D                 	db	13
  9538  00FF18  07                 	db	7
  9539  00FF19  00                 	db	0
  9540  00FF1A  07                 	db	7
  9541  00FF1B  00                 	db	0
  9542  00FF1C  07                 	db	7
  9543  00FF1D  00                 	db	0
  9544  00FF1E  07                 	db	7
  9545  00FF1F  00                 	db	0
  9546  00FF20  07                 	db	7
  9547  00FF21  00                 	db	0
  9548  00FF22  07                 	db	7
  9549  00FF23  00                 	db	0
  9550  00FF24  07                 	db	7
  9551  00FF25  00                 	db	0
  9552  00FF26  07                 	db	7
  9553  00FF27  00                 	db	0
  9554  00FF28  3F                 	db	63
  9555  00FF29  E0                 	db	224
  9556  00FF2A  1F                 	db	31
  9557  00FF2B  C0                 	db	192
  9558  00FF2C  0F                 	db	15
  9559  00FF2D  80                 	db	128
  9560  00FF2E  07                 	db	7
  9561  00FF2F  00                 	db	0
  9562  00FF30  02                 	db	2
  9563  00FF31  00                 	db	0
  9564  00FF32  0D                 	db	13
  9565  00FF33  02                 	db	2
  9566  00FF34  00                 	db	0
  9567  00FF35  07                 	db	7
  9568  00FF36  00                 	db	0
  9569  00FF37  0F                 	db	15
  9570  00FF38  80                 	db	128
  9571  00FF39  1F                 	db	31
  9572  00FF3A  C0                 	db	192
  9573  00FF3B  3F                 	db	63
  9574  00FF3C  E0                 	db	224
  9575  00FF3D  07                 	db	7
  9576  00FF3E  00                 	db	0
  9577  00FF3F  07                 	db	7
  9578  00FF40  00                 	db	0
  9579  00FF41  07                 	db	7
  9580  00FF42  00                 	db	0
  9581  00FF43  07                 	db	7
  9582  00FF44  00                 	db	0
  9583  00FF45  07                 	db	7
  9584  00FF46  00                 	db	0
  9585  00FF47  07                 	db	7
  9586  00FF48  00                 	db	0
  9587  00FF49  07                 	db	7
  9588  00FF4A  00                 	db	0
  9589  00FF4B  07                 	db	7
  9590  00FF4C  00                 	db	0
  9591  00FF4D  10                 	db	16
  9592  00FF4E  3C                 	db	60
  9593  00FF4F  3C                 	db	60
  9594  00FF50  24                 	db	36
  9595  00FF51  24                 	db	36
  9596  00FF52  FF                 	db	255
  9597  00FF53  FF                 	db	255
  9598  00FF54  80                 	db	128
  9599  00FF55  01                 	db	1
  9600  00FF56  88                 	db	136
  9601  00FF57  01                 	db	1
  9602  00FF58  9C                 	db	156
  9603  00FF59  39                 	db	57
  9604  00FF5A  88                 	db	136
  9605  00FF5B  01                 	db	1
  9606  00FF5C  80                 	db	128
  9607  00FF5D  01                 	db	1
  9608  00FF5E  80                 	db	128
  9609  00FF5F  01                 	db	1
  9610  00FF60  80                 	db	128
  9611  00FF61  01                 	db	1
  9612  00FF62  FF                 	db	255
  9613  00FF63  FF                 	db	255
  9614  00FF64  FF                 	db	255
  9615  00FF65  FF                 	db	255
  9616  00FF66  FF                 	db	255
  9617  00FF67  FF                 	db	255
  9618  00FF68  0D                 	db	13
  9619  00FF69  00                 	db	0
  9620  00FF6A  00                 	db	0
  9621  00FF6B  02                 	db	2
  9622  00FF6C  00                 	db	0
  9623  00FF6D  07                 	db	7
  9624  00FF6E  00                 	db	0
  9625  00FF6F  07                 	db	7
  9626  00FF70  00                 	db	0
  9627  00FF71  07                 	db	7
  9628  00FF72  00                 	db	0
  9629  00FF73  0A                 	db	10
  9630  00FF74  80                 	db	128
  9631  00FF75  12                 	db	18
  9632  00FF76  40                 	db	64
  9633  00FF77  17                 	db	23
  9634  00FF78  40                 	db	64
  9635  00FF79  10                 	db	16
  9636  00FF7A  40                 	db	64
  9637  00FF7B  48                 	db	72
  9638  00FF7C  90                 	db	144
  9639  00FF7D  07                 	db	7
  9640  00FF7E  00                 	db	0
  9641  00FF7F  10                 	db	16
  9642  00FF80  40                 	db	64
  9643  00FF81  02                 	db	2
  9644  00FF82  00                 	db	0
  9645  00FF83  10                 	db	16
  9646  00FF84  00                 	db	0
  9647  00FF85  00                 	db	0
  9648  00FF86  00                 	db	0
  9649  00FF87  00                 	db	0
  9650  00FF88  00                 	db	0
  9651  00FF89  00                 	db	0
  9652  00FF8A  3F                 	db	63
  9653  00FF8B  FC                 	db	252
  9654  00FF8C  20                 	db	32
  9655  00FF8D  04                 	db	4
  9656  00FF8E  20                 	db	32
  9657  00FF8F  04                 	db	4
  9658  00FF90  FF                 	db	255
  9659  00FF91  FF                 	db	255
  9660  00FF92  20                 	db	32
  9661  00FF93  04                 	db	4
  9662  00FF94  20                 	db	32
  9663  00FF95  04                 	db	4
  9664  00FF96  3F                 	db	63
  9665  00FF97  FC                 	db	252
  9666  00FF98  00                 	db	0
  9667  00FF99  00                 	db	0
  9668  00FF9A  00                 	db	0
  9669  00FF9B  00                 	db	0
  9670  00FF9C  00                 	db	0
  9671  00FF9D  00                 	db	0
  9672  00FF9E                     __end_of_font13:
  9673                           	opt stack 0
  9674  00FF9E                     _dpowers:
  9675                           	opt stack 0
  9676  00FF9E  0001               	dw	1
  9677  00FFA0  0000               	dw	0
  9678  00FFA2  000A               	dw	10
  9679  00FFA4  0000               	dw	0
  9680  00FFA6  0064               	dw	100
  9681  00FFA8  0000               	dw	0
  9682  00FFAA  03E8               	dw	1000
  9683  00FFAC  0000               	dw	0
  9684  00FFAE  2710               	dw	10000
  9685  00FFB0  0000               	dw	0
  9686  00FFB2  86A0               	dw	34464
  9687  00FFB4  0001               	dw	1
  9688  00FFB6  4240               	dw	16960
  9689  00FFB8  000F               	dw	15
  9690  00FFBA  9680               	dw	38528
  9691  00FFBC  0098               	dw	152
  9692  00FFBE  E100               	dw	57600
  9693  00FFC0  05F5               	dw	1525
  9694  00FFC2  CA00               	dw	51712
  9695  00FFC4  3B9A               	dw	15258
  9696  00FFC6                     __end_of_dpowers:
  9697                           	opt stack 0
  9698  0000                     _ADCON0	set	4034
  9699  0000                     _ADCON0bits	set	4034
  9700  0000                     _ADCON1	set	4033
  9701  0000                     _ADCON2	set	4032
  9702  0000                     _ADCON2bits	set	4032
  9703  0000                     _ADRESH	set	4036
  9704  0000                     _ADRESL	set	4035
  9705  0000                     _ANSELA	set	3896
  9706  0000                     _ANSELB	set	3897
  9707  0000                     _ANSELC	set	3898
  9708  0000                     _ANSELD	set	3899
  9709  0000                     _ANSELE	set	3900
  9710  0000                     _CCP4CONbits	set	3927
  9711  0000                     _CCP5CON	set	3924
  9712  0000                     _CCPR1L	set	4030
  9713  0000                     _CCPR2L	set	3943
  9714  0000                     _CCPR4L	set	3928
  9715  0000                     _EEADR	set	4009
  9716  0000                     _EEADRH	set	4010
  9717  0000                     _EECON1bits	set	4006
  9718  0000                     _EECON2	set	4007
  9719  0000                     _EEDATA	set	4008
  9720  0000                     _INTCONbits	set	4082
  9721  0000                     _IPR1bits	set	3999
  9722  0000                     _IPR5bits	set	3967
  9723  0000                     _LATAbits	set	3977
  9724  0000                     _LATBbits	set	3978
  9725  0000                     _LATC	set	3979
  9726  0000                     _LATCbits	set	3979
  9727  0000                     _LATD	set	3980
  9728  0000                     _OSCCON	set	4051
  9729  0000                     _OSCTUNEbits	set	3995
  9730  0000                     _PIE1bits	set	3997
  9731  0000                     _PIE5bits	set	3965
  9732  0000                     _PIR1bits	set	3998
  9733  0000                     _PIR5bits	set	3966
  9734  0000                     _PORTC	set	3970
  9735  0000                     _PORTD	set	3971
  9736  0000                     _PR2	set	4027
  9737  0000                     _PR4	set	3922
  9738  0000                     _RCONbits	set	4048
  9739  0000                     _RCREG	set	4014
  9740  0000                     _SPBRG	set	4015
  9741  0000                     _T2CONbits	set	4026
  9742  0000                     _T4CONbits	set	3921
  9743  0000                     _TMR2	set	4028
  9744  0000                     _TMR4	set	3923
  9745  0000                     _TRISAbits	set	3986
  9746  0000                     _TRISBbits	set	3987
  9747  0000                     _TRISC	set	3988
  9748  0000                     _TRISCbits	set	3988
  9749  0000                     _TRISD	set	3989
  9750  0000                     _TRISEbits	set	3990
  9751  0000                     _TXREG	set	4013
  9752  0000                     _BRG161	set	32195
  9753  0000                     _BRGH1	set	32098
  9754  0000                     _CREN1	set	32092
  9755  0000                     _DC1B0	set	32236
  9756  0000                     _DC1B1	set	32237
  9757  0000                     _DC2B0	set	31540
  9758  0000                     _DC2B1	set	31541
  9759  0000                     _FERR1	set	32090
  9760  0000                     _GIE	set	32663
  9761  0000                     _LATC0	set	31832
  9762  0000                     _LATC2	set	31834
  9763  0000                     _LATC3	set	31835
  9764  0000                     _LATE0	set	31848
  9765  0000                     _LATE1	set	31849
  9766  0000                     _LATE2	set	31850
  9767  0000                     _OERR1	set	32089
  9768  0000                     _RCIE	set	31981
  9769  0000                     _RCIF	set	31989
  9770  0000                     _RCIP	set	31997
  9771  0000                     _RX91	set	32094
  9772  0000                     _SPEN1	set	32095
  9773  0000                     _SREN1	set	32093
  9774  0000                     _SWDTEN	set	32392
  9775  0000                     _SYNC1	set	32100
  9776  0000                     _TRMT1	set	32097
  9777  0000                     _TX91	set	32102
  9778  0000                     _TXEN1	set	32101
  9779  0000                     _TXIE	set	31980
  9780  0000                     _LATA	set	3977
  9781  0000                     _LATB	set	3978
  9782  0000                     _TRISA	set	3986
  9783  0000                     _TRISB	set	3987
  9784  00FFC6                     __stringdata:
  9785                           	opt stack 0
  9786  00FFC6                     STR_3:
  9787  00FFC6  25                 	db	37
  9788  00FFC7  30                 	db	48	;'0'
  9789  00FFC8  31                 	db	49	;'1'
  9790  00FFC9  75                 	db	117	;'u'
  9791  00FFCA  20                 	db	32
  9792  00FFCB  25                 	db	37
  9793  00FFCC  30                 	db	48	;'0'
  9794  00FFCD  31                 	db	49	;'1'
  9795  00FFCE  75                 	db	117	;'u'
  9796  00FFCF  20                 	db	32
  9797  00FFD0  25                 	db	37
  9798  00FFD1  30                 	db	48	;'0'
  9799  00FFD2  31                 	db	49	;'1'
  9800  00FFD3  75                 	db	117	;'u'
  9801  00FFD4  20                 	db	32
  9802  00FFD5  25                 	db	37
  9803  00FFD6  30                 	db	48	;'0'
  9804  00FFD7  31                 	db	49	;'1'
  9805  00FFD8  75                 	db	117	;'u'
  9806  00FFD9  20                 	db	32
  9807  00FFDA  25                 	db	37
  9808  00FFDB  30                 	db	48	;'0'
  9809  00FFDC  31                 	db	49	;'1'
  9810  00FFDD  75                 	db	117	;'u'
  9811  00FFDE  20                 	db	32
  9812  00FFDF  25                 	db	37
  9813  00FFE0  30                 	db	48	;'0'
  9814  00FFE1  32                 	db	50	;'2'
  9815  00FFE2  75                 	db	117	;'u'
  9816  00FFE3  20                 	db	32
  9817  00FFE4  25                 	db	37
  9818  00FFE5  30                 	db	48	;'0'
  9819  00FFE6  31                 	db	49	;'1'
  9820  00FFE7  75                 	db	117	;'u'
  9821  00FFE8  20                 	db	32
  9822  00FFE9  25                 	db	37
  9823  00FFEA  30                 	db	48	;'0'
  9824  00FFEB  31                 	db	49	;'1'
  9825  00FFEC  75                 	db	117	;'u'
  9826  00FFED  20                 	db	32
  9827  00FFEE  25                 	db	37
  9828  00FFEF  30                 	db	48	;'0'
  9829  00FFF0  31                 	db	49	;'1'
  9830  00FFF1  75                 	db	117	;'u'
  9831  00FFF2  00                 	db	0
  9832  00FFF3                     STR_2:
  9833  00FFF3  54                 	db	84	;'T'
  9834  00FFF4  3D                 	db	61	;'='
  9835  00FFF5  25                 	db	37
  9836  00FFF6  32                 	db	50	;'2'
  9837  00FFF7  2E                 	db	46
  9838  00FFF8  31                 	db	49	;'1'
  9839  00FFF9  66                 	db	102	;'f'
  9840  00FFFA  00                 	db	0
  9841  00FFFB                     STR_1:
  9842  00FFFB  41                 	db	65	;'A'
  9843  00FFFC  42                 	db	66	;'B'
  9844  00FFFD  00                 	db	0
  9845  00FFFE                     __end_of__stringdata:
  9846                           	opt stack 0
  9847                           
  9848                           ; #config settings
  9849  00FFFE  00                 	db	0	; dummy byte at the end
  9850  0000                     tblptrh	equ	0xFF7
  9851                           tblptrl	equ	0xFF6
  9852                           tablat	equ	0xFF5
  9853                           prodh	equ	0xFF4
  9854                           prodl	equ	0xFF3
  9855                           intcon	equ	0xFF2
  9856                           wreg	equ	0xFE8
  9857                           indf1	equ	0xFE7
  9858                           postinc1	equ	0xFE6
  9859                           postdec1	equ	0xFE5
  9860                           fsr1h	equ	0xFE2
  9861                           fsr1l	equ	0xFE1
  9862                           indf2	equ	0xFDF
  9863                           postinc2	equ	0xFDE
  9864                           postdec2	equ	0xFDD
  9865                           fsr2h	equ	0xFDA
  9866                           fsr2l	equ	0xFD9
  9867                           status	equ	0xFD8
  9868                           
  9869                           	psect	cinit
  9870  002E28                     __pcinit:
  9871                           	opt stack 0
  9872  002E28                     start_initialization:
  9873                           	opt stack 0
  9874  002E28                     __initialization:
  9875                           	opt stack 0
  9876                           
  9877                           ; Clear objects allocated to BIGRAM (352 bytes)
  9878  002E28  EE04  F000         	lfsr	0,__pbssBIGRAM
  9879  002E2C  EE11 F060          	lfsr	1,352
  9880  002E30                     clear_0:
  9881  002E30  6AEE               	clrf	postinc0,c
  9882  002E32  50E5               	movf	postdec1,w,c
  9883  002E34  50E1               	movf	fsr1l,w,c
  9884  002E36  E1FC               	bnz	clear_0
  9885  002E38  50E2               	movf	fsr1h,w,c
  9886  002E3A  E1FA               	bnz	clear_0
  9887                           
  9888                           ; Clear objects allocated to BANK3 (256 bytes)
  9889  002E3C  EE03  F000         	lfsr	0,__pbssBANK3
  9890  002E40  EE11 F000          	lfsr	1,256
  9891  002E44                     clear_1:
  9892  002E44  6AEE               	clrf	postinc0,c
  9893  002E46  50E5               	movf	postdec1,w,c
  9894  002E48  50E1               	movf	fsr1l,w,c
  9895  002E4A  E1FC               	bnz	clear_1
  9896  002E4C  50E2               	movf	fsr1h,w,c
  9897  002E4E  E1FA               	bnz	clear_1
  9898                           
  9899                           ; Clear objects allocated to BANK2 (176 bytes)
  9900  002E50  EE02  F000         	lfsr	0,__pbssBANK2
  9901  002E54  0EB0               	movlw	176
  9902  002E56                     clear_2:
  9903  002E56  6AEE               	clrf	postinc0,c
  9904  002E58  06E8               	decf	wreg,f,c
  9905  002E5A  E1FD               	bnz	clear_2
  9906                           
  9907                           ; Clear objects allocated to BANK1 (181 bytes)
  9908  002E5C  EE01  F000         	lfsr	0,__pbssBANK1
  9909  002E60  0EB5               	movlw	181
  9910  002E62                     clear_3:
  9911  002E62  6AEE               	clrf	postinc0,c
  9912  002E64  06E8               	decf	wreg,f,c
  9913  002E66  E1FD               	bnz	clear_3
  9914                           
  9915                           ; Clear objects allocated to BANK0 (39 bytes)
  9916  002E68  EE00  F0AE         	lfsr	0,__pbssBANK0
  9917  002E6C  0E27               	movlw	39
  9918  002E6E                     clear_4:
  9919  002E6E  6AEE               	clrf	postinc0,c
  9920  002E70  06E8               	decf	wreg,f,c
  9921  002E72  E1FD               	bnz	clear_4
  9922                           
  9923                           ; Clear objects allocated to COMRAM (38 bytes)
  9924  002E74  EE00  F001         	lfsr	0,__pbssCOMRAM
  9925  002E78  0E26               	movlw	38
  9926  002E7A                     clear_5:
  9927  002E7A  6AEE               	clrf	postinc0,c
  9928  002E7C  06E8               	decf	wreg,f,c
  9929  002E7E  E1FD               	bnz	clear_5
  9930                           
  9931                           ; Initialize objects allocated to BANK1 (4 bytes)
  9932                           ; load TBLPTR registers with __pidataBANK1
  9933  002E80  0E24               	movlw	low __pidataBANK1
  9934  002E82  6EF6               	movwf	tblptrl,c
  9935  002E84  0E3C               	movlw	high __pidataBANK1
  9936  002E86  6EF7               	movwf	tblptrh,c
  9937  002E88  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  9938  002E8A  6EF8               	movwf	tblptru,c
  9939  002E8C  EE01  F0F7         	lfsr	0,__pdataBANK1
  9940  002E90  EE10 F004          	lfsr	1,4
  9941  002E94                     copy_data0:
  9942  002E94  0009               	tblrd		*+
  9943  002E96  CFF5 FFEE          	movff	tablat,postinc0
  9944  002E9A  50E5               	movf	postdec1,w,c
  9945  002E9C  50E1               	movf	fsr1l,w,c
  9946  002E9E  E1FA               	bnz	copy_data0
  9947                           
  9948                           ; Initialize objects allocated to BANK0 (4 bytes)
  9949                           ; load TBLPTR registers with __pidataBANK0
  9950  002EA0  0E20               	movlw	low __pidataBANK0
  9951  002EA2  6EF6               	movwf	tblptrl,c
  9952  002EA4  0E3C               	movlw	high __pidataBANK0
  9953  002EA6  6EF7               	movwf	tblptrh,c
  9954  002EA8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  9955  002EAA  6EF8               	movwf	tblptru,c
  9956  002EAC  EE00  F0D5         	lfsr	0,__pdataBANK0
  9957  002EB0  EE10 F004          	lfsr	1,4
  9958  002EB4                     copy_data1:
  9959  002EB4  0009               	tblrd		*+
  9960  002EB6  CFF5 FFEE          	movff	tablat,postinc0
  9961  002EBA  50E5               	movf	postdec1,w,c
  9962  002EBC  50E1               	movf	fsr1l,w,c
  9963  002EBE  E1FA               	bnz	copy_data1
  9964  002EC0                     end_of_initialization:
  9965                           	opt stack 0
  9966  002EC0                     __end_of__initialization:
  9967                           	opt stack 0
  9968  002EC0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  9969  002EC2  6EF8               	movwf	tblptru,c
  9970  002EC4  0100               	movlb	0
  9971  002EC6  EFAF  F012         	goto	_main	;jump to C main() function
  9972                           tblptru	equ	0xFF8
  9973                           tblptrh	equ	0xFF7
  9974                           tblptrl	equ	0xFF6
  9975                           tablat	equ	0xFF5
  9976                           prodh	equ	0xFF4
  9977                           prodl	equ	0xFF3
  9978                           intcon	equ	0xFF2
  9979                           postinc0	equ	0xFEE
  9980                           wreg	equ	0xFE8
  9981                           indf1	equ	0xFE7
  9982                           postinc1	equ	0xFE6
  9983                           postdec1	equ	0xFE5
  9984                           fsr1h	equ	0xFE2
  9985                           fsr1l	equ	0xFE1
  9986                           indf2	equ	0xFDF
  9987                           postinc2	equ	0xFDE
  9988                           postdec2	equ	0xFDD
  9989                           fsr2h	equ	0xFDA
  9990                           fsr2l	equ	0xFD9
  9991                           status	equ	0xFD8
  9992                           
  9993                           	psect	bssCOMRAM
  9994  000001                     __pbssCOMRAM:
  9995                           	opt stack 0
  9996  000001                     _Messages:
  9997                           	opt stack 0
  9998  000001                     	ds	10
  9999  00000B                     _BSem:
 10000                           	opt stack 0
 10001  00000B                     	ds	4
 10002  00000F                     _e:
 10003                           	opt stack 0
 10004  00000F                     	ds	4
 10005  000013                     _f:
 10006                           	opt stack 0
 10007  000013                     	ds	4
 10008  000017                     _k:
 10009                           	opt stack 0
 10010  000017                     	ds	4
 10011  00001B                     _c:
 10012                           	opt stack 0
 10013  00001B                     	ds	2
 10014  00001D                     _d:
 10015                           	opt stack 0
 10016  00001D                     	ds	2
 10017  00001F                     _j_rx:
 10018                           	opt stack 0
 10019  00001F                     	ds	2
 10020  000021                     _a:
 10021                           	opt stack 0
 10022  000021                     	ds	1
 10023  000022                     _b:
 10024                           	opt stack 0
 10025  000022                     	ds	1
 10026  000023                     _beep_count:
 10027                           	opt stack 0
 10028  000023                     	ds	1
 10029  000024                     _curr_task:
 10030                           	opt stack 0
 10031  000024                     	ds	1
 10032  000025                     _dummy:
 10033                           	opt stack 0
 10034  000025                     	ds	1
 10035  000026                     _timeout_error:
 10036                           	opt stack 0
 10037  000026                     	ds	1
 10038                           tblptru	equ	0xFF8
 10039                           tblptrh	equ	0xFF7
 10040                           tblptrl	equ	0xFF6
 10041                           tablat	equ	0xFF5
 10042                           prodh	equ	0xFF4
 10043                           prodl	equ	0xFF3
 10044                           intcon	equ	0xFF2
 10045                           postinc0	equ	0xFEE
 10046                           wreg	equ	0xFE8
 10047                           indf1	equ	0xFE7
 10048                           postinc1	equ	0xFE6
 10049                           postdec1	equ	0xFE5
 10050                           fsr1h	equ	0xFE2
 10051                           fsr1l	equ	0xFE1
 10052                           indf2	equ	0xFDF
 10053                           postinc2	equ	0xFDE
 10054                           postdec2	equ	0xFDD
 10055                           fsr2h	equ	0xFDA
 10056                           fsr2l	equ	0xFD9
 10057                           status	equ	0xFD8
 10058                           
 10059                           	psect	bssBANK0
 10060  0000AE                     __pbssBANK0:
 10061                           	opt stack 0
 10062  0000AE                     _stat:
 10063                           	opt stack 0
 10064  0000AE                     	ds	9
 10065  0000B7                     tsk_ds18b20@f_temp:
 10066                           	opt stack 0
 10067  0000B7                     	ds	4
 10068  0000BB                     __sys_tick:
 10069                           	opt stack 0
 10070  0000BB                     	ds	2
 10071  0000BD                     _beep_timer:
 10072                           	opt stack 0
 10073  0000BD                     	ds	2
 10074  0000BF                     _sys_tick:
 10075                           	opt stack 0
 10076  0000BF                     	ds	2
 10077  0000C1                     tsk_display@_prev_tick:
 10078                           	opt stack 0
 10079  0000C1                     	ds	2
 10080  0000C3                     tsk_display@_state:
 10081                           	opt stack 0
 10082  0000C3                     	ds	2
 10083  0000C5                     tsk_ds18b20@_prev_tick:
 10084                           	opt stack 0
 10085  0000C5                     	ds	2
 10086  0000C7                     tsk_ds18b20@_state:
 10087                           	opt stack 0
 10088  0000C7                     	ds	2
 10089  0000C9                     HI_ISR@beep:
 10090                           	opt stack 0
 10091  0000C9                     	ds	1
 10092  0000CA                     MTouchAcquisition@startSensorNumber:
 10093                           	opt stack 0
 10094  0000CA                     	ds	1
 10095  0000CB                     _BroadcastMessages:
 10096                           	opt stack 0
 10097  0000CB                     	ds	1
 10098  0000CC                     ___gie:
 10099                           	opt stack 0
 10100  0000CC                     	ds	1
 10101  0000CD                     _delayus_variable:
 10102                           	opt stack 0
 10103  0000CD                     	ds	1
 10104  0000CE                     _ow_bit:
 10105                           	opt stack 0
 10106  0000CE                     	ds	1
 10107  0000CF                     tsk_display@_interrupt_state:
 10108                           	opt stack 0
 10109  0000CF                     	ds	1
 10110  0000D0                     tsk_ds18b20@_interrupt_state:
 10111                           	opt stack 0
 10112  0000D0                     	ds	1
 10113  0000D1                     tsk_ds18b20@ow_err:
 10114                           	opt stack 0
 10115  0000D1                     	ds	1
 10116  0000D2                     _pos:
 10117                           	opt stack 0
 10118  0000D2                     	ds	3
 10119                           tblptru	equ	0xFF8
 10120                           tblptrh	equ	0xFF7
 10121                           tblptrl	equ	0xFF6
 10122                           tablat	equ	0xFF5
 10123                           prodh	equ	0xFF4
 10124                           prodl	equ	0xFF3
 10125                           intcon	equ	0xFF2
 10126                           postinc0	equ	0xFEE
 10127                           wreg	equ	0xFE8
 10128                           indf1	equ	0xFE7
 10129                           postinc1	equ	0xFE6
 10130                           postdec1	equ	0xFE5
 10131                           fsr1h	equ	0xFE2
 10132                           fsr1l	equ	0xFE1
 10133                           indf2	equ	0xFDF
 10134                           postinc2	equ	0xFDE
 10135                           postdec2	equ	0xFDD
 10136                           fsr2h	equ	0xFDA
 10137                           fsr2l	equ	0xFD9
 10138                           status	equ	0xFD8
 10139                           
 10140                           	psect	dataBANK0
 10141  0000D5                     __pdataBANK0:
 10142                           	opt stack 0
 10143  0000D5                     _f_T_salona:
 10144                           	opt stack 0
 10145  0000D5                     	ds	4
 10146                           tblptru	equ	0xFF8
 10147                           tblptrh	equ	0xFF7
 10148                           tblptrl	equ	0xFF6
 10149                           tablat	equ	0xFF5
 10150                           prodh	equ	0xFF4
 10151                           prodl	equ	0xFF3
 10152                           intcon	equ	0xFF2
 10153                           postinc0	equ	0xFEE
 10154                           wreg	equ	0xFE8
 10155                           indf1	equ	0xFE7
 10156                           postinc1	equ	0xFE6
 10157                           postdec1	equ	0xFE5
 10158                           fsr1h	equ	0xFE2
 10159                           fsr1l	equ	0xFE1
 10160                           indf2	equ	0xFDF
 10161                           postinc2	equ	0xFDE
 10162                           postdec2	equ	0xFDD
 10163                           fsr2h	equ	0xFDA
 10164                           fsr2l	equ	0xFD9
 10165                           status	equ	0xFD8
 10166                           
 10167                           	psect	bssBANK1
 10168  000100                     __pbssBANK1:
 10169                           	opt stack 0
 10170  000100                     _scratch:
 10171                           	opt stack 0
 10172  000100                     	ds	9
 10173  000109                     _l:
 10174                           	opt stack 0
 10175  000109                     	ds	4
 10176  00010D                     _RxTxBuff:
 10177                           	opt stack 0
 10178  00010D                     	ds	128
 10179  00018D                     _str:
 10180                           	opt stack 0
 10181  00018D                     	ds	40
 10182                           tblptru	equ	0xFF8
 10183                           tblptrh	equ	0xFF7
 10184                           tblptrl	equ	0xFF6
 10185                           tablat	equ	0xFF5
 10186                           prodh	equ	0xFF4
 10187                           prodl	equ	0xFF3
 10188                           intcon	equ	0xFF2
 10189                           postinc0	equ	0xFEE
 10190                           wreg	equ	0xFE8
 10191                           indf1	equ	0xFE7
 10192                           postinc1	equ	0xFE6
 10193                           postdec1	equ	0xFE5
 10194                           fsr1h	equ	0xFE2
 10195                           fsr1l	equ	0xFE1
 10196                           indf2	equ	0xFDF
 10197                           postinc2	equ	0xFDE
 10198                           postdec2	equ	0xFDD
 10199                           fsr2h	equ	0xFDA
 10200                           fsr2l	equ	0xFD9
 10201                           status	equ	0xFD8
 10202                           
 10203                           	psect	dataBANK1
 10204  0001F7                     __pdataBANK1:
 10205                           	opt stack 0
 10206  0001F7                     tsk_display@f_prev_T:
 10207                           	opt stack 0
 10208  0001F7                     	ds	4
 10209                           tblptru	equ	0xFF8
 10210                           tblptrh	equ	0xFF7
 10211                           tblptrl	equ	0xFF6
 10212                           tablat	equ	0xFF5
 10213                           prodh	equ	0xFF4
 10214                           prodl	equ	0xFF3
 10215                           intcon	equ	0xFF2
 10216                           postinc0	equ	0xFEE
 10217                           wreg	equ	0xFE8
 10218                           indf1	equ	0xFE7
 10219                           postinc1	equ	0xFE6
 10220                           postdec1	equ	0xFE5
 10221                           fsr1h	equ	0xFE2
 10222                           fsr1l	equ	0xFE1
 10223                           indf2	equ	0xFDF
 10224                           postinc2	equ	0xFDE
 10225                           postdec2	equ	0xFDD
 10226                           fsr2h	equ	0xFDA
 10227                           fsr2l	equ	0xFD9
 10228                           status	equ	0xFD8
 10229                           
 10230                           	psect	bssBANK2
 10231  000200                     __pbssBANK2:
 10232                           	opt stack 0
 10233  000200                     _buttons:
 10234                           	opt stack 0
 10235  000200                     	ds	104
 10236  000268                     _lb_paket:
 10237                           	opt stack 0
 10238  000268                     	ds	36
 10239  00028C                     _lb_temp:
 10240                           	opt stack 0
 10241  00028C                     	ds	36
 10242                           tblptru	equ	0xFF8
 10243                           tblptrh	equ	0xFF7
 10244                           tblptrl	equ	0xFF6
 10245                           tablat	equ	0xFF5
 10246                           prodh	equ	0xFF4
 10247                           prodl	equ	0xFF3
 10248                           intcon	equ	0xFF2
 10249                           postinc0	equ	0xFEE
 10250                           wreg	equ	0xFE8
 10251                           indf1	equ	0xFE7
 10252                           postinc1	equ	0xFE6
 10253                           postdec1	equ	0xFE5
 10254                           fsr1h	equ	0xFE2
 10255                           fsr1l	equ	0xFE1
 10256                           indf2	equ	0xFDF
 10257                           postinc2	equ	0xFDE
 10258                           postdec2	equ	0xFDD
 10259                           fsr2h	equ	0xFDA
 10260                           fsr2l	equ	0xFD9
 10261                           status	equ	0xFD8
 10262                           
 10263                           	psect	bssBANK3
 10264  000300                     __pbssBANK3:
 10265                           	opt stack 0
 10266  000300                     _RxBuff:
 10267                           	opt stack 0
 10268  000300                     	ds	256
 10269                           tblptru	equ	0xFF8
 10270                           tblptrh	equ	0xFF7
 10271                           tblptrl	equ	0xFF6
 10272                           tablat	equ	0xFF5
 10273                           prodh	equ	0xFF4
 10274                           prodl	equ	0xFF3
 10275                           intcon	equ	0xFF2
 10276                           postinc0	equ	0xFEE
 10277                           wreg	equ	0xFE8
 10278                           indf1	equ	0xFE7
 10279                           postinc1	equ	0xFE6
 10280                           postdec1	equ	0xFE5
 10281                           fsr1h	equ	0xFE2
 10282                           fsr1l	equ	0xFE1
 10283                           indf2	equ	0xFDF
 10284                           postinc2	equ	0xFDE
 10285                           postdec2	equ	0xFDD
 10286                           fsr2h	equ	0xFDA
 10287                           fsr2l	equ	0xFD9
 10288                           status	equ	0xFD8
 10289                           
 10290                           	psect	bssBIGRAM
 10291  000400                     __pbssBIGRAM:
 10292                           	opt stack 0
 10293  000400                     _sensors:
 10294                           	opt stack 0
 10295  000400                     	ds	352
 10296                           tblptru	equ	0xFF8
 10297                           tblptrh	equ	0xFF7
 10298                           tblptrl	equ	0xFF6
 10299                           tablat	equ	0xFF5
 10300                           prodh	equ	0xFF4
 10301                           prodl	equ	0xFF3
 10302                           intcon	equ	0xFF2
 10303                           postinc0	equ	0xFEE
 10304                           wreg	equ	0xFE8
 10305                           indf1	equ	0xFE7
 10306                           postinc1	equ	0xFE6
 10307                           postdec1	equ	0xFE5
 10308                           fsr1h	equ	0xFE2
 10309                           fsr1l	equ	0xFE1
 10310                           indf2	equ	0xFDF
 10311                           postinc2	equ	0xFDE
 10312                           postdec2	equ	0xFDD
 10313                           fsr2h	equ	0xFDA
 10314                           fsr2l	equ	0xFD9
 10315                           status	equ	0xFD8
 10316                           
 10317                           	psect	cstackBANK2
 10318  0002B0                     __pcstackBANK2:
 10319                           	opt stack 0
 10320  0002B0                     _sprintf$3239:
 10321                           	opt stack 0
 10322                           
 10323                           ; 4 bytes @ 0x0
 10324  0002B0                     	ds	4
 10325  0002B4                     _sprintf$2428:
 10326                           	opt stack 0
 10327                           
 10328                           ; 4 bytes @ 0x4
 10329  0002B4                     	ds	4
 10330  0002B8                     sprintf@vd:
 10331                           	opt stack 0
 10332                           
 10333                           ; 4 bytes @ 0x8
 10334  0002B8                     	ds	4
 10335  0002BC                     sprintf@vd_2430:
 10336                           	opt stack 0
 10337                           
 10338                           ; 4 bytes @ 0xC
 10339  0002BC                     	ds	4
 10340  0002C0                     sprintf@ap:
 10341                           	opt stack 0
 10342                           
 10343                           ; 2 bytes @ 0x10
 10344  0002C0                     	ds	2
 10345  0002C2                     sprintf@integ:
 10346                           	opt stack 0
 10347                           
 10348                           ; 4 bytes @ 0x12
 10349  0002C2                     	ds	4
 10350  0002C6                     sprintf@_val:
 10351                           	opt stack 0
 10352                           
 10353                           ; 5 bytes @ 0x16
 10354  0002C6                     	ds	5
 10355  0002CB                     sprintf@exp:
 10356                           	opt stack 0
 10357                           
 10358                           ; 2 bytes @ 0x1B
 10359  0002CB                     	ds	2
 10360  0002CD                     sprintf@flag:
 10361                           	opt stack 0
 10362                           
 10363                           ; 2 bytes @ 0x1D
 10364  0002CD                     	ds	2
 10365  0002CF                     sprintf@width:
 10366                           	opt stack 0
 10367                           
 10368                           ; 2 bytes @ 0x1F
 10369  0002CF                     	ds	2
 10370  0002D1                     sprintf@fval:
 10371                           	opt stack 0
 10372                           
 10373                           ; 4 bytes @ 0x21
 10374  0002D1                     	ds	4
 10375  0002D5                     sprintf@prec:
 10376                           	opt stack 0
 10377                           
 10378                           ; 2 bytes @ 0x25
 10379  0002D5                     	ds	2
 10380  0002D7                     sprintf@c:
 10381                           	opt stack 0
 10382                           
 10383                           ; 1 bytes @ 0x27
 10384  0002D7                     	ds	1
 10385                           tblptru	equ	0xFF8
 10386                           tblptrh	equ	0xFF7
 10387                           tblptrl	equ	0xFF6
 10388                           tablat	equ	0xFF5
 10389                           prodh	equ	0xFF4
 10390                           prodl	equ	0xFF3
 10391                           intcon	equ	0xFF2
 10392                           postinc0	equ	0xFEE
 10393                           wreg	equ	0xFE8
 10394                           indf1	equ	0xFE7
 10395                           postinc1	equ	0xFE6
 10396                           postdec1	equ	0xFE5
 10397                           fsr1h	equ	0xFE2
 10398                           fsr1l	equ	0xFE1
 10399                           indf2	equ	0xFDF
 10400                           postinc2	equ	0xFDE
 10401                           postdec2	equ	0xFDD
 10402                           fsr2h	equ	0xFDA
 10403                           fsr2l	equ	0xFD9
 10404                           status	equ	0xFD8
 10405                           
 10406                           	psect	cstackBANK1
 10407  0001B5                     __pcstackBANK1:
 10408                           	opt stack 0
 10409  0001B5                     ??_LabelSetTxt:
 10410  0001B5                     ??_fround:
 10411  0001B5                     _scale$3238:
 10412                           	opt stack 0
 10413                           
 10414                           ; 4 bytes @ 0x0
 10415  0001B5                     	ds	3
 10416  0001B8                     LabelSetTxt@w:
 10417                           	opt stack 0
 10418                           
 10419                           ; 1 bytes @ 0x3
 10420  0001B8                     	ds	1
 10421  0001B9                     LabelSetTxt@end:
 10422                           	opt stack 0
 10423  0001B9                     scale@scl:
 10424                           	opt stack 0
 10425  0001B9                     _fround$3237:
 10426                           	opt stack 0
 10427                           
 10428                           ; 4 bytes @ 0x4
 10429  0001B9                     	ds	1
 10430  0001BA                     ?___fltol:
 10431                           	opt stack 0
 10432  0001BA                     LabelSetTxt@i:
 10433                           	opt stack 0
 10434  0001BA                     ___fltol@f1:
 10435                           	opt stack 0
 10436                           
 10437                           ; 4 bytes @ 0x5
 10438  0001BA                     	ds	1
 10439  0001BB                     LabelCreate@lb:
 10440                           	opt stack 0
 10441                           
 10442                           ; 2 bytes @ 0x6
 10443  0001BB                     	ds	2
 10444  0001BD                     LabelCreate@x:
 10445                           	opt stack 0
 10446  0001BD                     _fround$3236:
 10447                           	opt stack 0
 10448                           
 10449                           ; 4 bytes @ 0x8
 10450  0001BD                     	ds	1
 10451  0001BE                     ??___fltol:
 10452  0001BE                     LabelCreate@y:
 10453                           	opt stack 0
 10454                           
 10455                           ; 1 bytes @ 0x9
 10456  0001BE                     	ds	1
 10457  0001BF                     LabelCreate@font:
 10458                           	opt stack 0
 10459                           
 10460                           ; 2 bytes @ 0xA
 10461  0001BF                     	ds	2
 10462  0001C1                     LabelCreate@ln:
 10463                           	opt stack 0
 10464  0001C1                     fround@prec:
 10465                           	opt stack 0
 10466                           
 10467                           ; 1 bytes @ 0xC
 10468  0001C1                     	ds	1
 10469  0001C2                     ?___fladd:
 10470                           	opt stack 0
 10471  0001C2                     ___fltol@sign1:
 10472                           	opt stack 0
 10473  0001C2                     ___fladd@f1:
 10474                           	opt stack 0
 10475                           
 10476                           ; 4 bytes @ 0xD
 10477  0001C2                     	ds	1
 10478  0001C3                     ___fltol@exp1:
 10479                           	opt stack 0
 10480                           
 10481                           ; 1 bytes @ 0xE
 10482  0001C3                     	ds	3
 10483  0001C6                     ___fladd@f2:
 10484                           	opt stack 0
 10485                           
 10486                           ; 4 bytes @ 0x11
 10487  0001C6                     	ds	4
 10488  0001CA                     ??___fladd:
 10489                           
 10490                           ; 0 bytes @ 0x15
 10491  0001CA                     	ds	4
 10492  0001CE                     ___fladd@sign:
 10493                           	opt stack 0
 10494                           
 10495                           ; 1 bytes @ 0x19
 10496  0001CE                     	ds	1
 10497  0001CF                     ___fladd@exp2:
 10498                           	opt stack 0
 10499                           
 10500                           ; 1 bytes @ 0x1A
 10501  0001CF                     	ds	1
 10502  0001D0                     ___fladd@exp1:
 10503                           	opt stack 0
 10504                           
 10505                           ; 1 bytes @ 0x1B
 10506  0001D0                     	ds	1
 10507  0001D1                     ?___flsub:
 10508                           	opt stack 0
 10509  0001D1                     ?_ds18b20_read:
 10510                           	opt stack 0
 10511  0001D1                     ___flsub@f1:
 10512                           	opt stack 0
 10513                           
 10514                           ; 4 bytes @ 0x1C
 10515  0001D1                     	ds	4
 10516  0001D5                     ??_ds18b20_read:
 10517  0001D5                     ___flsub@f2:
 10518                           	opt stack 0
 10519                           
 10520                           ; 4 bytes @ 0x20
 10521  0001D5                     	ds	2
 10522  0001D7                     ds18b20_read@t:
 10523                           	opt stack 0
 10524                           
 10525                           ; 2 bytes @ 0x22
 10526  0001D7                     	ds	2
 10527  0001D9                     ?_sprintf:
 10528                           	opt stack 0
 10529  0001D9                     sprintf@sp:
 10530                           	opt stack 0
 10531  0001D9                     ds18b20_read@f:
 10532                           	opt stack 0
 10533                           
 10534                           ; 4 bytes @ 0x24
 10535  0001D9                     	ds	2
 10536  0001DB                     sprintf@f:
 10537                           	opt stack 0
 10538                           
 10539                           ; 2 bytes @ 0x26
 10540  0001DB                     	ds	2
 10541  0001DD                     ds18b20_read@dowcrc:
 10542                           	opt stack 0
 10543                           
 10544                           ; 1 bytes @ 0x28
 10545  0001DD                     	ds	1
 10546  0001DE                     ds18b20_read@i:
 10547                           	opt stack 0
 10548                           
 10549                           ; 1 bytes @ 0x29
 10550  0001DE                     	ds	1
 10551  0001DF                     ??_tsk_ds18b20:
 10552                           
 10553                           ; 0 bytes @ 0x2A
 10554  0001DF                     	ds	16
 10555  0001EF                     ??_sprintf:
 10556                           
 10557                           ; 0 bytes @ 0x3A
 10558  0001EF                     	ds	6
 10559  0001F5                     ??_tsk_display:
 10560                           
 10561                           ; 0 bytes @ 0x40
 10562  0001F5                     	ds	2
 10563                           tblptru	equ	0xFF8
 10564                           tblptrh	equ	0xFF7
 10565                           tblptrl	equ	0xFF6
 10566                           tablat	equ	0xFF5
 10567                           prodh	equ	0xFF4
 10568                           prodl	equ	0xFF3
 10569                           intcon	equ	0xFF2
 10570                           postinc0	equ	0xFEE
 10571                           wreg	equ	0xFE8
 10572                           indf1	equ	0xFE7
 10573                           postinc1	equ	0xFE6
 10574                           postdec1	equ	0xFE5
 10575                           fsr1h	equ	0xFE2
 10576                           fsr1l	equ	0xFE1
 10577                           indf2	equ	0xFDF
 10578                           postinc2	equ	0xFDE
 10579                           postdec2	equ	0xFDD
 10580                           fsr2h	equ	0xFDA
 10581                           fsr2l	equ	0xFD9
 10582                           status	equ	0xFD8
 10583                           
 10584                           	psect	cstackBANK0
 10585  000060                     __pcstackBANK0:
 10586                           	opt stack 0
 10587  000060                     ?_MTouchAcquisitionCVD:
 10588                           	opt stack 0
 10589  000060                     MTouchAcquisitionCVD@pCurrentSensor:
 10590                           	opt stack 0
 10591  000060                     MTouchUpdateSensorAverage@pSensor:
 10592                           	opt stack 0
 10593                           
 10594                           ; 2 bytes @ 0x0
 10595  000060                     	ds	2
 10596  000062                     MTouchAcquisitionCVD@pPreviousSensor:
 10597                           	opt stack 0
 10598  000062                     MTouchUpdateSensorAverage@rate:
 10599                           	opt stack 0
 10600                           
 10601                           ; 2 bytes @ 0x2
 10602  000062                     	ds	2
 10603  000064                     ??_MTouchUpdateSensorAverage:
 10604  000064                     ??_MTouchAcquisitionCVD:
 10605                           
 10606                           ; 0 bytes @ 0x4
 10607  000064                     	ds	2
 10608  000066                     MTouchAcquisitionCVD@result:
 10609                           	opt stack 0
 10610                           
 10611                           ; 2 bytes @ 0x6
 10612  000066                     	ds	2
 10613  000068                     MTouchAcquisitionCVD@prevTris:
 10614                           	opt stack 0
 10615                           
 10616                           ; 2 bytes @ 0x8
 10617  000068                     	ds	1
 10618  000069                     MTouchSensorDecode@pSensor:
 10619                           	opt stack 0
 10620                           
 10621                           ; 2 bytes @ 0x9
 10622  000069                     	ds	1
 10623  00006A                     MTouchAcquisitionCVD@prevChannelNumber:
 10624                           	opt stack 0
 10625                           
 10626                           ; 1 bytes @ 0xA
 10627  00006A                     	ds	1
 10628  00006B                     ??_MTouchSensorDecode:
 10629  00006B                     MTouchAcquisitionCVD@curChannelNumber:
 10630                           	opt stack 0
 10631                           
 10632                           ; 1 bytes @ 0xB
 10633  00006B                     	ds	1
 10634  00006C                     MTouchAcquisitionCVD@prevLat:
 10635                           	opt stack 0
 10636                           
 10637                           ; 2 bytes @ 0xC
 10638  00006C                     	ds	2
 10639  00006E                     MTouchAcquisitionCVD@curLat:
 10640                           	opt stack 0
 10641                           
 10642                           ; 2 bytes @ 0xE
 10643  00006E                     	ds	1
 10644  00006F                     MTouchSensorDecode@delta:
 10645                           	opt stack 0
 10646                           
 10647                           ; 2 bytes @ 0xF
 10648  00006F                     	ds	1
 10649  000070                     MTouchAcquisitionCVD@prevIOMask:
 10650                           	opt stack 0
 10651                           
 10652                           ; 1 bytes @ 0x10
 10653  000070                     	ds	1
 10654  000071                     MTouchAcquisitionCVD@curTris:
 10655                           	opt stack 0
 10656                           
 10657                           ; 2 bytes @ 0x11
 10658  000071                     	ds	2
 10659  000073                     MTouchAcquisitionCVD@curIOMask:
 10660                           	opt stack 0
 10661                           
 10662                           ; 1 bytes @ 0x13
 10663  000073                     	ds	1
 10664  000074                     ??_MTouchAcquisition:
 10665                           
 10666                           ; 0 bytes @ 0x14
 10667  000074                     	ds	3
 10668  000077                     MTouchAcquisition@data:
 10669                           	opt stack 0
 10670                           
 10671                           ; 2 bytes @ 0x17
 10672  000077                     	ds	2
 10673  000079                     MTouchAcquisition@pLastSensor:
 10674                           	opt stack 0
 10675                           
 10676                           ; 2 bytes @ 0x19
 10677  000079                     	ds	2
 10678  00007B                     MTouchAcquisition@pPreviousSensor:
 10679                           	opt stack 0
 10680                           
 10681                           ; 2 bytes @ 0x1B
 10682  00007B                     	ds	2
 10683  00007D                     MTouchAcquisition@i:
 10684                           	opt stack 0
 10685                           
 10686                           ; 1 bytes @ 0x1D
 10687  00007D                     	ds	1
 10688  00007E                     MTouchAcquisition@pCurrentSensor:
 10689                           	opt stack 0
 10690                           
 10691                           ; 2 bytes @ 0x1E
 10692  00007E                     	ds	2
 10693  000080                     ??_HI_ISR:
 10694                           
 10695                           ; 0 bytes @ 0x20
 10696  000080                     	ds	7
 10697  000087                     ??_isdigit:
 10698  000087                     ??_MTouchDecodeButtons:
 10699  000087                     ?___wmul:
 10700                           	opt stack 0
 10701  000087                     ?___awmod:
 10702                           	opt stack 0
 10703  000087                     ?__tdiv_to_l_:
 10704                           	opt stack 0
 10705  000087                     ?__div_to_l_:
 10706                           	opt stack 0
 10707  000087                     ?___flpack:
 10708                           	opt stack 0
 10709  000087                     ?___flneg:
 10710                           	opt stack 0
 10711  000087                     ?___lldiv:
 10712                           	opt stack 0
 10713  000087                     MTouchSetButton@sensorNumber:
 10714                           	opt stack 0
 10715  000087                     Beep@ms10:
 10716                           	opt stack 0
 10717  000087                     InitMessages@i:
 10718                           	opt stack 0
 10719  000087                     ProcessMessages@i:
 10720                           	opt stack 0
 10721  000087                     ks0108WriteCommand@chip:
 10722                           	opt stack 0
 10723  000087                     DelayMs@cnt:
 10724                           	opt stack 0
 10725  000087                     ___lbmod@divisor:
 10726                           	opt stack 0
 10727  000087                     MTouchSetSensor@tris:
 10728                           	opt stack 0
 10729  000087                     ow_delay@del:
 10730                           	opt stack 0
 10731  000087                     ___wmul@multiplier:
 10732                           	opt stack 0
 10733  000087                     ___awmod@dividend:
 10734                           	opt stack 0
 10735  000087                     ___flpack@arg:
 10736                           	opt stack 0
 10737  000087                     __div_to_l_@f1:
 10738                           	opt stack 0
 10739  000087                     ___flge@ff1:
 10740                           	opt stack 0
 10741  000087                     ___flneg@f1:
 10742                           	opt stack 0
 10743  000087                     __tdiv_to_l_@f1:
 10744                           	opt stack 0
 10745  000087                     ___lldiv@dividend:
 10746                           	opt stack 0
 10747                           
 10748                           ; 4 bytes @ 0x27
 10749  000087                     	ds	1
 10750  000088                     MTouchSetButton@decode:
 10751                           	opt stack 0
 10752  000088                     ks0108WriteCommand@cmd:
 10753                           	opt stack 0
 10754  000088                     DelayMs@i:
 10755                           	opt stack 0
 10756  000088                     _isdigit$2836:
 10757                           	opt stack 0
 10758  000088                     ___lbmod@dividend:
 10759                           	opt stack 0
 10760                           
 10761                           ; 1 bytes @ 0x28
 10762  000088                     	ds	1
 10763  000089                     ??_MTouchSetButton:
 10764  000089                     ??_init_1wire:
 10765  000089                     ??_read_1wire:
 10766  000089                     ??_write_1wire:
 10767  000089                     ks0108GotoXY@y:
 10768                           	opt stack 0
 10769  000089                     ks0108WriteData@data:
 10770                           	opt stack 0
 10771  000089                     isdigit@c:
 10772                           	opt stack 0
 10773  000089                     ___lbmod@counter:
 10774                           	opt stack 0
 10775  000089                     MTouchSetSensor@lat:
 10776                           	opt stack 0
 10777  000089                     ___wmul@multiplicand:
 10778                           	opt stack 0
 10779  000089                     ___awmod@divisor:
 10780                           	opt stack 0
 10781                           
 10782                           ; 2 bytes @ 0x29
 10783  000089                     	ds	1
 10784  00008A                     ks0108GotoXY@chip:
 10785                           	opt stack 0
 10786  00008A                     ___lbmod@rem:
 10787                           	opt stack 0
 10788                           
 10789                           ; 1 bytes @ 0x2A
 10790  00008A                     	ds	1
 10791  00008B                     MTouchSetButton@buttonNumber:
 10792                           	opt stack 0
 10793  00008B                     MTouchSetSensor@ioBitNumber:
 10794                           	opt stack 0
 10795  00008B                     init_1wire@st:
 10796                           	opt stack 0
 10797  00008B                     read_1wire@data:
 10798                           	opt stack 0
 10799  00008B                     write_1wire@data:
 10800                           	opt stack 0
 10801  00008B                     ks0108GotoXY@cmd:
 10802                           	opt stack 0
 10803  00008B                     ___awmod@counter:
 10804                           	opt stack 0
 10805  00008B                     ___flpack@exp:
 10806                           	opt stack 0
 10807  00008B                     ___lbdiv@divisor:
 10808                           	opt stack 0
 10809  00008B                     MTouchDecodeButtons@pSensor:
 10810                           	opt stack 0
 10811  00008B                     ___wmul@product:
 10812                           	opt stack 0
 10813  00008B                     __div_to_l_@f2:
 10814                           	opt stack 0
 10815  00008B                     ___flge@ff2:
 10816                           	opt stack 0
 10817  00008B                     __tdiv_to_l_@f2:
 10818                           	opt stack 0
 10819  00008B                     ___lldiv@divisor:
 10820                           	opt stack 0
 10821                           
 10822                           ; 4 bytes @ 0x2B
 10823  00008B                     	ds	1
 10824  00008C                     MTouchSetSensor@channelNumber:
 10825                           	opt stack 0
 10826  00008C                     read_1wire@i:
 10827                           	opt stack 0
 10828  00008C                     write_1wire@i:
 10829                           	opt stack 0
 10830  00008C                     ks0108GotoXY@x:
 10831                           	opt stack 0
 10832  00008C                     ___awmod@sign:
 10833                           	opt stack 0
 10834  00008C                     ___flpack@sign:
 10835                           	opt stack 0
 10836  00008C                     ___lbdiv@dividend:
 10837                           	opt stack 0
 10838  00008C                     MTouchSetButton@pButton:
 10839                           	opt stack 0
 10840                           
 10841                           ; 2 bytes @ 0x2C
 10842  00008C                     	ds	1
 10843  00008D                     ??___flpack:
 10844  00008D                     ??_ds18b20_start:
 10845  00008D                     ?___awdiv:
 10846                           	opt stack 0
 10847  00008D                     MTouchDecodeButtons@i:
 10848                           	opt stack 0
 10849  00008D                     ks0108Fill@mode:
 10850                           	opt stack 0
 10851  00008D                     ks0108ReadData@incXAdd:
 10852                           	opt stack 0
 10853  00008D                     ___lbdiv@counter:
 10854                           	opt stack 0
 10855  00008D                     MTouchSetSensor@threshold:
 10856                           	opt stack 0
 10857  00008D                     ___awdiv@dividend:
 10858                           	opt stack 0
 10859                           
 10860                           ; 2 bytes @ 0x2D
 10861  00008D                     	ds	1
 10862  00008E                     MTouchDecodeButtons@state:
 10863                           	opt stack 0
 10864  00008E                     ks0108Fill@j:
 10865                           	opt stack 0
 10866  00008E                     ks0108ReadData@data:
 10867                           	opt stack 0
 10868  00008E                     ___lbdiv@quotient:
 10869                           	opt stack 0
 10870                           
 10871                           ; 1 bytes @ 0x2E
 10872  00008E                     	ds	1
 10873  00008F                     ??__tdiv_to_l_:
 10874  00008F                     ??__div_to_l_:
 10875  00008F                     MTouchDecodeButtons@decode:
 10876                           	opt stack 0
 10877  00008F                     ks0108Fill@i:
 10878                           	opt stack 0
 10879  00008F                     ks0108ReadData@i:
 10880                           	opt stack 0
 10881  00008F                     MTouchSetSensor@oversampling:
 10882                           	opt stack 0
 10883  00008F                     ___awdiv@divisor:
 10884                           	opt stack 0
 10885  00008F                     ___lldiv@quotient:
 10886                           	opt stack 0
 10887                           
 10888                           ; 4 bytes @ 0x2F
 10889  00008F                     	ds	1
 10890  000090                     ks0108SetDot@y:
 10891                           	opt stack 0
 10892  000090                     ks0108ClearDot@y:
 10893                           	opt stack 0
 10894  000090                     MTouchDecodeButtons@pMostPressedButton:
 10895                           	opt stack 0
 10896                           
 10897                           ; 2 bytes @ 0x30
 10898  000090                     	ds	1
 10899  000091                     ??_ks0108SetDot:
 10900  000091                     ??_ks0108ClearDot:
 10901  000091                     ?___awtofl:
 10902                           	opt stack 0
 10903  000091                     ?___lltofl:
 10904                           	opt stack 0
 10905  000091                     MTouchSetSensor@chargeDelay:
 10906                           	opt stack 0
 10907  000091                     ___awdiv@counter:
 10908                           	opt stack 0
 10909  000091                     ___awtofl@c:
 10910                           	opt stack 0
 10911  000091                     ___lltofl@c:
 10912                           	opt stack 0
 10913                           
 10914                           ; 4 bytes @ 0x31
 10915  000091                     	ds	1
 10916  000092                     ??_MTouchSetSensor:
 10917  000092                     MTouchDecodeButtons@sensorState:
 10918                           	opt stack 0
 10919  000092                     ___awdiv@sign:
 10920                           	opt stack 0
 10921  000092                     __tdiv_to_l_@quot:
 10922                           	opt stack 0
 10923                           
 10924                           ; 4 bytes @ 0x32
 10925  000092                     	ds	1
 10926  000093                     ks0108SetDot@x:
 10927                           	opt stack 0
 10928  000093                     ks0108ClearDot@x:
 10929                           	opt stack 0
 10930  000093                     ___lldiv@counter:
 10931                           	opt stack 0
 10932  000093                     MTouchDecodeButtons@pButton:
 10933                           	opt stack 0
 10934  000093                     ___awdiv@quotient:
 10935                           	opt stack 0
 10936  000093                     __div_to_l_@quot:
 10937                           	opt stack 0
 10938                           
 10939                           ; 4 bytes @ 0x33
 10940  000093                     	ds	1
 10941  000094                     ?___llmod:
 10942                           	opt stack 0
 10943  000094                     MTouchSetSensor@sensorNumber:
 10944                           	opt stack 0
 10945  000094                     ks0108SetDot@data:
 10946                           	opt stack 0
 10947  000094                     ks0108ClearDot@data:
 10948                           	opt stack 0
 10949  000094                     ___llmod@dividend:
 10950                           	opt stack 0
 10951                           
 10952                           ; 4 bytes @ 0x34
 10953  000094                     	ds	1
 10954  000095                     ks0108Line@yn:
 10955                           	opt stack 0
 10956  000095                     ks0108Rect@y:
 10957                           	opt stack 0
 10958  000095                     ___awtofl@sign:
 10959                           	opt stack 0
 10960  000095                     MTouchSetSensor@pSensor:
 10961                           	opt stack 0
 10962  000095                     _tsk_process_btn$1309:
 10963                           	opt stack 0
 10964  000095                     ks0108PutChar@p_font:
 10965                           	opt stack 0
 10966                           
 10967                           ; 2 bytes @ 0x35
 10968  000095                     	ds	1
 10969  000096                     ?___flmul:
 10970                           	opt stack 0
 10971  000096                     ks0108Line@xk:
 10972                           	opt stack 0
 10973  000096                     ks0108Rect@dx:
 10974                           	opt stack 0
 10975  000096                     __tdiv_to_l_@cntr:
 10976                           	opt stack 0
 10977  000096                     ___flmul@f1:
 10978                           	opt stack 0
 10979                           
 10980                           ; 4 bytes @ 0x36
 10981  000096                     	ds	1
 10982  000097                     ks0108PutChar@mode:
 10983                           	opt stack 0
 10984  000097                     ks0108Line@yk:
 10985                           	opt stack 0
 10986  000097                     ks0108Rect@dy:
 10987                           	opt stack 0
 10988  000097                     __div_to_l_@cntr:
 10989                           	opt stack 0
 10990  000097                     __tdiv_to_l_@exp1:
 10991                           	opt stack 0
 10992  000097                     InitializeSystem@pll_startup_counter:
 10993                           	opt stack 0
 10994                           
 10995                           ; 2 bytes @ 0x37
 10996  000097                     	ds	1
 10997  000098                     ??_ks0108PutChar:
 10998  000098                     ??_ks0108Rect:
 10999  000098                     ks0108Line@dx:
 11000                           	opt stack 0
 11001  000098                     __div_to_l_@exp1:
 11002                           	opt stack 0
 11003  000098                     ___llmod@divisor:
 11004                           	opt stack 0
 11005                           
 11006                           ; 4 bytes @ 0x38
 11007  000098                     	ds	1
 11008  000099                     ks0108Line@dy:
 11009                           	opt stack 0
 11010                           
 11011                           ; 1 bytes @ 0x39
 11012  000099                     	ds	1
 11013  00009A                     ks0108PutChar@s:
 11014                           	opt stack 0
 11015  00009A                     ks0108Line@s:
 11016                           	opt stack 0
 11017  00009A                     ___flmul@f2:
 11018                           	opt stack 0
 11019                           
 11020                           ; 4 bytes @ 0x3A
 11021  00009A                     	ds	1
 11022  00009B                     ks0108PutChar@_fontHeight:
 11023                           	opt stack 0
 11024  00009B                     ks0108Line@xn:
 11025                           	opt stack 0
 11026                           
 11027                           ; 1 bytes @ 0x3B
 11028  00009B                     	ds	1
 11029  00009C                     ks0108PutChar@_fontWidth:
 11030                           	opt stack 0
 11031  00009C                     ___llmod@counter:
 11032                           	opt stack 0
 11033                           
 11034                           ; 1 bytes @ 0x3C
 11035  00009C                     	ds	1
 11036  00009D                     ks0108Rect@x:
 11037                           	opt stack 0
 11038  00009D                     ks0108PutChar@pChImage:
 11039                           	opt stack 0
 11040                           
 11041                           ; 2 bytes @ 0x3D
 11042  00009D                     	ds	1
 11043  00009E                     ??___flmul:
 11044  00009E                     ks0108Rect@_x:
 11045                           	opt stack 0
 11046                           
 11047                           ; 1 bytes @ 0x3E
 11048  00009E                     	ds	1
 11049  00009F                     ks0108PutChar@xCnt:
 11050                           	opt stack 0
 11051  00009F                     ks0108Rect@_y:
 11052                           	opt stack 0
 11053                           
 11054                           ; 1 bytes @ 0x3F
 11055  00009F                     	ds	1
 11056  0000A0                     ks0108PutChar@yCnt:
 11057                           	opt stack 0
 11058                           
 11059                           ; 1 bytes @ 0x40
 11060  0000A0                     	ds	1
 11061  0000A1                     ks0108PutChar@temp:
 11062                           	opt stack 0
 11063                           
 11064                           ; 1 bytes @ 0x41
 11065  0000A1                     	ds	1
 11066  0000A2                     ks0108PutChar@x_:
 11067                           	opt stack 0
 11068  0000A2                     ___flmul@exp:
 11069                           	opt stack 0
 11070                           
 11071                           ; 1 bytes @ 0x42
 11072  0000A2                     	ds	1
 11073  0000A3                     ks0108PutChar@y_:
 11074                           	opt stack 0
 11075  0000A3                     ___flmul@f3_as_product:
 11076                           	opt stack 0
 11077                           
 11078                           ; 4 bytes @ 0x43
 11079  0000A3                     	ds	1
 11080  0000A4                     ks0108PutChar@chWidth:
 11081                           	opt stack 0
 11082                           
 11083                           ; 1 bytes @ 0x44
 11084  0000A4                     	ds	1
 11085  0000A5                     ks0108PutChar@y:
 11086                           	opt stack 0
 11087                           
 11088                           ; 1 bytes @ 0x45
 11089  0000A5                     	ds	1
 11090  0000A6                     ks0108PutChar@x:
 11091                           	opt stack 0
 11092                           
 11093                           ; 1 bytes @ 0x46
 11094  0000A6                     	ds	1
 11095  0000A7                     ks0108PutChar@mask:
 11096                           	opt stack 0
 11097  0000A7                     ___flmul@cntr:
 11098                           	opt stack 0
 11099                           
 11100                           ; 1 bytes @ 0x47
 11101  0000A7                     	ds	1
 11102  0000A8                     ___flmul@sign:
 11103                           	opt stack 0
 11104  0000A8                     ks0108PutChar@base:
 11105                           	opt stack 0
 11106                           
 11107                           ; 2 bytes @ 0x48
 11108  0000A8                     	ds	1
 11109  0000A9                     ?_fround:
 11110                           	opt stack 0
 11111  0000A9                     ?_scale:
 11112                           	opt stack 0
 11113                           
 11114                           ; 4 bytes @ 0x49
 11115  0000A9                     	ds	1
 11116  0000AA                     LabelSetTxt@lb:
 11117                           	opt stack 0
 11118                           
 11119                           ; 2 bytes @ 0x4A
 11120  0000AA                     	ds	2
 11121  0000AC                     LabelSetTxt@str:
 11122                           	opt stack 0
 11123                           
 11124                           ; 2 bytes @ 0x4C
 11125  0000AC                     	ds	1
 11126  0000AD                     
 11127                           ; 0 bytes @ 0x4D
 11128  0000AD                     	ds	1
 11129  0000AE                     tblptru	equ	0xFF8
 11130                           tblptrh	equ	0xFF7
 11131                           tblptrl	equ	0xFF6
 11132                           tablat	equ	0xFF5
 11133                           prodh	equ	0xFF4
 11134                           prodl	equ	0xFF3
 11135                           intcon	equ	0xFF2
 11136                           postinc0	equ	0xFEE
 11137                           wreg	equ	0xFE8
 11138                           indf1	equ	0xFE7
 11139                           postinc1	equ	0xFE6
 11140                           postdec1	equ	0xFE5
 11141                           fsr1h	equ	0xFE2
 11142                           fsr1l	equ	0xFE1
 11143                           indf2	equ	0xFDF
 11144                           postinc2	equ	0xFDE
 11145                           postdec2	equ	0xFDD
 11146                           fsr2h	equ	0xFDA
 11147                           fsr2l	equ	0xFD9
 11148                           status	equ	0xFD8
 11149                           
 11150                           ; 0 bytes @ 0x4E
 11151                           
 11152                           	psect	cstackCOMRAM
 11153  000027                     __pcstackCOMRAM:
 11154                           	opt stack 0
 11155  000027                     putbyte@byte:
 11156                           	opt stack 0
 11157  000027                     crc_mb_init@code:
 11158                           	opt stack 0
 11159  000027                     crc_mb_calc@next:
 11160                           	opt stack 0
 11161  000027                     SendMessage@Msg:
 11162                           	opt stack 0
 11163  000027                     BSemOn@Sem:
 11164                           	opt stack 0
 11165  000027                     timed_getc@timeout:
 11166                           	opt stack 0
 11167  000027                     Read_b_eep@badd:
 11168                           	opt stack 0
 11169  000027                     Write_b_eep@badd:
 11170                           	opt stack 0
 11171                           
 11172                           ; 2 bytes @ 0x0
 11173  000027                     	ds	1
 11174  000028                     ??_crc_mb_calc:
 11175                           
 11176                           ; 0 bytes @ 0x1
 11177  000028                     	ds	1
 11178  000029                     ??_Read_b_eep:
 11179  000029                     Write_b_eep@bdat:
 11180                           	opt stack 0
 11181                           
 11182                           ; 1 bytes @ 0x2
 11183  000029                     	ds	1
 11184  00002A                     ??_Write_b_eep:
 11185                           
 11186                           ; 0 bytes @ 0x3
 11187  00002A                     	ds	2
 11188  00002C                     crc_mb_calc@flag:
 11189                           	opt stack 0
 11190  00002C                     read___ee@adr:
 11191                           	opt stack 0
 11192                           
 11193                           ; 2 bytes @ 0x5
 11194  00002C                     	ds	1
 11195  00002D                     crc_mb_calc@i:
 11196                           	opt stack 0
 11197  00002D                     Write_b_eep@GIE_BIT_VAL:
 11198                           	opt stack 0
 11199                           
 11200                           ; 1 bytes @ 0x6
 11201  00002D                     	ds	1
 11202  00002E                     read___ee@var:
 11203                           	opt stack 0
 11204  00002E                     crc_mb_calc@code:
 11205                           	opt stack 0
 11206  00002E                     write___ee@adr:
 11207                           	opt stack 0
 11208                           
 11209                           ; 2 bytes @ 0x7
 11210  00002E                     	ds	1
 11211  00002F                     read___ee@byte:
 11212                           	opt stack 0
 11213  00002F                     crc_mb@buffer:
 11214                           	opt stack 0
 11215  00002F                     crc_mb_check@buffer:
 11216                           	opt stack 0
 11217                           
 11218                           ; 2 bytes @ 0x8
 11219  00002F                     	ds	1
 11220  000030                     write___ee@var:
 11221                           	opt stack 0
 11222                           
 11223                           ; 1 bytes @ 0x9
 11224  000030                     	ds	1
 11225  000031                     write___ee@byte:
 11226                           	opt stack 0
 11227  000031                     crc_mb@count:
 11228                           	opt stack 0
 11229  000031                     crc_mb_check@cnt:
 11230                           	opt stack 0
 11231                           
 11232                           ; 1 bytes @ 0xA
 11233  000031                     	ds	1
 11234  000032                     ??_crc_mb_check:
 11235  000032                     ??_crc_mb:
 11236  000032                     set_ee_default@c:
 11237                           	opt stack 0
 11238                           
 11239                           ; 1 bytes @ 0xB
 11240  000032                     	ds	1
 11241  000033                     set_ee_default@c1:
 11242                           	opt stack 0
 11243                           
 11244                           ; 1 bytes @ 0xC
 11245  000033                     	ds	1
 11246  000034                     set_ee_default@i:
 11247                           	opt stack 0
 11248                           
 11249                           ; 2 bytes @ 0xD
 11250  000034                     	ds	1
 11251  000035                     crc_mb@i:
 11252                           	opt stack 0
 11253                           
 11254                           ; 1 bytes @ 0xE
 11255  000035                     	ds	1
 11256  000036                     crc_mb_check@i:
 11257                           	opt stack 0
 11258  000036                     crc_mb@CRC:
 11259                           	opt stack 0
 11260                           
 11261                           ; 2 bytes @ 0xF
 11262  000036                     	ds	1
 11263  000037                     crc_mb_check@crc:
 11264                           	opt stack 0
 11265                           
 11266                           ; 2 bytes @ 0x10
 11267  000037                     	ds	2
 11268  000039                     ??_LO_ISR:
 11269                           
 11270                           ; 0 bytes @ 0x12
 11271  000039                     	ds	14
 11272  000047                     LO_ISR@lcAdr:
 11273                           	opt stack 0
 11274                           
 11275                           ; 1 bytes @ 0x20
 11276  000047                     	ds	1
 11277  000048                     LO_ISR@lcData:
 11278                           	opt stack 0
 11279                           
 11280                           ; 1 bytes @ 0x21
 11281  000048                     	ds	1
 11282  000049                     LO_ISR@i:
 11283                           	opt stack 0
 11284                           
 11285                           ; 1 bytes @ 0x22
 11286  000049                     	ds	1
 11287                           tblptru	equ	0xFF8
 11288                           tblptrh	equ	0xFF7
 11289                           tblptrl	equ	0xFF6
 11290                           tablat	equ	0xFF5
 11291                           prodh	equ	0xFF4
 11292                           prodl	equ	0xFF3
 11293                           intcon	equ	0xFF2
 11294                           postinc0	equ	0xFEE
 11295                           wreg	equ	0xFE8
 11296                           indf1	equ	0xFE7
 11297                           postinc1	equ	0xFE6
 11298                           postdec1	equ	0xFE5
 11299                           fsr1h	equ	0xFE2
 11300                           fsr1l	equ	0xFE1
 11301                           indf2	equ	0xFDF
 11302                           postinc2	equ	0xFDE
 11303                           postdec2	equ	0xFDD
 11304                           fsr2h	equ	0xFDA
 11305                           fsr2l	equ	0xFD9
 11306                           status	equ	0xFD8
 11307                           
 11308 ;;
 11309 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 11310 ;;
 11311 ;; *************** function _main *****************
 11312 ;; Defined at:
 11313 ;;		line 43 in file "../Main.c"
 11314 ;; Parameters:    Size  Location     Type
 11315 ;;		None
 11316 ;; Auto vars:     Size  Location     Type
 11317 ;;		None
 11318 ;; Return value:  Size  Location     Type
 11319 ;;		None               void
 11320 ;; Registers used:
 11321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11322 ;; Tracked objects:
 11323 ;;		On entry : 0/0
 11324 ;;		On exit  : F/0
 11325 ;;		Unchanged: 0/0
 11326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11331 ;;Total ram usage:        0 bytes
 11332 ;; Hardware stack levels required when called:   16
 11333 ;; This function calls:
 11334 ;;		_Beep
 11335 ;;		_InitMessages
 11336 ;;		_InitializeSystem
 11337 ;;		_LabelCreate
 11338 ;;		_LabelSetTxt
 11339 ;;		_ProcessMessages
 11340 ;;		_ks0108GotoXY
 11341 ;;		_ks0108Init
 11342 ;;		_ks0108Line
 11343 ;;		_ks0108PutChar
 11344 ;;		_ks0108Rect
 11345 ;;		_sprintf
 11346 ;;		_tsk_display
 11347 ;;		_tsk_ds18b20
 11348 ;;		_tsk_process_btn
 11349 ;; This function is called by:
 11350 ;;		Startup code after reset
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354                           	psect	text0
 11355  00255E                     __ptext0:
 11356                           	opt stack 0
 11357  00255E                     _main:
 11358                           	opt stack 15
 11359                           
 11360                           ;Main.c: 45: __nop();
 11361                           
 11362                           ;incstack = 0
 11363  00255E  F000               	nop	
 11364                           
 11365                           ;Main.c: 46: InitMessages();
 11366  002560  EC58  F01C         	call	_InitMessages	;wreg free
 11367                           
 11368                           ; BSR set to: 0
 11369                           ;Main.c: 47: InitializeSystem();
 11370  002564  EC4E  F008         	call	_InitializeSystem	;wreg free
 11371                           
 11372                           ; BSR set to: 0
 11373                           ;Main.c: 49: ks0108Init();
 11374  002568  ECEE  F01B         	call	_ks0108Init	;wreg free
 11375                           
 11376                           ; BSR set to: 0
 11377                           ;Main.c: 52: LabelCreate(&lb_temp, 0, 0, font13, 6);
 11378  00256C  0E02               	movlw	high _lb_temp
 11379  00256E  0101               	movlb	1	; () banked
 11380  002570  6FBC               	movwf	(LabelCreate@lb+1)& (0+255),b
 11381  002572  0E8C               	movlw	low _lb_temp
 11382  002574  6FBB               	movwf	LabelCreate@lb& (0+255),b
 11383  002576  6BBD               	clrf	LabelCreate@x& (0+255),b
 11384  002578  6BBE               	clrf	LabelCreate@y& (0+255),b
 11385  00257A  0EF4               	movlw	high _font13
 11386  00257C  6FC0               	movwf	(LabelCreate@font+1)& (0+255),b
 11387  00257E  0E52               	movlw	low _font13
 11388  002580  6FBF               	movwf	LabelCreate@font& (0+255),b
 11389  002582  0E06               	movlw	6
 11390  002584  6FC1               	movwf	LabelCreate@ln& (0+255),b
 11391  002586  EC7F  F019         	call	_LabelCreate	;wreg free
 11392                           
 11393                           ; BSR set to: 1
 11394                           ;Main.c: 53: LabelCreate(&lb_paket, 0, 10, font13, 22);
 11395  00258A  0E02               	movlw	high _lb_paket
 11396  00258C  0101               	movlb	1	; () banked
 11397  00258E  6FBC               	movwf	(LabelCreate@lb+1)& (0+255),b
 11398  002590  0E68               	movlw	low _lb_paket
 11399  002592  6FBB               	movwf	LabelCreate@lb& (0+255),b
 11400  002594  6BBD               	clrf	LabelCreate@x& (0+255),b
 11401  002596  0E0A               	movlw	10
 11402  002598  6FBE               	movwf	LabelCreate@y& (0+255),b
 11403  00259A  0EF4               	movlw	high _font13
 11404  00259C  6FC0               	movwf	(LabelCreate@font+1)& (0+255),b
 11405  00259E  0E52               	movlw	low _font13
 11406  0025A0  6FBF               	movwf	LabelCreate@font& (0+255),b
 11407  0025A2  0E16               	movlw	22
 11408  0025A4  6FC1               	movwf	LabelCreate@ln& (0+255),b
 11409  0025A6  EC7F  F019         	call	_LabelCreate	;wreg free
 11410                           
 11411                           ; BSR set to: 1
 11412                           ;Main.c: 55: sprintf(str, "AB");
 11413  0025AA  0E01               	movlw	high _str
 11414  0025AC  6FDA               	movwf	(sprintf@sp+1)& (0+255),b
 11415  0025AE  0E8D               	movlw	low _str
 11416  0025B0  6FD9               	movwf	sprintf@sp& (0+255),b
 11417  0025B2  0EFF               	movlw	high STR_1
 11418  0025B4  6FDC               	movwf	(sprintf@f+1)& (0+255),b
 11419  0025B6  0EFB               	movlw	low STR_1
 11420  0025B8  6FDB               	movwf	sprintf@f& (0+255),b
 11421  0025BA  ECFA  F001         	call	_sprintf	;wreg free
 11422                           
 11423                           ; BSR set to: 2
 11424                           ;Main.c: 56: LabelSetTxt(&lb_temp, str);
 11425  0025BE  0E02               	movlw	high _lb_temp
 11426  0025C0  0100               	movlb	0	; () banked
 11427  0025C2  6FAB               	movwf	(LabelSetTxt@lb+1)& (0+255),b
 11428  0025C4  0E8C               	movlw	low _lb_temp
 11429  0025C6  6FAA               	movwf	LabelSetTxt@lb& (0+255),b
 11430  0025C8  0E01               	movlw	high _str
 11431  0025CA  6FAD               	movwf	(LabelSetTxt@str+1)& (0+255),b
 11432  0025CC  0E8D               	movlw	low _str
 11433  0025CE  6FAC               	movwf	LabelSetTxt@str& (0+255),b
 11434  0025D0  EC15  F012         	call	_LabelSetTxt	;wreg free
 11435                           
 11436                           ;Main.c: 58: ks0108GotoXY(20, 50);
 11437  0025D4  0E32               	movlw	50
 11438  0025D6  0100               	movlb	0	; () banked
 11439  0025D8  6F89               	movwf	ks0108GotoXY@y& (0+255),b
 11440  0025DA  0E14               	movlw	20
 11441  0025DC  EC7A  F01A         	call	_ks0108GotoXY
 11442                           
 11443                           ;Main.c: 59: ks0108PutChar('A', &font13, 1);
 11444  0025E0  D84E               	call	PL116	;call to abstracted procedure
 11445  0025E2  0E41               	movlw	65
 11446  0025E4  EC47  F013         	call	_ks0108PutChar
 11447                           
 11448                           ; BSR set to: 0
 11449                           ;Main.c: 61: ks0108GotoXY(1, 40);
 11450  0025E8  0E28               	movlw	40
 11451  0025EA  6F89               	movwf	ks0108GotoXY@y& (0+255),b
 11452  0025EC  0E01               	movlw	1
 11453  0025EE  EC7A  F01A         	call	_ks0108GotoXY
 11454                           
 11455                           ;Main.c: 62: ks0108PutChar('B', &font23, 1);
 11456  0025F2  D83D               	call	PL114	;call to abstracted procedure
 11457  0025F4  0E42               	movlw	66
 11458  0025F6  EC47  F013         	call	_ks0108PutChar
 11459                           
 11460                           ; BSR set to: 0
 11461                           ;Main.c: 64: ks0108GotoXY(100,30);
 11462  0025FA  0E1E               	movlw	30
 11463  0025FC  6F89               	movwf	ks0108GotoXY@y& (0+255),b
 11464  0025FE  0E64               	movlw	100
 11465  002600  EC7A  F01A         	call	_ks0108GotoXY
 11466                           
 11467                           ;Main.c: 65: ks0108PutChar(0x5e, &font23, 1);
 11468  002604  D834               	call	PL114	;call to abstracted procedure
 11469  002606  0E5E               	movlw	94
 11470  002608  EC47  F013         	call	_ks0108PutChar
 11471                           
 11472                           ;Main.c: 67: ks0108GotoXY(100, 0);
 11473  00260C  6B89               	clrf	ks0108GotoXY@y& (0+255),b
 11474  00260E  0E64               	movlw	100
 11475  002610  EC7A  F01A         	call	_ks0108GotoXY
 11476                           
 11477                           ;Main.c: 68: ks0108PutChar(0x89, &font13, 1);
 11478  002614  D834               	call	PL116	;call to abstracted procedure
 11479  002616  0E89               	movlw	137
 11480  002618  EC47  F013         	call	_ks0108PutChar
 11481                           
 11482                           ; BSR set to: 0
 11483                           ;Main.c: 71: ks0108Line(5,30, 60, 60);
 11484  00261C  0E1E               	movlw	30
 11485  00261E  6F95               	movwf	ks0108Line@yn& (0+255),b
 11486  002620  0E3C               	movlw	60
 11487  002622  6F96               	movwf	ks0108Line@xk& (0+255),b
 11488  002624  6F97               	movwf	ks0108Line@yk& (0+255),b
 11489  002626  0E05               	movlw	5
 11490  002628  ECB1  F017         	call	_ks0108Line
 11491                           
 11492                           ; BSR set to: 0
 11493                           ;Main.c: 73: ks0108Rect(60, 35, 15, 15);
 11494  00262C  0E23               	movlw	35
 11495  00262E  6F95               	movwf	ks0108Rect@y& (0+255),b
 11496  002630  0E0F               	movlw	15
 11497  002632  6F96               	movwf	ks0108Rect@dx& (0+255),b
 11498  002634  6F97               	movwf	ks0108Rect@dy& (0+255),b
 11499  002636  0E3C               	movlw	60
 11500  002638  EC4B  F01A         	call	_ks0108Rect
 11501                           
 11502                           ; BSR set to: 0
 11503                           ;Main.c: 77: __nop();
 11504  00263C  F000               	nop	
 11505                           
 11506                           ;Main.c: 78: __nop();
 11507  00263E  F000               	nop	
 11508                           
 11509                           ;Main.c: 81: INTCONbits.GIE = 1;
 11510  002640  8EF2               	bsf	intcon,7,c	;volatile
 11511                           
 11512                           ;Main.c: 83: Beep(10);
 11513  002642  0E0A               	movlw	10
 11514  002644  ECD2  F01D         	call	_Beep
 11515  002648                     l9441:
 11516                           
 11517                           ; BSR set to: 0
 11518                           ;Main.c: 91: tsk_display();
 11519  002648  EC78  F00F         	call	_tsk_display	;wreg free
 11520                           
 11521                           ; BSR set to: 0
 11522                           ;Main.c: 92: tsk_process_btn();
 11523  00264C  EC72  F011         	call	_tsk_process_btn	;wreg free
 11524                           
 11525                           ;Main.c: 93: tsk_ds18b20();
 11526  002650  ECBB  F00E         	call	_tsk_ds18b20	;wreg free
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;Main.c: 95: __nop();
 11530  002654  F000               	nop	
 11531                           
 11532                           ;Main.c: 96: __nop();
 11533  002656  F000               	nop	
 11534                           
 11535                           ;Main.c: 99: if((FERR1) || (OERR1)){
 11536  002658  B4AB               	btfsc	4011,2,c	;volatile
 11537  00265A  D002               	goto	l581
 11538  00265C  A2AB               	btfss	4011,1,c	;volatile
 11539  00265E  D003               	goto	l579
 11540  002660                     l581:
 11541                           
 11542                           ;Main.c: 100: CREN1 = 0;
 11543  002660  98AB               	bcf	4011,4,c	;volatile
 11544                           
 11545                           ;Main.c: 101: __nop();
 11546  002662  F000               	nop	
 11547                           
 11548                           ;Main.c: 102: CREN1 = 1;
 11549  002664  88AB               	bsf	4011,4,c	;volatile
 11550  002666                     l579:
 11551                           
 11552                           ;Main.c: 103: }
 11553                           ;Main.c: 105: if(SWDTEN == 0){
 11554  002666  0004               	clrwdt		;# 
 11555                           
 11556                           ;Main.c: 111: ProcessMessages();
 11557  002668  ECCE  F018         	call	_ProcessMessages	;wreg free
 11558  00266C  D7ED               	goto	l9441
 11559  00266E                     __end_of_main:
 11560                           	opt stack 0
 11561  00266E                     PL114:
 11562                           	opt stack 15
 11563  00266E  0EDD               	movlw	high _font23
 11564  002670  0100               	movlb	0	; () banked
 11565  002672  6F96               	movwf	(ks0108PutChar@p_font+1)& (0+255),b
 11566  002674  0E0F               	movlw	low _font23
 11567  002676  6F95               	movwf	ks0108PutChar@p_font& (0+255),b
 11568  002678  0E01               	movlw	1
 11569  00267A  6F97               	movwf	ks0108PutChar@mode& (0+255),b
 11570  00267C  0C01               	retlw	1
 11571  00267E                     __end_ofPL114:
 11572                           	opt stack 0
 11573  00267E                     PL116:
 11574                           	opt stack 15
 11575  00267E  0EF4               	movlw	high _font13
 11576  002680  0100               	movlb	0	; () banked
 11577  002682  6F96               	movwf	(ks0108PutChar@p_font+1)& (0+255),b
 11578  002684  0E52               	movlw	low _font13
 11579  002686  6F95               	movwf	ks0108PutChar@p_font& (0+255),b
 11580  002688  0E01               	movlw	1
 11581  00268A  6F97               	movwf	ks0108PutChar@mode& (0+255),b
 11582  00268C  0C01               	retlw	1
 11583  00268E                     __end_ofPL116:
 11584                           	opt stack 0
 11585                           tblptru	equ	0xFF8
 11586                           tblptrh	equ	0xFF7
 11587                           tblptrl	equ	0xFF6
 11588                           tablat	equ	0xFF5
 11589                           prodh	equ	0xFF4
 11590                           prodl	equ	0xFF3
 11591                           intcon	equ	0xFF2
 11592                           postinc0	equ	0xFEE
 11593                           wreg	equ	0xFE8
 11594                           indf1	equ	0xFE7
 11595                           postinc1	equ	0xFE6
 11596                           postdec1	equ	0xFE5
 11597                           fsr1h	equ	0xFE2
 11598                           fsr1l	equ	0xFE1
 11599                           indf2	equ	0xFDF
 11600                           postinc2	equ	0xFDE
 11601                           postdec2	equ	0xFDD
 11602                           fsr2h	equ	0xFDA
 11603                           fsr2l	equ	0xFD9
 11604                           status	equ	0xFD8
 11605                           
 11606 ;; *************** function _tsk_process_btn *****************
 11607 ;; Defined at:
 11608 ;;		line 119 in file "../Main.c"
 11609 ;; Parameters:    Size  Location     Type
 11610 ;;		None
 11611 ;; Auto vars:     Size  Location     Type
 11612 ;;		None
 11613 ;; Return value:  Size  Location     Type
 11614 ;;		None               void
 11615 ;; Registers used:
 11616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11617 ;; Tracked objects:
 11618 ;;		On entry : F/0
 11619 ;;		On exit  : D/0
 11620 ;;		Unchanged: 0/0
 11621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11623 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11625 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11626 ;;Total ram usage:        2 bytes
 11627 ;; Hardware stack levels used:    1
 11628 ;; Hardware stack levels required when called:   10
 11629 ;; This function calls:
 11630 ;;		_Beep
 11631 ;;		_MTouchDecode
 11632 ;; This function is called by:
 11633 ;;		_main
 11634 ;; This function uses a non-reentrant model
 11635 ;;
 11636                           
 11637                           	psect	text1
 11638  0022E4                     __ptext1:
 11639                           	opt stack 0
 11640  0022E4                     _tsk_process_btn:
 11641                           	opt stack 20
 11642                           
 11643                           ; BSR set to: 0
 11644                           ;Main.c: 120: static int prev_tick, i;
 11645                           ;Main.c: 124: MTouchDecode();
 11646                           
 11647                           ; BSR set to: 0
 11648                           ;incstack = 0
 11649  0022E4  EC14  F01E         	call	_MTouchDecode	;wreg free
 11650                           
 11651                           ; BSR set to: 0
 11652                           ;Main.c: 128: if(((buttons[KEY_7_LT_OUT_BACK].state) == CONTROL_PRESSED)){
 11653  0022E8  0102               	movlb	2	; () banked
 11654  0022EA  0538               	decf	(_buttons+56)& (0+255),w,b
 11655  0022EC  E10A               	bnz	l7007
 11656                           
 11657                           ; BSR set to: 2
 11658                           ;Main.c: 129: Beep(10);
 11659  0022EE  0E0A               	movlw	10
 11660  0022F0  ECD2  F01D         	call	_Beep
 11661                           
 11662                           ; BSR set to: 0
 11663                           ;Main.c: 130: stat.st_lt_back ^= 1;
 11664  0022F4  0E01               	movlw	1
 11665  0022F6  1BB0               	xorwf	(_stat+2)& (0+255),f,b
 11666                           
 11667                           ; BSR set to: 0
 11668                           ;Main.c: 131: LATAbits.LATA6 = stat.st_lt_back;
 11669  0022F8  B1B0               	btfsc	(_stat+2)& (0+255),0,b
 11670  0022FA  D002               	bra	u7025
 11671  0022FC  9C89               	bcf	3977,6,c	;volatile
 11672  0022FE  D001               	bra	u7026
 11673  002300                     u7025:
 11674  002300  8C89               	bsf	3977,6,c	;volatile
 11675  002302                     u7026:
 11676  002302                     l7007:
 11677                           
 11678                           ;Main.c: 132: }
 11679                           ;Main.c: 135: if(((buttons[KEY_8_LT_OUT_SIDE].state) == CONTROL_PRESSED)){
 11680  002302  0102               	movlb	2	; () banked
 11681  002304  0540               	decf	(_buttons+64)& (0+255),w,b
 11682  002306  E10A               	bnz	l7015
 11683                           
 11684                           ; BSR set to: 2
 11685                           ;Main.c: 136: Beep(10);
 11686  002308  0E0A               	movlw	10
 11687  00230A  ECD2  F01D         	call	_Beep
 11688                           
 11689                           ; BSR set to: 0
 11690                           ;Main.c: 137: stat.st_lt_side ^= 1;
 11691  00230E  0E01               	movlw	1
 11692  002310  1BB1               	xorwf	(_stat+3)& (0+255),f,b
 11693                           
 11694                           ; BSR set to: 0
 11695                           ;Main.c: 138: LATAbits.LATA7 = stat.st_lt_side;
 11696  002312  B1B1               	btfsc	(_stat+3)& (0+255),0,b
 11697  002314  D002               	bra	u7045
 11698  002316  9E89               	bcf	3977,7,c	;volatile
 11699  002318  D001               	bra	u7046
 11700  00231A                     u7045:
 11701  00231A  8E89               	bsf	3977,7,c	;volatile
 11702  00231C                     u7046:
 11703  00231C                     l7015:
 11704                           
 11705                           ;Main.c: 139: }
 11706                           ;Main.c: 142: if(((buttons[KEY_6_ROZ_ON].state) == CONTROL_PRESSED)){
 11707  00231C  0102               	movlb	2	; () banked
 11708  00231E  0530               	decf	(_buttons+48)& (0+255),w,b
 11709  002320  E10A               	bnz	l7023
 11710                           
 11711                           ; BSR set to: 2
 11712                           ;Main.c: 143: Beep(10);
 11713  002322  0E0A               	movlw	10
 11714  002324  ECD2  F01D         	call	_Beep
 11715                           
 11716                           ; BSR set to: 0
 11717                           ;Main.c: 144: stat.st_12V ^= 1;
 11718  002328  0E01               	movlw	1
 11719  00232A  1BAE               	xorwf	_stat& (0+255),f,b
 11720                           
 11721                           ; BSR set to: 0
 11722                           ;Main.c: 145: LATBbits.LATB7 = stat.st_12V;
 11723  00232C  B1AE               	btfsc	_stat& (0+255),0,b
 11724  00232E  D002               	bra	u7065
 11725  002330  9E8A               	bcf	3978,7,c	;volatile
 11726  002332  D001               	bra	u7066
 11727  002334                     u7065:
 11728  002334  8E8A               	bsf	3978,7,c	;volatile
 11729  002336                     u7066:
 11730  002336                     l7023:
 11731                           
 11732                           ;Main.c: 146: }
 11733                           ;Main.c: 149: if(((buttons[KEY_0_AVT_PWR_220].state) == CONTROL_PRESSED)){
 11734  002336  0102               	movlb	2	; () banked
 11735  002338  0500               	decf	_buttons& (0+255),w,b
 11736  00233A  E10A               	bnz	l7031
 11737                           
 11738                           ; BSR set to: 2
 11739                           ;Main.c: 150: Beep(10);
 11740  00233C  0E0A               	movlw	10
 11741  00233E  ECD2  F01D         	call	_Beep
 11742                           
 11743                           ; BSR set to: 0
 11744                           ;Main.c: 151: stat.st_220V ^= 1;
 11745  002342  0E01               	movlw	1
 11746  002344  1BAF               	xorwf	(_stat+1)& (0+255),f,b
 11747                           
 11748                           ; BSR set to: 0
 11749                           ;Main.c: 152: LATBbits.LATB6 = stat.st_220V;
 11750  002346  B1AF               	btfsc	(_stat+1)& (0+255),0,b
 11751  002348  D002               	bra	u7085
 11752  00234A  9C8A               	bcf	3978,6,c	;volatile
 11753  00234C  D001               	bra	u7086
 11754  00234E                     u7085:
 11755  00234E  8C8A               	bsf	3978,6,c	;volatile
 11756  002350                     u7086:
 11757  002350                     l7031:
 11758                           
 11759                           ;Main.c: 153: }
 11760                           ;Main.c: 156: if(((buttons[KEY_2_LT_SALON_M].state) == CONTROL_PRESSED)){
 11761  002350  0102               	movlb	2	; () banked
 11762  002352  0510               	decf	(_buttons+16)& (0+255),w,b
 11763  002354  E10B               	bnz	l7039
 11764                           
 11765                           ; BSR set to: 2
 11766                           ;Main.c: 157: if(stat.st_lt_salon == 0){
 11767  002356  0100               	movlb	0	; () banked
 11768  002358  67B3               	tstfsz	(_stat+5)& (0+255),b
 11769  00235A  D006               	goto	l597
 11770                           
 11771                           ; BSR set to: 0
 11772                           ;Main.c: 158: Beep(10);
 11773  00235C  0E0A               	movlw	10
 11774  00235E  ECD2  F01D         	call	_Beep
 11775                           
 11776                           ; BSR set to: 0
 11777                           ;Main.c: 159: stat.st_lt_blue ^= 1;
 11778  002362  0E01               	movlw	1
 11779  002364  1BB4               	xorwf	(_stat+6)& (0+255),f,b
 11780                           
 11781                           ;Main.c: 161: } else {
 11782  002366  D002               	goto	l7039
 11783  002368                     l597:
 11784                           
 11785                           ; BSR set to: 0
 11786                           ;Main.c: 162: stat.st_lt_salon = 0;
 11787  002368  6BB3               	clrf	(_stat+5)& (0+255),b
 11788                           
 11789                           ;Main.c: 163: stat.st_lt_blue = 0;
 11790  00236A  6BB4               	clrf	(_stat+6)& (0+255),b
 11791  00236C                     l7039:
 11792                           
 11793                           ;Main.c: 164: }
 11794                           ;Main.c: 165: }
 11795                           ;Main.c: 167: if(((buttons[KEY_3_LT_SALON_P].state) == CONTROL_PRESSED)){
 11796  00236C  0102               	movlb	2	; () banked
 11797  00236E  0518               	decf	(_buttons+24)& (0+255),w,b
 11798  002370  E108               	bnz	l7049
 11799                           
 11800                           ; BSR set to: 2
 11801                           ;Main.c: 169: Beep(10);
 11802  002372  0E0A               	movlw	10
 11803  002374  ECD2  F01D         	call	_Beep
 11804                           
 11805                           ; BSR set to: 0
 11806                           ;Main.c: 172: stat.st_lt_salon = 31;
 11807  002378  0E1F               	movlw	31
 11808  00237A  6FB3               	movwf	(_stat+5)& (0+255),b
 11809                           
 11810                           ; BSR set to: 0
 11811                           ;Main.c: 174: if(stat.st_lt_salon > 0){
 11812  00237C  51B3               	movf	(_stat+5)& (0+255),w,b
 11813  00237E  A4D8               	btfss	status,2,c
 11814                           
 11815                           ; BSR set to: 0
 11816                           ;Main.c: 175: stat.st_lt_blue = 0;
 11817  002380  6BB4               	clrf	(_stat+6)& (0+255),b
 11818  002382                     l7049:
 11819                           
 11820                           ;Main.c: 176: }
 11821                           ;Main.c: 177: }
 11822                           ;Main.c: 180: if(((buttons[KEY_2_LT_SALON_MM].state) == CONTROL_PRESSED)){
 11823  002382  0102               	movlb	2	; () banked
 11824  002384  0558               	decf	(_buttons+88)& (0+255),w,b
 11825  002386  E108               	bnz	l7059
 11826                           
 11827                           ; BSR set to: 2
 11828                           ;Main.c: 181: if(stat.st_lt_salon > 0){
 11829  002388  0100               	movlb	0	; () banked
 11830  00238A  51B3               	movf	(_stat+5)& (0+255),w,b
 11831  00238C  E005               	bz	l7059
 11832                           
 11833                           ; BSR set to: 0
 11834                           ;Main.c: 182: Beep(10);
 11835  00238E  0E0A               	movlw	10
 11836  002390  ECD2  F01D         	call	_Beep
 11837                           
 11838                           ; BSR set to: 0
 11839                           ;Main.c: 183: stat.st_lt_salon --;
 11840  002394  07B3               	decf	(_stat+5)& (0+255),f,b
 11841                           
 11842                           ; BSR set to: 0
 11843                           ;Main.c: 184: stat.st_lt_blue = 0;
 11844  002396  6BB4               	clrf	(_stat+6)& (0+255),b
 11845  002398                     l7059:
 11846                           
 11847                           ;Main.c: 185: }
 11848                           ;Main.c: 186: }
 11849                           ;Main.c: 188: if(((buttons[KEY_3_LT_SALON_PP].state) == CONTROL_PRESSED)){
 11850  002398  0102               	movlb	2	; () banked
 11851  00239A  0560               	decf	(_buttons+96)& (0+255),w,b
 11852  00239C  E10B               	bnz	l7071
 11853                           
 11854                           ; BSR set to: 2
 11855                           ;Main.c: 189: if(stat.st_lt_salon < 31){
 11856  00239E  0E1F               	movlw	31
 11857  0023A0  0100               	movlb	0	; () banked
 11858  0023A2  5DB3               	subwf	(_stat+5)& (0+255),w,b
 11859  0023A4  E204               	bc	l7067
 11860                           
 11861                           ; BSR set to: 0
 11862                           ;Main.c: 190: Beep(10);
 11863  0023A6  0E0A               	movlw	10
 11864  0023A8  ECD2  F01D         	call	_Beep
 11865                           
 11866                           ; BSR set to: 0
 11867                           ;Main.c: 191: stat.st_lt_salon ++;
 11868  0023AC  2BB3               	incf	(_stat+5)& (0+255),f,b
 11869  0023AE                     l7067:
 11870                           
 11871                           ; BSR set to: 0
 11872                           ;Main.c: 192: }
 11873                           ;Main.c: 193: if(stat.st_lt_salon > 0){
 11874  0023AE  51B3               	movf	(_stat+5)& (0+255),w,b
 11875  0023B0  A4D8               	btfss	status,2,c
 11876                           
 11877                           ; BSR set to: 0
 11878                           ;Main.c: 194: stat.st_lt_blue = 0;
 11879  0023B2  6BB4               	clrf	(_stat+6)& (0+255),b
 11880  0023B4                     l7071:
 11881                           
 11882                           ;Main.c: 195: }
 11883                           ;Main.c: 196: }
 11884                           ;Main.c: 199: if(((buttons[KEY_1_LT_NOSHY].state) == CONTROL_PRESSED)){
 11885  0023B4  0102               	movlb	2	; () banked
 11886  0023B6  0508               	decf	(_buttons+8)& (0+255),w,b
 11887  0023B8  E105               	bnz	l7077
 11888                           
 11889                           ; BSR set to: 2
 11890                           ;Main.c: 200: Beep(10);
 11891  0023BA  0E0A               	movlw	10
 11892  0023BC  ECD2  F01D         	call	_Beep
 11893                           
 11894                           ; BSR set to: 0
 11895                           ;Main.c: 201: stat.st_lt_noshy ^= 1;
 11896  0023C0  0E01               	movlw	1
 11897  0023C2  1BB2               	xorwf	(_stat+4)& (0+255),f,b
 11898  0023C4                     l7077:
 11899                           
 11900                           ;Main.c: 202: }
 11901                           ;Main.c: 205: if(((buttons[KEY_9_LT_KOND_M].state) == CONTROL_PRESSED)){
 11902  0023C4  0102               	movlb	2	; () banked
 11903  0023C6  0548               	decf	(_buttons+72)& (0+255),w,b
 11904  0023C8  E107               	bnz	l7085
 11905                           
 11906                           ; BSR set to: 2
 11907                           ;Main.c: 206: if(stat.st_kond > 0){
 11908  0023CA  0100               	movlb	0	; () banked
 11909  0023CC  51B6               	movf	(_stat+8)& (0+255),w,b
 11910  0023CE  E004               	bz	l7085
 11911                           
 11912                           ; BSR set to: 0
 11913                           ;Main.c: 207: Beep(10);
 11914  0023D0  0E0A               	movlw	10
 11915  0023D2  ECD2  F01D         	call	_Beep
 11916                           
 11917                           ; BSR set to: 0
 11918                           ;Main.c: 208: stat.st_kond --;
 11919  0023D6  07B6               	decf	(_stat+8)& (0+255),f,b
 11920  0023D8                     l7085:
 11921                           
 11922                           ;Main.c: 209: }
 11923                           ;Main.c: 210: }
 11924                           ;Main.c: 212: if(((buttons[KEY_10_LT_KOND_P].state) == CONTROL_PRESSED)){
 11925  0023D8  0102               	movlb	2	; () banked
 11926  0023DA  0550               	decf	(_buttons+80)& (0+255),w,b
 11927  0023DC  E108               	bnz	l7093
 11928                           
 11929                           ; BSR set to: 2
 11930                           ;Main.c: 213: if(stat.st_kond < 2){
 11931  0023DE  0E02               	movlw	2
 11932  0023E0  0100               	movlb	0	; () banked
 11933  0023E2  5DB6               	subwf	(_stat+8)& (0+255),w,b
 11934  0023E4  E204               	bc	l7093
 11935                           
 11936                           ; BSR set to: 0
 11937                           ;Main.c: 214: Beep(10);
 11938  0023E6  0E0A               	movlw	10
 11939  0023E8  ECD2  F01D         	call	_Beep
 11940                           
 11941                           ; BSR set to: 0
 11942                           ;Main.c: 215: stat.st_kond ++;
 11943  0023EC  2BB6               	incf	(_stat+8)& (0+255),f,b
 11944  0023EE                     l7093:
 11945                           
 11946                           ;Main.c: 216: }
 11947                           ;Main.c: 217: }
 11948                           ;Main.c: 220: if(((buttons[KEY_4_VENT_OUT].state) == CONTROL_PRESSED)){
 11949  0023EE  0102               	movlb	2	; () banked
 11950  0023F0  0520               	decf	(_buttons+32)& (0+255),w,b
 11951  0023F2  E108               	bnz	l7099
 11952                           
 11953                           ; BSR set to: 2
 11954                           ;Main.c: 221: Beep(10);
 11955  0023F4  0E0A               	movlw	10
 11956  0023F6  ECD2  F01D         	call	_Beep
 11957                           
 11958                           ; BSR set to: 0
 11959                           ;Main.c: 222: stat.st_fan = (stat.st_fan == 0)? 1: 0;
 11960  0023FA  51B5               	movf	(_stat+7)& (0+255),w,b
 11961  0023FC  0E01               	movlw	1
 11962  0023FE  A4D8               	btfss	status,2,c
 11963  002400  0E00               	movlw	0
 11964  002402  6FB5               	movwf	(_stat+7)& (0+255),b
 11965  002404                     l7099:
 11966                           
 11967                           ;Main.c: 223: }
 11968                           ;Main.c: 225: if(((buttons[KEY_5_VENT_IN].state) == CONTROL_PRESSED)){
 11969  002404  0102               	movlb	2	; () banked
 11970  002406  0528               	decf	(_buttons+40)& (0+255),w,b
 11971  002408  A4D8               	btfss	status,2,c
 11972  00240A  0012               	return	
 11973                           
 11974                           ; BSR set to: 2
 11975                           ;Main.c: 226: Beep(10);
 11976  00240C  0E0A               	movlw	10
 11977  00240E  ECD2  F01D         	call	_Beep
 11978                           
 11979                           ; BSR set to: 0
 11980                           ;Main.c: 227: stat.st_fan = (stat.st_fan == 0)? 2: 0;
 11981  002412  51B5               	movf	(_stat+7)& (0+255),w,b
 11982  002414  E003               	bz	l7107
 11983                           
 11984                           ; BSR set to: 0
 11985  002416  6B95               	clrf	_tsk_process_btn$1309& (0+255),b
 11986  002418  6B96               	clrf	(_tsk_process_btn$1309+1)& (0+255),b
 11987  00241A  D004               	goto	l7109
 11988  00241C                     l7107:
 11989                           
 11990                           ; BSR set to: 0
 11991  00241C  0E00               	movlw	0
 11992  00241E  6F96               	movwf	(_tsk_process_btn$1309+1)& (0+255),b
 11993  002420  0E02               	movlw	2
 11994  002422  6F95               	movwf	_tsk_process_btn$1309& (0+255),b
 11995  002424                     l7109:
 11996                           
 11997                           ; BSR set to: 0
 11998  002424  C095  F0B5         	movff	_tsk_process_btn$1309,_stat+7
 11999  002428  0012               	return	
 12000  00242A                     __end_of_tsk_process_btn:
 12001                           	opt stack 0
 12002                           tblptru	equ	0xFF8
 12003                           tblptrh	equ	0xFF7
 12004                           tblptrl	equ	0xFF6
 12005                           tablat	equ	0xFF5
 12006                           prodh	equ	0xFF4
 12007                           prodl	equ	0xFF3
 12008                           intcon	equ	0xFF2
 12009                           postinc0	equ	0xFEE
 12010                           wreg	equ	0xFE8
 12011                           indf1	equ	0xFE7
 12012                           postinc1	equ	0xFE6
 12013                           postdec1	equ	0xFE5
 12014                           fsr1h	equ	0xFE2
 12015                           fsr1l	equ	0xFE1
 12016                           indf2	equ	0xFDF
 12017                           postinc2	equ	0xFDE
 12018                           postdec2	equ	0xFDD
 12019                           fsr2h	equ	0xFDA
 12020                           fsr2l	equ	0xFD9
 12021                           status	equ	0xFD8
 12022                           
 12023 ;; *************** function _MTouchDecode *****************
 12024 ;; Defined at:
 12025 ;;		line 58 in file "../lib/mTouchCap/mTouchControl.c"
 12026 ;; Parameters:    Size  Location     Type
 12027 ;;		None
 12028 ;; Auto vars:     Size  Location     Type
 12029 ;;		None
 12030 ;; Return value:  Size  Location     Type
 12031 ;;		None               void
 12032 ;; Registers used:
 12033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
 12034 ;; Tracked objects:
 12035 ;;		On entry : F/0
 12036 ;;		On exit  : F/0
 12037 ;;		Unchanged: 0/0
 12038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12043 ;;Total ram usage:        0 bytes
 12044 ;; Hardware stack levels used:    1
 12045 ;; Hardware stack levels required when called:    9
 12046 ;; This function calls:
 12047 ;;		_MTouchDecodeButtons
 12048 ;; This function is called by:
 12049 ;;		_tsk_process_btn
 12050 ;; This function uses a non-reentrant model
 12051 ;;
 12052                           
 12053                           	psect	text2
 12054  003C28                     __ptext2:
 12055                           	opt stack 0
 12056  003C28                     _MTouchDecode:
 12057                           	opt stack 20
 12058                           
 12059                           ; BSR set to: 0
 12060                           ;mTouchControl.c: 61: MTouchDecodeButtons();
 12061                           
 12062                           ;incstack = 0
 12063  003C28  EF85  F00A         	goto	_MTouchDecodeButtons	;wreg free
 12064  003C2C                     __end_of_MTouchDecode:
 12065                           	opt stack 0
 12066                           tblptru	equ	0xFF8
 12067                           tblptrh	equ	0xFF7
 12068                           tblptrl	equ	0xFF6
 12069                           tablat	equ	0xFF5
 12070                           prodh	equ	0xFF4
 12071                           prodl	equ	0xFF3
 12072                           intcon	equ	0xFF2
 12073                           postinc0	equ	0xFEE
 12074                           wreg	equ	0xFE8
 12075                           indf1	equ	0xFE7
 12076                           postinc1	equ	0xFE6
 12077                           postdec1	equ	0xFE5
 12078                           fsr1h	equ	0xFE2
 12079                           fsr1l	equ	0xFE1
 12080                           indf2	equ	0xFDF
 12081                           postinc2	equ	0xFDE
 12082                           postdec2	equ	0xFDD
 12083                           fsr2h	equ	0xFDA
 12084                           fsr2l	equ	0xFD9
 12085                           status	equ	0xFD8
 12086                           
 12087 ;; *************** function _MTouchDecodeButtons *****************
 12088 ;; Defined at:
 12089 ;;		line 82 in file "../lib/mTouchCap/mTouchButton.c"
 12090 ;; Parameters:    Size  Location     Type
 12091 ;;		None
 12092 ;; Auto vars:     Size  Location     Type
 12093 ;;  pButton         2   51[BANK0 ] PTR struct tag_MTOUCHBUT
 12094 ;;		 -> buttons(104), 
 12095 ;;  pMostPressed    2   48[BANK0 ] PTR struct tag_MTOUCHBUT
 12096 ;;		 -> NULL(0), buttons(104), 
 12097 ;;  pSensor         2   43[BANK0 ] PTR struct tag_SENSOR
 12098 ;;		 -> sensors(352), 
 12099 ;;  sensorState     1   50[BANK0 ] unsigned char 
 12100 ;;  decode          1   47[BANK0 ] unsigned char 
 12101 ;;  state           1   46[BANK0 ] unsigned char 
 12102 ;;  i               1   45[BANK0 ] unsigned char 
 12103 ;; Return value:  Size  Location     Type
 12104 ;;		None               void
 12105 ;; Registers used:
 12106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl
 12107 ;; Tracked objects:
 12108 ;;		On entry : F/0
 12109 ;;		On exit  : F/0
 12110 ;;		Unchanged: 0/0
 12111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12113 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12114 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12115 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12116 ;;Total ram usage:       14 bytes
 12117 ;; Hardware stack levels used:    1
 12118 ;; Hardware stack levels required when called:    8
 12119 ;; This function calls:
 12120 ;;		Nothing
 12121 ;; This function is called by:
 12122 ;;		_MTouchDecode
 12123 ;; This function uses a non-reentrant model
 12124 ;;
 12125                           
 12126                           	psect	text3
 12127  00150A                     __ptext3:
 12128                           	opt stack 0
 12129  00150A                     _MTouchDecodeButtons:
 12130                           	opt stack 20
 12131                           
 12132                           ; BSR set to: 0
 12133                           ;mTouchButton.c: 84: MTOUCHBUTTON* pButton = (MTOUCHBUTTON*)buttons;
 12134                           
 12135                           ; BSR set to: 0
 12136                           ;incstack = 0
 12137  00150A  0E02               	movlw	high _buttons
 12138  00150C  0100               	movlb	0	; () banked
 12139  00150E  6F94               	movwf	(MTouchDecodeButtons@pButton+1)& (0+255),b
 12140  001510  0E00               	movlw	low _buttons
 12141  001512  6F93               	movwf	MTouchDecodeButtons@pButton& (0+255),b
 12142                           
 12143                           ; BSR set to: 0
 12144                           ;mTouchButton.c: 86: MTOUCHBUTTON* pMostPressedButton = (0);
 12145  001514  6B90               	clrf	MTouchDecodeButtons@pMostPressedButton& (0+255),b
 12146  001516  6B91               	clrf	(MTouchDecodeButtons@pMostPressedButton+1)& (0+255),b
 12147                           
 12148                           ; BSR set to: 0
 12149                           ;mTouchButton.c: 88: SENSOR* pSensor;
 12150                           ;mTouchButton.c: 90: UINT8 i;
 12151                           ;mTouchButton.c: 92: UINT8 sensorState;
 12152                           ;mTouchButton.c: 94: UINT8 decode;
 12153                           ;mTouchButton.c: 96: UINT8 state;
 12154                           ;mTouchButton.c: 98: for(i = 0; i < 13; i++) {
 12155  001518  6B8D               	clrf	MTouchDecodeButtons@i& (0+255),b
 12156  00151A                     l5235:
 12157                           
 12158                           ; BSR set to: 0
 12159                           ;mTouchButton.c: 100: pSensor = pButton->pSensor;
 12160  00151A  EE20 F004          	lfsr	2,4
 12161  00151E  5193               	movf	MTouchDecodeButtons@pButton& (0+255),w,b
 12162  001520  26D9               	addwf	fsr2l,f,c
 12163  001522  5194               	movf	(MTouchDecodeButtons@pButton+1)& (0+255),w,b
 12164  001524  22DA               	addwfc	fsr2h,f,c
 12165  001526  CFDE F08B          	movff	postinc2,MTouchDecodeButtons@pSensor
 12166  00152A  CFDD F08C          	movff	postdec2,MTouchDecodeButtons@pSensor+1
 12167                           
 12168                           ;mTouchButton.c: 102: sensorState = pSensor->state;
 12169  00152E  EE20 F01C          	lfsr	2,28
 12170  001532  518B               	movf	MTouchDecodeButtons@pSensor& (0+255),w,b
 12171  001534  26D9               	addwf	fsr2l,f,c
 12172  001536  518C               	movf	(MTouchDecodeButtons@pSensor+1)& (0+255),w,b
 12173  001538  22DA               	addwfc	fsr2h,f,c
 12174  00153A  50DF               	movf	indf2,w,c
 12175  00153C  6F92               	movwf	MTouchDecodeButtons@sensorState& (0+255),b
 12176                           
 12177                           ; BSR set to: 0
 12178                           ;mTouchButton.c: 104: if(sensorState != SENSOR_INITIALIZING) {
 12179  00153E  5192               	movf	MTouchDecodeButtons@sensorState& (0+255),w,b
 12180  001540  E101 D0BF          	bz	l5295
 12181                           
 12182                           ; BSR set to: 0
 12183                           ;mTouchButton.c: 105: decode = pButton->decode;
 12184  001544  EE20 F002          	lfsr	2,2
 12185  001548  5193               	movf	MTouchDecodeButtons@pButton& (0+255),w,b
 12186  00154A  26D9               	addwf	fsr2l,f,c
 12187  00154C  5194               	movf	(MTouchDecodeButtons@pButton+1)& (0+255),w,b
 12188  00154E  22DA               	addwfc	fsr2h,f,c
 12189  001550  50DF               	movf	indf2,w,c
 12190  001552  6F8F               	movwf	MTouchDecodeButtons@decode& (0+255),b
 12191                           
 12192                           ;mTouchButton.c: 107: state = pButton->curState;
 12193  001554  EE20 F001          	lfsr	2,1
 12194  001558  5193               	movf	MTouchDecodeButtons@pButton& (0+255),w,b
 12195  00155A  26D9               	addwf	fsr2l,f,c
 12196  00155C  5194               	movf	(MTouchDecodeButtons@pButton+1)& (0+255),w,b
 12197  00155E  22DA               	addwfc	fsr2h,f,c
 12198  001560  50DF               	movf	indf2,w,c
 12199  001562  6F8E               	movwf	MTouchDecodeButtons@state& (0+255),b
 12200                           
 12201                           ; BSR set to: 0
 12202                           ;mTouchButton.c: 109: if(decode & DECODE_PRESS_REPEAT) {
 12203  001564  A78F               	btfss	MTouchDecodeButtons@decode& (0+255),3,b
 12204  001566  D037               	goto	l5257
 12205                           
 12206                           ; BSR set to: 0
 12207                           ;mTouchButton.c: 111: if(state == CONTROL_RELEASED) {
 12208  001568  518E               	movf	MTouchDecodeButtons@state& (0+255),w,b
 12209  00156A  0A02               	xorlw	2
 12210  00156C  E104               	bnz	l5247
 12211                           
 12212                           ; BSR set to: 0
 12213                           ;mTouchButton.c: 112: pButton->pressCounter = 6400;
 12214  00156E  D8C5               	call	PL124	;call to abstracted procedure
 12215  001570  0E19               	movlw	25
 12216  001572  6EDD               	movwf	postdec2,c
 12217                           
 12218                           ;mTouchButton.c: 114: } else {
 12219  001574  D030               	goto	l5257
 12220  001576                     l5247:
 12221                           
 12222                           ; BSR set to: 0
 12223                           ;mTouchButton.c: 116: if(pButton->pressCounter > 0) {
 12224  001576  EE20 F006          	lfsr	2,6
 12225  00157A  5193               	movf	MTouchDecodeButtons@pButton& (0+255),w,b
 12226  00157C  26D9               	addwf	fsr2l,f,c
 12227  00157E  5194               	movf	(MTouchDecodeButtons@pButton+1)& (0+255),w,b
 12228  001580  22DA               	addwfc	fsr2h,f,c
 12229  001582  52DE               	movf	postinc2,f,c
 12230  001584  50DD               	movf	postdec2,w,c
 12231  001586  0A80               	xorlw	128
 12232  001588  0F80               	addlw	128
 12233  00158A  0E01               	movlw	1
 12234  00158C  B4D8               	btfsc	status,2,c
 12235  00158E  5CDF               	subwf	indf2,w,c
 12236                           
 12237                           ; BSR set to: 0
 12238                           ;mTouchButton.c: 117: state = CONTROL_PRESSED;
 12239  001590  0E01               	movlw	1
 12240  001592  A0D8               	btfss	status,0,c
 12241                           
 12242                           ; BSR set to: 0
 12243                           ;mTouchButton.c: 119: state = CONTROL_RELEASED;
 12244                           
 12245                           ;mTouchButton.c: 118: } else {
 12246  001594  0E02               	movlw	2
 12247  001596  6F8E               	movwf	MTouchDecodeButtons@state& (0+255),b
 12248                           
 12249                           ; BSR set to: 0
 12250                           ;mTouchButton.c: 120: }
 12251                           ;mTouchButton.c: 122: if(pButton->pressCounter < -1280) {
 12252  001598  EE20 F006          	lfsr	2,6
 12253  00159C  5193               	movf	MTouchDecodeButtons@pButton& (0+255),w,b
 12254  00159E  26D9               	addwf	fsr2l,f,c
 12255  0015A0  5194               	movf	(MTouchDecodeButtons@pButton+1)& (0+255),w,b
 12256  0015A2  22DA               	addwfc	fsr2h,f,c
 12257  0015A4  CFDE F087          	movff	postinc2,??_MTouchDecodeButtons
 12258  0015A8  CFDD F088          	movff	postdec2,??_MTouchDecodeButtons+1
 12259  0015AC  5188               	movf	(??_MTouchDecodeButtons+1)& (0+255),w,b
 12260  0015AE  0A80               	xorlw	128
 12261  0015B0  6EF3               	movwf	prodl,c
 12262  0015B2  0E7B               	movlw	123
 12263  0015B4  5CF3               	subwf	prodl,w,c
 12264  0015B6  0E00               	movlw	0
 12265  0015B8  B4D8               	btfsc	status,2,c
 12266  0015BA  5D87               	subwf	??_MTouchDecodeButtons& (0+255),w,b
 12267  0015BC  E203               	bc	l35
 12268                           
 12269                           ; BSR set to: 0
 12270                           ;mTouchButton.c: 123: pButton->pressCounter = 1280;
 12271  0015BE  D89D               	call	PL124	;call to abstracted procedure
 12272  0015C0  0E05               	movlw	5
 12273  0015C2  6EDD               	movwf	postdec2,c
 12274  0015C4                     l35:
 12275                           
 12276                           ; BSR set to: 0
 12277                           ;mTouchButton.c: 124: }
 12278                           ;mTouchButton.c: 126: pButton->pressCounter--;
 12279  0015C4  EE20 F006          	lfsr	2,6
 12280  0015C8  5193               	movf	MTouchDecodeButtons@pButton& (0+255),w,b
 12281  0015CA  26D9               	addwf	fsr2l,f,c
 12282  0015CC  5194               	movf	(MTouchDecodeButtons@pButton+1)& (0+255),w,b
 12283  0015CE  22DA               	addwfc	fsr2h,f,c
 12284  0015D0  06DE               	decf	postinc2,f,c
 12285  0015D2  0E00               	movlw	0
 12286  0015D4  5ADD               	subwfb	postdec2,f,c
 12287  0015D6                     l5257:
 12288                           
 12289                           ; BSR set to: 0
 12290                           ;mTouchButton.c: 127: }
 12291                           ;mTouchButton.c: 128: }
 12292                           ;mTouchButton.c: 131: if(decode & DECODE_ONE_EVENT) {
 12293  0015D6  A98F               	btfss	MTouchDecodeButtons@decode& (0+255),4,b
 12294  0015D8  D008               	goto	l5263
 12295                           
 12296                           ; BSR set to: 0
 12297                           ;mTouchButton.c: 132: if(pButton->state & state) {
 12298  0015DA  C093  FFD9         	movff	MTouchDecodeButtons@pButton,fsr2l
 12299  0015DE  C094  FFDA         	movff	MTouchDecodeButtons@pButton+1,fsr2h
 12300  0015E2  50DF               	movf	indf2,w,c
 12301  0015E4  158E               	andwf	MTouchDecodeButtons@state& (0+255),w,b
 12302  0015E6  A4D8               	btfss	status,2,c
 12303                           
 12304                           ; BSR set to: 0
 12305                           ;mTouchButton.c: 133: state |= CONTROL_IDLE;
 12306  0015E8  8F8E               	bsf	MTouchDecodeButtons@state& (0+255),7,b
 12307  0015EA                     l5263:
 12308                           
 12309                           ; BSR set to: 0
 12310                           ;mTouchButton.c: 134: }
 12311                           ;mTouchButton.c: 135: }
 12312                           ;mTouchButton.c: 137: pButton->state = state;
 12313  0015EA  C093  FFD9         	movff	MTouchDecodeButtons@pButton,fsr2l
 12314  0015EE  C094  FFDA         	movff	MTouchDecodeButtons@pButton+1,fsr2h
 12315  0015F2  C08E  FFDF         	movff	MTouchDecodeButtons@state,indf2
 12316                           
 12317                           ; BSR set to: 0
 12318                           ;mTouchButton.c: 140: if(decode & DECODE_TOGGLE) {
 12319  0015F6  A18F               	btfss	MTouchDecodeButtons@decode& (0+255),0,b
 12320  0015F8  D022               	goto	l38
 12321                           
 12322                           ; BSR set to: 0
 12323                           ;mTouchButton.c: 141: if(sensorState != pButton->prevSensorState) {
 12324  0015FA  EE20 F003          	lfsr	2,3
 12325  0015FE  5193               	movf	MTouchDecodeButtons@pButton& (0+255),w,b
 12326  001600  26D9               	addwf	fsr2l,f,c
 12327  001602  5194               	movf	(MTouchDecodeButtons@pButton+1)& (0+255),w,b
 12328  001604  22DA               	addwfc	fsr2h,f,c
 12329  001606  50DF               	movf	indf2,w,c
 12330  001608  1992               	xorwf	MTouchDecodeButtons@sensorState& (0+255),w,b
 12331  00160A  E010               	bz	l39
 12332                           
 12333                           ; BSR set to: 0
 12334                           ;mTouchButton.c: 142: if(sensorState == SENSOR_PRESSED) {
 12335  00160C  5192               	movf	MTouchDecodeButtons@sensorState& (0+255),w,b
 12336  00160E  0A02               	xorlw	2
 12337  001610  E10D               	bnz	l39
 12338                           
 12339                           ; BSR set to: 0
 12340                           ;mTouchButton.c: 143: if(pButton->curState == CONTROL_PRESSED) {
 12341  001612  D86C               	call	PL76	;call to abstracted procedure
 12342  001614  62DF               	cpfseq	indf2,c
 12343  001616  D008               	goto	l5275
 12344                           
 12345                           ; BSR set to: 0
 12346                           ;mTouchButton.c: 144: pButton->curState = CONTROL_RELEASED;
 12347  001618  EE20 F001          	lfsr	2,1
 12348  00161C  5193               	movf	MTouchDecodeButtons@pButton& (0+255),w,b
 12349  00161E  26D9               	addwf	fsr2l,f,c
 12350  001620  5194               	movf	(MTouchDecodeButtons@pButton+1)& (0+255),w,b
 12351  001622  22DA               	addwfc	fsr2h,f,c
 12352  001624  0E02               	movlw	2
 12353  001626  D001               	goto	L2
 12354  001628                     l5275:
 12355                           
 12356                           ; BSR set to: 0
 12357                           ;mTouchButton.c: 146: pButton->curState = CONTROL_PRESSED;
 12358  001628  D861               	call	PL76	;call to abstracted procedure
 12359  00162A                     L2:
 12360  00162A  6EDF               	movwf	indf2,c
 12361  00162C                     l39:
 12362                           
 12363                           ; BSR set to: 0
 12364                           ;mTouchButton.c: 147: }
 12365                           ;mTouchButton.c: 149: }
 12366                           ;mTouchButton.c: 150: }
 12367                           ;mTouchButton.c: 151: pButton->prevSensorState = sensorState;
 12368  00162C  EE20 F003          	lfsr	2,3
 12369  001630  5193               	movf	MTouchDecodeButtons@pButton& (0+255),w,b
 12370  001632  26D9               	addwf	fsr2l,f,c
 12371  001634  5194               	movf	(MTouchDecodeButtons@pButton+1)& (0+255),w,b
 12372  001636  22DA               	addwfc	fsr2h,f,c
 12373  001638  C092  FFDF         	movff	MTouchDecodeButtons@sensorState,indf2
 12374                           
 12375                           ;mTouchButton.c: 152: } else
 12376  00163C  D042               	goto	l5295
 12377  00163E                     l38:
 12378                           
 12379                           ; BSR set to: 0
 12380                           ;mTouchButton.c: 154: if(decode & DECODE_MOST_PRESSED) {
 12381  00163E  A58F               	btfss	MTouchDecodeButtons@decode& (0+255),2,b
 12382  001640  D033               	goto	l5289
 12383                           
 12384                           ; BSR set to: 0
 12385                           ;mTouchButton.c: 155: pButton->curState = CONTROL_RELEASED;
 12386  001642  EE20 F001          	lfsr	2,1
 12387  001646  5193               	movf	MTouchDecodeButtons@pButton& (0+255),w,b
 12388  001648  26D9               	addwf	fsr2l,f,c
 12389  00164A  5194               	movf	(MTouchDecodeButtons@pButton+1)& (0+255),w,b
 12390  00164C  22DA               	addwfc	fsr2h,f,c
 12391  00164E  0E02               	movlw	2
 12392  001650  6EDF               	movwf	indf2,c
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;mTouchButton.c: 156: if(sensorState == SENSOR_PRESSED) {
 12396  001652  5192               	movf	MTouchDecodeButtons@sensorState& (0+255),w,b
 12397  001654  0A02               	xorlw	2
 12398  001656  E135               	bnz	l5295
 12399                           
 12400                           ; BSR set to: 0
 12401                           ;mTouchButton.c: 157: if(pMostPressedButton == (0)) {
 12402  001658  5191               	movf	(MTouchDecodeButtons@pMostPressedButton+1)& (0+255),w,b
 12403  00165A  1190               	iorwf	MTouchDecodeButtons@pMostPressedButton& (0+255),w,b
 12404  00165C  E105               	bnz	l5285
 12405  00165E                     l5283:
 12406                           
 12407                           ; BSR set to: 0
 12408                           ;mTouchButton.c: 158: pMostPressedButton = pButton;
 12409  00165E  C094  F091         	movff	MTouchDecodeButtons@pButton+1,MTouchDecodeButtons@pMostPressedButton+1
 12410  001662  C093  F090         	movff	MTouchDecodeButtons@pButton,MTouchDecodeButtons@pMostPressedButton
 12411                           
 12412                           ;mTouchButton.c: 159: } else {
 12413  001666  D02D               	goto	l5295
 12414  001668                     l5285:
 12415                           
 12416                           ; BSR set to: 0
 12417                           ;mTouchButton.c: 160: if(pSensor->delta > pMostPressedButton->pSensor->delta) {
 12418  001668  EE20 F018          	lfsr	2,24
 12419  00166C  518B               	movf	MTouchDecodeButtons@pSensor& (0+255),w,b
 12420  00166E  26D9               	addwf	fsr2l,f,c
 12421  001670  518C               	movf	(MTouchDecodeButtons@pSensor+1)& (0+255),w,b
 12422  001672  22DA               	addwfc	fsr2h,f,c
 12423  001674  CFDE F087          	movff	postinc2,??_MTouchDecodeButtons
 12424  001678  CFDD F088          	movff	postdec2,??_MTouchDecodeButtons+1
 12425  00167C  EE20 F004          	lfsr	2,4
 12426  001680  5190               	movf	MTouchDecodeButtons@pMostPressedButton& (0+255),w,b
 12427  001682  26D9               	addwf	fsr2l,f,c
 12428  001684  5191               	movf	(MTouchDecodeButtons@pMostPressedButton+1)& (0+255),w,b
 12429  001686  22DA               	addwfc	fsr2h,f,c
 12430  001688  EE10 F018          	lfsr	1,24
 12431  00168C  50DE               	movf	postinc2,w,c
 12432  00168E  26E1               	addwf	fsr1l,f,c
 12433  001690  50DD               	movf	postdec2,w,c
 12434  001692  22E2               	addwfc	fsr1h,f,c
 12435  001694  CFE6 F089          	movff	postinc1,??_MTouchDecodeButtons+2
 12436  001698  CFE5 F08A          	movff	postdec1,??_MTouchDecodeButtons+3
 12437  00169C  5187               	movf	??_MTouchDecodeButtons& (0+255),w,b
 12438  00169E  5D89               	subwf	(??_MTouchDecodeButtons+2)& (0+255),w,b
 12439  0016A0  5188               	movf	(??_MTouchDecodeButtons+1)& (0+255),w,b
 12440  0016A2  598A               	subwfb	(??_MTouchDecodeButtons+3)& (0+255),w,b
 12441  0016A4  E3DC               	bnc	l5283
 12442  0016A6  D00D               	goto	l5295
 12443  0016A8                     l5289:
 12444                           
 12445                           ; BSR set to: 0
 12446                           ;mTouchButton.c: 167: if(sensorState == SENSOR_PRESSED) {
 12447  0016A8  5192               	movf	MTouchDecodeButtons@sensorState& (0+255),w,b
 12448  0016AA  0A02               	xorlw	2
 12449  0016AC  E102               	bnz	l5293
 12450                           
 12451                           ; BSR set to: 0
 12452                           ;mTouchButton.c: 168: pButton->curState = CONTROL_PRESSED;
 12453  0016AE  D81E               	call	PL76	;call to abstracted procedure
 12454  0016B0  D007               	goto	L3
 12455  0016B2                     l5293:
 12456                           
 12457                           ; BSR set to: 0
 12458                           ;mTouchButton.c: 170: pButton->curState = CONTROL_RELEASED;
 12459  0016B2  EE20 F001          	lfsr	2,1
 12460  0016B6  5193               	movf	MTouchDecodeButtons@pButton& (0+255),w,b
 12461  0016B8  26D9               	addwf	fsr2l,f,c
 12462  0016BA  5194               	movf	(MTouchDecodeButtons@pButton+1)& (0+255),w,b
 12463  0016BC  22DA               	addwfc	fsr2h,f,c
 12464  0016BE  0E02               	movlw	2
 12465  0016C0                     L3:
 12466  0016C0  6EDF               	movwf	indf2,c
 12467  0016C2                     l5295:
 12468                           
 12469                           ; BSR set to: 0
 12470                           ;mTouchButton.c: 171: }
 12471                           ;mTouchButton.c: 173: }
 12472                           ;mTouchButton.c: 175: }
 12473                           ;mTouchButton.c: 177: pButton++;
 12474  0016C2  0E08               	movlw	8
 12475  0016C4  2793               	addwf	MTouchDecodeButtons@pButton& (0+255),f,b
 12476  0016C6  0E00               	movlw	0
 12477  0016C8  2394               	addwfc	(MTouchDecodeButtons@pButton+1)& (0+255),f,b
 12478                           
 12479                           ; BSR set to: 0
 12480  0016CA  2B8D               	incf	MTouchDecodeButtons@i& (0+255),f,b
 12481                           
 12482                           ; BSR set to: 0
 12483  0016CC  0E0C               	movlw	12
 12484  0016CE  658D               	cpfsgt	MTouchDecodeButtons@i& (0+255),b
 12485  0016D0  D724               	goto	l5235
 12486                           
 12487                           ; BSR set to: 0
 12488                           ;mTouchButton.c: 179: }
 12489                           ;mTouchButton.c: 181: if(pMostPressedButton != (0)) {
 12490  0016D2  5191               	movf	(MTouchDecodeButtons@pMostPressedButton+1)& (0+255),w,b
 12491  0016D4  1190               	iorwf	MTouchDecodeButtons@pMostPressedButton& (0+255),w,b
 12492  0016D6  B4D8               	btfsc	status,2,c
 12493  0016D8  0012               	return	
 12494                           
 12495                           ; BSR set to: 0
 12496                           ;mTouchButton.c: 182: pMostPressedButton->curState = CONTROL_PRESSED;
 12497  0016DA  EE20 F001          	lfsr	2,1
 12498  0016DE  5190               	movf	MTouchDecodeButtons@pMostPressedButton& (0+255),w,b
 12499  0016E0  26D9               	addwf	fsr2l,f,c
 12500  0016E2  5191               	movf	(MTouchDecodeButtons@pMostPressedButton+1)& (0+255),w,b
 12501  0016E4  22DA               	addwfc	fsr2h,f,c
 12502  0016E6  0E01               	movlw	1
 12503  0016E8  6EDF               	movwf	indf2,c
 12504                           
 12505                           ; BSR set to: 0
 12506  0016EA  0C01               	retlw	1
 12507  0016EC                     __end_of_MTouchDecodeButtons:
 12508                           	opt stack 0
 12509  0016EC                     PL76:
 12510                           	opt stack 20
 12511  0016EC  EE20 F001          	lfsr	2,1
 12512  0016F0  5193               	movf	MTouchDecodeButtons@pButton& (0+255),w,b
 12513  0016F2  26D9               	addwf	fsr2l,f,c
 12514  0016F4  5194               	movf	(MTouchDecodeButtons@pButton+1)& (0+255),w,b
 12515  0016F6  22DA               	addwfc	fsr2h,f,c
 12516  0016F8  0C01               	retlw	1
 12517  0016FA                     __end_ofPL76:
 12518                           	opt stack 0
 12519  0016FA                     PL124:
 12520                           	opt stack 20
 12521  0016FA  EE20 F006          	lfsr	2,6
 12522  0016FE  5193               	movf	MTouchDecodeButtons@pButton& (0+255),w,b
 12523  001700  26D9               	addwf	fsr2l,f,c
 12524  001702  5194               	movf	(MTouchDecodeButtons@pButton+1)& (0+255),w,b
 12525  001704  22DA               	addwfc	fsr2h,f,c
 12526  001706  6ADE               	clrf	postinc2,c
 12527  001708  0012               	return	
 12528  00170A                     __end_ofPL124:
 12529                           	opt stack 0
 12530                           tblptru	equ	0xFF8
 12531                           tblptrh	equ	0xFF7
 12532                           tblptrl	equ	0xFF6
 12533                           tablat	equ	0xFF5
 12534                           prodh	equ	0xFF4
 12535                           prodl	equ	0xFF3
 12536                           intcon	equ	0xFF2
 12537                           postinc0	equ	0xFEE
 12538                           wreg	equ	0xFE8
 12539                           indf1	equ	0xFE7
 12540                           postinc1	equ	0xFE6
 12541                           postdec1	equ	0xFE5
 12542                           fsr1h	equ	0xFE2
 12543                           fsr1l	equ	0xFE1
 12544                           indf2	equ	0xFDF
 12545                           postinc2	equ	0xFDE
 12546                           postdec2	equ	0xFDD
 12547                           fsr2h	equ	0xFDA
 12548                           fsr2l	equ	0xFD9
 12549                           status	equ	0xFD8
 12550                           
 12551 ;; *************** function _Beep *****************
 12552 ;; Defined at:
 12553 ;;		line 202 in file "../isr.c"
 12554 ;; Parameters:    Size  Location     Type
 12555 ;;  ms10            1    wreg     unsigned char 
 12556 ;; Auto vars:     Size  Location     Type
 12557 ;;  ms10            1   39[BANK0 ] unsigned char 
 12558 ;; Return value:  Size  Location     Type
 12559 ;;		None               void
 12560 ;; Registers used:
 12561 ;;		wreg, status,2, status,0, prodl, prodh
 12562 ;; Tracked objects:
 12563 ;;		On entry : 0/0
 12564 ;;		On exit  : F/0
 12565 ;;		Unchanged: 0/0
 12566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12568 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12570 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12571 ;;Total ram usage:        1 bytes
 12572 ;; Hardware stack levels used:    1
 12573 ;; Hardware stack levels required when called:    8
 12574 ;; This function calls:
 12575 ;;		Nothing
 12576 ;; This function is called by:
 12577 ;;		_main
 12578 ;;		_tsk_process_btn
 12579 ;; This function uses a non-reentrant model
 12580 ;;
 12581                           
 12582                           	psect	text4
 12583  003BA4                     __ptext4:
 12584                           	opt stack 0
 12585  003BA4                     _Beep:
 12586                           	opt stack 21
 12587                           
 12588                           ; BSR set to: 0
 12589                           ;incstack = 0
 12590                           ;Beep@ms10 stored from wreg
 12591  003BA4  0100               	movlb	0	; () banked
 12592  003BA6  6F87               	movwf	Beep@ms10& (0+255),b
 12593                           
 12594                           ; BSR set to: 0
 12595                           ;isr.c: 204: TRISAbits.TRISA4 = 0;
 12596  003BA8  9892               	bcf	3986,4,c	;volatile
 12597                           
 12598                           ; BSR set to: 0
 12599                           ;isr.c: 208: beep_timer = ms10 * 40;
 12600  003BAA  5187               	movf	Beep@ms10& (0+255),w,b
 12601  003BAC  0D28               	mullw	40
 12602  003BAE  CFF3 F0BD          	movff	prodl,_beep_timer	;volatile
 12603  003BB2  CFF4 F0BE          	movff	prodh,_beep_timer+1	;volatile
 12604                           
 12605                           ; BSR set to: 0
 12606                           ;isr.c: 209: beep_count = 1;
 12607  003BB6  0E01               	movlw	1
 12608  003BB8  6E23               	movwf	_beep_count,c	;volatile
 12609                           
 12610                           ; BSR set to: 0
 12611  003BBA  0C01               	retlw	1
 12612  003BBC                     __end_of_Beep:
 12613                           	opt stack 0
 12614                           tblptru	equ	0xFF8
 12615                           tblptrh	equ	0xFF7
 12616                           tblptrl	equ	0xFF6
 12617                           tablat	equ	0xFF5
 12618                           prodh	equ	0xFF4
 12619                           prodl	equ	0xFF3
 12620                           intcon	equ	0xFF2
 12621                           postinc0	equ	0xFEE
 12622                           wreg	equ	0xFE8
 12623                           indf1	equ	0xFE7
 12624                           postinc1	equ	0xFE6
 12625                           postdec1	equ	0xFE5
 12626                           fsr1h	equ	0xFE2
 12627                           fsr1l	equ	0xFE1
 12628                           indf2	equ	0xFDF
 12629                           postinc2	equ	0xFDE
 12630                           postdec2	equ	0xFDD
 12631                           fsr2h	equ	0xFDA
 12632                           fsr2l	equ	0xFD9
 12633                           status	equ	0xFD8
 12634                           
 12635 ;; *************** function _tsk_ds18b20 *****************
 12636 ;; Defined at:
 12637 ;;		line 263 in file "../Main.c"
 12638 ;; Parameters:    Size  Location     Type
 12639 ;;		None
 12640 ;; Auto vars:     Size  Location     Type
 12641 ;;		None
 12642 ;; Return value:  Size  Location     Type
 12643 ;;		None               void
 12644 ;; Registers used:
 12645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
 12646 ;; Tracked objects:
 12647 ;;		On entry : D/0
 12648 ;;		On exit  : F/0
 12649 ;;		Unchanged: 0/0
 12650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12653 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12654 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12655 ;;Total ram usage:        2 bytes
 12656 ;; Hardware stack levels used:    1
 12657 ;; Hardware stack levels required when called:   11
 12658 ;; This function calls:
 12659 ;;		_ds18b20_read
 12660 ;;		_ds18b20_start
 12661 ;; This function is called by:
 12662 ;;		_main
 12663 ;; This function uses a non-reentrant model
 12664 ;;
 12665                           
 12666                           	psect	text5
 12667  001D76                     __ptext5:
 12668                           	opt stack 0
 12669  001D76                     _tsk_ds18b20:
 12670                           	opt stack 19
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;incstack = 0
 12674  001D76  D08D               	goto	l9367
 12675  001D78                     l672:
 12676  001D78  F000               	nop	
 12677                           
 12678                           ;Main.c: 269: ow_bit = 1;
 12679  001D7A  0E01               	movlw	1
 12680  001D7C  0100               	movlb	0	; () banked
 12681  001D7E  6FCE               	movwf	_ow_bit& (0+255),b
 12682                           
 12683                           ; BSR set to: 0
 12684                           ;Main.c: 270: ds18b20_start();
 12685  001D80  EC7D  F01B         	call	_ds18b20_start	;wreg free
 12686                           
 12687                           ; BSR set to: 0
 12688  001D84  AEF2               	btfss	intcon,7,c	;volatile
 12689  001D86  D003               	goto	l674
 12690                           
 12691                           ; BSR set to: 0
 12692  001D88  0E01               	movlw	1
 12693  001D8A  6FD0               	movwf	tsk_ds18b20@_interrupt_state& (0+255),b
 12694  001D8C  D001               	goto	l675
 12695  001D8E                     l674:
 12696                           
 12697                           ; BSR set to: 0
 12698  001D8E  6BD0               	clrf	tsk_ds18b20@_interrupt_state& (0+255),b
 12699  001D90                     l675:
 12700                           
 12701                           ; BSR set to: 0
 12702  001D90  9EF2               	bcf	intcon,7,c	;volatile
 12703  001D92  C0BB  F0C5         	movff	__sys_tick,tsk_ds18b20@_prev_tick	;volatile
 12704  001D96  C0BC  F0C6         	movff	__sys_tick+1,tsk_ds18b20@_prev_tick+1	;volatile
 12705                           
 12706                           ; BSR set to: 0
 12707  001D9A  0E01               	movlw	1
 12708  001D9C  6FC8               	movwf	(tsk_ds18b20@_state+1)& (0+255),b
 12709  001D9E  0E10               	movlw	16
 12710  001DA0  6FC7               	movwf	tsk_ds18b20@_state& (0+255),b
 12711  001DA2                     l9309:
 12712  001DA2  D88A               	call	PL68	;call to abstracted procedure
 12713  001DA4  0E82               	movlw	130
 12714  001DA6  5CF3               	subwf	prodl,w,c
 12715  001DA8  0EEE               	movlw	238
 12716  001DAA  B4D8               	btfsc	status,2,c
 12717  001DAC  5DDF               	subwf	??_tsk_ds18b20& (0+255),w,b
 12718  001DAE  E205               	bc	l677
 12719                           
 12720                           ; BSR set to: 1
 12721  001DB0  0100               	movlb	0	; () banked
 12722  001DB2  05D0               	decf	tsk_ds18b20@_interrupt_state& (0+255),w,b
 12723  001DB4  B4D8               	btfsc	status,2,c
 12724                           
 12725                           ; BSR set to: 0
 12726  001DB6  8EF2               	bsf	intcon,7,c	;volatile
 12727  001DB8  0012               	return	
 12728  001DBA                     l677:
 12729                           
 12730                           ; BSR set to: 1
 12731                           
 12732                           ; BSR set to: 1
 12733  001DBA  D88E               	call	PL126	;call to abstracted procedure
 12734  001DBC  B4D8               	btfsc	status,2,c
 12735                           
 12736                           ; BSR set to: 0
 12737  001DBE  8EF2               	bsf	intcon,7,c	;volatile
 12738                           
 12739                           ; BSR set to: 0
 12740  001DC0  F000               	nop	
 12741                           
 12742                           ;Main.c: 274: f_temp = ds18b20_read();
 12743  001DC2  ECCE  F010         	call	_ds18b20_read	;wreg free
 12744  001DC6  C1D1  F0B7         	movff	?_ds18b20_read,tsk_ds18b20@f_temp
 12745  001DCA  C1D2  F0B8         	movff	?_ds18b20_read+1,tsk_ds18b20@f_temp+1
 12746  001DCE  C1D3  F0B9         	movff	?_ds18b20_read+2,tsk_ds18b20@f_temp+2
 12747  001DD2  C1D4  F0BA         	movff	?_ds18b20_read+3,tsk_ds18b20@f_temp+3
 12748                           
 12749                           ;Main.c: 276: __nop();
 12750  001DD6  F000               	nop	
 12751                           
 12752                           ;Main.c: 277: __nop();
 12753  001DD8  F000               	nop	
 12754                           
 12755                           ;Main.c: 279: if((f_temp != -60.0) && (f_temp != 85.0)){
 12756  001DDA  0100               	movlb	0	; () banked
 12757  001DDC  D884               	call	PL140	;call to abstracted procedure
 12758  001DDE  B4D8               	btfsc	status,2,c
 12759  001DE0  18DE               	xorwf	postinc2,w,c
 12760  001DE2  0E70               	movlw	112
 12761  001DE4  B4D8               	btfsc	status,2,c
 12762  001DE6  18DE               	xorwf	postinc2,w,c
 12763  001DE8  0EC2               	movlw	194
 12764  001DEA  B4D8               	btfsc	status,2,c
 12765  001DEC  18DE               	xorwf	postinc2,w,c
 12766  001DEE  E01E               	bz	l9339
 12767                           
 12768                           ; BSR set to: 0
 12769  001DF0  D87A               	call	PL140	;call to abstracted procedure
 12770  001DF2  B4D8               	btfsc	status,2,c
 12771  001DF4  18DE               	xorwf	postinc2,w,c
 12772  001DF6  0EAA               	movlw	170
 12773  001DF8  B4D8               	btfsc	status,2,c
 12774  001DFA  18DE               	xorwf	postinc2,w,c
 12775  001DFC  0E42               	movlw	66
 12776  001DFE  B4D8               	btfsc	status,2,c
 12777  001E00  18DE               	xorwf	postinc2,w,c
 12778  001E02  E014               	bz	l9339
 12779                           
 12780                           ; BSR set to: 0
 12781                           ;Main.c: 281: if(INTCONbits.GIE==1) _interrupt_state = 1; else _interrupt_state = 0; INT
      +                          CONbits.GIE=0;
 12782  001E04  AEF2               	btfss	intcon,7,c	;volatile
 12783  001E06  D003               	goto	l684
 12784                           
 12785                           ; BSR set to: 0
 12786  001E08  0E01               	movlw	1
 12787  001E0A  6FD0               	movwf	tsk_ds18b20@_interrupt_state& (0+255),b
 12788  001E0C  D001               	goto	l685
 12789  001E0E                     l684:
 12790                           
 12791                           ; BSR set to: 0
 12792  001E0E  6BD0               	clrf	tsk_ds18b20@_interrupt_state& (0+255),b
 12793  001E10                     l685:
 12794                           
 12795                           ; BSR set to: 0
 12796  001E10  9EF2               	bcf	intcon,7,c	;volatile
 12797                           
 12798                           ;Main.c: 282: f_T_salona = f_temp;
 12799  001E12  C0B7  F0D5         	movff	tsk_ds18b20@f_temp,_f_T_salona
 12800  001E16  C0B8  F0D6         	movff	tsk_ds18b20@f_temp+1,_f_T_salona+1
 12801  001E1A  C0B9  F0D7         	movff	tsk_ds18b20@f_temp+2,_f_T_salona+2
 12802  001E1E  C0BA  F0D8         	movff	tsk_ds18b20@f_temp+3,_f_T_salona+3
 12803                           
 12804                           ; BSR set to: 0
 12805                           ;Main.c: 283: if(_interrupt_state==1) INTCONbits.GIE=1;
 12806  001E22  05D0               	decf	tsk_ds18b20@_interrupt_state& (0+255),w,b
 12807  001E24  B4D8               	btfsc	status,2,c
 12808                           
 12809                           ; BSR set to: 0
 12810  001E26  8EF2               	bsf	intcon,7,c	;volatile
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;Main.c: 285: ow_err[0] = 0;
 12814  001E28  6BD1               	clrf	tsk_ds18b20@ow_err& (0+255),b
 12815                           
 12816                           ;Main.c: 286: } else {
 12817  001E2A  D013               	goto	l692
 12818  001E2C                     l9339:
 12819                           
 12820                           ; BSR set to: 0
 12821                           ;Main.c: 287: ow_err[0] ++;
 12822  001E2C  2BD1               	incf	tsk_ds18b20@ow_err& (0+255),f,b
 12823                           
 12824                           ; BSR set to: 0
 12825                           ;Main.c: 288: if(ow_err[0] > 4){
 12826  001E2E  0E04               	movlw	4
 12827  001E30  65D1               	cpfsgt	tsk_ds18b20@ow_err& (0+255),b
 12828  001E32  D00F               	goto	l692
 12829                           
 12830                           ; BSR set to: 0
 12831                           ;Main.c: 289: ow_err[0] = 0;
 12832  001E34  6BD1               	clrf	tsk_ds18b20@ow_err& (0+255),b
 12833                           
 12834                           ;Main.c: 290: if(INTCONbits.GIE==1) _interrupt_state = 1; else _interrupt_state = 0; INT
      +                          CONbits.GIE=0;
 12835  001E36  AEF2               	btfss	intcon,7,c	;volatile
 12836  001E38  D003               	goto	l689
 12837                           
 12838                           ; BSR set to: 0
 12839  001E3A  0E01               	movlw	1
 12840  001E3C  6FD0               	movwf	tsk_ds18b20@_interrupt_state& (0+255),b
 12841  001E3E  D001               	goto	l690
 12842  001E40                     l689:
 12843                           
 12844                           ; BSR set to: 0
 12845  001E40  6BD0               	clrf	tsk_ds18b20@_interrupt_state& (0+255),b
 12846  001E42                     l690:
 12847                           
 12848                           ; BSR set to: 0
 12849  001E42  9EF2               	bcf	intcon,7,c	;volatile
 12850                           
 12851                           ;Main.c: 291: f_T_salona = 0.0;
 12852  001E44  6BD5               	clrf	_f_T_salona& (0+255),b
 12853  001E46  6BD6               	clrf	(_f_T_salona+1)& (0+255),b
 12854  001E48  6BD7               	clrf	(_f_T_salona+2)& (0+255),b
 12855  001E4A  6BD8               	clrf	(_f_T_salona+3)& (0+255),b
 12856                           
 12857                           ; BSR set to: 0
 12858                           ;Main.c: 292: if(_interrupt_state==1) INTCONbits.GIE=1;
 12859  001E4C  05D0               	decf	tsk_ds18b20@_interrupt_state& (0+255),w,b
 12860  001E4E  B4D8               	btfsc	status,2,c
 12861                           
 12862                           ; BSR set to: 0
 12863  001E50  8EF2               	bsf	intcon,7,c	;volatile
 12864  001E52                     l692:
 12865                           
 12866                           ; BSR set to: 0
 12867  001E52  AEF2               	btfss	intcon,7,c	;volatile
 12868  001E54  D003               	goto	l693
 12869                           
 12870                           ; BSR set to: 0
 12871  001E56  0E01               	movlw	1
 12872  001E58  6FD0               	movwf	tsk_ds18b20@_interrupt_state& (0+255),b
 12873  001E5A  D001               	goto	l694
 12874  001E5C                     l693:
 12875                           
 12876                           ; BSR set to: 0
 12877  001E5C  6BD0               	clrf	tsk_ds18b20@_interrupt_state& (0+255),b
 12878  001E5E                     l694:
 12879                           
 12880                           ; BSR set to: 0
 12881  001E5E  9EF2               	bcf	intcon,7,c	;volatile
 12882  001E60  C0BB  F0C5         	movff	__sys_tick,tsk_ds18b20@_prev_tick	;volatile
 12883  001E64  C0BC  F0C6         	movff	__sys_tick+1,tsk_ds18b20@_prev_tick+1	;volatile
 12884                           
 12885                           ; BSR set to: 0
 12886  001E68  0E01               	movlw	1
 12887  001E6A  6FC8               	movwf	(tsk_ds18b20@_state+1)& (0+255),b
 12888  001E6C  0E28               	movlw	40
 12889  001E6E  6FC7               	movwf	tsk_ds18b20@_state& (0+255),b
 12890  001E70                     l9355:
 12891  001E70  D823               	call	PL68	;call to abstracted procedure
 12892  001E72  0E80               	movlw	128
 12893  001E74  5CF3               	subwf	prodl,w,c
 12894  001E76  0E64               	movlw	100
 12895  001E78  B4D8               	btfsc	status,2,c
 12896  001E7A  5DDF               	subwf	??_tsk_ds18b20& (0+255),w,b
 12897  001E7C  E205               	bc	l696
 12898                           
 12899                           ; BSR set to: 1
 12900  001E7E  0100               	movlb	0	; () banked
 12901  001E80  05D0               	decf	tsk_ds18b20@_interrupt_state& (0+255),w,b
 12902  001E82  B4D8               	btfsc	status,2,c
 12903                           
 12904                           ; BSR set to: 0
 12905  001E84  8EF2               	bsf	intcon,7,c	;volatile
 12906  001E86  0012               	return	
 12907  001E88                     l696:
 12908                           
 12909                           ; BSR set to: 1
 12910                           
 12911                           ; BSR set to: 1
 12912  001E88  D827               	call	PL126	;call to abstracted procedure
 12913  001E8A  B4D8               	btfsc	status,2,c
 12914                           
 12915                           ; BSR set to: 0
 12916  001E8C  8EF2               	bsf	intcon,7,c	;volatile
 12917                           
 12918                           ; BSR set to: 0
 12919  001E8E  F000               	nop	
 12920                           
 12921                           ;Main.c: 297: }};
 12922  001E90  D773               	goto	l672
 12923  001E92                     l9367:
 12924  001E92  C0C7  F1DF         	movff	tsk_ds18b20@_state,??_tsk_ds18b20
 12925  001E96  C0C8  F1E0         	movff	tsk_ds18b20@_state+1,??_tsk_ds18b20+1
 12926                           
 12927                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12928                           ; Switch size 1, requested type "space"
 12929                           ; Number of cases is 2, Range of values is 0 to 1
 12930                           ; switch strategies available:
 12931                           ; Name         Instructions Cycles
 12932                           ; simple_byte            7     4 (average)
 12933                           ;	Chosen strategy is simple_byte
 12934  001E9A  0101               	movlb	1	; () banked
 12935  001E9C  51E0               	movf	(??_tsk_ds18b20+1)& (0+255),w,b
 12936  001E9E  E003               	bz	l9527
 12937  001EA0  0A01               	xorlw	1	; case 1
 12938  001EA2  E003               	bz	l9529
 12939  001EA4  D769               	goto	l672
 12940  001EA6                     l9527:
 12941                           
 12942                           ; BSR set to: 1
 12943                           ; Switch size 1, requested type "space"
 12944                           ; Number of cases is 1, Range of values is 0 to 0
 12945                           ; switch strategies available:
 12946                           ; Name         Instructions Cycles
 12947                           ; simple_byte            4     3 (average)
 12948                           ;	Chosen strategy is simple_byte
 12949  001EA6  51DF               	movf	??_tsk_ds18b20& (0+255),w,b
 12950  001EA8  D767               	goto	l672
 12951  001EAA                     l9529:
 12952                           
 12953                           ; BSR set to: 1
 12954                           ; Switch size 1, requested type "space"
 12955                           ; Number of cases is 2, Range of values is 16 to 40
 12956                           ; switch strategies available:
 12957                           ; Name         Instructions Cycles
 12958                           ; simple_byte            7     4 (average)
 12959                           ;	Chosen strategy is simple_byte
 12960  001EAA  51DF               	movf	??_tsk_ds18b20& (0+255),w,b
 12961  001EAC  0A10               	xorlw	16	; case 16
 12962  001EAE  E101 D778          	bz	l9309
 12963  001EB2  0A38               	xorlw	56	; case 40
 12964  001EB4  E0DD               	bz	l9355
 12965  001EB6  D760               	goto	l672
 12966  001EB8                     __end_of_tsk_ds18b20:
 12967                           	opt stack 0
 12968  001EB8                     PL68:
 12969                           	opt stack 19
 12970  001EB8  0100               	movlb	0	; () banked
 12971  001EBA  C0BB  F1DF         	movff	__sys_tick,??_tsk_ds18b20	;volatile
 12972  001EBE  C0BC  F1E0         	movff	__sys_tick+1,??_tsk_ds18b20+1	;volatile
 12973  001EC2  51C5               	movf	tsk_ds18b20@_prev_tick& (0+255),w,b
 12974  001EC4  0101               	movlb	1	; () banked
 12975  001EC6  5FDF               	subwf	??_tsk_ds18b20& (0+255),f,b
 12976  001EC8  0100               	movlb	0	; () banked
 12977  001ECA  51C6               	movf	(tsk_ds18b20@_prev_tick+1)& (0+255),w,b
 12978  001ECC  0101               	movlb	1	; () banked
 12979  001ECE  5BE0               	subwfb	(??_tsk_ds18b20+1)& (0+255),f,b
 12980  001ED0  51E0               	movf	(??_tsk_ds18b20+1)& (0+255),w,b
 12981  001ED2  0A80               	xorlw	128
 12982  001ED4  6EF3               	movwf	prodl,c
 12983  001ED6  0012               	return	
 12984  001ED8                     __end_ofPL68:
 12985                           	opt stack 0
 12986  001ED8                     PL126:
 12987                           	opt stack 19
 12988  001ED8  C0BB  F0C5         	movff	__sys_tick,tsk_ds18b20@_prev_tick	;volatile
 12989  001EDC  C0BC  F0C6         	movff	__sys_tick+1,tsk_ds18b20@_prev_tick+1	;volatile
 12990  001EE0  0100               	movlb	0	; () banked
 12991  001EE2  05D0               	decf	tsk_ds18b20@_interrupt_state& (0+255),w,b
 12992  001EE4  0012               	return	
 12993  001EE6                     __end_ofPL126:
 12994                           	opt stack 0
 12995  001EE6                     PL140:
 12996                           	opt stack 19
 12997  001EE6  EE20  F0B7         	lfsr	2,tsk_ds18b20@f_temp
 12998  001EEA  0E00               	movlw	0
 12999  001EEC  18DE               	xorwf	postinc2,w,c
 13000  001EEE  0C00               	retlw	0
 13001  001EF0                     __end_ofPL140:
 13002                           	opt stack 0
 13003                           tblptru	equ	0xFF8
 13004                           tblptrh	equ	0xFF7
 13005                           tblptrl	equ	0xFF6
 13006                           tablat	equ	0xFF5
 13007                           prodh	equ	0xFF4
 13008                           prodl	equ	0xFF3
 13009                           intcon	equ	0xFF2
 13010                           postinc0	equ	0xFEE
 13011                           wreg	equ	0xFE8
 13012                           indf1	equ	0xFE7
 13013                           postinc1	equ	0xFE6
 13014                           postdec1	equ	0xFE5
 13015                           fsr1h	equ	0xFE2
 13016                           fsr1l	equ	0xFE1
 13017                           indf2	equ	0xFDF
 13018                           postinc2	equ	0xFDE
 13019                           postdec2	equ	0xFDD
 13020                           fsr2h	equ	0xFDA
 13021                           fsr2l	equ	0xFD9
 13022                           status	equ	0xFD8
 13023                           
 13024 ;; *************** function _ds18b20_start *****************
 13025 ;; Defined at:
 13026 ;;		line 205 in file "../lib/ow.c"
 13027 ;; Parameters:    Size  Location     Type
 13028 ;;		None
 13029 ;; Auto vars:     Size  Location     Type
 13030 ;;		None
 13031 ;; Return value:  Size  Location     Type
 13032 ;;		None               void
 13033 ;; Registers used:
 13034 ;;		wreg, status,2, status,0, cstack
 13035 ;; Tracked objects:
 13036 ;;		On entry : F/0
 13037 ;;		On exit  : F/0
 13038 ;;		Unchanged: 0/0
 13039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13042 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13043 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13044 ;;Total ram usage:        2 bytes
 13045 ;; Hardware stack levels used:    1
 13046 ;; Hardware stack levels required when called:   10
 13047 ;; This function calls:
 13048 ;;		_init_1wire
 13049 ;;		_ow_delay
 13050 ;;		_write_1wire
 13051 ;; This function is called by:
 13052 ;;		_tsk_ds18b20
 13053 ;; This function uses a non-reentrant model
 13054 ;;
 13055                           
 13056                           	psect	text6
 13057  0036FA                     __ptext6:
 13058                           	opt stack 0
 13059  0036FA                     _ds18b20_start:
 13060                           	opt stack 19
 13061                           
 13062                           ; BSR set to: 0
 13063                           ;ow.c: 207: if(init_1wire()) {
 13064                           
 13065                           ; BSR set to: 0
 13066                           ;incstack = 0
 13067  0036FA  EC65  F017         	call	_init_1wire	;wreg free
 13068  0036FE  0900               	iorlw	0
 13069  003700  E006               	bz	l296
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;ow.c: 208: write_1wire(0xcc);
 13073  003702  0ECC               	movlw	204
 13074  003704  EC45  F015         	call	_write_1wire
 13075                           
 13076                           ;ow.c: 209: write_1wire(0x44);
 13077  003708  0E44               	movlw	68
 13078  00370A  EC45  F015         	call	_write_1wire
 13079  00370E                     l296:
 13080                           
 13081                           ; BSR set to: 0
 13082                           ;ow.c: 210: }
 13083                           ;ow.c: 212: ow_delay(16);
 13084  00370E  6B88               	clrf	(ow_delay@del+1)& (0+255),b
 13085  003710  0E10               	movlw	16
 13086  003712  6F87               	movwf	ow_delay@del& (0+255),b
 13087  003714  ECDE  F01D         	call	_ow_delay	;wreg free
 13088                           
 13089                           ; BSR set to: 0
 13090                           ;ow.c: 215: ((TRISC) &= ~(1 << (ow_bit)));
 13091  003718  D810               	call	PL138	;call to abstracted procedure
 13092  00371A  D002               	goto	u9764
 13093  00371C                     u9765:
 13094  00371C  90D8               	bcf	status,0,c
 13095  00371E  378E               	rlcf	(??_ds18b20_start+1)& (0+255),f,b
 13096  003720                     u9764:
 13097  003720  2F8D               	decfsz	??_ds18b20_start& (0+255),f,b
 13098  003722  D7FC               	goto	u9765
 13099  003724  1D8E               	comf	(??_ds18b20_start+1)& (0+255),w,b
 13100  003726  1694               	andwf	3988,f,c	;volatile
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;ow.c: 216: ((LATC) |= (1 << (ow_bit)));
 13104  003728  D808               	call	PL138	;call to abstracted procedure
 13105  00372A  D002               	goto	u9774
 13106  00372C                     u9775:
 13107  00372C  90D8               	bcf	status,0,c
 13108  00372E  378E               	rlcf	(??_ds18b20_start+1)& (0+255),f,b
 13109  003730                     u9774:
 13110  003730  2F8D               	decfsz	??_ds18b20_start& (0+255),f,b
 13111  003732  D7FC               	goto	u9775
 13112  003734  518E               	movf	(??_ds18b20_start+1)& (0+255),w,b
 13113  003736  128B               	iorwf	3979,f,c	;volatile
 13114                           
 13115                           ; BSR set to: 0
 13116  003738  0012               	return	
 13117  00373A                     __end_of_ds18b20_start:
 13118                           	opt stack 0
 13119  00373A                     PL138:
 13120                           	opt stack 19
 13121  00373A  C0CE  F08D         	movff	_ow_bit,??_ds18b20_start
 13122  00373E  0E01               	movlw	1
 13123  003740  6F8E               	movwf	(??_ds18b20_start+1)& (0+255),b
 13124  003742  2B8D               	incf	??_ds18b20_start& (0+255),f,b
 13125  003744  0C01               	retlw	1
 13126  003746                     __end_ofPL138:
 13127                           	opt stack 0
 13128                           tblptru	equ	0xFF8
 13129                           tblptrh	equ	0xFF7
 13130                           tblptrl	equ	0xFF6
 13131                           tablat	equ	0xFF5
 13132                           prodh	equ	0xFF4
 13133                           prodl	equ	0xFF3
 13134                           intcon	equ	0xFF2
 13135                           postinc0	equ	0xFEE
 13136                           wreg	equ	0xFE8
 13137                           indf1	equ	0xFE7
 13138                           postinc1	equ	0xFE6
 13139                           postdec1	equ	0xFE5
 13140                           fsr1h	equ	0xFE2
 13141                           fsr1l	equ	0xFE1
 13142                           indf2	equ	0xFDF
 13143                           postinc2	equ	0xFDE
 13144                           postdec2	equ	0xFDD
 13145                           fsr2h	equ	0xFDA
 13146                           fsr2l	equ	0xFD9
 13147                           status	equ	0xFD8
 13148                           
 13149 ;; *************** function _ds18b20_read *****************
 13150 ;; Defined at:
 13151 ;;		line 163 in file "../lib/ow.c"
 13152 ;; Parameters:    Size  Location     Type
 13153 ;;		None
 13154 ;; Auto vars:     Size  Location     Type
 13155 ;;  f               4   36[BANK1 ] unsigned char 
 13156 ;;  t               2   34[BANK1 ] int 
 13157 ;;  i               1   41[BANK1 ] unsigned char 
 13158 ;;  dowcrc          1   40[BANK1 ] unsigned char 
 13159 ;; Return value:  Size  Location     Type
 13160 ;;                  4   28[BANK1 ] unsigned char 
 13161 ;; Registers used:
 13162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
 13163 ;; Tracked objects:
 13164 ;;		On entry : 0/0
 13165 ;;		On exit  : E/0
 13166 ;;		Unchanged: 0/0
 13167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13168 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13169 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13170 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13171 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13172 ;;Total ram usage:       14 bytes
 13173 ;; Hardware stack levels used:    1
 13174 ;; Hardware stack levels required when called:   10
 13175 ;; This function calls:
 13176 ;;		___awtofl
 13177 ;;		___fladd
 13178 ;;		___flmul
 13179 ;;		_init_1wire
 13180 ;;		_read_1wire
 13181 ;;		_write_1wire
 13182 ;; This function is called by:
 13183 ;;		_tsk_ds18b20
 13184 ;; This function uses a non-reentrant model
 13185 ;;
 13186                           
 13187                           	psect	text7
 13188  00219C                     __ptext7:
 13189                           	opt stack 0
 13190  00219C                     _ds18b20_read:
 13191                           	opt stack 19
 13192                           
 13193                           ;ow.c: 165: int t;
 13194                           ;ow.c: 166: char i;
 13195                           ;ow.c: 167: double f;
 13196                           ;ow.c: 169: ((TRISC) |= (1 << (ow_bit)));
 13197                           
 13198                           ; BSR set to: 0
 13199                           ;incstack = 0
 13200  00219C  C0CE  F1D5         	movff	_ow_bit,??_ds18b20_read
 13201  0021A0  0E01               	movlw	1
 13202  0021A2  0101               	movlb	1	; () banked
 13203  0021A4  6FD6               	movwf	(??_ds18b20_read+1)& (0+255),b
 13204  0021A6  2BD5               	incf	??_ds18b20_read& (0+255),f,b
 13205  0021A8  D002               	goto	u9694
 13206  0021AA                     u9695:
 13207  0021AA  90D8               	bcf	status,0,c
 13208  0021AC  37D6               	rlcf	(??_ds18b20_read+1)& (0+255),f,b
 13209  0021AE                     u9694:
 13210  0021AE  2FD5               	decfsz	??_ds18b20_read& (0+255),f,b
 13211  0021B0  D7FC               	goto	u9695
 13212  0021B2  51D6               	movf	(??_ds18b20_read+1)& (0+255),w,b
 13213  0021B4  1294               	iorwf	3988,f,c	;volatile
 13214                           
 13215                           ; BSR set to: 1
 13216                           ;ow.c: 171: if(init_1wire()) {
 13217  0021B6  EC65  F017         	call	_init_1wire	;wreg free
 13218  0021BA  0900               	iorlw	0
 13219  0021BC  E007               	bz	l8707
 13220                           
 13221                           ; BSR set to: 0
 13222                           ;ow.c: 172: write_1wire(0xcc);
 13223  0021BE  0ECC               	movlw	204
 13224  0021C0  EC45  F015         	call	_write_1wire
 13225                           
 13226                           ;ow.c: 173: write_1wire(0xbe);
 13227  0021C4  0EBE               	movlw	190
 13228  0021C6  EC45  F015         	call	_write_1wire
 13229                           
 13230                           ;ow.c: 174: } else return -60.0;
 13231  0021CA  D003               	goto	l287
 13232  0021CC                     l8707:
 13233                           
 13234                           ; BSR set to: 0
 13235  0021CC  0E00               	movlw	0
 13236  0021CE  0101               	movlb	1	; () banked
 13237  0021D0  D07B               	goto	PL120	;call to abstracted procedure
 13238  0021D2                     l287:
 13239                           
 13240                           ; BSR set to: 0
 13241                           ;ow.c: 177: char dowcrc = 0;
 13242  0021D2  0101               	movlb	1	; () banked
 13243  0021D4  6BDD               	clrf	ds18b20_read@dowcrc& (0+255),b
 13244                           
 13245                           ;ow.c: 178: for(i = 0; i < 9; i++) {
 13246  0021D6  6BDE               	clrf	ds18b20_read@i& (0+255),b
 13247  0021D8                     l8715:
 13248                           
 13249                           ; BSR set to: 1
 13250                           ;ow.c: 179: scratch[i] = read_1wire();
 13251  0021D8  D87E               	call	PL130	;call to abstracted procedure
 13252  0021DA  ECC1  F016         	call	_read_1wire	;wreg free
 13253  0021DE  6EDF               	movwf	indf2,c
 13254                           
 13255                           ; BSR set to: 0
 13256                           ;ow.c: 181: dowcrc = dscrc_table[dowcrc ^ scratch[i]];
 13257  0021E0  0101               	movlb	1	; () banked
 13258  0021E2  D879               	call	PL130	;call to abstracted procedure
 13259  0021E4  50DF               	movf	indf2,w,c
 13260  0021E6  19DD               	xorwf	ds18b20_read@dowcrc& (0+255),w,b
 13261  0021E8  6FD5               	movwf	??_ds18b20_read& (0+255),b
 13262  0021EA  6BD6               	clrf	(??_ds18b20_read+1)& (0+255),b
 13263  0021EC  0EA7               	movlw	low _dscrc_table
 13264  0021EE  25D5               	addwf	??_ds18b20_read& (0+255),w,b
 13265  0021F0  6EF6               	movwf	tblptrl,c
 13266  0021F2  0EDA               	movlw	high _dscrc_table
 13267  0021F4  21D6               	addwfc	(??_ds18b20_read+1)& (0+255),w,b
 13268  0021F6  6EF7               	movwf	tblptrh,c
 13269  0021F8                     	if	0	;There are less than 3 active tblptr bytes
 13270  0021F8                     	endif
 13271  0021F8  0008               	tblrd		*
 13272  0021FA  CFF5 F1DD          	movff	tablat,ds18b20_read@dowcrc
 13273                           
 13274                           ; BSR set to: 1
 13275  0021FE  2BDE               	incf	ds18b20_read@i& (0+255),f,b
 13276                           
 13277                           ; BSR set to: 1
 13278  002200  0E08               	movlw	8
 13279  002202  65DE               	cpfsgt	ds18b20_read@i& (0+255),b
 13280  002204  D7E9               	goto	l8715
 13281                           
 13282                           ; BSR set to: 1
 13283                           ;ow.c: 182: }
 13284                           ;ow.c: 184: if((dowcrc != 0) || (scratch[7]==0)) return -60.0;
 13285  002206  67DD               	tstfsz	ds18b20_read@dowcrc& (0+255),b
 13286  002208  D002               	goto	l8725
 13287                           
 13288                           ; BSR set to: 1
 13289  00220A  6707               	tstfsz	(_scratch+7)& (0+255),b
 13290  00220C  D002               	goto	l8729
 13291  00220E                     l8725:
 13292                           
 13293                           ; BSR set to: 1
 13294  00220E  0E00               	movlw	0
 13295  002210  D05B               	goto	PL120	;call to abstracted procedure
 13296  002212                     l8729:
 13297                           
 13298                           ; BSR set to: 1
 13299                           ;ow.c: 194: t = (scratch[1] << 8) | scratch[0];
 13300  002212  5100               	movf	_scratch& (0+255),w,b
 13301  002214  C101  F1D5         	movff	_scratch+1,??_ds18b20_read
 13302  002218  6BD6               	clrf	(??_ds18b20_read+1)& (0+255),b
 13303  00221A  C1D5  F1D6         	movff	??_ds18b20_read,??_ds18b20_read+1
 13304  00221E  6BD5               	clrf	??_ds18b20_read& (0+255),b
 13305  002220  11D5               	iorwf	??_ds18b20_read& (0+255),w,b
 13306  002222  6FD7               	movwf	ds18b20_read@t& (0+255),b
 13307  002224  51D6               	movf	(??_ds18b20_read+1)& (0+255),w,b
 13308  002226  6FD8               	movwf	(ds18b20_read@t+1)& (0+255),b
 13309                           
 13310                           ; BSR set to: 1
 13311                           ;ow.c: 196: f = (double)(t & 0x000f) * 0.0625;
 13312  002228  0E0F               	movlw	15
 13313  00222A  15D7               	andwf	ds18b20_read@t& (0+255),w,b
 13314  00222C  0100               	movlb	0	; () banked
 13315  00222E  6F91               	movwf	___awtofl@c& (0+255),b
 13316  002230  6B92               	clrf	(___awtofl@c+1)& (0+255),b
 13317  002232  ECC9  F01B         	call	___awtofl	;wreg free
 13318  002236  C091  F096         	movff	?___awtofl,___flmul@f1
 13319  00223A  C092  F097         	movff	?___awtofl+1,___flmul@f1+1
 13320  00223E  C093  F098         	movff	?___awtofl+2,___flmul@f1+2
 13321  002242  C094  F099         	movff	?___awtofl+3,___flmul@f1+3
 13322  002246  6B9A               	clrf	___flmul@f2& (0+255),b
 13323  002248  6B9B               	clrf	(___flmul@f2+1)& (0+255),b
 13324  00224A  0E80               	movlw	128
 13325  00224C  6F9C               	movwf	(___flmul@f2+2)& (0+255),b
 13326  00224E  0E3D               	movlw	61
 13327  002250  6F9D               	movwf	(___flmul@f2+3)& (0+255),b
 13328  002252  ECCF  F013         	call	___flmul	;wreg free
 13329  002256  C096  F1D9         	movff	?___flmul,ds18b20_read@f
 13330  00225A  C097  F1DA         	movff	?___flmul+1,ds18b20_read@f+1
 13331  00225E  C098  F1DB         	movff	?___flmul+2,ds18b20_read@f+2
 13332  002262  C099  F1DC         	movff	?___flmul+3,ds18b20_read@f+3
 13333                           
 13334                           ; BSR set to: 0
 13335                           ;ow.c: 198: f = f + (double)(t >>= 4);
 13336  002266  C1D9  F1C2         	movff	ds18b20_read@f,___fladd@f1
 13337  00226A  C1DA  F1C3         	movff	ds18b20_read@f+1,___fladd@f1+1
 13338  00226E  C1DB  F1C4         	movff	ds18b20_read@f+2,___fladd@f1+2
 13339  002272  C1DC  F1C5         	movff	ds18b20_read@f+3,___fladd@f1+3
 13340  002276  0101               	movlb	1	; () banked
 13341  002278  0E04               	movlw	4
 13342  00227A  6FD5               	movwf	??_ds18b20_read& (0+255),b
 13343  00227C                     u9745:
 13344  00227C  35D8               	rlcf	(ds18b20_read@t+1)& (0+255),w,b
 13345  00227E  33D8               	rrcf	(ds18b20_read@t+1)& (0+255),f,b
 13346  002280  33D7               	rrcf	ds18b20_read@t& (0+255),f,b
 13347  002282  2FD5               	decfsz	??_ds18b20_read& (0+255),f,b
 13348  002284  D7FB               	goto	u9745
 13349  002286  C1D7  F091         	movff	ds18b20_read@t,___awtofl@c
 13350  00228A  C1D8  F092         	movff	ds18b20_read@t+1,___awtofl@c+1
 13351  00228E  ECC9  F01B         	call	___awtofl	;wreg free
 13352  002292  C091  F1C6         	movff	?___awtofl,___fladd@f2
 13353  002296  C092  F1C7         	movff	?___awtofl+1,___fladd@f2+1
 13354  00229A  C093  F1C8         	movff	?___awtofl+2,___fladd@f2+2
 13355  00229E  C094  F1C9         	movff	?___awtofl+3,___fladd@f2+3
 13356  0022A2  EC66  F00C         	call	___fladd	;wreg free
 13357  0022A6  C1C2  F1D9         	movff	?___fladd,ds18b20_read@f
 13358  0022AA  C1C3  F1DA         	movff	?___fladd+1,ds18b20_read@f+1
 13359  0022AE  C1C4  F1DB         	movff	?___fladd+2,ds18b20_read@f+2
 13360  0022B2  C1C5  F1DC         	movff	?___fladd+3,ds18b20_read@f+3
 13361                           
 13362                           ;ow.c: 200: return f;
 13363  0022B6  C1D9  F1D1         	movff	ds18b20_read@f,?_ds18b20_read
 13364  0022BA  C1DA  F1D2         	movff	ds18b20_read@f+1,?_ds18b20_read+1
 13365  0022BE  C1DB  F1D3         	movff	ds18b20_read@f+2,?_ds18b20_read+2
 13366  0022C2  C1DC  F1D4         	movff	ds18b20_read@f+3,?_ds18b20_read+3
 13367  0022C6  0012               	return	
 13368  0022C8                     __end_of_ds18b20_read:
 13369                           	opt stack 0
 13370  0022C8                     PL120:
 13371                           	opt stack 19
 13372  0022C8  6FD1               	movwf	?_ds18b20_read& (0+255),b
 13373  0022CA  6FD2               	movwf	(?_ds18b20_read+1)& (0+255),b
 13374  0022CC  0E70               	movlw	112
 13375  0022CE  6FD3               	movwf	(?_ds18b20_read+2)& (0+255),b
 13376  0022D0  0EC2               	movlw	194
 13377  0022D2  6FD4               	movwf	(?_ds18b20_read+3)& (0+255),b
 13378  0022D4  0CC2               	retlw	194
 13379  0022D6                     __end_ofPL120:
 13380                           	opt stack 0
 13381  0022D6                     PL130:
 13382                           	opt stack 19
 13383  0022D6  0E00               	movlw	low _scratch
 13384  0022D8  25DE               	addwf	ds18b20_read@i& (0+255),w,b
 13385  0022DA  6ED9               	movwf	fsr2l,c
 13386  0022DC  6ADA               	clrf	fsr2h,c
 13387  0022DE  0E01               	movlw	high _scratch
 13388  0022E0  22DA               	addwfc	fsr2h,f,c
 13389  0022E2  0012               	return	
 13390  0022E4                     __end_ofPL130:
 13391                           	opt stack 0
 13392                           tblptru	equ	0xFF8
 13393                           tblptrh	equ	0xFF7
 13394                           tblptrl	equ	0xFF6
 13395                           tablat	equ	0xFF5
 13396                           prodh	equ	0xFF4
 13397                           prodl	equ	0xFF3
 13398                           intcon	equ	0xFF2
 13399                           postinc0	equ	0xFEE
 13400                           wreg	equ	0xFE8
 13401                           indf1	equ	0xFE7
 13402                           postinc1	equ	0xFE6
 13403                           postdec1	equ	0xFE5
 13404                           fsr1h	equ	0xFE2
 13405                           fsr1l	equ	0xFE1
 13406                           indf2	equ	0xFDF
 13407                           postinc2	equ	0xFDE
 13408                           postdec2	equ	0xFDD
 13409                           fsr2h	equ	0xFDA
 13410                           fsr2l	equ	0xFD9
 13411                           status	equ	0xFD8
 13412                           
 13413 ;; *************** function _write_1wire *****************
 13414 ;; Defined at:
 13415 ;;		line 132 in file "../lib/ow.c"
 13416 ;; Parameters:    Size  Location     Type
 13417 ;;  data            1    wreg     unsigned char 
 13418 ;; Auto vars:     Size  Location     Type
 13419 ;;  data            1   43[BANK0 ] unsigned char 
 13420 ;;  i               1   44[BANK0 ] unsigned char 
 13421 ;; Return value:  Size  Location     Type
 13422 ;;		None               void
 13423 ;; Registers used:
 13424 ;;		wreg, status,2, status,0, cstack
 13425 ;; Tracked objects:
 13426 ;;		On entry : F/0
 13427 ;;		On exit  : F/0
 13428 ;;		Unchanged: 0/0
 13429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13431 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13432 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13433 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13434 ;;Total ram usage:        4 bytes
 13435 ;; Hardware stack levels used:    1
 13436 ;; Hardware stack levels required when called:    9
 13437 ;; This function calls:
 13438 ;;		_ow_delay
 13439 ;; This function is called by:
 13440 ;;		_ds18b20_read
 13441 ;;		_ds18b20_start
 13442 ;; This function uses a non-reentrant model
 13443 ;;
 13444                           
 13445                           	psect	text8
 13446  002A8A                     __ptext8:
 13447                           	opt stack 0
 13448  002A8A                     _write_1wire:
 13449                           	opt stack 19
 13450                           
 13451                           ;incstack = 0
 13452                           ;write_1wire@data stored from wreg
 13453  002A8A  6F8B               	movwf	write_1wire@data& (0+255),b
 13454                           
 13455                           ; BSR set to: 0
 13456                           ;ow.c: 133: char i;
 13457                           ;ow.c: 135: __gie = (unsigned char)GIE;
 13458  002A8C  0E00               	movlw	0
 13459  002A8E  BEF2               	btfsc	intcon,7,c	;volatile
 13460  002A90  0E01               	movlw	1
 13461  002A92  6FCC               	movwf	___gie& (0+255),b
 13462                           
 13463                           ; BSR set to: 0
 13464                           ;ow.c: 136: GIE = 0;
 13465  002A94  9EF2               	bcf	intcon,7,c	;volatile
 13466                           
 13467                           ; BSR set to: 0
 13468                           ;ow.c: 138: ((LATC) |= (1 << (ow_bit)));
 13469  002A96  D854               	call	PL18	;call to abstracted procedure
 13470  002A98  128B               	iorwf	3979,f,c	;volatile
 13471                           
 13472                           ; BSR set to: 0
 13473                           ;ow.c: 140: for(i = 0; i < 8; i++) {
 13474  002A9A  6B8C               	clrf	write_1wire@i& (0+255),b
 13475  002A9C                     l8097:
 13476                           
 13477                           ; BSR set to: 0
 13478                           ;ow.c: 142: ((TRISC) &= ~(1 << (ow_bit)));
 13479  002A9C  C0CE  F089         	movff	_ow_bit,??_write_1wire
 13480  002AA0  0E01               	movlw	1
 13481  002AA2  6F8A               	movwf	(??_write_1wire+1)& (0+255),b
 13482  002AA4  2B89               	incf	??_write_1wire& (0+255),f,b
 13483  002AA6  D002               	goto	u8994
 13484  002AA8                     u8995:
 13485  002AA8  90D8               	bcf	status,0,c
 13486  002AAA  378A               	rlcf	(??_write_1wire+1)& (0+255),f,b
 13487  002AAC                     u8994:
 13488  002AAC  2F89               	decfsz	??_write_1wire& (0+255),f,b
 13489  002AAE  D7FC               	goto	u8995
 13490  002AB0  1D8A               	comf	(??_write_1wire+1)& (0+255),w,b
 13491  002AB2  1694               	andwf	3988,f,c	;volatile
 13492                           
 13493                           ;ow.c: 143: ((LATC) &= ~(1 << (ow_bit)));
 13494  002AB4  C0CE  F089         	movff	_ow_bit,??_write_1wire
 13495  002AB8  0E01               	movlw	1
 13496  002ABA  6F8A               	movwf	(??_write_1wire+1)& (0+255),b
 13497  002ABC  2B89               	incf	??_write_1wire& (0+255),f,b
 13498  002ABE  D002               	goto	u9004
 13499  002AC0                     u9005:
 13500  002AC0  90D8               	bcf	status,0,c
 13501  002AC2  378A               	rlcf	(??_write_1wire+1)& (0+255),f,b
 13502  002AC4                     u9004:
 13503  002AC4  2F89               	decfsz	??_write_1wire& (0+255),f,b
 13504  002AC6  D7FC               	goto	u9005
 13505  002AC8  1D8A               	comf	(??_write_1wire+1)& (0+255),w,b
 13506  002ACA  168B               	andwf	3979,f,c	;volatile
 13507                           
 13508                           ; BSR set to: 0
 13509                           ;ow.c: 145: ow_delay(5);
 13510  002ACC  6B88               	clrf	(ow_delay@del+1)& (0+255),b
 13511  002ACE  0E05               	movlw	5
 13512  002AD0  6F87               	movwf	ow_delay@del& (0+255),b
 13513  002AD2  ECDE  F01D         	call	_ow_delay	;wreg free
 13514                           
 13515                           ; BSR set to: 0
 13516                           ;ow.c: 147: if(((data) & (1 <<(i)))) ((LATC) |= (1 << (ow_bit))); else ((LATC) &= ~(1 <<
      +                           (ow_bit)));
 13517  002AD6  C08C  F089         	movff	write_1wire@i,??_write_1wire
 13518  002ADA  0E01               	movlw	1
 13519  002ADC  6F8A               	movwf	(??_write_1wire+1)& (0+255),b
 13520  002ADE  2B89               	incf	??_write_1wire& (0+255),f,b
 13521  002AE0  D002               	goto	u9014
 13522  002AE2                     u9015:
 13523  002AE2  90D8               	bcf	status,0,c
 13524  002AE4  378A               	rlcf	(??_write_1wire+1)& (0+255),f,b
 13525  002AE6                     u9014:
 13526  002AE6  2F89               	decfsz	??_write_1wire& (0+255),f,b
 13527  002AE8  D7FC               	goto	u9015
 13528  002AEA  518A               	movf	(??_write_1wire+1)& (0+255),w,b
 13529  002AEC  158B               	andwf	write_1wire@data& (0+255),w,b
 13530  002AEE  E003               	bz	l8105
 13531                           
 13532                           ; BSR set to: 0
 13533  002AF0  D827               	call	PL18	;call to abstracted procedure
 13534  002AF2  128B               	iorwf	3979,f,c	;volatile
 13535  002AF4  D00C               	goto	l8107
 13536  002AF6                     l8105:
 13537                           
 13538                           ; BSR set to: 0
 13539  002AF6  C0CE  F089         	movff	_ow_bit,??_write_1wire
 13540  002AFA  0E01               	movlw	1
 13541  002AFC  6F8A               	movwf	(??_write_1wire+1)& (0+255),b
 13542  002AFE  2B89               	incf	??_write_1wire& (0+255),f,b
 13543  002B00  D002               	goto	u9044
 13544  002B02                     u9045:
 13545  002B02  90D8               	bcf	status,0,c
 13546  002B04  378A               	rlcf	(??_write_1wire+1)& (0+255),f,b
 13547  002B06                     u9044:
 13548  002B06  2F89               	decfsz	??_write_1wire& (0+255),f,b
 13549  002B08  D7FC               	goto	u9045
 13550  002B0A  1D8A               	comf	(??_write_1wire+1)& (0+255),w,b
 13551  002B0C  168B               	andwf	3979,f,c	;volatile
 13552  002B0E                     l8107:
 13553                           
 13554                           ; BSR set to: 0
 13555                           ;ow.c: 149: ow_delay(78);
 13556  002B0E  6B88               	clrf	(ow_delay@del+1)& (0+255),b
 13557  002B10  0E4E               	movlw	78
 13558  002B12  6F87               	movwf	ow_delay@del& (0+255),b
 13559  002B14  ECDE  F01D         	call	_ow_delay	;wreg free
 13560                           
 13561                           ; BSR set to: 0
 13562                           ;ow.c: 151: ((LATC) |= (1 << (ow_bit)));
 13563  002B18  D813               	call	PL18	;call to abstracted procedure
 13564  002B1A  128B               	iorwf	3979,f,c	;volatile
 13565                           
 13566                           ;ow.c: 153: ow_delay(60);
 13567  002B1C  6B88               	clrf	(ow_delay@del+1)& (0+255),b
 13568  002B1E  0E3C               	movlw	60
 13569  002B20  6F87               	movwf	ow_delay@del& (0+255),b
 13570  002B22  ECDE  F01D         	call	_ow_delay	;wreg free
 13571                           
 13572                           ; BSR set to: 0
 13573  002B26  2B8C               	incf	write_1wire@i& (0+255),f,b
 13574                           
 13575                           ; BSR set to: 0
 13576  002B28  0E07               	movlw	7
 13577  002B2A  658C               	cpfsgt	write_1wire@i& (0+255),b
 13578  002B2C  D7B7               	goto	l8097
 13579                           
 13580                           ; BSR set to: 0
 13581                           ;ow.c: 154: }
 13582                           ;ow.c: 156: GIE = (bit)__gie;
 13583  002B2E  A1CC               	btfss	___gie& (0+255),0,b
 13584  002B30  D001               	bra	u9075
 13585  002B32  8EF2               	bsf	intcon,7,c	;volatile
 13586  002B34                     u9075:
 13587  002B34  B1CC               	btfsc	___gie& (0+255),0,b
 13588  002B36  D001               	bra	u9076
 13589  002B38  9EF2               	bcf	intcon,7,c	;volatile
 13590  002B3A                     u9076:
 13591                           
 13592                           ; BSR set to: 0
 13593                           ;ow.c: 158: ((TRISC) |= (1 << (ow_bit)));
 13594  002B3A  D802               	call	PL18	;call to abstracted procedure
 13595  002B3C  1294               	iorwf	3988,f,c	;volatile
 13596                           
 13597                           ; BSR set to: 0
 13598  002B3E  0012               	return	
 13599  002B40                     __end_of_write_1wire:
 13600                           	opt stack 0
 13601  002B40                     PL18:
 13602                           	opt stack 19
 13603  002B40  C0CE  F089         	movff	_ow_bit,??_write_1wire
 13604  002B44  0E01               	movlw	1
 13605  002B46  6F8A               	movwf	(??_write_1wire+1)& (0+255),b
 13606  002B48  2B89               	incf	??_write_1wire& (0+255),f,b
 13607  002B4A  D002               	goto	u8984
 13608  002B4C                     u8985:
 13609  002B4C  90D8               	bcf	status,0,c
 13610  002B4E  378A               	rlcf	(??_write_1wire+1)& (0+255),f,b
 13611  002B50                     u8984:
 13612  002B50  2F89               	decfsz	??_write_1wire& (0+255),f,b
 13613  002B52  D7FC               	goto	u8985
 13614  002B54  518A               	movf	(??_write_1wire+1)& (0+255),w,b
 13615  002B56  0012               	return	
 13616  002B58                     __end_ofPL18:
 13617                           	opt stack 0
 13618                           tblptru	equ	0xFF8
 13619                           tblptrh	equ	0xFF7
 13620                           tblptrl	equ	0xFF6
 13621                           tablat	equ	0xFF5
 13622                           prodh	equ	0xFF4
 13623                           prodl	equ	0xFF3
 13624                           intcon	equ	0xFF2
 13625                           postinc0	equ	0xFEE
 13626                           wreg	equ	0xFE8
 13627                           indf1	equ	0xFE7
 13628                           postinc1	equ	0xFE6
 13629                           postdec1	equ	0xFE5
 13630                           fsr1h	equ	0xFE2
 13631                           fsr1l	equ	0xFE1
 13632                           indf2	equ	0xFDF
 13633                           postinc2	equ	0xFDE
 13634                           postdec2	equ	0xFDD
 13635                           fsr2h	equ	0xFDA
 13636                           fsr2l	equ	0xFD9
 13637                           status	equ	0xFD8
 13638                           
 13639 ;; *************** function _read_1wire *****************
 13640 ;; Defined at:
 13641 ;;		line 97 in file "../lib/ow.c"
 13642 ;; Parameters:    Size  Location     Type
 13643 ;;		None
 13644 ;; Auto vars:     Size  Location     Type
 13645 ;;  i               1   44[BANK0 ] unsigned char 
 13646 ;;  data            1   43[BANK0 ] unsigned char 
 13647 ;; Return value:  Size  Location     Type
 13648 ;;                  1    wreg      unsigned char 
 13649 ;; Registers used:
 13650 ;;		wreg, status,2, status,0, cstack
 13651 ;; Tracked objects:
 13652 ;;		On entry : F/1
 13653 ;;		On exit  : F/0
 13654 ;;		Unchanged: 0/0
 13655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13657 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13658 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13659 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13660 ;;Total ram usage:        4 bytes
 13661 ;; Hardware stack levels used:    1
 13662 ;; Hardware stack levels required when called:    9
 13663 ;; This function calls:
 13664 ;;		_ow_delay
 13665 ;; This function is called by:
 13666 ;;		_ds18b20_read
 13667 ;; This function uses a non-reentrant model
 13668 ;;
 13669                           
 13670                           	psect	text9
 13671  002D82                     __ptext9:
 13672                           	opt stack 0
 13673  002D82                     _read_1wire:
 13674                           	opt stack 19
 13675                           
 13676                           ; BSR set to: 1
 13677                           ;ow.c: 99: char i, data = 0;
 13678                           
 13679                           ; BSR set to: 0
 13680                           ;incstack = 0
 13681  002D82  0100               	movlb	0	; () banked
 13682  002D84  6B8B               	clrf	read_1wire@data& (0+255),b
 13683                           
 13684                           ; BSR set to: 0
 13685                           ;ow.c: 101: __gie = (unsigned char)GIE;
 13686  002D86  0E00               	movlw	0
 13687  002D88  BEF2               	btfsc	intcon,7,c	;volatile
 13688  002D8A  0E01               	movlw	1
 13689  002D8C  6FCC               	movwf	___gie& (0+255),b
 13690                           
 13691                           ; BSR set to: 0
 13692                           ;ow.c: 102: GIE = 0;
 13693  002D8E  9EF2               	bcf	intcon,7,c	;volatile
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;ow.c: 104: ((LATC) |= (1 << (ow_bit)));
 13697  002D90  D83F               	call	PL52	;call to abstracted procedure
 13698  002D92  128B               	iorwf	3979,f,c	;volatile
 13699                           
 13700                           ; BSR set to: 0
 13701                           ;ow.c: 106: for(i = 0; i < 8; i++) {
 13702  002D94  6B8C               	clrf	read_1wire@i& (0+255),b
 13703  002D96                     l8061:
 13704                           
 13705                           ; BSR set to: 0
 13706                           ;ow.c: 108: ((TRISC) &= ~(1 << (ow_bit)));
 13707  002D96  C0CE  F089         	movff	_ow_bit,??_read_1wire
 13708  002D9A  0E01               	movlw	1
 13709  002D9C  6F8A               	movwf	(??_read_1wire+1)& (0+255),b
 13710  002D9E  2B89               	incf	??_read_1wire& (0+255),f,b
 13711  002DA0  D002               	goto	u8914
 13712  002DA2                     u8915:
 13713  002DA2  90D8               	bcf	status,0,c
 13714  002DA4  378A               	rlcf	(??_read_1wire+1)& (0+255),f,b
 13715  002DA6                     u8914:
 13716  002DA6  2F89               	decfsz	??_read_1wire& (0+255),f,b
 13717  002DA8  D7FC               	goto	u8915
 13718  002DAA  1D8A               	comf	(??_read_1wire+1)& (0+255),w,b
 13719  002DAC  1694               	andwf	3988,f,c	;volatile
 13720                           
 13721                           ;ow.c: 109: ((LATC) &= ~(1 << (ow_bit)));
 13722  002DAE  C0CE  F089         	movff	_ow_bit,??_read_1wire
 13723  002DB2  0E01               	movlw	1
 13724  002DB4  6F8A               	movwf	(??_read_1wire+1)& (0+255),b
 13725  002DB6  2B89               	incf	??_read_1wire& (0+255),f,b
 13726  002DB8  D002               	goto	u8924
 13727  002DBA                     u8925:
 13728  002DBA  90D8               	bcf	status,0,c
 13729  002DBC  378A               	rlcf	(??_read_1wire+1)& (0+255),f,b
 13730  002DBE                     u8924:
 13731  002DBE  2F89               	decfsz	??_read_1wire& (0+255),f,b
 13732  002DC0  D7FC               	goto	u8925
 13733  002DC2  1D8A               	comf	(??_read_1wire+1)& (0+255),w,b
 13734  002DC4  168B               	andwf	3979,f,c	;volatile
 13735                           
 13736                           ; BSR set to: 0
 13737                           ;ow.c: 111: ow_delay(5);
 13738  002DC6  6B88               	clrf	(ow_delay@del+1)& (0+255),b
 13739  002DC8  0E05               	movlw	5
 13740  002DCA  6F87               	movwf	ow_delay@del& (0+255),b
 13741  002DCC  ECDE  F01D         	call	_ow_delay	;wreg free
 13742                           
 13743                           ; BSR set to: 0
 13744                           ;ow.c: 113: ((TRISC) |= (1 << (ow_bit)));
 13745  002DD0  D81F               	call	PL52	;call to abstracted procedure
 13746  002DD2  1294               	iorwf	3988,f,c	;volatile
 13747                           
 13748                           ;ow.c: 115: ow_delay(16);
 13749  002DD4  6B88               	clrf	(ow_delay@del+1)& (0+255),b
 13750  002DD6  0E10               	movlw	16
 13751  002DD8  6F87               	movwf	ow_delay@del& (0+255),b
 13752  002DDA  ECDE  F01D         	call	_ow_delay	;wreg free
 13753                           
 13754                           ; BSR set to: 0
 13755                           ;ow.c: 117: data >>= 1;
 13756  002DDE  90D8               	bcf	status,0,c
 13757  002DE0  338B               	rrcf	read_1wire@data& (0+255),f,b
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;ow.c: 119: if(((PORTC) & (1 <<(ow_bit))))data |= 0x80;
 13761  002DE2  D816               	call	PL52	;call to abstracted procedure
 13762  002DE4  1482               	andwf	3970,w,c	;volatile
 13763  002DE6  E002               	bz	l8073
 13764                           
 13765                           ; BSR set to: 0
 13766  002DE8  8F8B               	bsf	read_1wire@data& (0+255),7,b
 13767  002DEA  D001               	goto	l8075
 13768  002DEC                     l8073:
 13769                           
 13770                           ; BSR set to: 0
 13771                           ;ow.c: 120: else data &= 0x7f;
 13772  002DEC  9F8B               	bcf	read_1wire@data& (0+255),7,b
 13773  002DEE                     l8075:
 13774                           
 13775                           ; BSR set to: 0
 13776                           ;ow.c: 122: ow_delay(78);
 13777  002DEE  6B88               	clrf	(ow_delay@del+1)& (0+255),b
 13778  002DF0  0E4E               	movlw	78
 13779  002DF2  6F87               	movwf	ow_delay@del& (0+255),b
 13780  002DF4  ECDE  F01D         	call	_ow_delay	;wreg free
 13781                           
 13782                           ; BSR set to: 0
 13783  002DF8  2B8C               	incf	read_1wire@i& (0+255),f,b
 13784                           
 13785                           ; BSR set to: 0
 13786  002DFA  0E07               	movlw	7
 13787  002DFC  658C               	cpfsgt	read_1wire@i& (0+255),b
 13788  002DFE  D7CB               	goto	l8061
 13789                           
 13790                           ; BSR set to: 0
 13791                           ;ow.c: 124: }
 13792                           ;ow.c: 126: GIE = (bit)__gie;
 13793  002E00  A1CC               	btfss	___gie& (0+255),0,b
 13794  002E02  D001               	bra	u8975
 13795  002E04  8EF2               	bsf	intcon,7,c	;volatile
 13796  002E06                     u8975:
 13797  002E06  B1CC               	btfsc	___gie& (0+255),0,b
 13798  002E08  D001               	bra	u8976
 13799  002E0A  9EF2               	bcf	intcon,7,c	;volatile
 13800  002E0C                     u8976:
 13801                           
 13802                           ; BSR set to: 0
 13803                           ;ow.c: 128: return(data);
 13804  002E0C  518B               	movf	read_1wire@data& (0+255),w,b
 13805                           
 13806                           ; BSR set to: 0
 13807  002E0E  0012               	return	
 13808  002E10                     __end_of_read_1wire:
 13809                           	opt stack 0
 13810  002E10                     PL52:
 13811                           	opt stack 19
 13812  002E10  C0CE  F089         	movff	_ow_bit,??_read_1wire
 13813  002E14  0E01               	movlw	1
 13814  002E16  6F8A               	movwf	(??_read_1wire+1)& (0+255),b
 13815  002E18  2B89               	incf	??_read_1wire& (0+255),f,b
 13816  002E1A  D002               	goto	u8904
 13817  002E1C                     u8905:
 13818  002E1C  90D8               	bcf	status,0,c
 13819  002E1E  378A               	rlcf	(??_read_1wire+1)& (0+255),f,b
 13820  002E20                     u8904:
 13821  002E20  2F89               	decfsz	??_read_1wire& (0+255),f,b
 13822  002E22  D7FC               	goto	u8905
 13823  002E24  518A               	movf	(??_read_1wire+1)& (0+255),w,b
 13824  002E26  0012               	return	
 13825  002E28                     __end_ofPL52:
 13826                           	opt stack 0
 13827                           tblptru	equ	0xFF8
 13828                           tblptrh	equ	0xFF7
 13829                           tblptrl	equ	0xFF6
 13830                           tablat	equ	0xFF5
 13831                           prodh	equ	0xFF4
 13832                           prodl	equ	0xFF3
 13833                           intcon	equ	0xFF2
 13834                           postinc0	equ	0xFEE
 13835                           wreg	equ	0xFE8
 13836                           indf1	equ	0xFE7
 13837                           postinc1	equ	0xFE6
 13838                           postdec1	equ	0xFE5
 13839                           fsr1h	equ	0xFE2
 13840                           fsr1l	equ	0xFE1
 13841                           indf2	equ	0xFDF
 13842                           postinc2	equ	0xFDE
 13843                           postdec2	equ	0xFDD
 13844                           fsr2h	equ	0xFDA
 13845                           fsr2l	equ	0xFD9
 13846                           status	equ	0xFD8
 13847                           
 13848 ;; *************** function _init_1wire *****************
 13849 ;; Defined at:
 13850 ;;		line 64 in file "../lib/ow.c"
 13851 ;; Parameters:    Size  Location     Type
 13852 ;;		None
 13853 ;; Auto vars:     Size  Location     Type
 13854 ;;  st              1   43[BANK0 ] unsigned char 
 13855 ;; Return value:  Size  Location     Type
 13856 ;;                  1    wreg      unsigned char 
 13857 ;; Registers used:
 13858 ;;		wreg, status,2, status,0, cstack
 13859 ;; Tracked objects:
 13860 ;;		On entry : E/0
 13861 ;;		On exit  : F/0
 13862 ;;		Unchanged: 0/0
 13863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13865 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13866 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13867 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13868 ;;Total ram usage:        3 bytes
 13869 ;; Hardware stack levels used:    1
 13870 ;; Hardware stack levels required when called:    9
 13871 ;; This function calls:
 13872 ;;		_ow_delay
 13873 ;; This function is called by:
 13874 ;;		_ds18b20_read
 13875 ;;		_ds18b20_start
 13876 ;; This function uses a non-reentrant model
 13877 ;;
 13878                           
 13879                           	psect	text10
 13880  002ECA                     __ptext10:
 13881                           	opt stack 0
 13882  002ECA                     _init_1wire:
 13883                           	opt stack 0
 13884                           
 13885                           ;ow.c: 65: unsigned char st;
 13886                           ;ow.c: 68: ((TRISC) &= ~(1 << (ow_bit)));
 13887                           
 13888                           ; BSR set to: 0
 13889                           ;incstack = 0
 13890  002ECA  D832               	call	PL74	;call to abstracted procedure
 13891  002ECC  1694               	andwf	3988,f,c	;volatile
 13892                           
 13893                           ; BSR set to: 0
 13894                           ;ow.c: 69: __nop();
 13895  002ECE  F000               	nop	
 13896                           
 13897                           ;ow.c: 71: ((LATC) &= ~(1 << (ow_bit)));
 13898  002ED0  D82F               	call	PL74	;call to abstracted procedure
 13899  002ED2  168B               	andwf	3979,f,c	;volatile
 13900                           
 13901                           ; BSR set to: 0
 13902                           ;ow.c: 73: ow_delay(295);
 13903  002ED4  0E01               	movlw	1
 13904  002ED6  6F88               	movwf	(ow_delay@del+1)& (0+255),b
 13905  002ED8  0E27               	movlw	39
 13906  002EDA  6F87               	movwf	ow_delay@del& (0+255),b
 13907  002EDC  ECDE  F01D         	call	_ow_delay	;wreg free
 13908                           
 13909                           ; BSR set to: 0
 13910                           ;ow.c: 74: ow_delay(295);
 13911  002EE0  0E01               	movlw	1
 13912  002EE2  6F88               	movwf	(ow_delay@del+1)& (0+255),b
 13913  002EE4  0E27               	movlw	39
 13914  002EE6  6F87               	movwf	ow_delay@del& (0+255),b
 13915  002EE8  ECDE  F01D         	call	_ow_delay	;wreg free
 13916                           
 13917                           ; BSR set to: 0
 13918                           ;ow.c: 76: __gie = (unsigned char)GIE;
 13919  002EEC  0E00               	movlw	0
 13920  002EEE  BEF2               	btfsc	intcon,7,c	;volatile
 13921  002EF0  0E01               	movlw	1
 13922  002EF2  6FCC               	movwf	___gie& (0+255),b
 13923                           
 13924                           ; BSR set to: 0
 13925                           ;ow.c: 77: GIE = 0;
 13926  002EF4  9EF2               	bcf	intcon,7,c	;volatile
 13927                           
 13928                           ; BSR set to: 0
 13929                           ;ow.c: 79: ((TRISC) |= (1 << (ow_bit)));
 13930  002EF6  D829               	call	PL80	;call to abstracted procedure
 13931  002EF8  1294               	iorwf	3988,f,c	;volatile
 13932                           
 13933                           ; BSR set to: 0
 13934                           ;ow.c: 81: ow_delay(78);
 13935  002EFA  6B88               	clrf	(ow_delay@del+1)& (0+255),b
 13936  002EFC  0E4E               	movlw	78
 13937  002EFE  6F87               	movwf	ow_delay@del& (0+255),b
 13938  002F00  ECDE  F01D         	call	_ow_delay	;wreg free
 13939                           
 13940                           ; BSR set to: 0
 13941                           ;ow.c: 83: st = !((PORTC) & (1 <<(ow_bit)));
 13942  002F04  D822               	call	PL80	;call to abstracted procedure
 13943  002F06  1482               	andwf	3970,w,c	;volatile
 13944  002F08  0E01               	movlw	1
 13945  002F0A  A4D8               	btfss	status,2,c
 13946  002F0C  0E00               	movlw	0
 13947  002F0E  6F8B               	movwf	init_1wire@st& (0+255),b
 13948                           
 13949                           ; BSR set to: 0
 13950                           ;ow.c: 85: GIE = (bit)__gie;
 13951  002F10  A1CC               	btfss	___gie& (0+255),0,b
 13952  002F12  D001               	bra	u8885
 13953  002F14  8EF2               	bsf	intcon,7,c	;volatile
 13954  002F16                     u8885:
 13955  002F16  B1CC               	btfsc	___gie& (0+255),0,b
 13956  002F18  D001               	bra	u8886
 13957  002F1A  9EF2               	bcf	intcon,7,c	;volatile
 13958  002F1C                     u8886:
 13959                           
 13960                           ; BSR set to: 0
 13961                           ;ow.c: 87: ow_delay(295);
 13962  002F1C  0E01               	movlw	1
 13963  002F1E  6F88               	movwf	(ow_delay@del+1)& (0+255),b
 13964  002F20  0E27               	movlw	39
 13965  002F22  6F87               	movwf	ow_delay@del& (0+255),b
 13966  002F24  ECDE  F01D         	call	_ow_delay	;wreg free
 13967                           
 13968                           ; BSR set to: 0
 13969                           ;ow.c: 89: if(st)
 13970  002F28  518B               	movf	init_1wire@st& (0+255),w,b
 13971  002F2A  E001               	bz	l8043
 13972                           
 13973                           ; BSR set to: 0
 13974                           ;ow.c: 90: return(1);
 13975  002F2C  0C01               	retlw	1
 13976  002F2E                     l8043:
 13977                           
 13978                           ; BSR set to: 0
 13979                           
 13980                           ; BSR set to: 0
 13981                           ;ow.c: 91: else
 13982                           ;ow.c: 92: return(0);
 13983  002F2E  0C00               	retlw	0
 13984  002F30                     __end_of_init_1wire:
 13985                           	opt stack 0
 13986  002F30                     PL74:
 13987                           	opt stack 19
 13988  002F30  C0CE  F089         	movff	_ow_bit,??_init_1wire
 13989  002F34  0E01               	movlw	1
 13990  002F36  0100               	movlb	0	; () banked
 13991  002F38  6F8A               	movwf	(??_init_1wire+1)& (0+255),b
 13992  002F3A  2B89               	incf	??_init_1wire& (0+255),f,b
 13993  002F3C  D002               	goto	u8834
 13994  002F3E                     u8835:
 13995  002F3E  90D8               	bcf	status,0,c
 13996  002F40  378A               	rlcf	(??_init_1wire+1)& (0+255),f,b
 13997  002F42                     u8834:
 13998  002F42  2F89               	decfsz	??_init_1wire& (0+255),f,b
 13999  002F44  D7FC               	goto	u8835
 14000  002F46  1D8A               	comf	(??_init_1wire+1)& (0+255),w,b
 14001  002F48  0012               	return	
 14002  002F4A                     __end_ofPL74:
 14003                           	opt stack 0
 14004  002F4A                     PL80:
 14005                           	opt stack 19
 14006  002F4A  C0CE  F089         	movff	_ow_bit,??_init_1wire
 14007  002F4E  0E01               	movlw	1
 14008  002F50  6F8A               	movwf	(??_init_1wire+1)& (0+255),b
 14009  002F52  2B89               	incf	??_init_1wire& (0+255),f,b
 14010  002F54  D002               	goto	u8854
 14011  002F56                     u8855:
 14012  002F56  90D8               	bcf	status,0,c
 14013  002F58  378A               	rlcf	(??_init_1wire+1)& (0+255),f,b
 14014  002F5A                     u8854:
 14015  002F5A  2F89               	decfsz	??_init_1wire& (0+255),f,b
 14016  002F5C  D7FC               	goto	u8855
 14017  002F5E  518A               	movf	(??_init_1wire+1)& (0+255),w,b
 14018  002F60  0012               	return	
 14019  002F62                     __end_ofPL80:
 14020                           	opt stack 0
 14021                           tblptru	equ	0xFF8
 14022                           tblptrh	equ	0xFF7
 14023                           tblptrl	equ	0xFF6
 14024                           tablat	equ	0xFF5
 14025                           prodh	equ	0xFF4
 14026                           prodl	equ	0xFF3
 14027                           intcon	equ	0xFF2
 14028                           postinc0	equ	0xFEE
 14029                           wreg	equ	0xFE8
 14030                           indf1	equ	0xFE7
 14031                           postinc1	equ	0xFE6
 14032                           postdec1	equ	0xFE5
 14033                           fsr1h	equ	0xFE2
 14034                           fsr1l	equ	0xFE1
 14035                           indf2	equ	0xFDF
 14036                           postinc2	equ	0xFDE
 14037                           postdec2	equ	0xFDD
 14038                           fsr2h	equ	0xFDA
 14039                           fsr2l	equ	0xFD9
 14040                           status	equ	0xFD8
 14041                           
 14042 ;; *************** function _ow_delay *****************
 14043 ;; Defined at:
 14044 ;;		line 59 in file "../lib/ow.c"
 14045 ;; Parameters:    Size  Location     Type
 14046 ;;  del             2   39[BANK0 ] unsigned int 
 14047 ;; Auto vars:     Size  Location     Type
 14048 ;;		None
 14049 ;; Return value:  Size  Location     Type
 14050 ;;		None               void
 14051 ;; Registers used:
 14052 ;;		wreg, status,2, status,0
 14053 ;; Tracked objects:
 14054 ;;		On entry : F/0
 14055 ;;		On exit  : F/0
 14056 ;;		Unchanged: 0/0
 14057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14058 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14061 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14062 ;;Total ram usage:        2 bytes
 14063 ;; Hardware stack levels used:    1
 14064 ;; Hardware stack levels required when called:    8
 14065 ;; This function calls:
 14066 ;;		Nothing
 14067 ;; This function is called by:
 14068 ;;		_init_1wire
 14069 ;;		_read_1wire
 14070 ;;		_write_1wire
 14071 ;;		_ds18b20_start
 14072 ;; This function uses a non-reentrant model
 14073 ;;
 14074                           
 14075                           	psect	text11
 14076  003BBC                     __ptext11:
 14077                           	opt stack 0
 14078  003BBC                     _ow_delay:
 14079                           	opt stack 19
 14080                           
 14081                           ; BSR set to: 0
 14082                           ;ow.c: 60: while(del--) __nop();
 14083                           
 14084                           ; BSR set to: 0
 14085                           ;incstack = 0
 14086  003BBC  D001               	goto	l7747
 14087  003BBE                     l262:
 14088                           
 14089                           ; BSR set to: 0
 14090  003BBE  F000               	nop	
 14091  003BC0                     l7747:
 14092  003BC0  0100               	movlb	0	; () banked
 14093  003BC2  0787               	decf	ow_delay@del& (0+255),f,b
 14094  003BC4  A0D8               	btfss	status,0,c
 14095  003BC6  0788               	decf	(ow_delay@del+1)& (0+255),f,b
 14096  003BC8  2987               	incf	ow_delay@del& (0+255),w,b
 14097  003BCA  B4D8               	btfsc	status,2,c
 14098  003BCC  2988               	incf	(ow_delay@del+1)& (0+255),w,b
 14099  003BCE  B4D8               	btfsc	status,2,c
 14100  003BD0  0012               	return	
 14101  003BD2  D7F5               	goto	l262
 14102  003BD4                     __end_of_ow_delay:
 14103                           	opt stack 0
 14104                           tblptru	equ	0xFF8
 14105                           tblptrh	equ	0xFF7
 14106                           tblptrl	equ	0xFF6
 14107                           tablat	equ	0xFF5
 14108                           prodh	equ	0xFF4
 14109                           prodl	equ	0xFF3
 14110                           intcon	equ	0xFF2
 14111                           postinc0	equ	0xFEE
 14112                           wreg	equ	0xFE8
 14113                           indf1	equ	0xFE7
 14114                           postinc1	equ	0xFE6
 14115                           postdec1	equ	0xFE5
 14116                           fsr1h	equ	0xFE2
 14117                           fsr1l	equ	0xFE1
 14118                           indf2	equ	0xFDF
 14119                           postinc2	equ	0xFDE
 14120                           postdec2	equ	0xFDD
 14121                           fsr2h	equ	0xFDA
 14122                           fsr2l	equ	0xFD9
 14123                           status	equ	0xFD8
 14124                           
 14125 ;; *************** function ___awtofl *****************
 14126 ;; Defined at:
 14127 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtofl.c"
 14128 ;; Parameters:    Size  Location     Type
 14129 ;;  c               2   49[BANK0 ] int 
 14130 ;; Auto vars:     Size  Location     Type
 14131 ;;  f1              4    0        int 
 14132 ;;  sign            1   53[BANK0 ] unsigned char 
 14133 ;; Return value:  Size  Location     Type
 14134 ;;                  4   49[BANK0 ] unsigned char 
 14135 ;; Registers used:
 14136 ;;		wreg, status,2, status,0, prodl, cstack
 14137 ;; Tracked objects:
 14138 ;;		On entry : E/0
 14139 ;;		On exit  : F/0
 14140 ;;		Unchanged: 0/0
 14141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14142 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14143 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14145 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14146 ;;Total ram usage:        5 bytes
 14147 ;; Hardware stack levels used:    1
 14148 ;; Hardware stack levels required when called:    9
 14149 ;; This function calls:
 14150 ;;		___flpack
 14151 ;; This function is called by:
 14152 ;;		_ds18b20_read
 14153 ;; This function uses a non-reentrant model
 14154 ;;
 14155                           
 14156                           	psect	text12
 14157  003792                     __ptext12:
 14158                           	opt stack 0
 14159  003792                     ___awtofl:
 14160                           	opt stack 19
 14161                           
 14162                           ; BSR set to: 0
 14163                           ;incstack = 0
 14164  003792  0100               	movlb	0	; () banked
 14165  003794  6B95               	clrf	___awtofl@sign& (0+255),b
 14166                           
 14167                           ; BSR set to: 0
 14168  003796  5192               	movf	(___awtofl@c+1)& (0+255),w,b
 14169  003798  0A80               	xorlw	128
 14170  00379A  6EF3               	movwf	prodl,c
 14171  00379C  0E80               	movlw	128
 14172  00379E  5CF3               	subwf	prodl,w,c
 14173  0037A0  0E00               	movlw	0
 14174  0037A2  B4D8               	btfsc	status,2,c
 14175  0037A4  5D91               	subwf	___awtofl@c& (0+255),w,b
 14176  0037A6  E205               	bc	l8349
 14177                           
 14178                           ; BSR set to: 0
 14179  0037A8  6D91               	negf	___awtofl@c& (0+255),b
 14180  0037AA  1F92               	comf	(___awtofl@c+1)& (0+255),f,b
 14181  0037AC  B0D8               	btfsc	status,0,c
 14182  0037AE  2B92               	incf	(___awtofl@c+1)& (0+255),f,b
 14183  0037B0  2B95               	incf	___awtofl@sign& (0+255),f,b
 14184  0037B2                     l8349:
 14185                           
 14186                           ; BSR set to: 0
 14187  0037B2  C091  F087         	movff	___awtofl@c,___flpack@arg
 14188  0037B6  C092  F088         	movff	___awtofl@c+1,___flpack@arg+1
 14189  0037BA  6B89               	clrf	(___flpack@arg+2)& (0+255),b
 14190  0037BC  6B8A               	clrf	(___flpack@arg+3)& (0+255),b
 14191  0037BE  0E96               	movlw	150
 14192  0037C0  6F8B               	movwf	___flpack@exp& (0+255),b
 14193  0037C2  C095  F08C         	movff	___awtofl@sign,___flpack@sign
 14194  0037C6  EC0D  F016         	call	___flpack	;wreg free
 14195  0037CA  C087  F091         	movff	?___flpack,?___awtofl
 14196  0037CE  C088  F092         	movff	?___flpack+1,?___awtofl+1
 14197  0037D2  C089  F093         	movff	?___flpack+2,?___awtofl+2
 14198  0037D6  C08A  F094         	movff	?___flpack+3,?___awtofl+3
 14199                           
 14200                           ; BSR set to: 0
 14201  0037DA  0012               	return	
 14202  0037DC                     __end_of___awtofl:
 14203                           	opt stack 0
 14204                           tblptru	equ	0xFF8
 14205                           tblptrh	equ	0xFF7
 14206                           tblptrl	equ	0xFF6
 14207                           tablat	equ	0xFF5
 14208                           prodh	equ	0xFF4
 14209                           prodl	equ	0xFF3
 14210                           intcon	equ	0xFF2
 14211                           postinc0	equ	0xFEE
 14212                           wreg	equ	0xFE8
 14213                           indf1	equ	0xFE7
 14214                           postinc1	equ	0xFE6
 14215                           postdec1	equ	0xFE5
 14216                           fsr1h	equ	0xFE2
 14217                           fsr1l	equ	0xFE1
 14218                           indf2	equ	0xFDF
 14219                           postinc2	equ	0xFDE
 14220                           postdec2	equ	0xFDD
 14221                           fsr2h	equ	0xFDA
 14222                           fsr2l	equ	0xFD9
 14223                           status	equ	0xFD8
 14224                           
 14225 ;; *************** function _tsk_display *****************
 14226 ;; Defined at:
 14227 ;;		line 234 in file "../Main.c"
 14228 ;; Parameters:    Size  Location     Type
 14229 ;;		None
 14230 ;; Auto vars:     Size  Location     Type
 14231 ;;		None
 14232 ;; Return value:  Size  Location     Type
 14233 ;;		None               void
 14234 ;; Registers used:
 14235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14236 ;; Tracked objects:
 14237 ;;		On entry : 0/0
 14238 ;;		On exit  : F/0
 14239 ;;		Unchanged: 0/0
 14240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14243 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14244 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14245 ;;Total ram usage:        2 bytes
 14246 ;; Hardware stack levels used:    1
 14247 ;; Hardware stack levels required when called:   15
 14248 ;; This function calls:
 14249 ;;		_LabelSetTxt
 14250 ;;		_sprintf
 14251 ;; This function is called by:
 14252 ;;		_main
 14253 ;; This function uses a non-reentrant model
 14254 ;;
 14255                           
 14256                           	psect	text13
 14257  001EF0                     __ptext13:
 14258                           	opt stack 0
 14259  001EF0                     _tsk_display:
 14260                           	opt stack 15
 14261                           
 14262                           ;Main.c: 235: static double f_prev_T = - 100.0;
 14263                           ;Main.c: 237: static int _prev_tick; static int chk_count; static char _yield_flag; stat
      +                          ic unsigned int _state = 0; static char _running_msg = (0); static char _interrupt_state
      +                          ; __nop();
 14264                           
 14265                           ; BSR set to: 0
 14266                           ;incstack = 0
 14267  001EF0  F000               	nop	
 14268                           
 14269                           ;Main.c: 239: if(f_prev_T != f_T_salona){
 14270  001EF2  0100               	movlb	0	; () banked
 14271  001EF4  51D8               	movf	(_f_T_salona+3)& (0+255),w,b
 14272  001EF6  0101               	movlb	1	; () banked
 14273  001EF8  19FA               	xorwf	(tsk_display@f_prev_T+3)& (0+255),w,b
 14274  001EFA  E10E               	bnz	u10555
 14275  001EFC  0100               	movlb	0	; () banked
 14276  001EFE  51D7               	movf	(_f_T_salona+2)& (0+255),w,b
 14277  001F00  0101               	movlb	1	; () banked
 14278  001F02  19F9               	xorwf	(tsk_display@f_prev_T+2)& (0+255),w,b
 14279  001F04  E109               	bnz	u10555
 14280  001F06  0100               	movlb	0	; () banked
 14281  001F08  51D6               	movf	(_f_T_salona+1)& (0+255),w,b
 14282  001F0A  0101               	movlb	1	; () banked
 14283  001F0C  19F8               	xorwf	(tsk_display@f_prev_T+1)& (0+255),w,b
 14284  001F0E  E104               	bnz	u10555
 14285  001F10  0100               	movlb	0	; () banked
 14286  001F12  51D5               	movf	_f_T_salona& (0+255),w,b
 14287  001F14  0101               	movlb	1	; () banked
 14288  001F16  19F7               	xorwf	tsk_display@f_prev_T& (0+255),w,b
 14289  001F18                     u10555:
 14290  001F18  E101 D08C          	bz	l9289
 14291                           
 14292                           ; BSR set to: 1
 14293                           ;Main.c: 240: f_prev_T = f_T_salona;
 14294  001F1C  C0D5  F1F7         	movff	_f_T_salona,tsk_display@f_prev_T
 14295  001F20  C0D6  F1F8         	movff	_f_T_salona+1,tsk_display@f_prev_T+1
 14296  001F24  C0D7  F1F9         	movff	_f_T_salona+2,tsk_display@f_prev_T+2
 14297  001F28  C0D8  F1FA         	movff	_f_T_salona+3,tsk_display@f_prev_T+3
 14298                           
 14299                           ; BSR set to: 1
 14300                           ;Main.c: 241: sprintf(str, "T=%2.1f", f_T_salona);
 14301  001F2C  0E01               	movlw	high _str
 14302  001F2E  6FDA               	movwf	(sprintf@sp+1)& (0+255),b
 14303  001F30  0E8D               	movlw	low _str
 14304  001F32  6FD9               	movwf	sprintf@sp& (0+255),b
 14305  001F34  0EFF               	movlw	high STR_2
 14306  001F36  6FDC               	movwf	(sprintf@f+1)& (0+255),b
 14307  001F38  0EF3               	movlw	low STR_2
 14308  001F3A  6FDB               	movwf	sprintf@f& (0+255),b
 14309  001F3C  C0D5  F1DD         	movff	_f_T_salona,?_sprintf+4
 14310  001F40  C0D6  F1DE         	movff	_f_T_salona+1,?_sprintf+5
 14311  001F44  C0D7  F1DF         	movff	_f_T_salona+2,?_sprintf+6
 14312  001F48  C0D8  F1E0         	movff	_f_T_salona+3,?_sprintf+7
 14313  001F4C  ECFA  F001         	call	_sprintf	;wreg free
 14314                           
 14315                           ; BSR set to: 2
 14316                           ;Main.c: 242: LabelSetTxt(&lb_temp, str);
 14317  001F50  0E02               	movlw	high _lb_temp
 14318  001F52  0100               	movlb	0	; () banked
 14319  001F54  6FAB               	movwf	(LabelSetTxt@lb+1)& (0+255),b
 14320  001F56  0E8C               	movlw	low _lb_temp
 14321  001F58  6FAA               	movwf	LabelSetTxt@lb& (0+255),b
 14322  001F5A  0E01               	movlw	high _str
 14323  001F5C  6FAD               	movwf	(LabelSetTxt@str+1)& (0+255),b
 14324  001F5E  0E8D               	movlw	low _str
 14325  001F60  6FAC               	movwf	LabelSetTxt@str& (0+255),b
 14326  001F62  EC15  F012         	call	_LabelSetTxt	;wreg free
 14327  001F66  D066               	goto	l9289
 14328  001F68                     l638:
 14329                           
 14330                           ; BSR set to: 1
 14331  001F68  F000               	nop	
 14332                           
 14333                           ;Main.c: 247: do { if(INTCONbits.GIE==1) _interrupt_state = 1; else _interrupt_state = 0
      +                          ; INTCONbits.GIE=0; _prev_tick = _sys_tick; _state = 247; case 247: if(((_sys_tick - _pr
      +                          ev_tick) < 500)) { if(_interrupt_state==1) INTCONbits.GIE=1; return; } else { _prev_tick
 14334  001F6A  AEF2               	btfss	intcon,7,c	;volatile
 14335  001F6C  D004               	goto	l640
 14336  001F6E  0E01               	movlw	1
 14337  001F70  0100               	movlb	0	; () banked
 14338  001F72  6FCF               	movwf	tsk_display@_interrupt_state& (0+255),b
 14339  001F74  D002               	goto	l641
 14340  001F76                     l640:
 14341  001F76  0100               	movlb	0	; () banked
 14342  001F78  6BCF               	clrf	tsk_display@_interrupt_state& (0+255),b
 14343  001F7A                     l641:
 14344                           
 14345                           ; BSR set to: 0
 14346  001F7A  9EF2               	bcf	intcon,7,c	;volatile
 14347  001F7C  C0BB  F0C1         	movff	__sys_tick,tsk_display@_prev_tick	;volatile
 14348  001F80  C0BC  F0C2         	movff	__sys_tick+1,tsk_display@_prev_tick+1	;volatile
 14349                           
 14350                           ; BSR set to: 0
 14351  001F84  6BC4               	clrf	(tsk_display@_state+1)& (0+255),b
 14352  001F86  0EF7               	movlw	247
 14353  001F88  6FC3               	movwf	tsk_display@_state& (0+255),b
 14354  001F8A                     l9273:
 14355  001F8A  0100               	movlb	0	; () banked
 14356  001F8C  C0BB  F1F5         	movff	__sys_tick,??_tsk_display	;volatile
 14357  001F90  C0BC  F1F6         	movff	__sys_tick+1,??_tsk_display+1	;volatile
 14358  001F94  51C1               	movf	tsk_display@_prev_tick& (0+255),w,b
 14359  001F96  0101               	movlb	1	; () banked
 14360  001F98  5FF5               	subwf	??_tsk_display& (0+255),f,b
 14361  001F9A  0100               	movlb	0	; () banked
 14362  001F9C  51C2               	movf	(tsk_display@_prev_tick+1)& (0+255),w,b
 14363  001F9E  0101               	movlb	1	; () banked
 14364  001FA0  5BF6               	subwfb	(??_tsk_display+1)& (0+255),f,b
 14365  001FA2  51F6               	movf	(??_tsk_display+1)& (0+255),w,b
 14366  001FA4  0A80               	xorlw	128
 14367  001FA6  6EF3               	movwf	prodl,c
 14368  001FA8  0E81               	movlw	129
 14369  001FAA  5CF3               	subwf	prodl,w,c
 14370  001FAC  0EF4               	movlw	244
 14371  001FAE  B4D8               	btfsc	status,2,c
 14372  001FB0  5DF5               	subwf	??_tsk_display& (0+255),w,b
 14373  001FB2  E205               	bc	l643
 14374                           
 14375                           ; BSR set to: 1
 14376  001FB4  0100               	movlb	0	; () banked
 14377  001FB6  05CF               	decf	tsk_display@_interrupt_state& (0+255),w,b
 14378  001FB8  B4D8               	btfsc	status,2,c
 14379                           
 14380                           ; BSR set to: 0
 14381  001FBA  8EF2               	bsf	intcon,7,c	;volatile
 14382  001FBC  0012               	return	
 14383  001FBE                     l643:
 14384                           
 14385                           ; BSR set to: 1
 14386  001FBE  C0BB  F0C1         	movff	__sys_tick,tsk_display@_prev_tick	;volatile
 14387  001FC2  C0BC  F0C2         	movff	__sys_tick+1,tsk_display@_prev_tick+1	;volatile
 14388                           
 14389                           ; BSR set to: 1
 14390  001FC6  0100               	movlb	0	; () banked
 14391  001FC8  05CF               	decf	tsk_display@_interrupt_state& (0+255),w,b
 14392  001FCA  B4D8               	btfsc	status,2,c
 14393                           
 14394                           ; BSR set to: 0
 14395  001FCC  8EF2               	bsf	intcon,7,c	;volatile
 14396                           
 14397                           ; BSR set to: 0
 14398  001FCE  F000               	nop	
 14399                           
 14400                           ;Main.c: 249: sprintf(str, "%01u %01u %01u %01u %01u %02u %01u %01u %01u",
 14401                           ;Main.c: 250: stat.st_12V, stat.st_220V, stat.st_lt_back, stat.st_lt_side, stat.st_lt_no
      +                          shy,
 14402                           ;Main.c: 251: stat.st_lt_salon, stat.st_lt_blue, stat.st_fan, stat.st_kond);
 14403  001FD0  0101               	movlb	1	; () banked
 14404  001FD2  0E01               	movlw	high _str
 14405  001FD4  6FDA               	movwf	(sprintf@sp+1)& (0+255),b
 14406  001FD6  0E8D               	movlw	low _str
 14407  001FD8  6FD9               	movwf	sprintf@sp& (0+255),b
 14408  001FDA  0EFF               	movlw	high STR_3
 14409  001FDC  6FDC               	movwf	(sprintf@f+1)& (0+255),b
 14410  001FDE  0EC6               	movlw	low STR_3
 14411  001FE0  6FDB               	movwf	sprintf@f& (0+255),b
 14412  001FE2  C0AE  F1DD         	movff	_stat,?_sprintf+4
 14413  001FE6  6BDE               	clrf	(?_sprintf+5)& (0+255),b
 14414  001FE8  C0AF  F1DF         	movff	_stat+1,?_sprintf+6
 14415  001FEC  6BE0               	clrf	(?_sprintf+7)& (0+255),b
 14416  001FEE  C0B0  F1E1         	movff	_stat+2,?_sprintf+8
 14417  001FF2  6BE2               	clrf	(?_sprintf+9)& (0+255),b
 14418  001FF4  C0B1  F1E3         	movff	_stat+3,?_sprintf+10
 14419  001FF8  6BE4               	clrf	(?_sprintf+11)& (0+255),b
 14420  001FFA  C0B2  F1E5         	movff	_stat+4,?_sprintf+12
 14421  001FFE  6BE6               	clrf	(?_sprintf+13)& (0+255),b
 14422  002000  C0B3  F1E7         	movff	_stat+5,?_sprintf+14
 14423  002004  6BE8               	clrf	(?_sprintf+15)& (0+255),b
 14424  002006  C0B4  F1E9         	movff	_stat+6,?_sprintf+16
 14425  00200A  6BEA               	clrf	(?_sprintf+17)& (0+255),b
 14426  00200C  C0B5  F1EB         	movff	_stat+7,?_sprintf+18
 14427  002010  6BEC               	clrf	(?_sprintf+19)& (0+255),b
 14428  002012  C0B6  F1ED         	movff	_stat+8,?_sprintf+20
 14429  002016  6BEE               	clrf	(?_sprintf+21)& (0+255),b
 14430  002018  ECFA  F001         	call	_sprintf	;wreg free
 14431                           
 14432                           ; BSR set to: 2
 14433                           ;Main.c: 253: LabelSetTxt(&lb_paket, str);
 14434  00201C  0E02               	movlw	high _lb_paket
 14435  00201E  0100               	movlb	0	; () banked
 14436  002020  6FAB               	movwf	(LabelSetTxt@lb+1)& (0+255),b
 14437  002022  0E68               	movlw	low _lb_paket
 14438  002024  6FAA               	movwf	LabelSetTxt@lb& (0+255),b
 14439  002026  0E01               	movlw	high _str
 14440  002028  6FAD               	movwf	(LabelSetTxt@str+1)& (0+255),b
 14441  00202A  0E8D               	movlw	low _str
 14442  00202C  6FAC               	movwf	LabelSetTxt@str& (0+255),b
 14443  00202E  EC15  F012         	call	_LabelSetTxt	;wreg free
 14444                           
 14445                           ;Main.c: 256: }};
 14446  002032  D79A               	goto	l638
 14447  002034                     l9289:
 14448                           
 14449                           ; BSR set to: 1
 14450  002034  C0C3  F1F5         	movff	tsk_display@_state,??_tsk_display
 14451  002038  C0C4  F1F6         	movff	tsk_display@_state+1,??_tsk_display+1
 14452                           
 14453                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14454                           ; Switch size 1, requested type "space"
 14455                           ; Number of cases is 1, Range of values is 0 to 0
 14456                           ; switch strategies available:
 14457                           ; Name         Instructions Cycles
 14458                           ; simple_byte            4     3 (average)
 14459                           ;	Chosen strategy is simple_byte
 14460  00203C  0101               	movlb	1	; () banked
 14461  00203E  51F6               	movf	(??_tsk_display+1)& (0+255),w,b
 14462  002040  E193               	bnz	l638
 14463                           
 14464                           ; BSR set to: 1
 14465                           ; Switch size 1, requested type "space"
 14466                           ; Number of cases is 2, Range of values is 0 to 247
 14467                           ; switch strategies available:
 14468                           ; Name         Instructions Cycles
 14469                           ; simple_byte            7     4 (average)
 14470                           ;	Chosen strategy is simple_byte
 14471  002042  51F5               	movf	??_tsk_display& (0+255),w,b
 14472  002044  E091               	bz	l638
 14473  002046  0AF7               	xorlw	247	; case 247
 14474  002048  E0A0               	bz	l9273
 14475  00204A  D78E               	goto	l638
 14476  00204C                     __end_of_tsk_display:
 14477                           	opt stack 0
 14478                           tblptru	equ	0xFF8
 14479                           tblptrh	equ	0xFF7
 14480                           tblptrl	equ	0xFF6
 14481                           tablat	equ	0xFF5
 14482                           prodh	equ	0xFF4
 14483                           prodl	equ	0xFF3
 14484                           intcon	equ	0xFF2
 14485                           postinc0	equ	0xFEE
 14486                           wreg	equ	0xFE8
 14487                           indf1	equ	0xFE7
 14488                           postinc1	equ	0xFE6
 14489                           postdec1	equ	0xFE5
 14490                           fsr1h	equ	0xFE2
 14491                           fsr1l	equ	0xFE1
 14492                           indf2	equ	0xFDF
 14493                           postinc2	equ	0xFDE
 14494                           postdec2	equ	0xFDD
 14495                           fsr2h	equ	0xFDA
 14496                           fsr2l	equ	0xFD9
 14497                           status	equ	0xFD8
 14498                           
 14499 ;; *************** function _sprintf *****************
 14500 ;; Defined at:
 14501 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 14502 ;; Parameters:    Size  Location     Type
 14503 ;;  sp              2   36[BANK1 ] PTR unsigned char 
 14504 ;;		 -> str(40), 
 14505 ;;  f               2   38[BANK1 ] PTR const unsigned char 
 14506 ;;		 -> STR_3(45), STR_2(8), STR_1(3), 
 14507 ;; Auto vars:     Size  Location     Type
 14508 ;;  vd              4    8[BANK2 ] unsigned long 
 14509 ;;  vd              4   12[BANK2 ] unsigned long 
 14510 ;;  _val            5   22[BANK2 ] struct .
 14511 ;;  fval            4   33[BANK2 ] struct .
 14512 ;;  integ           4   18[BANK2 ] struct .
 14513 ;;  ival            4    0        struct .
 14514 ;;  prec            2   37[BANK2 ] int 
 14515 ;;  width           2   31[BANK2 ] int 
 14516 ;;  flag            2   29[BANK2 ] unsigned short 
 14517 ;;  exp             2   27[BANK2 ] int 
 14518 ;;  ap              2   16[BANK2 ] PTR void [1]
 14519 ;;		 -> ?_sprintf(2), 
 14520 ;;  c               1   39[BANK2 ] char 
 14521 ;;  d               1    0        unsigned char 
 14522 ;; Return value:  Size  Location     Type
 14523 ;;                  2   36[BANK1 ] int 
 14524 ;; Registers used:
 14525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14526 ;; Tracked objects:
 14527 ;;		On entry : F/1
 14528 ;;		On exit  : F/2
 14529 ;;		Unchanged: 0/0
 14530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14531 ;;      Params:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14532 ;;      Locals:         0       0       0      40       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14533 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14534 ;;      Totals:         0       0      28      40       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14535 ;;Total ram usage:       68 bytes
 14536 ;; Hardware stack levels used:    1
 14537 ;; Hardware stack levels required when called:   11
 14538 ;; This function calls:
 14539 ;;		___awdiv
 14540 ;;		___fladd
 14541 ;;		___flge
 14542 ;;		___flmul
 14543 ;;		___flneg
 14544 ;;		___flsub
 14545 ;;		___fltol
 14546 ;;		___lldiv
 14547 ;;		___llmod
 14548 ;;		___lltofl
 14549 ;;		___wmul
 14550 ;;		__div_to_l_
 14551 ;;		__tdiv_to_l_
 14552 ;;		_fround
 14553 ;;		_isdigit
 14554 ;;		_scale
 14555 ;; This function is called by:
 14556 ;;		_main
 14557 ;;		_tsk_display
 14558 ;; This function uses a non-reentrant model
 14559 ;;
 14560                           
 14561                           	psect	text14
 14562  0003F4                     __ptext14:
 14563                           	opt stack 0
 14564  0003F4                     _sprintf:
 14565                           	opt stack 18
 14566                           
 14567                           ; BSR set to: 1
 14568                           ;doprnt.c: 494: va_list ap;
 14569                           ;doprnt.c: 499: signed char c;
 14570                           ;doprnt.c: 501: int width;
 14571                           ;doprnt.c: 504: int prec;
 14572                           ;doprnt.c: 508: unsigned short flag;
 14573                           ;doprnt.c: 515: char d;
 14574                           ;doprnt.c: 516: double fval, integ;
 14575                           ;doprnt.c: 517: int exp;
 14576                           ;doprnt.c: 518: double ival;
 14577                           ;doprnt.c: 519: union {
 14578                           ;doprnt.c: 520: unsigned long _val;
 14579                           ;doprnt.c: 521: struct {
 14580                           ;doprnt.c: 522: const char * _cp;
 14581                           ;doprnt.c: 523: unsigned _len;
 14582                           ;doprnt.c: 524: } _str;
 14583                           ;doprnt.c: 525: } _val;
 14584                           ;doprnt.c: 542: *ap = __va_start();
 14585                           
 14586                           ; BSR set to: 0
 14587                           ;incstack = 0
 14588  0003F4  0E01               	movlw	high (?_sprintf+4)
 14589  0003F6  0102               	movlb	2	; () banked
 14590  0003F8  6FC1               	movwf	(sprintf@ap+1)& (0+255),b
 14591  0003FA  0EDD               	movlw	low (?_sprintf+4)
 14592  0003FC  6FC0               	movwf	sprintf@ap& (0+255),b
 14593                           
 14594                           ;doprnt.c: 545: while(c = *f++) {
 14595  0003FE  EF60  F006         	goto	l9061
 14596  000402                     l8749:
 14597                           
 14598                           ; BSR set to: 2
 14599                           ;doprnt.c: 547: if(c != '%')
 14600  000402  51D7               	movf	sprintf@c& (0+255),w,b
 14601  000404  0A25               	xorlw	37
 14602  000406  E00B               	bz	l1247
 14603                           
 14604                           ; BSR set to: 2
 14605                           ;doprnt.c: 549: {
 14606                           ;doprnt.c: 550: ((*sp++ = (c)));
 14607  000408  C1D9  FFD9         	movff	sprintf@sp,fsr2l
 14608  00040C  C1DA  FFDA         	movff	sprintf@sp+1,fsr2h
 14609  000410  C2D7  FFDF         	movff	sprintf@c,indf2
 14610                           
 14611                           ; BSR set to: 2
 14612  000414  0101               	movlb	1	; () banked
 14613  000416  4BD9               	infsnz	sprintf@sp& (0+255),f,b
 14614  000418  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
 14615                           
 14616                           ;doprnt.c: 551: continue;
 14617  00041A  EF60  F006         	goto	l9061
 14618  00041E                     l1247:
 14619                           
 14620                           ; BSR set to: 2
 14621                           ;doprnt.c: 552: }
 14622                           ;doprnt.c: 555: width = 0;
 14623  00041E  6BCF               	clrf	sprintf@width& (0+255),b
 14624  000420  6BD0               	clrf	(sprintf@width+1)& (0+255),b
 14625                           
 14626                           ;doprnt.c: 557: flag = 0;
 14627  000422  6BCD               	clrf	sprintf@flag& (0+255),b
 14628  000424  6BCE               	clrf	(sprintf@flag+1)& (0+255),b
 14629  000426  D005               	goto	l8759
 14630  000428                     l8755:
 14631                           
 14632                           ; BSR set to: 1
 14633                           ;doprnt.c: 589: flag |= 0x04;
 14634  000428  0102               	movlb	2	; () banked
 14635  00042A  85CD               	bsf	sprintf@flag& (0+255),2,b
 14636                           
 14637                           ;doprnt.c: 590: f++;
 14638  00042C  0101               	movlb	1	; () banked
 14639  00042E  4BDB               	infsnz	sprintf@f& (0+255),f,b
 14640  000430  2BDC               	incf	(sprintf@f+1)& (0+255),f,b
 14641  000432                     l8759:
 14642  000432  0101               	movlb	1	; () banked
 14643  000434  EC9E  F006         	call	PL44	;call to abstracted procedure
 14644                           
 14645                           ; Switch size 1, requested type "space"
 14646                           ; Number of cases is 1, Range of values is 48 to 48
 14647                           ; switch strategies available:
 14648                           ; Name         Instructions Cycles
 14649                           ; simple_byte            4     3 (average)
 14650                           ;	Chosen strategy is simple_byte
 14651  000438  0A30               	xorlw	48	; case 48
 14652  00043A  E0F6               	bz	l8755
 14653                           
 14654                           ; BSR set to: 1
 14655                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
 14656  00043C  EC9E  F006         	call	PL44	;call to abstracted procedure
 14657  000440  ECA6  F01D         	call	_isdigit
 14658  000444  E330               	bnc	l8773
 14659                           
 14660                           ; BSR set to: 0
 14661                           ;doprnt.c: 607: width = 0;
 14662  000446  0102               	movlb	2	; () banked
 14663  000448  6BCF               	clrf	sprintf@width& (0+255),b
 14664  00044A  6BD0               	clrf	(sprintf@width+1)& (0+255),b
 14665  00044C                     l8765:
 14666                           
 14667                           ;doprnt.c: 609: width *= 10;
 14668  00044C  C2CF  F087         	movff	sprintf@width,___wmul@multiplier
 14669  000450  C2D0  F088         	movff	sprintf@width+1,___wmul@multiplier+1
 14670  000454  0100               	movlb	0	; () banked
 14671  000456  6B8A               	clrf	(___wmul@multiplicand+1)& (0+255),b
 14672  000458  0E0A               	movlw	10
 14673  00045A  6F89               	movwf	___wmul@multiplicand& (0+255),b
 14674  00045C  EC5C  F01D         	call	___wmul	;wreg free
 14675  000460  C087  F2CF         	movff	?___wmul,sprintf@width
 14676  000464  C088  F2D0         	movff	?___wmul+1,sprintf@width+1
 14677                           
 14678                           ; BSR set to: 0
 14679                           ;doprnt.c: 610: width += *f++ - '0';
 14680  000468  0ED0               	movlw	208
 14681  00046A  0101               	movlb	1	; () banked
 14682  00046C  6FEF               	movwf	??_sprintf& (0+255),b
 14683  00046E  69F0               	setf	(??_sprintf+1)& (0+255),b
 14684  000470  EC9E  F006         	call	PL44	;call to abstracted procedure
 14685  000474  6FF1               	movwf	(??_sprintf+2)& (0+255),b
 14686  000476  6BF2               	clrf	(??_sprintf+3)& (0+255),b
 14687  000478  51EF               	movf	??_sprintf& (0+255),w,b
 14688  00047A  27F1               	addwf	(??_sprintf+2)& (0+255),f,b
 14689  00047C  51F0               	movf	(??_sprintf+1)& (0+255),w,b
 14690  00047E  23F2               	addwfc	(??_sprintf+3)& (0+255),f,b
 14691  000480  51F1               	movf	(??_sprintf+2)& (0+255),w,b
 14692  000482  0102               	movlb	2	; () banked
 14693  000484  27CF               	addwf	sprintf@width& (0+255),f,b
 14694  000486  0101               	movlb	1	; () banked
 14695  000488  51F2               	movf	(??_sprintf+3)& (0+255),w,b
 14696  00048A  0102               	movlb	2	; () banked
 14697  00048C  23D0               	addwfc	(sprintf@width+1)& (0+255),f,b
 14698                           
 14699                           ; BSR set to: 2
 14700  00048E  0101               	movlb	1	; () banked
 14701  000490  4BDB               	infsnz	sprintf@f& (0+255),f,b
 14702  000492  2BDC               	incf	(sprintf@f+1)& (0+255),f,b
 14703                           
 14704                           ; BSR set to: 1
 14705                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
 14706  000494  C1DB  FFF6         	movff	sprintf@f,tblptrl
 14707  000498  C1DC  FFF7         	movff	sprintf@f+1,tblptrh
 14708  00049C                     	if	0	;tblptru may be non-zero
 14709  00049C                     	endif
 14710  00049C                     	if	0	;tblptru may be non-zero
 14711  00049C                     	endif
 14712  00049C  0008               	tblrd		*
 14713  00049E  50F5               	movf	tablat,w,c
 14714  0004A0  ECA6  F01D         	call	_isdigit
 14715  0004A4  E2D3               	bc	l8765
 14716  0004A6                     l8773:
 14717                           
 14718                           ; BSR set to: 0
 14719                           ;doprnt.c: 617: }
 14720                           ;doprnt.c: 620: if(*f == '.') {
 14721  0004A6  EC9E  F006         	call	PL44	;call to abstracted procedure
 14722  0004AA  0A2E               	xorlw	46
 14723  0004AC  E12B               	bnz	l1257
 14724                           
 14725                           ; BSR set to: 1
 14726                           ;doprnt.c: 621: flag |= 0x4000;
 14727  0004AE  0102               	movlb	2	; () banked
 14728  0004B0  8DCE               	bsf	(sprintf@flag+1)& (0+255),6,b
 14729                           
 14730                           ;doprnt.c: 622: f++;
 14731  0004B2  0101               	movlb	1	; () banked
 14732  0004B4  4BDB               	infsnz	sprintf@f& (0+255),f,b
 14733  0004B6  2BDC               	incf	(sprintf@f+1)& (0+255),f,b
 14734                           
 14735                           ; BSR set to: 1
 14736                           ;doprnt.c: 629: {
 14737                           ;doprnt.c: 630: prec = 0;
 14738  0004B8  0102               	movlb	2	; () banked
 14739  0004BA  6BD5               	clrf	sprintf@prec& (0+255),b
 14740  0004BC  6BD6               	clrf	(sprintf@prec+1)& (0+255),b
 14741                           
 14742                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
 14743  0004BE  D01B               	goto	l8783
 14744  0004C0                     l8779:
 14745                           
 14746                           ; BSR set to: 0
 14747                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
 14748  0004C0  C2D5  F087         	movff	sprintf@prec,___wmul@multiplier
 14749  0004C4  C2D6  F088         	movff	sprintf@prec+1,___wmul@multiplier+1
 14750  0004C8  6B8A               	clrf	(___wmul@multiplicand+1)& (0+255),b
 14751  0004CA  0E0A               	movlw	10
 14752  0004CC  6F89               	movwf	___wmul@multiplicand& (0+255),b
 14753  0004CE  EC5C  F01D         	call	___wmul	;wreg free
 14754  0004D2  EC9E  F006         	call	PL44	;call to abstracted procedure
 14755  0004D6  0100               	movlb	0	; () banked
 14756  0004D8  2787               	addwf	?___wmul& (0+255),f,b
 14757  0004DA  0E00               	movlw	0
 14758  0004DC  2388               	addwfc	(?___wmul+1)& (0+255),f,b
 14759  0004DE  0ED0               	movlw	208
 14760  0004E0  2587               	addwf	?___wmul& (0+255),w,b
 14761  0004E2  0102               	movlb	2	; () banked
 14762  0004E4  6FD5               	movwf	sprintf@prec& (0+255),b
 14763  0004E6  0EFF               	movlw	255
 14764  0004E8  0100               	movlb	0	; () banked
 14765  0004EA  2188               	addwfc	(?___wmul+1)& (0+255),w,b
 14766  0004EC  0102               	movlb	2	; () banked
 14767  0004EE  6FD6               	movwf	(sprintf@prec+1)& (0+255),b
 14768                           
 14769                           ; BSR set to: 2
 14770  0004F0  0101               	movlb	1	; () banked
 14771  0004F2  4BDB               	infsnz	sprintf@f& (0+255),f,b
 14772  0004F4  2BDC               	incf	(sprintf@f+1)& (0+255),f,b
 14773  0004F6                     l8783:
 14774  0004F6  0101               	movlb	1	; () banked
 14775  0004F8  EC9E  F006         	call	PL44	;call to abstracted procedure
 14776  0004FC  ECA6  F01D         	call	_isdigit
 14777  000500  E30B               	bnc	l8793
 14778  000502  D7DE               	goto	l8779
 14779  000504                     l1257:
 14780                           
 14781                           ; BSR set to: 1
 14782                           ;doprnt.c: 635: prec = 0;
 14783  000504  0102               	movlb	2	; () banked
 14784  000506  6BD5               	clrf	sprintf@prec& (0+255),b
 14785  000508  6BD6               	clrf	(sprintf@prec+1)& (0+255),b
 14786                           
 14787                           ; BSR set to: 2
 14788                           ;doprnt.c: 637: flag |= 0x1000;
 14789  00050A  89CE               	bsf	(sprintf@flag+1)& (0+255),4,b
 14790  00050C  D005               	goto	l8793
 14791  00050E                     l8787:
 14792                           
 14793                           ; BSR set to: 2
 14794                           ;doprnt.c: 672: flag |= 0x400;
 14795  00050E  85CE               	bsf	(sprintf@flag+1)& (0+255),2,b
 14796                           
 14797                           ;doprnt.c: 673: break;
 14798  000510  D00D               	goto	l8795
 14799  000512                     l8789:
 14800                           
 14801                           ; BSR set to: 2
 14802                           ;doprnt.c: 827: flag |= 0xC0;
 14803  000512  0EC0               	movlw	192
 14804  000514  13CD               	iorwf	sprintf@flag& (0+255),f,b
 14805                           
 14806                           ;doprnt.c: 828: break;
 14807  000516  D00A               	goto	l8795
 14808  000518                     l8793:
 14809  000518  ECB8  F006         	call	PL84	;call to abstracted procedure
 14810  00051C  51D7               	movf	sprintf@c& (0+255),w,b
 14811                           
 14812                           ; Switch size 1, requested type "space"
 14813                           ; Number of cases is 3, Range of values is 0 to 117
 14814                           ; switch strategies available:
 14815                           ; Name         Instructions Cycles
 14816                           ; simple_byte           10     6 (average)
 14817                           ;	Chosen strategy is simple_byte
 14818  00051E  E101 D3D3          	bz	l9063
 14819  000522  0A66               	xorlw	102	; case 102
 14820  000524  E0F4               	bz	l8787
 14821  000526  0A13               	xorlw	19	; case 117
 14822  000528  E0F4               	bz	l8789
 14823  00052A  D3CA               	goto	l9061
 14824  00052C                     l8795:
 14825                           
 14826                           ; BSR set to: 2
 14827                           ;doprnt.c: 834: if(flag & (0x700)) {
 14828  00052C  0E07               	movlw	7
 14829  00052E  15CE               	andwf	(sprintf@flag+1)& (0+255),w,b
 14830  000530  E101 D2C3          	bz	l8977
 14831                           
 14832                           ; BSR set to: 2
 14833                           ;doprnt.c: 836: if(flag & 0x1000)
 14834  000534  A9CE               	btfss	(sprintf@flag+1)& (0+255),4,b
 14835  000536  D003               	goto	l8801
 14836                           
 14837                           ; BSR set to: 2
 14838                           ;doprnt.c: 838: prec = 6;
 14839  000538  6BD6               	clrf	(sprintf@prec+1)& (0+255),b
 14840  00053A  0E06               	movlw	6
 14841  00053C  6FD5               	movwf	sprintf@prec& (0+255),b
 14842  00053E                     l8801:
 14843                           
 14844                           ; BSR set to: 2
 14845                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 14846  00053E  C2C0  FFD9         	movff	sprintf@ap,fsr2l
 14847  000542  C2C1  FFDA         	movff	sprintf@ap+1,fsr2h
 14848  000546  CFDE F2D1          	movff	postinc2,sprintf@fval
 14849  00054A  CFDE F2D2          	movff	postinc2,sprintf@fval+1
 14850  00054E  CFDE F2D3          	movff	postinc2,sprintf@fval+2
 14851  000552  CFDE F2D4          	movff	postinc2,sprintf@fval+3
 14852                           
 14853                           ; BSR set to: 2
 14854  000556  0E04               	movlw	4
 14855  000558  27C0               	addwf	sprintf@ap& (0+255),f,b
 14856  00055A  0E00               	movlw	0
 14857  00055C  23C1               	addwfc	(sprintf@ap+1)& (0+255),f,b
 14858                           
 14859                           ; BSR set to: 2
 14860                           ;doprnt.c: 840: if(fval < 0.0) {
 14861  00055E  AFD4               	btfss	(sprintf@fval+3)& (0+255),7,b
 14862  000560  D015               	goto	l8811
 14863                           
 14864                           ; BSR set to: 2
 14865                           ;doprnt.c: 841: fval = -fval;
 14866  000562  C2D1  F087         	movff	sprintf@fval,___flneg@f1
 14867  000566  C2D2  F088         	movff	sprintf@fval+1,___flneg@f1+1
 14868  00056A  C2D3  F089         	movff	sprintf@fval+2,___flneg@f1+2
 14869  00056E  C2D4  F08A         	movff	sprintf@fval+3,___flneg@f1+3
 14870  000572  EC36  F01D         	call	___flneg	;wreg free
 14871  000576  C087  F2D1         	movff	?___flneg,sprintf@fval
 14872  00057A  C088  F2D2         	movff	?___flneg+1,sprintf@fval+1
 14873  00057E  C089  F2D3         	movff	?___flneg+2,sprintf@fval+2
 14874  000582  C08A  F2D4         	movff	?___flneg+3,sprintf@fval+3
 14875                           
 14876                           ; BSR set to: 0
 14877                           ;doprnt.c: 842: flag |= 0x03;
 14878  000586  0E03               	movlw	3
 14879  000588  0102               	movlb	2	; () banked
 14880  00058A  13CD               	iorwf	sprintf@flag& (0+255),f,b
 14881  00058C                     l8811:
 14882                           
 14883                           ; BSR set to: 2
 14884                           ;doprnt.c: 843: }
 14885                           ;doprnt.c: 844: exp = 0;
 14886  00058C  6BCB               	clrf	sprintf@exp& (0+255),b
 14887  00058E  6BCC               	clrf	(sprintf@exp+1)& (0+255),b
 14888                           
 14889                           ; BSR set to: 2
 14890                           ;doprnt.c: 845: if( fval!=0) {
 14891  000590  EE22  F0D1         	lfsr	2,sprintf@fval
 14892  000594  50DE               	movf	postinc2,w,c
 14893  000596  10DE               	iorwf	postinc2,w,c
 14894  000598  10DE               	iorwf	postinc2,w,c
 14895  00059A  10DE               	iorwf	postinc2,w,c
 14896  00059C  E06B               	bz	l8839
 14897                           
 14898                           ; BSR set to: 2
 14899                           ;doprnt.c: 846: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
 14900  00059E  35D3               	rlcf	(sprintf@fval+2)& (0+255),w,b
 14901  0005A0  35D4               	rlcf	(sprintf@fval+3)& (0+255),w,b
 14902  0005A2  0F82               	addlw	130
 14903  0005A4  6FCB               	movwf	sprintf@exp& (0+255),b
 14904  0005A6  6BCC               	clrf	(sprintf@exp+1)& (0+255),b
 14905  0005A8  0EFF               	movlw	255
 14906  0005AA  23CC               	addwfc	(sprintf@exp+1)& (0+255),f,b
 14907                           
 14908                           ; BSR set to: 2
 14909                           ;doprnt.c: 847: exp--;
 14910  0005AC  07CB               	decf	sprintf@exp& (0+255),f,b
 14911  0005AE  A0D8               	btfss	status,0,c
 14912  0005B0  07CC               	decf	(sprintf@exp+1)& (0+255),f,b
 14913                           
 14914                           ; BSR set to: 2
 14915                           ;doprnt.c: 848: exp *= 3;
 14916  0005B2  C2CB  F087         	movff	sprintf@exp,___wmul@multiplier
 14917  0005B6  C2CC  F088         	movff	sprintf@exp+1,___wmul@multiplier+1
 14918  0005BA  0100               	movlb	0	; () banked
 14919  0005BC  6B8A               	clrf	(___wmul@multiplicand+1)& (0+255),b
 14920  0005BE  0E03               	movlw	3
 14921  0005C0  6F89               	movwf	___wmul@multiplicand& (0+255),b
 14922  0005C2  EC5C  F01D         	call	___wmul	;wreg free
 14923  0005C6  C087  F2CB         	movff	?___wmul,sprintf@exp
 14924  0005CA  C088  F2CC         	movff	?___wmul+1,sprintf@exp+1
 14925                           
 14926                           ; BSR set to: 0
 14927                           ;doprnt.c: 849: exp /= 10;
 14928  0005CE  C2CB  F08D         	movff	sprintf@exp,___awdiv@dividend
 14929  0005D2  C2CC  F08E         	movff	sprintf@exp+1,___awdiv@dividend+1
 14930  0005D6  6B90               	clrf	(___awdiv@divisor+1)& (0+255),b
 14931  0005D8  0E0A               	movlw	10
 14932  0005DA  6F8F               	movwf	___awdiv@divisor& (0+255),b
 14933  0005DC  ECFC  F017         	call	___awdiv	;wreg free
 14934  0005E0  C08D  F2CB         	movff	?___awdiv,sprintf@exp
 14935  0005E4  C08E  F2CC         	movff	?___awdiv+1,sprintf@exp+1
 14936                           
 14937                           ; BSR set to: 0
 14938                           ;doprnt.c: 850: if(exp < 0)
 14939  0005E8  DBEC               	call	PL134	;call to abstracted procedure
 14940  0005EA  0E00               	movlw	0
 14941  0005EC  B4D8               	btfsc	status,2,c
 14942  0005EE  5DCB               	subwf	sprintf@exp& (0+255),w,b
 14943  0005F0  E203               	bc	l8827
 14944                           
 14945                           ; BSR set to: 2
 14946                           ;doprnt.c: 851: exp--;
 14947  0005F2  07CB               	decf	sprintf@exp& (0+255),f,b
 14948  0005F4  A0D8               	btfss	status,0,c
 14949  0005F6  07CC               	decf	(sprintf@exp+1)& (0+255),f,b
 14950  0005F8                     l8827:
 14951                           
 14952                           ; BSR set to: 2
 14953                           ;doprnt.c: 855: integ = scale(-exp);
 14954  0005F8  51CB               	movf	sprintf@exp& (0+255),w,b
 14955  0005FA  0800               	sublw	0
 14956  0005FC  ECE8  F006         	call	_scale
 14957  000600  C0A9  F2C2         	movff	?_scale,sprintf@integ
 14958  000604  C0AA  F2C3         	movff	?_scale+1,sprintf@integ+1
 14959  000608  C0AB  F2C4         	movff	?_scale+2,sprintf@integ+2
 14960  00060C  C0AC  F2C5         	movff	?_scale+3,sprintf@integ+3
 14961                           
 14962                           ; BSR set to: 0
 14963                           ;doprnt.c: 856: integ *= fval;
 14964  000610  C2C2  F096         	movff	sprintf@integ,___flmul@f1
 14965  000614  C2C3  F097         	movff	sprintf@integ+1,___flmul@f1+1
 14966  000618  C2C4  F098         	movff	sprintf@integ+2,___flmul@f1+2
 14967  00061C  C2C5  F099         	movff	sprintf@integ+3,___flmul@f1+3
 14968  000620  C2D1  F09A         	movff	sprintf@fval,___flmul@f2
 14969  000624  C2D2  F09B         	movff	sprintf@fval+1,___flmul@f2+1
 14970  000628  C2D3  F09C         	movff	sprintf@fval+2,___flmul@f2+2
 14971  00062C  C2D4  F09D         	movff	sprintf@fval+3,___flmul@f2+3
 14972  000630  ECCF  F013         	call	___flmul	;wreg free
 14973  000634  C096  F2C2         	movff	?___flmul,sprintf@integ
 14974  000638  C097  F2C3         	movff	?___flmul+1,sprintf@integ+1
 14975  00063C  C098  F2C4         	movff	?___flmul+2,sprintf@integ+2
 14976  000640  C099  F2C5         	movff	?___flmul+3,sprintf@integ+3
 14977                           
 14978                           ; BSR set to: 0
 14979                           ;doprnt.c: 857: if(integ < 1.0)
 14980  000644  DBA1               	call	PL90	;call to abstracted procedure
 14981  000646  0E80               	movlw	128
 14982  000648  6F8D               	movwf	(___flge@ff2+2)& (0+255),b
 14983  00064A  0E3F               	movlw	63
 14984  00064C  6F8E               	movwf	(___flge@ff2+3)& (0+255),b
 14985  00064E  ECA3  F01B         	call	___flge	;wreg free
 14986  000652  E205               	bc	l8835
 14987                           
 14988                           ; BSR set to: 0
 14989                           ;doprnt.c: 858: exp--;
 14990  000654  0102               	movlb	2	; () banked
 14991  000656  07CB               	decf	sprintf@exp& (0+255),f,b
 14992  000658  A0D8               	btfss	status,0,c
 14993  00065A  07CC               	decf	(sprintf@exp+1)& (0+255),f,b
 14994  00065C  D00B               	goto	l8839
 14995  00065E                     l8835:
 14996                           
 14997                           ; BSR set to: 0
 14998                           ;doprnt.c: 859: else if(integ >= 10.0)
 14999  00065E  DB94               	call	PL90	;call to abstracted procedure
 15000  000660  0E20               	movlw	32
 15001  000662  6F8D               	movwf	(___flge@ff2+2)& (0+255),b
 15002  000664  0E41               	movlw	65
 15003  000666  6F8E               	movwf	(___flge@ff2+3)& (0+255),b
 15004  000668  ECA3  F01B         	call	___flge	;wreg free
 15005  00066C  E303               	bnc	l8839
 15006                           
 15007                           ; BSR set to: 0
 15008                           ;doprnt.c: 860: exp++;
 15009  00066E  0102               	movlb	2	; () banked
 15010  000670  4BCB               	infsnz	sprintf@exp& (0+255),f,b
 15011  000672  2BCC               	incf	(sprintf@exp+1)& (0+255),f,b
 15012  000674                     l8839:
 15013                           
 15014                           ;doprnt.c: 861: }
 15015                           ;doprnt.c: 1121: if(prec <= 12)
 15016  000674  0102               	movlb	2	; () banked
 15017  000676  51D6               	movf	(sprintf@prec+1)& (0+255),w,b
 15018  000678  0A80               	xorlw	128
 15019  00067A  6EF3               	movwf	prodl,c
 15020  00067C  0E80               	movlw	128
 15021  00067E  5CF3               	subwf	prodl,w,c
 15022  000680  0E0D               	movlw	13
 15023  000682  B4D8               	btfsc	status,2,c
 15024  000684  5DD5               	subwf	sprintf@prec& (0+255),w,b
 15025  000686  E21D               	bc	l8843
 15026                           
 15027                           ; BSR set to: 2
 15028                           ;doprnt.c: 1122: fval += fround(prec);
 15029  000688  C2D1  F1C2         	movff	sprintf@fval,___fladd@f1
 15030  00068C  C2D2  F1C3         	movff	sprintf@fval+1,___fladd@f1+1
 15031  000690  C2D3  F1C4         	movff	sprintf@fval+2,___fladd@f1+2
 15032  000694  C2D4  F1C5         	movff	sprintf@fval+3,___fladd@f1+3
 15033  000698  51D5               	movf	sprintf@prec& (0+255),w,b
 15034  00069A  EC85  F00B         	call	_fround
 15035  00069E  C0A9  F1C6         	movff	?_fround,___fladd@f2
 15036  0006A2  C0AA  F1C7         	movff	?_fround+1,___fladd@f2+1
 15037  0006A6  C0AB  F1C8         	movff	?_fround+2,___fladd@f2+2
 15038  0006AA  C0AC  F1C9         	movff	?_fround+3,___fladd@f2+3
 15039  0006AE  EC66  F00C         	call	___fladd	;wreg free
 15040  0006B2  C1C2  F2D1         	movff	?___fladd,sprintf@fval
 15041  0006B6  C1C3  F2D2         	movff	?___fladd+1,sprintf@fval+1
 15042  0006BA  C1C4  F2D3         	movff	?___fladd+2,sprintf@fval+2
 15043  0006BE  C1C5  F2D4         	movff	?___fladd+3,sprintf@fval+3
 15044  0006C2                     l8843:
 15045                           
 15046                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 15047  0006C2  DB7F               	call	PL134	;call to abstracted procedure
 15048  0006C4  0E0A               	movlw	10
 15049  0006C6  B4D8               	btfsc	status,2,c
 15050  0006C8  5DCB               	subwf	sprintf@exp& (0+255),w,b
 15051  0006CA  E226               	bc	l8851
 15052                           
 15053                           ; BSR set to: 2
 15054  0006CC  EE22  F0D1         	lfsr	2,sprintf@fval
 15055  0006D0  50DE               	movf	postinc2,w,c
 15056  0006D2  10DE               	iorwf	postinc2,w,c
 15057  0006D4  10DE               	iorwf	postinc2,w,c
 15058  0006D6  10DE               	iorwf	postinc2,w,c
 15059  0006D8  E06E               	bz	l8867
 15060                           
 15061                           ; BSR set to: 2
 15062  0006DA  C2D1  F1BA         	movff	sprintf@fval,___fltol@f1
 15063  0006DE  C2D2  F1BB         	movff	sprintf@fval+1,___fltol@f1+1
 15064  0006E2  C2D3  F1BC         	movff	sprintf@fval+2,___fltol@f1+2
 15065  0006E6  C2D4  F1BD         	movff	sprintf@fval+3,___fltol@f1+3
 15066  0006EA  ECAC  F015         	call	___fltol	;wreg free
 15067  0006EE  C1BA  F1EF         	movff	?___fltol,??_sprintf
 15068  0006F2  C1BB  F1F0         	movff	?___fltol+1,??_sprintf+1
 15069  0006F6  C1BC  F1F1         	movff	?___fltol+2,??_sprintf+2
 15070  0006FA  C1BD  F1F2         	movff	?___fltol+3,??_sprintf+3
 15071  0006FE  51F2               	movf	(??_sprintf+3)& (0+255),w,b
 15072  000700  11EF               	iorwf	??_sprintf& (0+255),w,b
 15073  000702  11F0               	iorwf	(??_sprintf+1)& (0+255),w,b
 15074  000704  11F1               	iorwf	(??_sprintf+2)& (0+255),w,b
 15075  000706  E157               	bnz	l8867
 15076                           
 15077                           ; BSR set to: 1
 15078  000708  0102               	movlb	2	; () banked
 15079  00070A  51CC               	movf	(sprintf@exp+1)& (0+255),w,b
 15080  00070C  0A80               	xorlw	128
 15081  00070E  0F80               	addlw	-128
 15082  000710  0E02               	movlw	2
 15083  000712  B4D8               	btfsc	status,2,c
 15084  000714  5DCB               	subwf	sprintf@exp& (0+255),w,b
 15085  000716  E34F               	bnc	l8867
 15086  000718                     l8851:
 15087                           
 15088                           ; BSR set to: 2
 15089                           ;doprnt.c: 1129: if(integ < 4.294967296){
 15090  000718  C2C2  F087         	movff	sprintf@integ,___flge@ff1
 15091  00071C  C2C3  F088         	movff	sprintf@integ+1,___flge@ff1+1
 15092  000720  C2C4  F089         	movff	sprintf@integ+2,___flge@ff1+2
 15093  000724  C2C5  F08A         	movff	sprintf@integ+3,___flge@ff1+3
 15094  000728  0E5F               	movlw	95
 15095  00072A  0100               	movlb	0	; () banked
 15096  00072C  6F8B               	movwf	___flge@ff2& (0+255),b
 15097  00072E  0E70               	movlw	112
 15098  000730  6F8C               	movwf	(___flge@ff2+1)& (0+255),b
 15099  000732  0E89               	movlw	137
 15100  000734  6F8D               	movwf	(___flge@ff2+2)& (0+255),b
 15101  000736  0E40               	movlw	64
 15102  000738  6F8E               	movwf	(___flge@ff2+3)& (0+255),b
 15103  00073A  ECA3  F01B         	call	___flge	;wreg free
 15104  00073E  E203               	bc	l8855
 15105                           
 15106                           ; BSR set to: 0
 15107                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 15108  000740  0102               	movlb	2	; () banked
 15109  000742  0EF7               	movlw	247
 15110  000744  D002               	goto	L4
 15111  000746                     l8855:
 15112                           
 15113                           ; BSR set to: 0
 15114                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 15115  000746  0102               	movlb	2	; () banked
 15116  000748  0EF8               	movlw	248
 15117  00074A                     L4:
 15118  00074A  27CB               	addwf	sprintf@exp& (0+255),f,b
 15119  00074C  0EFF               	movlw	255
 15120  00074E  23CC               	addwfc	(sprintf@exp+1)& (0+255),f,b
 15121                           
 15122                           ; BSR set to: 2
 15123                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
 15124  000750  51CB               	movf	sprintf@exp& (0+255),w,b
 15125  000752  ECE8  F006         	call	_scale
 15126  000756  C0A9  F2C2         	movff	?_scale,sprintf@integ
 15127  00075A  C0AA  F2C3         	movff	?_scale+1,sprintf@integ+1
 15128  00075E  C0AB  F2C4         	movff	?_scale+2,sprintf@integ+2
 15129  000762  C0AC  F2C5         	movff	?_scale+3,sprintf@integ+3
 15130                           
 15131                           ; BSR set to: 0
 15132  000766  C2D1  F087         	movff	sprintf@fval,__div_to_l_@f1
 15133  00076A  C2D2  F088         	movff	sprintf@fval+1,__div_to_l_@f1+1
 15134  00076E  C2D3  F089         	movff	sprintf@fval+2,__div_to_l_@f1+2
 15135  000772  C2D4  F08A         	movff	sprintf@fval+3,__div_to_l_@f1+3
 15136  000776  C2C2  F08B         	movff	sprintf@integ,__div_to_l_@f2
 15137  00077A  C2C3  F08C         	movff	sprintf@integ+1,__div_to_l_@f2+1
 15138  00077E  C2C4  F08D         	movff	sprintf@integ+2,__div_to_l_@f2+2
 15139  000782  C2C5  F08E         	movff	sprintf@integ+3,__div_to_l_@f2+3
 15140  000786  EC53  F014         	call	__div_to_l_	;wreg free
 15141  00078A  C087  F2B4         	movff	?__div_to_l_,_sprintf$2428
 15142  00078E  C088  F2B5         	movff	?__div_to_l_+1,_sprintf$2428+1
 15143  000792  C089  F2B6         	movff	?__div_to_l_+2,_sprintf$2428+2
 15144  000796  C08A  F2B7         	movff	?__div_to_l_+3,_sprintf$2428+3
 15145                           
 15146                           ; BSR set to: 0
 15147  00079A  C2B4  F2C6         	movff	_sprintf$2428,sprintf@_val
 15148  00079E  C2B5  F2C7         	movff	_sprintf$2428+1,sprintf@_val+1
 15149  0007A2  C2B6  F2C8         	movff	_sprintf$2428+2,sprintf@_val+2
 15150  0007A6  C2B7  F2C9         	movff	_sprintf$2428+3,sprintf@_val+3
 15151                           
 15152                           ; BSR set to: 0
 15153                           ;doprnt.c: 1138: fval = 0.0;
 15154  0007AA  0102               	movlb	2	; () banked
 15155  0007AC  6BD1               	clrf	sprintf@fval& (0+255),b
 15156  0007AE  6BD2               	clrf	(sprintf@fval+1)& (0+255),b
 15157  0007B0  6BD3               	clrf	(sprintf@fval+2)& (0+255),b
 15158  0007B2  6BD4               	clrf	(sprintf@fval+3)& (0+255),b
 15159                           
 15160                           ;doprnt.c: 1139: } else {
 15161  0007B4  D039               	goto	l8871
 15162  0007B6                     l8867:
 15163                           
 15164                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
 15165  0007B6  C2D1  F1BA         	movff	sprintf@fval,___fltol@f1
 15166  0007BA  C2D2  F1BB         	movff	sprintf@fval+1,___fltol@f1+1
 15167  0007BE  C2D3  F1BC         	movff	sprintf@fval+2,___fltol@f1+2
 15168  0007C2  C2D4  F1BD         	movff	sprintf@fval+3,___fltol@f1+3
 15169  0007C6  ECAC  F015         	call	___fltol	;wreg free
 15170  0007CA  C1BA  F2C6         	movff	?___fltol,sprintf@_val
 15171  0007CE  C1BB  F2C7         	movff	?___fltol+1,sprintf@_val+1
 15172  0007D2  C1BC  F2C8         	movff	?___fltol+2,sprintf@_val+2
 15173  0007D6  C1BD  F2C9         	movff	?___fltol+3,sprintf@_val+3
 15174                           
 15175                           ;doprnt.c: 1141: fval -= (double)_val._val;
 15176  0007DA  C2D1  F1D1         	movff	sprintf@fval,___flsub@f1
 15177  0007DE  C2D2  F1D2         	movff	sprintf@fval+1,___flsub@f1+1
 15178  0007E2  C2D3  F1D3         	movff	sprintf@fval+2,___flsub@f1+2
 15179  0007E6  C2D4  F1D4         	movff	sprintf@fval+3,___flsub@f1+3
 15180  0007EA  C2C6  F091         	movff	sprintf@_val,___lltofl@c
 15181  0007EE  C2C7  F092         	movff	sprintf@_val+1,___lltofl@c+1
 15182  0007F2  C2C8  F093         	movff	sprintf@_val+2,___lltofl@c+2
 15183  0007F6  C2C9  F094         	movff	sprintf@_val+3,___lltofl@c+3
 15184  0007FA  ECB0  F01C         	call	___lltofl	;wreg free
 15185  0007FE  C091  F1D5         	movff	?___lltofl,___flsub@f2
 15186  000802  C092  F1D6         	movff	?___lltofl+1,___flsub@f2+1
 15187  000806  C093  F1D7         	movff	?___lltofl+2,___flsub@f2+2
 15188  00080A  C094  F1D8         	movff	?___lltofl+3,___flsub@f2+3
 15189  00080E  EC77  F01C         	call	___flsub	;wreg free
 15190  000812  C1D1  F2D1         	movff	?___flsub,sprintf@fval
 15191  000816  C1D2  F2D2         	movff	?___flsub+1,sprintf@fval+1
 15192  00081A  C1D3  F2D3         	movff	?___flsub+2,sprintf@fval+2
 15193  00081E  C1D4  F2D4         	movff	?___flsub+3,sprintf@fval+3
 15194                           
 15195                           ;doprnt.c: 1142: exp = 0;
 15196  000822  0102               	movlb	2	; () banked
 15197  000824  6BCB               	clrf	sprintf@exp& (0+255),b
 15198  000826  6BCC               	clrf	(sprintf@exp+1)& (0+255),b
 15199  000828                     l8871:
 15200                           
 15201                           ; BSR set to: 2
 15202                           ;doprnt.c: 1143: }
 15203                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 15204  000828  0E01               	movlw	1
 15205  00082A  6FD7               	movwf	sprintf@c& (0+255),b
 15206  00082C                     l8877:
 15207                           
 15208                           ; BSR set to: 2
 15209                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
 15210  00082C  DA72               	call	PL16	;call to abstracted procedure
 15211  00082E  DA94               	call	PL82	;call to abstracted procedure
 15212  000830  E304               	bnc	l8885
 15213                           
 15214                           ; BSR set to: 2
 15215  000832  2BD7               	incf	sprintf@c& (0+255),f,b
 15216                           
 15217                           ; BSR set to: 2
 15218  000834  51D7               	movf	sprintf@c& (0+255),w,b
 15219  000836  0A0A               	xorlw	10
 15220  000838  E1F9               	bnz	l8877
 15221  00083A                     l8885:
 15222                           
 15223                           ; BSR set to: 2
 15224                           ;doprnt.c: 1151: width -= prec + c + exp;
 15225  00083A  C2D7  F1EF         	movff	sprintf@c,??_sprintf
 15226  00083E  0101               	movlb	1	; () banked
 15227  000840  6BF0               	clrf	(??_sprintf+1)& (0+255),b
 15228  000842  BFEF               	btfsc	??_sprintf& (0+255),7,b
 15229  000844  07F0               	decf	(??_sprintf+1)& (0+255),f,b
 15230  000846  0102               	movlb	2	; () banked
 15231  000848  51D5               	movf	sprintf@prec& (0+255),w,b
 15232  00084A  0101               	movlb	1	; () banked
 15233  00084C  27EF               	addwf	??_sprintf& (0+255),f,b
 15234  00084E  0102               	movlb	2	; () banked
 15235  000850  51D6               	movf	(sprintf@prec+1)& (0+255),w,b
 15236  000852  0101               	movlb	1	; () banked
 15237  000854  23F0               	addwfc	(??_sprintf+1)& (0+255),f,b
 15238  000856  0102               	movlb	2	; () banked
 15239  000858  51CB               	movf	sprintf@exp& (0+255),w,b
 15240  00085A  0101               	movlb	1	; () banked
 15241  00085C  27EF               	addwf	??_sprintf& (0+255),f,b
 15242  00085E  0102               	movlb	2	; () banked
 15243  000860  51CC               	movf	(sprintf@exp+1)& (0+255),w,b
 15244  000862  0101               	movlb	1	; () banked
 15245  000864  23F0               	addwfc	(??_sprintf+1)& (0+255),f,b
 15246  000866  51EF               	movf	??_sprintf& (0+255),w,b
 15247  000868  0102               	movlb	2	; () banked
 15248  00086A  5FCF               	subwf	sprintf@width& (0+255),f,b
 15249  00086C  0101               	movlb	1	; () banked
 15250  00086E  51F0               	movf	(??_sprintf+1)& (0+255),w,b
 15251  000870  0102               	movlb	2	; () banked
 15252  000872  5BD0               	subwfb	(sprintf@width+1)& (0+255),f,b
 15253                           
 15254                           ;doprnt.c: 1152: if(
 15255                           ;doprnt.c: 1156: prec)
 15256  000874  51D6               	movf	(sprintf@prec+1)& (0+255),w,b
 15257  000876  11D5               	iorwf	sprintf@prec& (0+255),w,b
 15258  000878  E003               	bz	l8889
 15259                           
 15260                           ; BSR set to: 2
 15261                           ;doprnt.c: 1157: width--;
 15262  00087A  07CF               	decf	sprintf@width& (0+255),f,b
 15263  00087C  A0D8               	btfss	status,0,c
 15264  00087E  07D0               	decf	(sprintf@width+1)& (0+255),f,b
 15265  000880                     l8889:
 15266                           
 15267                           ; BSR set to: 2
 15268                           ;doprnt.c: 1158: if(flag & 0x03)
 15269  000880  C2CD  F1EF         	movff	sprintf@flag,??_sprintf
 15270  000884  0E03               	movlw	3
 15271  000886  0101               	movlb	1	; () banked
 15272  000888  17EF               	andwf	??_sprintf& (0+255),f,b
 15273  00088A  E004               	bz	l8893
 15274                           
 15275                           ; BSR set to: 1
 15276                           ;doprnt.c: 1159: width--;
 15277  00088C  0102               	movlb	2	; () banked
 15278  00088E  07CF               	decf	sprintf@width& (0+255),f,b
 15279  000890  A0D8               	btfss	status,0,c
 15280  000892  07D0               	decf	(sprintf@width+1)& (0+255),f,b
 15281  000894                     l8893:
 15282                           
 15283                           ;doprnt.c: 1162: if(flag & 0x04) {
 15284  000894  0102               	movlb	2	; () banked
 15285  000896  A5CD               	btfss	sprintf@flag& (0+255),2,b
 15286  000898  D022               	goto	l8915
 15287                           
 15288                           ; BSR set to: 2
 15289                           ;doprnt.c: 1166: if(flag & 0x03)
 15290  00089A  C2CD  F1EF         	movff	sprintf@flag,??_sprintf
 15291  00089E  0E03               	movlw	3
 15292  0008A0  0101               	movlb	1	; () banked
 15293  0008A2  17EF               	andwf	??_sprintf& (0+255),f,b
 15294  0008A4  E00D               	bz	l8907
 15295                           
 15296                           ; BSR set to: 1
 15297                           ;doprnt.c: 1168: ((*sp++ = ('-')));
 15298  0008A6  C1D9  FFD9         	movff	sprintf@sp,fsr2l
 15299  0008AA  C1DA  FFDA         	movff	sprintf@sp+1,fsr2h
 15300  0008AE  0E2D               	movlw	45
 15301  0008B0  6EDF               	movwf	indf2,c
 15302                           
 15303                           ; BSR set to: 1
 15304  0008B2  4BD9               	infsnz	sprintf@sp& (0+255),f,b
 15305  0008B4  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
 15306  0008B6  D004               	goto	l8907
 15307  0008B8                     l8901:
 15308                           
 15309                           ; BSR set to: 2
 15310                           ;doprnt.c: 1178: ((*sp++ = ('0')));
 15311                           
 15312                           ; BSR set to: 2
 15313                           
 15314                           ; BSR set to: 1
 15315                           ;doprnt.c: 1179: width--;
 15316  0008B8  DA36               	call	PL22	;call to abstracted procedure
 15317  0008BA  07CF               	decf	sprintf@width& (0+255),f,b
 15318  0008BC  A0D8               	btfss	status,0,c
 15319  0008BE  07D0               	decf	(sprintf@width+1)& (0+255),f,b
 15320  0008C0                     l8907:
 15321  0008C0  0102               	movlb	2	; () banked
 15322  0008C2  51D0               	movf	(sprintf@width+1)& (0+255),w,b
 15323  0008C4  DA72               	call	PL112	;call to abstracted procedure
 15324  0008C6  B4D8               	btfsc	status,2,c
 15325  0008C8  5DCF               	subwf	sprintf@width& (0+255),w,b
 15326  0008CA  E344               	bnc	l8931
 15327  0008CC  D7F5               	goto	l8901
 15328  0008CE                     l8909:
 15329                           
 15330                           ; BSR set to: 2
 15331                           ;doprnt.c: 1190: ((*sp++ = (' ')));
 15332  0008CE  C1D9  FFD9         	movff	sprintf@sp,fsr2l
 15333  0008D2  C1DA  FFDA         	movff	sprintf@sp+1,fsr2h
 15334  0008D6  0E20               	movlw	32
 15335                           
 15336                           ; BSR set to: 2
 15337                           
 15338                           ; BSR set to: 1
 15339                           ;doprnt.c: 1191: width--;
 15340  0008D8  DA38               	call	PL72	;call to abstracted procedure
 15341  0008DA  A0D8               	btfss	status,0,c
 15342  0008DC  07D0               	decf	(sprintf@width+1)& (0+255),f,b
 15343  0008DE                     l8915:
 15344                           
 15345                           ; BSR set to: 2
 15346  0008DE  51D0               	movf	(sprintf@width+1)& (0+255),w,b
 15347  0008E0  DA64               	call	PL112	;call to abstracted procedure
 15348  0008E2  B4D8               	btfsc	status,2,c
 15349  0008E4  5DCF               	subwf	sprintf@width& (0+255),w,b
 15350  0008E6  E2F3               	bc	l8909
 15351                           
 15352                           ; BSR set to: 2
 15353                           ;doprnt.c: 1192: }
 15354                           ;doprnt.c: 1197: if(flag & 0x03)
 15355  0008E8  C2CD  F1EF         	movff	sprintf@flag,??_sprintf
 15356  0008EC  0E03               	movlw	3
 15357  0008EE  0101               	movlb	1	; () banked
 15358  0008F0  17EF               	andwf	??_sprintf& (0+255),f,b
 15359  0008F2  E030               	bz	l8931
 15360                           
 15361                           ; BSR set to: 1
 15362                           ;doprnt.c: 1199: ((*sp++ = ('-')));
 15363  0008F4  C1D9  FFD9         	movff	sprintf@sp,fsr2l
 15364  0008F8  C1DA  FFDA         	movff	sprintf@sp+1,fsr2h
 15365  0008FC  0E2D               	movlw	45
 15366  0008FE  6EDF               	movwf	indf2,c
 15367  000900  0101               	movlb	1	; () banked
 15368  000902  4BD9               	infsnz	sprintf@sp& (0+255),f,b
 15369  000904  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
 15370  000906  D026               	goto	l8931
 15371  000908                     l8923:
 15372                           
 15373                           ; BSR set to: 2
 15374                           ;doprnt.c: 1209: {
 15375                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
 15376  000908  D9E6               	call	PL14	;call to abstracted procedure
 15377  00090A  EC0B  F019         	call	___lldiv	;wreg free
 15378  00090E  C087  F2B8         	movff	?___lldiv,sprintf@vd
 15379  000912  C088  F2B9         	movff	?___lldiv+1,sprintf@vd+1
 15380  000916  C089  F2BA         	movff	?___lldiv+2,sprintf@vd+2
 15381  00091A  C08A  F2BB         	movff	?___lldiv+3,sprintf@vd+3
 15382                           
 15383                           ; BSR set to: 0
 15384                           ;doprnt.c: 1211: vd %= 10;
 15385  00091E  C2B8  F094         	movff	sprintf@vd,___llmod@dividend
 15386  000922  C2B9  F095         	movff	sprintf@vd+1,___llmod@dividend+1
 15387  000926  C2BA  F096         	movff	sprintf@vd+2,___llmod@dividend+2
 15388  00092A  C2BB  F097         	movff	sprintf@vd+3,___llmod@dividend+3
 15389  00092E  DA37               	call	PL94	;call to abstracted procedure
 15390  000930  ECEA  F019         	call	___llmod	;wreg free
 15391  000934  C094  F2B8         	movff	?___llmod,sprintf@vd
 15392  000938  C095  F2B9         	movff	?___llmod+1,sprintf@vd+1
 15393  00093C  C096  F2BA         	movff	?___llmod+2,sprintf@vd+2
 15394  000940  C097  F2BB         	movff	?___llmod+3,sprintf@vd+3
 15395                           
 15396                           ; BSR set to: 0
 15397                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)));
 15398  000944  0102               	movlb	2	; () banked
 15399  000946  51B8               	movf	sprintf@vd& (0+255),w,b
 15400  000948  0F30               	addlw	48
 15401  00094A  C1D9  FFD9         	movff	sprintf@sp,fsr2l
 15402  00094E  C1DA  FFDA         	movff	sprintf@sp+1,fsr2h
 15403  000952  D7D5               	goto	L5
 15404  000954                     l8931:
 15405  000954  0102               	movlb	2	; () banked
 15406  000956  07D7               	decf	sprintf@c& (0+255),f,b
 15407  000958  29D7               	incf	sprintf@c& (0+255),w,b
 15408  00095A  E005               	bz	l8939
 15409  00095C  D7D5               	goto	l8923
 15410  00095E                     l8933:
 15411                           
 15412                           ; BSR set to: 2
 15413                           ;doprnt.c: 1217: ((*sp++ = ('0')));
 15414                           
 15415                           ; BSR set to: 2
 15416                           
 15417                           ; BSR set to: 1
 15418                           ;doprnt.c: 1218: exp--;
 15419  00095E  D9E3               	call	PL22	;call to abstracted procedure
 15420  000960  07CB               	decf	sprintf@exp& (0+255),f,b
 15421  000962  A0D8               	btfss	status,0,c
 15422  000964  07CC               	decf	(sprintf@exp+1)& (0+255),f,b
 15423  000966                     l8939:
 15424                           
 15425                           ; BSR set to: 2
 15426  000966  51CC               	movf	(sprintf@exp+1)& (0+255),w,b
 15427  000968  DA20               	call	PL112	;call to abstracted procedure
 15428  00096A  B4D8               	btfsc	status,2,c
 15429  00096C  5DCB               	subwf	sprintf@exp& (0+255),w,b
 15430  00096E  E2F7               	bc	l8933
 15431                           
 15432                           ; BSR set to: 2
 15433                           ;doprnt.c: 1219: }
 15434                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 15435  000970  51D6               	movf	(sprintf@prec+1)& (0+255),w,b
 15436  000972  0A80               	xorlw	128
 15437  000974  0F80               	addlw	-128
 15438  000976  0E09               	movlw	9
 15439  000978  B4D8               	btfsc	status,2,c
 15440  00097A  5DD5               	subwf	sprintf@prec& (0+255),w,b
 15441  00097C  E303               	bnc	l1309
 15442                           
 15443                           ; BSR set to: 2
 15444                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
 15445  00097E  0E08               	movlw	8
 15446  000980  6FD7               	movwf	sprintf@c& (0+255),b
 15447  000982  D002               	goto	l8945
 15448  000984                     l1309:
 15449                           
 15450                           ; BSR set to: 2
 15451                           ;doprnt.c: 1222: else
 15452                           ;doprnt.c: 1223: c = prec;
 15453  000984  C2D5  F2D7         	movff	sprintf@prec,sprintf@c
 15454  000988                     l8945:
 15455                           
 15456                           ; BSR set to: 2
 15457                           ;doprnt.c: 1224: prec -= c;
 15458  000988  51D7               	movf	sprintf@c& (0+255),w,b
 15459  00098A  5FD5               	subwf	sprintf@prec& (0+255),f,b
 15460  00098C  0E00               	movlw	0
 15461  00098E  BFD7               	btfsc	sprintf@c& (0+255),7,b
 15462  000990  0EFF               	movlw	255
 15463  000992  5BD6               	subwfb	(sprintf@prec+1)& (0+255),f,b
 15464                           
 15465                           ; BSR set to: 2
 15466                           ;doprnt.c: 1228: if(c)
 15467  000994  51D7               	movf	sprintf@c& (0+255),w,b
 15468  000996  E009               	bz	l8953
 15469                           
 15470                           ; BSR set to: 2
 15471                           ;doprnt.c: 1230: ((*sp++ = ('.')));
 15472  000998  C1D9  FFD9         	movff	sprintf@sp,fsr2l
 15473  00099C  C1DA  FFDA         	movff	sprintf@sp+1,fsr2h
 15474  0009A0  0E2E               	movlw	46
 15475  0009A2  6EDF               	movwf	indf2,c
 15476                           
 15477                           ; BSR set to: 2
 15478  0009A4  0101               	movlb	1	; () banked
 15479  0009A6  4BD9               	infsnz	sprintf@sp& (0+255),f,b
 15480  0009A8  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
 15481  0009AA                     l8953:
 15482                           
 15483                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
 15484  0009AA  0102               	movlb	2	; () banked
 15485  0009AC  51D7               	movf	sprintf@c& (0+255),w,b
 15486  0009AE  ECE8  F006         	call	_scale
 15487  0009B2  C0A9  F2B0         	movff	?_scale,_sprintf$3239
 15488  0009B6  C0AA  F2B1         	movff	?_scale+1,_sprintf$3239+1
 15489  0009BA  C0AB  F2B2         	movff	?_scale+2,_sprintf$3239+2
 15490  0009BE  C0AC  F2B3         	movff	?_scale+3,_sprintf$3239+3
 15491                           
 15492                           ; BSR set to: 0
 15493                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
 15494  0009C2  C2D1  F09A         	movff	sprintf@fval,___flmul@f2
 15495  0009C6  C2D2  F09B         	movff	sprintf@fval+1,___flmul@f2+1
 15496  0009CA  C2D3  F09C         	movff	sprintf@fval+2,___flmul@f2+2
 15497  0009CE  C2D4  F09D         	movff	sprintf@fval+3,___flmul@f2+3
 15498  0009D2  C2B0  F096         	movff	_sprintf$3239,___flmul@f1
 15499  0009D6  C2B1  F097         	movff	_sprintf$3239+1,___flmul@f1+1
 15500  0009DA  C2B2  F098         	movff	_sprintf$3239+2,___flmul@f1+2
 15501  0009DE  C2B3  F099         	movff	_sprintf$3239+3,___flmul@f1+3
 15502  0009E2  ECCF  F013         	call	___flmul	;wreg free
 15503  0009E6  C096  F1BA         	movff	?___flmul,___fltol@f1
 15504  0009EA  C097  F1BB         	movff	?___flmul+1,___fltol@f1+1
 15505  0009EE  C098  F1BC         	movff	?___flmul+2,___fltol@f1+2
 15506  0009F2  C099  F1BD         	movff	?___flmul+3,___fltol@f1+3
 15507  0009F6  ECAC  F015         	call	___fltol	;wreg free
 15508  0009FA  C1BA  F2C6         	movff	?___fltol,sprintf@_val
 15509  0009FE  C1BB  F2C7         	movff	?___fltol+1,sprintf@_val+1
 15510  000A02  C1BC  F2C8         	movff	?___fltol+2,sprintf@_val+2
 15511  000A06  C1BD  F2C9         	movff	?___fltol+3,sprintf@_val+3
 15512                           
 15513                           ;doprnt.c: 1237: while(c--) {
 15514  000A0A  D049               	goto	l8967
 15515  000A0C                     l8957:
 15516                           
 15517                           ; BSR set to: 2
 15518                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
 15519  000A0C  D964               	call	PL14	;call to abstracted procedure
 15520  000A0E  EC0B  F019         	call	___lldiv	;wreg free
 15521  000A12  C087  F2BC         	movff	?___lldiv,sprintf@vd_2430
 15522  000A16  C088  F2BD         	movff	?___lldiv+1,sprintf@vd_2430+1
 15523  000A1A  C089  F2BE         	movff	?___lldiv+2,sprintf@vd_2430+2
 15524  000A1E  C08A  F2BF         	movff	?___lldiv+3,sprintf@vd_2430+3
 15525                           
 15526                           ; BSR set to: 0
 15527                           ;doprnt.c: 1239: vd %= 10;
 15528  000A22  C2BC  F094         	movff	sprintf@vd_2430,___llmod@dividend
 15529  000A26  C2BD  F095         	movff	sprintf@vd_2430+1,___llmod@dividend+1
 15530  000A2A  C2BE  F096         	movff	sprintf@vd_2430+2,___llmod@dividend+2
 15531  000A2E  C2BF  F097         	movff	sprintf@vd_2430+3,___llmod@dividend+3
 15532  000A32  D9B5               	call	PL94	;call to abstracted procedure
 15533  000A34  ECEA  F019         	call	___llmod	;wreg free
 15534  000A38  C094  F2BC         	movff	?___llmod,sprintf@vd_2430
 15535  000A3C  C095  F2BD         	movff	?___llmod+1,sprintf@vd_2430+1
 15536  000A40  C096  F2BE         	movff	?___llmod+2,sprintf@vd_2430+2
 15537  000A44  C097  F2BF         	movff	?___llmod+3,sprintf@vd_2430+3
 15538                           
 15539                           ; BSR set to: 0
 15540                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)));
 15541  000A48  0102               	movlb	2	; () banked
 15542  000A4A  51BC               	movf	sprintf@vd_2430& (0+255),w,b
 15543  000A4C  0F30               	addlw	48
 15544  000A4E  C1D9  FFD9         	movff	sprintf@sp,fsr2l
 15545  000A52  C1DA  FFDA         	movff	sprintf@sp+1,fsr2h
 15546  000A56  6EDF               	movwf	indf2,c
 15547                           
 15548                           ; BSR set to: 2
 15549  000A58  0101               	movlb	1	; () banked
 15550  000A5A  4BD9               	infsnz	sprintf@sp& (0+255),f,b
 15551  000A5C  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
 15552                           
 15553                           ; BSR set to: 1
 15554                           ;doprnt.c: 1241: _val._val %= dpowers[c];
 15555  000A5E  C2C6  F094         	movff	sprintf@_val,___llmod@dividend
 15556  000A62  C2C7  F095         	movff	sprintf@_val+1,___llmod@dividend+1
 15557  000A66  C2C8  F096         	movff	sprintf@_val+2,___llmod@dividend+2
 15558  000A6A  C2C9  F097         	movff	sprintf@_val+3,___llmod@dividend+3
 15559  000A6E  0102               	movlb	2	; () banked
 15560  000A70  D950               	call	PL16	;call to abstracted procedure
 15561  000A72  0100               	movlb	0	; () banked
 15562  000A74  CFF5 F098          	movff	tablat,___llmod@divisor
 15563  000A78  0009               	tblrd		*+
 15564  000A7A  CFF5 F099          	movff	tablat,___llmod@divisor+1
 15565  000A7E  0009               	tblrd		*+
 15566  000A80  CFF5 F09A          	movff	tablat,___llmod@divisor+2
 15567  000A84  000A               	tblrd		*-
 15568  000A86  CFF5 F09B          	movff	tablat,___llmod@divisor+3
 15569  000A8A  ECEA  F019         	call	___llmod	;wreg free
 15570  000A8E  C094  F2C6         	movff	?___llmod,sprintf@_val
 15571  000A92  C095  F2C7         	movff	?___llmod+1,sprintf@_val+1
 15572  000A96  C096  F2C8         	movff	?___llmod+2,sprintf@_val+2
 15573  000A9A  C097  F2C9         	movff	?___llmod+3,sprintf@_val+3
 15574  000A9E                     l8967:
 15575  000A9E  0102               	movlb	2	; () banked
 15576  000AA0  07D7               	decf	sprintf@c& (0+255),f,b
 15577  000AA2  29D7               	incf	sprintf@c& (0+255),w,b
 15578  000AA4  E005               	bz	l8975
 15579  000AA6  D7B2               	goto	l8957
 15580  000AA8                     l8969:
 15581                           
 15582                           ; BSR set to: 2
 15583                           ;doprnt.c: 1245: ((*sp++ = ('0')));
 15584                           
 15585                           ; BSR set to: 2
 15586                           
 15587                           ; BSR set to: 1
 15588                           ;doprnt.c: 1246: prec--;
 15589  000AA8  D93E               	call	PL22	;call to abstracted procedure
 15590  000AAA  07D5               	decf	sprintf@prec& (0+255),f,b
 15591  000AAC  A0D8               	btfss	status,0,c
 15592  000AAE  07D6               	decf	(sprintf@prec+1)& (0+255),f,b
 15593  000AB0                     l8975:
 15594                           
 15595                           ; BSR set to: 2
 15596  000AB0  51D6               	movf	(sprintf@prec+1)& (0+255),w,b
 15597  000AB2  11D5               	iorwf	sprintf@prec& (0+255),w,b
 15598  000AB4  E101 D104          	bz	l9061
 15599  000AB8  D7F7               	goto	l8969
 15600  000ABA                     l8977:
 15601                           
 15602                           ; BSR set to: 2
 15603                           ;doprnt.c: 1255: }
 15604                           ;doprnt.c: 1282: {
 15605                           ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 15606  000ABA  C2C0  FFD9         	movff	sprintf@ap,fsr2l
 15607  000ABE  C2C1  FFDA         	movff	sprintf@ap+1,fsr2h
 15608  000AC2  CFDE F1EF          	movff	postinc2,??_sprintf
 15609  000AC6  CFDD F1F0          	movff	postdec2,??_sprintf+1
 15610  000ACA  C1EF  F2C6         	movff	??_sprintf,sprintf@_val
 15611  000ACE  C1F0  F2C7         	movff	??_sprintf+1,sprintf@_val+1
 15612  000AD2  6BC8               	clrf	(sprintf@_val+2)& (0+255),b
 15613  000AD4  6BC9               	clrf	(sprintf@_val+3)& (0+255),b
 15614                           
 15615                           ; BSR set to: 2
 15616  000AD6  0E02               	movlw	2
 15617  000AD8  27C0               	addwf	sprintf@ap& (0+255),f,b
 15618  000ADA  0E00               	movlw	0
 15619  000ADC  23C1               	addwfc	(sprintf@ap+1)& (0+255),f,b
 15620                           
 15621                           ; BSR set to: 2
 15622                           ;doprnt.c: 1296: }
 15623                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
 15624  000ADE  51D6               	movf	(sprintf@prec+1)& (0+255),w,b
 15625  000AE0  11D5               	iorwf	sprintf@prec& (0+255),w,b
 15626  000AE2  E107               	bnz	l8987
 15627                           
 15628                           ; BSR set to: 2
 15629  000AE4  51C9               	movf	(sprintf@_val+3)& (0+255),w,b
 15630  000AE6  11C6               	iorwf	sprintf@_val& (0+255),w,b
 15631  000AE8  11C7               	iorwf	(sprintf@_val+1)& (0+255),w,b
 15632  000AEA  11C8               	iorwf	(sprintf@_val+2)& (0+255),w,b
 15633  000AEC  E102               	bnz	l8987
 15634                           
 15635                           ; BSR set to: 2
 15636                           ;doprnt.c: 1300: prec++;
 15637  000AEE  4BD5               	infsnz	sprintf@prec& (0+255),f,b
 15638  000AF0  2BD6               	incf	(sprintf@prec+1)& (0+255),f,b
 15639  000AF2                     l8987:
 15640                           
 15641                           ; BSR set to: 2
 15642                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 15643  000AF2  0E01               	movlw	1
 15644  000AF4  6FD7               	movwf	sprintf@c& (0+255),b
 15645  000AF6                     l8993:
 15646                           
 15647                           ; BSR set to: 2
 15648                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
 15649  000AF6  D90D               	call	PL16	;call to abstracted procedure
 15650  000AF8  D92F               	call	PL82	;call to abstracted procedure
 15651  000AFA  E304               	bnc	l9001
 15652                           
 15653                           ; BSR set to: 2
 15654  000AFC  2BD7               	incf	sprintf@c& (0+255),f,b
 15655                           
 15656                           ; BSR set to: 2
 15657  000AFE  51D7               	movf	sprintf@c& (0+255),w,b
 15658  000B00  0A0A               	xorlw	10
 15659  000B02  E1F9               	bnz	l8993
 15660  000B04                     l9001:
 15661                           
 15662                           ; BSR set to: 2
 15663                           ;doprnt.c: 1348: if(c < prec)
 15664  000B04  D957               	call	PL132	;call to abstracted procedure
 15665  000B06  51D5               	movf	sprintf@prec& (0+255),w,b
 15666  000B08  5DD7               	subwf	sprintf@c& (0+255),w,b
 15667  000B0A  51D6               	movf	(sprintf@prec+1)& (0+255),w,b
 15668  000B0C  0A80               	xorlw	128
 15669  000B0E  0101               	movlb	1	; () banked
 15670  000B10  59EF               	subwfb	??_sprintf& (0+255),w,b
 15671  000B12  E203               	bc	l9005
 15672                           
 15673                           ; BSR set to: 1
 15674                           ;doprnt.c: 1349: c = prec;
 15675  000B14  C2D5  F2D7         	movff	sprintf@prec,sprintf@c
 15676  000B18  D014               	goto	l9009
 15677  000B1A                     l9005:
 15678                           
 15679                           ; BSR set to: 1
 15680                           ;doprnt.c: 1350: else if(prec < c)
 15681  000B1A  0102               	movlb	2	; () banked
 15682  000B1C  51D6               	movf	(sprintf@prec+1)& (0+255),w,b
 15683  000B1E  0A80               	xorlw	128
 15684  000B20  0101               	movlb	1	; () banked
 15685  000B22  6FEF               	movwf	??_sprintf& (0+255),b
 15686  000B24  0102               	movlb	2	; () banked
 15687  000B26  51D7               	movf	sprintf@c& (0+255),w,b
 15688  000B28  5DD5               	subwf	sprintf@prec& (0+255),w,b
 15689  000B2A  0E80               	movlw	128
 15690  000B2C  BFD7               	btfsc	sprintf@c& (0+255),7,b
 15691  000B2E  0E7F               	movlw	127
 15692  000B30  0101               	movlb	1	; () banked
 15693  000B32  59EF               	subwfb	??_sprintf& (0+255),w,b
 15694  000B34  E206               	bc	l9009
 15695                           
 15696                           ; BSR set to: 1
 15697                           ;doprnt.c: 1351: prec = c;
 15698  000B36  0102               	movlb	2	; () banked
 15699  000B38  51D7               	movf	sprintf@c& (0+255),w,b
 15700  000B3A  6FD5               	movwf	sprintf@prec& (0+255),b
 15701  000B3C  6BD6               	clrf	(sprintf@prec+1)& (0+255),b
 15702  000B3E  BFD5               	btfsc	sprintf@prec& (0+255),7,b
 15703  000B40  07D6               	decf	(sprintf@prec+1)& (0+255),f,b
 15704  000B42                     l9009:
 15705                           
 15706                           ;doprnt.c: 1354: if(width && flag & 0x03)
 15707  000B42  0102               	movlb	2	; () banked
 15708  000B44  51D0               	movf	(sprintf@width+1)& (0+255),w,b
 15709  000B46  11CF               	iorwf	sprintf@width& (0+255),w,b
 15710  000B48  E00A               	bz	l9015
 15711                           
 15712                           ; BSR set to: 2
 15713  000B4A  C2CD  F1EF         	movff	sprintf@flag,??_sprintf
 15714  000B4E  0E03               	movlw	3
 15715  000B50  0101               	movlb	1	; () banked
 15716  000B52  17EF               	andwf	??_sprintf& (0+255),f,b
 15717  000B54  E004               	bz	l9015
 15718                           
 15719                           ; BSR set to: 1
 15720                           ;doprnt.c: 1355: width--;
 15721  000B56  0102               	movlb	2	; () banked
 15722  000B58  07CF               	decf	sprintf@width& (0+255),f,b
 15723  000B5A  A0D8               	btfss	status,0,c
 15724  000B5C  07D0               	decf	(sprintf@width+1)& (0+255),f,b
 15725  000B5E                     l9015:
 15726                           
 15727                           ;doprnt.c: 1357: if(flag & 0x4000) {
 15728  000B5E  0102               	movlb	2	; () banked
 15729  000B60  ADCE               	btfss	(sprintf@flag+1)& (0+255),6,b
 15730  000B62  D015               	goto	l9021
 15731                           
 15732                           ; BSR set to: 2
 15733                           ;doprnt.c: 1358: if(width > prec)
 15734  000B64  51D6               	movf	(sprintf@prec+1)& (0+255),w,b
 15735  000B66  0A80               	xorlw	128
 15736  000B68  0101               	movlb	1	; () banked
 15737  000B6A  6FEF               	movwf	??_sprintf& (0+255),b
 15738  000B6C  0102               	movlb	2	; () banked
 15739  000B6E  51CF               	movf	sprintf@width& (0+255),w,b
 15740  000B70  5DD5               	subwf	sprintf@prec& (0+255),w,b
 15741  000B72  51D0               	movf	(sprintf@width+1)& (0+255),w,b
 15742  000B74  0A80               	xorlw	128
 15743  000B76  0101               	movlb	1	; () banked
 15744  000B78  59EF               	subwfb	??_sprintf& (0+255),w,b
 15745  000B7A  E206               	bc	l1327
 15746                           
 15747                           ; BSR set to: 1
 15748                           ;doprnt.c: 1359: width -= prec;
 15749  000B7C  0102               	movlb	2	; () banked
 15750  000B7E  51D5               	movf	sprintf@prec& (0+255),w,b
 15751  000B80  5FCF               	subwf	sprintf@width& (0+255),f,b
 15752  000B82  51D6               	movf	(sprintf@prec+1)& (0+255),w,b
 15753  000B84  5BD0               	subwfb	(sprintf@width+1)& (0+255),f,b
 15754  000B86  D003               	goto	l9021
 15755  000B88                     l1327:
 15756                           
 15757                           ; BSR set to: 1
 15758                           ;doprnt.c: 1360: else
 15759                           ;doprnt.c: 1361: width = 0;
 15760  000B88  0102               	movlb	2	; () banked
 15761  000B8A  6BCF               	clrf	sprintf@width& (0+255),b
 15762  000B8C  6BD0               	clrf	(sprintf@width+1)& (0+255),b
 15763  000B8E                     l9021:
 15764                           
 15765                           ; BSR set to: 2
 15766                           ;doprnt.c: 1362: }
 15767                           ;doprnt.c: 1390: if(width > c)
 15768  000B8E  D912               	call	PL132	;call to abstracted procedure
 15769  000B90  51CF               	movf	sprintf@width& (0+255),w,b
 15770  000B92  5DD7               	subwf	sprintf@c& (0+255),w,b
 15771  000B94  51D0               	movf	(sprintf@width+1)& (0+255),w,b
 15772  000B96  0A80               	xorlw	128
 15773  000B98  0101               	movlb	1	; () banked
 15774  000B9A  59EF               	subwfb	??_sprintf& (0+255),w,b
 15775  000B9C  E208               	bc	l1329
 15776                           
 15777                           ; BSR set to: 1
 15778                           ;doprnt.c: 1391: width -= c;
 15779  000B9E  0102               	movlb	2	; () banked
 15780  000BA0  51D7               	movf	sprintf@c& (0+255),w,b
 15781  000BA2  5FCF               	subwf	sprintf@width& (0+255),f,b
 15782  000BA4  0E00               	movlw	0
 15783  000BA6  BFD7               	btfsc	sprintf@c& (0+255),7,b
 15784  000BA8  0EFF               	movlw	255
 15785  000BAA  5BD0               	subwfb	(sprintf@width+1)& (0+255),f,b
 15786  000BAC  D003               	goto	l1330
 15787  000BAE                     l1329:
 15788                           
 15789                           ; BSR set to: 1
 15790                           ;doprnt.c: 1392: else
 15791                           ;doprnt.c: 1393: width = 0;
 15792  000BAE  0102               	movlb	2	; () banked
 15793  000BB0  6BCF               	clrf	sprintf@width& (0+255),b
 15794  000BB2  6BD0               	clrf	(sprintf@width+1)& (0+255),b
 15795  000BB4                     l1330:
 15796                           
 15797                           ; BSR set to: 2
 15798                           ;doprnt.c: 1396: if(flag & 0x04) {
 15799  000BB4  A5CD               	btfss	sprintf@flag& (0+255),2,b
 15800  000BB6  D017               	goto	l9039
 15801                           
 15802                           ; BSR set to: 2
 15803                           ;doprnt.c: 1401: if(flag & 0x03)
 15804  000BB8  C2CD  F1EF         	movff	sprintf@flag,??_sprintf
 15805  000BBC  0E03               	movlw	3
 15806  000BBE  0101               	movlb	1	; () banked
 15807  000BC0  17EF               	andwf	??_sprintf& (0+255),f,b
 15808  000BC2  E008               	bz	l9031
 15809                           
 15810                           ; BSR set to: 1
 15811                           ;doprnt.c: 1402: ((*sp++ = ('-')));
 15812  000BC4  C1D9  FFD9         	movff	sprintf@sp,fsr2l
 15813  000BC8  C1DA  FFDA         	movff	sprintf@sp+1,fsr2h
 15814  000BCC  0E2D               	movlw	45
 15815  000BCE  6EDF               	movwf	indf2,c
 15816                           
 15817                           ; BSR set to: 1
 15818  000BD0  4BD9               	infsnz	sprintf@sp& (0+255),f,b
 15819  000BD2  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
 15820  000BD4                     l9031:
 15821                           
 15822                           ; BSR set to: 1
 15823                           ;doprnt.c: 1424: if(width)
 15824  000BD4  0102               	movlb	2	; () banked
 15825  000BD6  51D0               	movf	(sprintf@width+1)& (0+255),w,b
 15826  000BD8  11CF               	iorwf	sprintf@width& (0+255),w,b
 15827  000BDA  E06A               	bz	l9059
 15828                           
 15829                           ; BSR set to: 2
 15830                           ;doprnt.c: 1426: ((*sp++ = ('0')));
 15831                           
 15832                           ; BSR set to: 2
 15833                           
 15834                           ; BSR set to: 1
 15835                           ;doprnt.c: 1427: while(--width);
 15836  000BDC  D8A4               	call	PL22	;call to abstracted procedure
 15837  000BDE  07CF               	decf	sprintf@width& (0+255),f,b
 15838  000BE0  A0D8               	btfss	status,0,c
 15839  000BE2  07D0               	decf	(sprintf@width+1)& (0+255),f,b
 15840  000BE4  D7F7               	goto	l9031
 15841  000BE6                     l9039:
 15842                           
 15843                           ; BSR set to: 2
 15844                           ;doprnt.c: 1431: {
 15845                           ;doprnt.c: 1433: if(width
 15846                           ;doprnt.c: 1437: )
 15847  000BE6  51D0               	movf	(sprintf@width+1)& (0+255),w,b
 15848  000BE8  11CF               	iorwf	sprintf@width& (0+255),w,b
 15849  000BEA  E00B               	bz	l9047
 15850  000BEC                     l9041:
 15851                           
 15852                           ; BSR set to: 2
 15853                           ;doprnt.c: 1439: ((*sp++ = (' ')));
 15854  000BEC  C1D9  FFD9         	movff	sprintf@sp,fsr2l
 15855  000BF0  C1DA  FFDA         	movff	sprintf@sp+1,fsr2h
 15856  000BF4  0E20               	movlw	32
 15857                           
 15858                           ; BSR set to: 2
 15859                           
 15860                           ; BSR set to: 1
 15861                           ;doprnt.c: 1440: while(--width);
 15862  000BF6  D8A9               	call	PL72	;call to abstracted procedure
 15863  000BF8  A0D8               	btfss	status,0,c
 15864  000BFA  07D0               	decf	(sprintf@width+1)& (0+255),f,b
 15865  000BFC  51D0               	movf	(sprintf@width+1)& (0+255),w,b
 15866  000BFE  11CF               	iorwf	sprintf@width& (0+255),w,b
 15867  000C00  E1F5               	bnz	l9041
 15868  000C02                     l9047:
 15869                           
 15870                           ; BSR set to: 2
 15871                           ;doprnt.c: 1447: if(flag & 0x03)
 15872  000C02  C2CD  F1EF         	movff	sprintf@flag,??_sprintf
 15873  000C06  0E03               	movlw	3
 15874  000C08  0101               	movlb	1	; () banked
 15875  000C0A  17EF               	andwf	??_sprintf& (0+255),f,b
 15876  000C0C  E051               	bz	l9059
 15877                           
 15878                           ; BSR set to: 1
 15879                           ;doprnt.c: 1448: ((*sp++ = ('-')));
 15880  000C0E  C1D9  FFD9         	movff	sprintf@sp,fsr2l
 15881  000C12  C1DA  FFDA         	movff	sprintf@sp+1,fsr2h
 15882  000C16  0E2D               	movlw	45
 15883  000C18  6EDF               	movwf	indf2,c
 15884  000C1A                     l9051:
 15885  000C1A  0101               	movlb	1	; () banked
 15886  000C1C  4BD9               	infsnz	sprintf@sp& (0+255),f,b
 15887  000C1E  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
 15888  000C20  D047               	goto	l9059
 15889  000C22                     l9053:
 15890                           
 15891                           ; BSR set to: 2
 15892                           ;doprnt.c: 1487: {
 15893                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
 15894  000C22  C2D5  F1EF         	movff	sprintf@prec,??_sprintf
 15895  000C26  C2D6  F1F0         	movff	sprintf@prec+1,??_sprintf+1
 15896  000C2A  0101               	movlb	1	; () banked
 15897  000C2C  90D8               	bcf	status,0,c
 15898  000C2E  37EF               	rlcf	??_sprintf& (0+255),f,b
 15899  000C30  37F0               	rlcf	(??_sprintf+1)& (0+255),f,b
 15900  000C32  90D8               	bcf	status,0,c
 15901  000C34  37EF               	rlcf	??_sprintf& (0+255),f,b
 15902  000C36  37F0               	rlcf	(??_sprintf+1)& (0+255),f,b
 15903  000C38  0E9E               	movlw	low _dpowers
 15904  000C3A  25EF               	addwf	??_sprintf& (0+255),w,b
 15905  000C3C  6EF6               	movwf	tblptrl,c
 15906  000C3E  0EFF               	movlw	high _dpowers
 15907  000C40  21F0               	addwfc	(??_sprintf+1)& (0+255),w,b
 15908  000C42  6EF7               	movwf	tblptrh,c
 15909  000C44                     	if	0	;There are less than 3 active tblptr bytes
 15910  000C44                     	endif
 15911  000C44  0009               	tblrd		*+
 15912  000C46  0100               	movlb	0	; () banked
 15913  000C48  CFF5 F08B          	movff	tablat,___lldiv@divisor
 15914  000C4C  0009               	tblrd		*+
 15915  000C4E  CFF5 F08C          	movff	tablat,___lldiv@divisor+1
 15916  000C52  0009               	tblrd		*+
 15917  000C54  CFF5 F08D          	movff	tablat,___lldiv@divisor+2
 15918  000C58  000A               	tblrd		*-
 15919  000C5A  CFF5 F08E          	movff	tablat,___lldiv@divisor+3
 15920  000C5E  C2C6  F087         	movff	sprintf@_val,___lldiv@dividend
 15921  000C62  C2C7  F088         	movff	sprintf@_val+1,___lldiv@dividend+1
 15922  000C66  C2C8  F089         	movff	sprintf@_val+2,___lldiv@dividend+2
 15923  000C6A  C2C9  F08A         	movff	sprintf@_val+3,___lldiv@dividend+3
 15924  000C6E  EC0B  F019         	call	___lldiv	;wreg free
 15925  000C72  C087  F094         	movff	?___lldiv,___llmod@dividend
 15926  000C76  C088  F095         	movff	?___lldiv+1,___llmod@dividend+1
 15927  000C7A  C089  F096         	movff	?___lldiv+2,___llmod@dividend+2
 15928  000C7E  C08A  F097         	movff	?___lldiv+3,___llmod@dividend+3
 15929  000C82  D88D               	call	PL94	;call to abstracted procedure
 15930  000C84  ECEA  F019         	call	___llmod	;wreg free
 15931  000C88  C094  F1F1         	movff	?___llmod,??_sprintf+2
 15932  000C8C  C095  F1F2         	movff	?___llmod+1,??_sprintf+3
 15933  000C90  C096  F1F3         	movff	?___llmod+2,??_sprintf+4
 15934  000C94  C097  F1F4         	movff	?___llmod+3,??_sprintf+5
 15935  000C98  0101               	movlb	1	; () banked
 15936  000C9A  51F1               	movf	(??_sprintf+2)& (0+255),w,b
 15937  000C9C  0F30               	addlw	48
 15938  000C9E  0102               	movlb	2	; () banked
 15939  000CA0  6FD7               	movwf	sprintf@c& (0+255),b
 15940                           
 15941                           ; BSR set to: 2
 15942                           ;doprnt.c: 1532: }
 15943                           ;doprnt.c: 1533: ((*sp++ = (c)));
 15944  000CA2  C1D9  FFD9         	movff	sprintf@sp,fsr2l
 15945  000CA6  C1DA  FFDA         	movff	sprintf@sp+1,fsr2h
 15946  000CAA  C2D7  FFDF         	movff	sprintf@c,indf2
 15947  000CAE  D7B5               	goto	l9051
 15948  000CB0                     l9059:
 15949  000CB0  0102               	movlb	2	; () banked
 15950  000CB2  07D5               	decf	sprintf@prec& (0+255),f,b
 15951  000CB4  A0D8               	btfss	status,0,c
 15952  000CB6  07D6               	decf	(sprintf@prec+1)& (0+255),f,b
 15953  000CB8  29D5               	incf	sprintf@prec& (0+255),w,b
 15954  000CBA  B4D8               	btfsc	status,2,c
 15955  000CBC  29D6               	incf	(sprintf@prec+1)& (0+255),w,b
 15956  000CBE  E1B1               	bnz	l9053
 15957  000CC0                     l9061:
 15958  000CC0  D857               	call	PL84	;call to abstracted procedure
 15959  000CC2  67D7               	tstfsz	sprintf@c& (0+255),b
 15960  000CC4  EF01  F002         	goto	l8749
 15961  000CC8                     l9063:
 15962                           
 15963                           ; BSR set to: 2
 15964                           ;doprnt.c: 1547: *sp = 0;
 15965  000CC8  C1D9  FFD9         	movff	sprintf@sp,fsr2l
 15966  000CCC  C1DA  FFDA         	movff	sprintf@sp+1,fsr2h
 15967  000CD0  0E00               	movlw	0
 15968  000CD2  6EDF               	movwf	indf2,c
 15969                           
 15970                           ; BSR set to: 2
 15971  000CD4  0C00               	retlw	0
 15972  000CD6                     __end_of_sprintf:
 15973                           	opt stack 0
 15974  000CD6                     PL14:
 15975                           	opt stack 18
 15976  000CD6  C2C6  F087         	movff	sprintf@_val,___lldiv@dividend
 15977  000CDA  C2C7  F088         	movff	sprintf@_val+1,___lldiv@dividend+1
 15978  000CDE  C2C8  F089         	movff	sprintf@_val+2,___lldiv@dividend+2
 15979  000CE2  C2C9  F08A         	movff	sprintf@_val+3,___lldiv@dividend+3
 15980  000CE6  51D7               	movf	sprintf@c& (0+255),w,b
 15981  000CE8  0D04               	mullw	4
 15982  000CEA  0E9E               	movlw	low _dpowers
 15983  000CEC  24F3               	addwf	prodl,w,c
 15984  000CEE  6EF6               	movwf	tblptrl,c
 15985  000CF0  0EFF               	movlw	high _dpowers
 15986  000CF2  20F4               	addwfc	prodh,w,c
 15987  000CF4  6EF7               	movwf	tblptrh,c
 15988  000CF6                     	if	0	;There are less than 3 active tblptr bytes
 15989  000CF6                     	endif
 15990  000CF6  0009               	tblrd		*+
 15991  000CF8  0100               	movlb	0	; () banked
 15992  000CFA  CFF5 F08B          	movff	tablat,___lldiv@divisor
 15993  000CFE  0009               	tblrd		*+
 15994  000D00  CFF5 F08C          	movff	tablat,___lldiv@divisor+1
 15995  000D04  0009               	tblrd		*+
 15996  000D06  CFF5 F08D          	movff	tablat,___lldiv@divisor+2
 15997  000D0A  000A               	tblrd		*-
 15998  000D0C  CFF5 F08E          	movff	tablat,___lldiv@divisor+3
 15999  000D10  0012               	return	
 16000  000D12                     __end_ofPL14:
 16001                           	opt stack 0
 16002  000D12                     PL16:
 16003                           	opt stack 18
 16004  000D12  51D7               	movf	sprintf@c& (0+255),w,b
 16005  000D14  0D04               	mullw	4
 16006  000D16  0E9E               	movlw	low _dpowers
 16007  000D18  24F3               	addwf	prodl,w,c
 16008  000D1A  6EF6               	movwf	tblptrl,c
 16009  000D1C  0EFF               	movlw	high _dpowers
 16010  000D1E  20F4               	addwfc	prodh,w,c
 16011  000D20  6EF7               	movwf	tblptrh,c
 16012  000D22                     	if	0	;There are less than 3 active tblptr bytes
 16013  000D22                     	endif
 16014  000D22  0009               	tblrd		*+
 16015  000D24  0012               	return	
 16016  000D26                     __end_ofPL16:
 16017                           	opt stack 0
 16018  000D26                     PL22:
 16019                           	opt stack 18
 16020  000D26  C1D9  FFD9         	movff	sprintf@sp,fsr2l
 16021  000D2A  C1DA  FFDA         	movff	sprintf@sp+1,fsr2h
 16022  000D2E  0E30               	movlw	48
 16023  000D30  6EDF               	movwf	indf2,c
 16024  000D32  0101               	movlb	1	; () banked
 16025  000D34  4BD9               	infsnz	sprintf@sp& (0+255),f,b
 16026  000D36  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
 16027  000D38  0102               	movlb	2	; () banked
 16028  000D3A  0C30               	retlw	48
 16029  000D3C                     __end_ofPL22:
 16030                           	opt stack 0
 16031  000D3C                     PL44:
 16032                           	opt stack 18
 16033  000D3C  C1DB  FFF6         	movff	sprintf@f,tblptrl
 16034  000D40  C1DC  FFF7         	movff	sprintf@f+1,tblptrh
 16035  000D44                     	if	0	;tblptru may be non-zero
 16036  000D44                     	endif
 16037  000D44                     	if	0	;tblptru may be non-zero
 16038  000D44                     	endif
 16039  000D44  0008               	tblrd		*
 16040  000D46  50F5               	movf	tablat,w,c
 16041  000D48  0012               	return	
 16042  000D4A                     __end_ofPL44:
 16043                           	opt stack 0
 16044  000D4A                     PL72:
 16045                           	opt stack 18
 16046  000D4A  6EDF               	movwf	indf2,c
 16047  000D4C  0101               	movlb	1	; () banked
 16048  000D4E  4BD9               	infsnz	sprintf@sp& (0+255),f,b
 16049  000D50  2BDA               	incf	(sprintf@sp+1)& (0+255),f,b
 16050  000D52  0102               	movlb	2	; () banked
 16051  000D54  07CF               	decf	sprintf@width& (0+255),f,b
 16052  000D56  0012               	return	
 16053  000D58                     __end_ofPL72:
 16054                           	opt stack 0
 16055  000D58                     PL82:
 16056                           	opt stack 18
 16057  000D58  50F5               	movf	tablat,w,c
 16058  000D5A  5DC6               	subwf	sprintf@_val& (0+255),w,b
 16059  000D5C  0009               	tblrd		*+
 16060  000D5E  50F5               	movf	tablat,w,c
 16061  000D60  59C7               	subwfb	(sprintf@_val+1)& (0+255),w,b
 16062  000D62  0009               	tblrd		*+
 16063  000D64  50F5               	movf	tablat,w,c
 16064  000D66  59C8               	subwfb	(sprintf@_val+2)& (0+255),w,b
 16065  000D68  0009               	tblrd		*+
 16066  000D6A  50F5               	movf	tablat,w,c
 16067  000D6C  59C9               	subwfb	(sprintf@_val+3)& (0+255),w,b
 16068  000D6E  0012               	return	
 16069  000D70                     __end_ofPL82:
 16070                           	opt stack 0
 16071  000D70                     PL84:
 16072                           	opt stack 18
 16073  000D70  0101               	movlb	1	; () banked
 16074  000D72  C1DB  FFF6         	movff	sprintf@f,tblptrl
 16075  000D76  C1DC  FFF7         	movff	sprintf@f+1,tblptrh
 16076  000D7A  4BDB               	infsnz	sprintf@f& (0+255),f,b
 16077  000D7C  2BDC               	incf	(sprintf@f+1)& (0+255),f,b
 16078  000D7E                     	if	0	;tblptru may be non-zero
 16079  000D7E                     	endif
 16080  000D7E                     	if	0	;tblptru may be non-zero
 16081  000D7E                     	endif
 16082  000D7E  0008               	tblrd		*
 16083  000D80  CFF5 F2D7          	movff	tablat,sprintf@c
 16084  000D84  0102               	movlb	2	; () banked
 16085  000D86  0012               	return	
 16086  000D88                     __end_ofPL84:
 16087                           	opt stack 0
 16088  000D88                     PL90:
 16089                           	opt stack 18
 16090  000D88  C2C2  F087         	movff	sprintf@integ,___flge@ff1
 16091  000D8C  C2C3  F088         	movff	sprintf@integ+1,___flge@ff1+1
 16092  000D90  C2C4  F089         	movff	sprintf@integ+2,___flge@ff1+2
 16093  000D94  C2C5  F08A         	movff	sprintf@integ+3,___flge@ff1+3
 16094  000D98  6B8B               	clrf	___flge@ff2& (0+255),b
 16095  000D9A  6B8C               	clrf	(___flge@ff2+1)& (0+255),b
 16096  000D9C  0012               	return	
 16097  000D9E                     __end_ofPL90:
 16098                           	opt stack 0
 16099  000D9E                     PL94:
 16100                           	opt stack 18
 16101  000D9E  0E0A               	movlw	10
 16102  000DA0  6F98               	movwf	___llmod@divisor& (0+255),b
 16103  000DA2  6B99               	clrf	(___llmod@divisor+1)& (0+255),b
 16104  000DA4  6B9A               	clrf	(___llmod@divisor+2)& (0+255),b
 16105  000DA6  6B9B               	clrf	(___llmod@divisor+3)& (0+255),b
 16106  000DA8  0C00               	retlw	0
 16107  000DAA                     __end_ofPL94:
 16108                           	opt stack 0
 16109  000DAA                     PL112:
 16110                           	opt stack 18
 16111  000DAA  0A80               	xorlw	128
 16112  000DAC  6EF3               	movwf	prodl,c
 16113  000DAE  0E80               	movlw	128
 16114  000DB0  5CF3               	subwf	prodl,w,c
 16115  000DB2  0C01               	retlw	1
 16116  000DB4                     __end_ofPL112:
 16117                           	opt stack 0
 16118  000DB4                     PL132:
 16119                           	opt stack 18
 16120  000DB4  0E80               	movlw	128
 16121  000DB6  BFD7               	btfsc	sprintf@c& (0+255),7,b
 16122  000DB8  0E7F               	movlw	127
 16123  000DBA  0101               	movlb	1	; () banked
 16124  000DBC  6FEF               	movwf	??_sprintf& (0+255),b
 16125  000DBE  0102               	movlb	2	; () banked
 16126  000DC0  0012               	return	
 16127  000DC2                     __end_ofPL132:
 16128                           	opt stack 0
 16129  000DC2                     PL134:
 16130                           	opt stack 18
 16131  000DC2  0102               	movlb	2	; () banked
 16132  000DC4  51CC               	movf	(sprintf@exp+1)& (0+255),w,b
 16133  000DC6  0A80               	xorlw	128
 16134  000DC8  6EF3               	movwf	prodl,c
 16135  000DCA  0E80               	movlw	128
 16136  000DCC  5CF3               	subwf	prodl,w,c
 16137  000DCE  0012               	return	
 16138  000DD0                     __end_ofPL134:
 16139                           	opt stack 0
 16140                           tblptru	equ	0xFF8
 16141                           tblptrh	equ	0xFF7
 16142                           tblptrl	equ	0xFF6
 16143                           tablat	equ	0xFF5
 16144                           prodh	equ	0xFF4
 16145                           prodl	equ	0xFF3
 16146                           intcon	equ	0xFF2
 16147                           postinc0	equ	0xFEE
 16148                           wreg	equ	0xFE8
 16149                           indf1	equ	0xFE7
 16150                           postinc1	equ	0xFE6
 16151                           postdec1	equ	0xFE5
 16152                           fsr1h	equ	0xFE2
 16153                           fsr1l	equ	0xFE1
 16154                           indf2	equ	0xFDF
 16155                           postinc2	equ	0xFDE
 16156                           postdec2	equ	0xFDD
 16157                           fsr2h	equ	0xFDA
 16158                           fsr2l	equ	0xFD9
 16159                           status	equ	0xFD8
 16160                           
 16161 ;; *************** function _scale *****************
 16162 ;; Defined at:
 16163 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 16164 ;; Parameters:    Size  Location     Type
 16165 ;;  scl             1    wreg     char 
 16166 ;; Auto vars:     Size  Location     Type
 16167 ;;  scl             1    4[BANK1 ] char 
 16168 ;; Return value:  Size  Location     Type
 16169 ;;                  4   73[BANK0 ] char 
 16170 ;; Registers used:
 16171 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16172 ;; Tracked objects:
 16173 ;;		On entry : F/2
 16174 ;;		On exit  : F/0
 16175 ;;		Unchanged: 0/0
 16176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16177 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16178 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16180 ;;      Totals:         0       4       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16181 ;;Total ram usage:        9 bytes
 16182 ;; Hardware stack levels used:    1
 16183 ;; Hardware stack levels required when called:   10
 16184 ;; This function calls:
 16185 ;;		___awdiv
 16186 ;;		___awmod
 16187 ;;		___flmul
 16188 ;; This function is called by:
 16189 ;;		_sprintf
 16190 ;; This function uses a non-reentrant model
 16191 ;;
 16192                           
 16193                           	psect	text15
 16194  000DD0                     __ptext15:
 16195                           	opt stack 0
 16196  000DD0                     _scale:
 16197                           	opt stack 18
 16198                           
 16199                           ; BSR set to: 2
 16200                           ;incstack = 0
 16201                           ;scale@scl stored from wreg
 16202  000DD0  0101               	movlb	1	; () banked
 16203  000DD2  6FB9               	movwf	scale@scl& (0+255),b
 16204                           
 16205                           ; BSR set to: 1
 16206                           ;doprnt.c: 428: if(scl < 0) {
 16207  000DD4  AFB9               	btfss	scale@scl& (0+255),7,b
 16208  000DD6  D073               	goto	l8213
 16209                           
 16210                           ; BSR set to: 1
 16211                           ;doprnt.c: 429: scl = -scl;
 16212  000DD8  6DB9               	negf	scale@scl& (0+255),b
 16213                           
 16214                           ;doprnt.c: 430: if(scl>=110)
 16215  000DDA  51B9               	movf	scale@scl& (0+255),w,b
 16216  000DDC  0A80               	xorlw	128
 16217  000DDE  0F12               	addlw	-238
 16218  000DE0  E33B               	bnc	l8203
 16219                           
 16220                           ; BSR set to: 1
 16221                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 16222  000DE2  D956               	call	PL100	;call to abstracted procedure
 16223  000DE4  D938               	call	PL46	;call to abstracted procedure
 16224  000DE6  BF87               	btfsc	___awmod@dividend& (0+255),7,b
 16225  000DE8  0788               	decf	(___awmod@dividend+1)& (0+255),f,b
 16226  000DEA  EC8C  F018         	call	___awmod	;wreg free
 16227  000DEE  C087  F08D         	movff	?___awmod,___awdiv@dividend
 16228  000DF2  C088  F08E         	movff	?___awmod+1,___awdiv@dividend+1
 16229  000DF6  ECFC  F017         	call	___awdiv	;wreg free
 16230  000DFA  D8F4               	call	PL24	;call to abstracted procedure
 16231  000DFC  0EA7               	movlw	low __npowers_
 16232  000DFE  258D               	addwf	?___awdiv& (0+255),w,b
 16233  000E00  6EF6               	movwf	tblptrl,c
 16234  000E02  0EDC               	movlw	high __npowers_
 16235  000E04  D924               	call	PL34	;call to abstracted procedure
 16236  000E06  D8CE               	call	PL2	;call to abstracted procedure
 16237  000E08  6B90               	clrf	(___awdiv@divisor+1)& (0+255),b
 16238  000E0A  0E64               	movlw	100
 16239  000E0C  D93A               	call	PL70	;call to abstracted procedure
 16240  000E0E  BF8D               	btfsc	___awdiv@dividend& (0+255),7,b
 16241  000E10  078E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 16242  000E12  ECFC  F017         	call	___awdiv	;wreg free
 16243  000E16  90D8               	bcf	status,0,c
 16244  000E18  D910               	call	PL32	;call to abstracted procedure
 16245  000E1A  0EA7               	movlw	low __npowers_
 16246  000E1C  258D               	addwf	?___awdiv& (0+255),w,b
 16247  000E1E  6EF6               	movwf	tblptrl,c
 16248  000E20  0EDC               	movlw	high __npowers_
 16249  000E22  D8DC               	call	PL8	;call to abstracted procedure
 16250  000E24  D8CB               	call	PL4	;call to abstracted procedure
 16251  000E26  ECCF  F013         	call	___flmul	;wreg free
 16252                           
 16253                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 16254  000E2A  D8E7               	call	PL26	;call to abstracted procedure
 16255  000E2C  BF87               	btfsc	___awmod@dividend& (0+255),7,b
 16256  000E2E  0788               	decf	(___awmod@dividend+1)& (0+255),f,b
 16257  000E30  EC8C  F018         	call	___awmod	;wreg free
 16258  000E34  D8FB               	call	PL28	;call to abstracted procedure
 16259  000E36  0EA7               	movlw	low __npowers_
 16260  000E38  2587               	addwf	?___awmod& (0+255),w,b
 16261  000E3A  6EF6               	movwf	tblptrl,c
 16262  000E3C  0EDC               	movlw	high __npowers_
 16263  000E3E  D8CA               	call	PL6	;call to abstracted procedure
 16264  000E40  D8B1               	call	PL2	;call to abstracted procedure
 16265  000E42  ECCF  F013         	call	___flmul	;wreg free
 16266  000E46  C096  F0A9         	movff	?___flmul,?_scale
 16267  000E4A  C097  F0AA         	movff	?___flmul+1,?_scale+1
 16268  000E4E  C098  F0AB         	movff	?___flmul+2,?_scale+2
 16269  000E52  C099  F0AC         	movff	?___flmul+3,?_scale+3
 16270  000E56  0012               	return	
 16271  000E58                     l8203:
 16272                           
 16273                           ; BSR set to: 1
 16274                           ;doprnt.c: 432: else if(scl > 10)
 16275  000E58  51B9               	movf	scale@scl& (0+255),w,b
 16276  000E5A  0A80               	xorlw	128
 16277  000E5C  0F75               	addlw	-139
 16278  000E5E  E328               	bnc	l8209
 16279                           
 16280                           ; BSR set to: 1
 16281                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 16282  000E60  0100               	movlb	0	; () banked
 16283  000E62  6B90               	clrf	(___awdiv@divisor+1)& (0+255),b
 16284  000E64  0E0A               	movlw	10
 16285  000E66  D90D               	call	PL70	;call to abstracted procedure
 16286  000E68  BF8D               	btfsc	___awdiv@dividend& (0+255),7,b
 16287  000E6A  078E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 16288  000E6C  ECFC  F017         	call	___awdiv	;wreg free
 16289  000E70  D8B9               	call	PL24	;call to abstracted procedure
 16290  000E72  0EA7               	movlw	low __npowers_
 16291  000E74  258D               	addwf	?___awdiv& (0+255),w,b
 16292  000E76  6EF6               	movwf	tblptrl,c
 16293  000E78  0EDC               	movlw	high __npowers_
 16294  000E7A  D8B0               	call	PL8	;call to abstracted procedure
 16295  000E7C  D89F               	call	PL4	;call to abstracted procedure
 16296  000E7E  6B8A               	clrf	(___awmod@divisor+1)& (0+255),b
 16297  000E80  0E0A               	movlw	10
 16298  000E82  D8E9               	call	PL46	;call to abstracted procedure
 16299  000E84  BF87               	btfsc	___awmod@dividend& (0+255),7,b
 16300  000E86  0788               	decf	(___awmod@dividend+1)& (0+255),f,b
 16301  000E88  EC8C  F018         	call	___awmod	;wreg free
 16302  000E8C  D8CF               	call	PL28	;call to abstracted procedure
 16303  000E8E  0EA7               	movlw	low __npowers_
 16304  000E90  2587               	addwf	?___awmod& (0+255),w,b
 16305  000E92  6EF6               	movwf	tblptrl,c
 16306  000E94  0EDC               	movlw	high __npowers_
 16307  000E96  D89E               	call	PL6	;call to abstracted procedure
 16308  000E98  D885               	call	PL2	;call to abstracted procedure
 16309  000E9A  ECCF  F013         	call	___flmul	;wreg free
 16310  000E9E  C096  F0A9         	movff	?___flmul,?_scale
 16311  000EA2  C097  F0AA         	movff	?___flmul+1,?_scale+1
 16312  000EA6  C098  F0AB         	movff	?___flmul+2,?_scale+2
 16313  000EAA  C099  F0AC         	movff	?___flmul+3,?_scale+3
 16314  000EAE  0012               	return	
 16315  000EB0                     l8209:
 16316                           
 16317                           ; BSR set to: 1
 16318                           ;doprnt.c: 434: return _npowers_[scl];
 16319  000EB0  51B9               	movf	scale@scl& (0+255),w,b
 16320  000EB2  0D04               	mullw	4
 16321  000EB4  0EA7               	movlw	low __npowers_
 16322  000EB6  24F3               	addwf	prodl,w,c
 16323  000EB8  6EF6               	movwf	tblptrl,c
 16324  000EBA  0EDC               	movlw	high __npowers_
 16325  000EBC  D071               	goto	L13
 16326  000EBE                     l8213:
 16327                           
 16328                           ; BSR set to: 1
 16329                           ;doprnt.c: 435: }
 16330                           ;doprnt.c: 436: if(scl>=110)
 16331  000EBE  51B9               	movf	scale@scl& (0+255),w,b
 16332  000EC0  0A80               	xorlw	128
 16333  000EC2  0F12               	addlw	-238
 16334  000EC4  E33B               	bnc	l8221
 16335                           
 16336                           ; BSR set to: 1
 16337                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16338  000EC6  D8E4               	call	PL100	;call to abstracted procedure
 16339  000EC8  D8C6               	call	PL46	;call to abstracted procedure
 16340  000ECA  BF87               	btfsc	___awmod@dividend& (0+255),7,b
 16341  000ECC  0788               	decf	(___awmod@dividend+1)& (0+255),f,b
 16342  000ECE  EC8C  F018         	call	___awmod	;wreg free
 16343  000ED2  C087  F08D         	movff	?___awmod,___awdiv@dividend
 16344  000ED6  C088  F08E         	movff	?___awmod+1,___awdiv@dividend+1
 16345  000EDA  ECFC  F017         	call	___awdiv	;wreg free
 16346  000EDE  D882               	call	PL24	;call to abstracted procedure
 16347  000EE0  0EDB               	movlw	low __powers_
 16348  000EE2  258D               	addwf	?___awdiv& (0+255),w,b
 16349  000EE4  6EF6               	movwf	tblptrl,c
 16350  000EE6  0EDC               	movlw	high __powers_
 16351  000EE8  D8B2               	call	PL34	;call to abstracted procedure
 16352  000EEA  D85C               	call	PL2	;call to abstracted procedure
 16353  000EEC  6B90               	clrf	(___awdiv@divisor+1)& (0+255),b
 16354  000EEE  0E64               	movlw	100
 16355  000EF0  D8C8               	call	PL70	;call to abstracted procedure
 16356  000EF2  BF8D               	btfsc	___awdiv@dividend& (0+255),7,b
 16357  000EF4  078E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 16358  000EF6  ECFC  F017         	call	___awdiv	;wreg free
 16359  000EFA  90D8               	bcf	status,0,c
 16360  000EFC  D89E               	call	PL32	;call to abstracted procedure
 16361  000EFE  0EDB               	movlw	low __powers_
 16362  000F00  258D               	addwf	?___awdiv& (0+255),w,b
 16363  000F02  6EF6               	movwf	tblptrl,c
 16364  000F04  0EDC               	movlw	high __powers_
 16365  000F06  D86A               	call	PL8	;call to abstracted procedure
 16366  000F08  D859               	call	PL4	;call to abstracted procedure
 16367  000F0A  ECCF  F013         	call	___flmul	;wreg free
 16368                           
 16369                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16370  000F0E  D875               	call	PL26	;call to abstracted procedure
 16371  000F10  BF87               	btfsc	___awmod@dividend& (0+255),7,b
 16372  000F12  0788               	decf	(___awmod@dividend+1)& (0+255),f,b
 16373  000F14  EC8C  F018         	call	___awmod	;wreg free
 16374  000F18  D889               	call	PL28	;call to abstracted procedure
 16375  000F1A  0EDB               	movlw	low __powers_
 16376  000F1C  2587               	addwf	?___awmod& (0+255),w,b
 16377  000F1E  6EF6               	movwf	tblptrl,c
 16378  000F20  0EDC               	movlw	high __powers_
 16379  000F22  D858               	call	PL6	;call to abstracted procedure
 16380  000F24  D83F               	call	PL2	;call to abstracted procedure
 16381  000F26  ECCF  F013         	call	___flmul	;wreg free
 16382  000F2A  C096  F0A9         	movff	?___flmul,?_scale
 16383  000F2E  C097  F0AA         	movff	?___flmul+1,?_scale+1
 16384  000F32  C098  F0AB         	movff	?___flmul+2,?_scale+2
 16385  000F36  C099  F0AC         	movff	?___flmul+3,?_scale+3
 16386  000F3A  0012               	return	
 16387  000F3C                     l8221:
 16388                           
 16389                           ; BSR set to: 1
 16390                           ;doprnt.c: 438: else if(scl > 10)
 16391  000F3C  51B9               	movf	scale@scl& (0+255),w,b
 16392  000F3E  0A80               	xorlw	128
 16393  000F40  0F75               	addlw	-139
 16394  000F42  E328               	bnc	l8227
 16395                           
 16396                           ; BSR set to: 1
 16397                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 16398  000F44  0100               	movlb	0	; () banked
 16399  000F46  6B90               	clrf	(___awdiv@divisor+1)& (0+255),b
 16400  000F48  0E0A               	movlw	10
 16401  000F4A  D89B               	call	PL70	;call to abstracted procedure
 16402  000F4C  BF8D               	btfsc	___awdiv@dividend& (0+255),7,b
 16403  000F4E  078E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 16404  000F50  ECFC  F017         	call	___awdiv	;wreg free
 16405  000F54  D847               	call	PL24	;call to abstracted procedure
 16406  000F56  0EDB               	movlw	low __powers_
 16407  000F58  258D               	addwf	?___awdiv& (0+255),w,b
 16408  000F5A  6EF6               	movwf	tblptrl,c
 16409  000F5C  0EDC               	movlw	high __powers_
 16410  000F5E  D83E               	call	PL8	;call to abstracted procedure
 16411  000F60  D82D               	call	PL4	;call to abstracted procedure
 16412  000F62  6B8A               	clrf	(___awmod@divisor+1)& (0+255),b
 16413  000F64  0E0A               	movlw	10
 16414  000F66  D877               	call	PL46	;call to abstracted procedure
 16415  000F68  BF87               	btfsc	___awmod@dividend& (0+255),7,b
 16416  000F6A  0788               	decf	(___awmod@dividend+1)& (0+255),f,b
 16417  000F6C  EC8C  F018         	call	___awmod	;wreg free
 16418  000F70  D85D               	call	PL28	;call to abstracted procedure
 16419  000F72  0EDB               	movlw	low __powers_
 16420  000F74  2587               	addwf	?___awmod& (0+255),w,b
 16421  000F76  6EF6               	movwf	tblptrl,c
 16422  000F78  0EDC               	movlw	high __powers_
 16423  000F7A  D82C               	call	PL6	;call to abstracted procedure
 16424  000F7C  D813               	call	PL2	;call to abstracted procedure
 16425  000F7E  ECCF  F013         	call	___flmul	;wreg free
 16426  000F82  C096  F0A9         	movff	?___flmul,?_scale
 16427  000F86  C097  F0AA         	movff	?___flmul+1,?_scale+1
 16428  000F8A  C098  F0AB         	movff	?___flmul+2,?_scale+2
 16429  000F8E  C099  F0AC         	movff	?___flmul+3,?_scale+3
 16430  000F92  0012               	return	
 16431  000F94                     l8227:
 16432                           
 16433                           ; BSR set to: 1
 16434                           ;doprnt.c: 440: return _powers_[scl];
 16435  000F94  51B9               	movf	scale@scl& (0+255),w,b
 16436  000F96  0D04               	mullw	4
 16437  000F98  0EDB               	movlw	low __powers_
 16438  000F9A  24F3               	addwf	prodl,w,c
 16439  000F9C  6EF6               	movwf	tblptrl,c
 16440  000F9E  0EDC               	movlw	high __powers_
 16441  000FA0                     L13:
 16442  000FA0  20F4               	addwfc	prodh,w,c
 16443                           
 16444                           ; BSR set to: 0
 16445  000FA2  D060               	goto	PL66	;call to abstracted procedure
 16446  000FA4                     __end_of_scale:
 16447                           	opt stack 0
 16448  000FA4                     PL2:
 16449                           	opt stack 18
 16450  000FA4  CFF5 F09A          	movff	tablat,___flmul@f2
 16451  000FA8  0009               	tblrd		*+
 16452  000FAA  CFF5 F09B          	movff	tablat,___flmul@f2+1
 16453  000FAE  0009               	tblrd		*+
 16454  000FB0  CFF5 F09C          	movff	tablat,___flmul@f2+2
 16455  000FB4  000A               	tblrd		*-
 16456  000FB6  CFF5 F09D          	movff	tablat,___flmul@f2+3
 16457  000FBA  0012               	return	
 16458  000FBC                     __end_ofPL2:
 16459                           	opt stack 0
 16460  000FBC                     PL4:
 16461                           	opt stack 18
 16462  000FBC  CFF5 F096          	movff	tablat,___flmul@f1
 16463  000FC0  0009               	tblrd		*+
 16464  000FC2  CFF5 F097          	movff	tablat,___flmul@f1+1
 16465  000FC6  0009               	tblrd		*+
 16466  000FC8  CFF5 F098          	movff	tablat,___flmul@f1+2
 16467  000FCC  000A               	tblrd		*-
 16468  000FCE  CFF5 F099          	movff	tablat,___flmul@f1+3
 16469  000FD2  0012               	return	
 16470  000FD4                     __end_ofPL4:
 16471                           	opt stack 0
 16472  000FD4                     PL6:
 16473                           	opt stack 18
 16474  000FD4  2188               	addwfc	(?___awmod+1)& (0+255),w,b
 16475  000FD6  6EF7               	movwf	tblptrh,c
 16476  000FD8                     	if	0	;There are less than 3 active tblptr bytes
 16477  000FD8                     	endif
 16478  000FD8  0009               	tblrd		*+
 16479  000FDA  0012               	return	
 16480  000FDC                     __end_ofPL6:
 16481                           	opt stack 0
 16482  000FDC                     PL8:
 16483                           	opt stack 18
 16484  000FDC  218E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16485  000FDE  6EF7               	movwf	tblptrh,c
 16486  000FE0                     	if	0	;There are less than 3 active tblptr bytes
 16487  000FE0                     	endif
 16488  000FE0  0009               	tblrd		*+
 16489  000FE2  0012               	return	
 16490  000FE4                     __end_ofPL8:
 16491                           	opt stack 0
 16492  000FE4                     PL24:
 16493                           	opt stack 18
 16494  000FE4  90D8               	bcf	status,0,c
 16495  000FE6  378D               	rlcf	?___awdiv& (0+255),f,b
 16496  000FE8  378E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16497  000FEA  90D8               	bcf	status,0,c
 16498  000FEC  378D               	rlcf	?___awdiv& (0+255),f,b
 16499  000FEE  378E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16500  000FF0  0E24               	movlw	36
 16501  000FF2  278D               	addwf	?___awdiv& (0+255),f,b
 16502  000FF4  0E00               	movlw	0
 16503  000FF6  238E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16504  000FF8  0C00               	retlw	0
 16505  000FFA                     __end_ofPL24:
 16506                           	opt stack 0
 16507  000FFA                     PL26:
 16508                           	opt stack 18
 16509  000FFA  C096  F1B5         	movff	?___flmul,_scale$3238
 16510  000FFE  C097  F1B6         	movff	?___flmul+1,_scale$3238+1
 16511  001002  C098  F1B7         	movff	?___flmul+2,_scale$3238+2
 16512  001006  C099  F1B8         	movff	?___flmul+3,_scale$3238+3
 16513  00100A  C1B5  F096         	movff	_scale$3238,___flmul@f1
 16514  00100E  C1B6  F097         	movff	_scale$3238+1,___flmul@f1+1
 16515  001012  C1B7  F098         	movff	_scale$3238+2,___flmul@f1+2
 16516  001016  C1B8  F099         	movff	_scale$3238+3,___flmul@f1+3
 16517  00101A  6B8A               	clrf	(___awmod@divisor+1)& (0+255),b
 16518  00101C  0E0A               	movlw	10
 16519  00101E  6F89               	movwf	___awmod@divisor& (0+255),b
 16520  001020  0101               	movlb	1	; () banked
 16521  001022  51B9               	movf	scale@scl& (0+255),w,b
 16522  001024  0100               	movlb	0	; () banked
 16523  001026  6F87               	movwf	___awmod@dividend& (0+255),b
 16524  001028  6B88               	clrf	(___awmod@dividend+1)& (0+255),b
 16525  00102A  0012               	return	
 16526  00102C                     __end_ofPL26:
 16527                           	opt stack 0
 16528  00102C                     PL28:
 16529                           	opt stack 18
 16530  00102C  90D8               	bcf	status,0,c
 16531  00102E  3787               	rlcf	?___awmod& (0+255),f,b
 16532  001030  3788               	rlcf	(?___awmod+1)& (0+255),f,b
 16533  001032  90D8               	bcf	status,0,c
 16534  001034  3787               	rlcf	?___awmod& (0+255),f,b
 16535  001036  3788               	rlcf	(?___awmod+1)& (0+255),f,b
 16536  001038  0012               	return	
 16537  00103A                     __end_ofPL28:
 16538                           	opt stack 0
 16539  00103A                     PL32:
 16540                           	opt stack 18
 16541  00103A  378D               	rlcf	?___awdiv& (0+255),f,b
 16542  00103C  378E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16543  00103E  90D8               	bcf	status,0,c
 16544  001040  378D               	rlcf	?___awdiv& (0+255),f,b
 16545  001042  378E               	rlcf	(?___awdiv+1)& (0+255),f,b
 16546  001044  0E48               	movlw	72
 16547  001046  278D               	addwf	?___awdiv& (0+255),f,b
 16548  001048  0E00               	movlw	0
 16549  00104A  238E               	addwfc	(?___awdiv+1)& (0+255),f,b
 16550  00104C  0C00               	retlw	0
 16551  00104E                     __end_ofPL32:
 16552                           	opt stack 0
 16553  00104E                     PL34:
 16554                           	opt stack 18
 16555  00104E  218E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16556  001050  6EF7               	movwf	tblptrh,c
 16557  001052                     	if	0	;There are less than 3 active tblptr bytes
 16558  001052                     	endif
 16559  001052  0009               	tblrd		*+
 16560  001054  0012               	return	
 16561  001056                     __end_ofPL34:
 16562                           	opt stack 0
 16563  001056                     PL46:
 16564                           	opt stack 18
 16565  001056  6F89               	movwf	___awmod@divisor& (0+255),b
 16566  001058  0101               	movlb	1	; () banked
 16567  00105A  51B9               	movf	scale@scl& (0+255),w,b
 16568  00105C  0100               	movlb	0	; () banked
 16569  00105E  6F87               	movwf	___awmod@dividend& (0+255),b
 16570  001060  6B88               	clrf	(___awmod@dividend+1)& (0+255),b
 16571  001062  0012               	return	
 16572  001064                     __end_ofPL46:
 16573                           	opt stack 0
 16574  001064                     PL66:
 16575                           	opt stack 18
 16576  001064  6EF7               	movwf	tblptrh,c
 16577  001066                     	if	0	;There are less than 3 active tblptr bytes
 16578  001066                     	endif
 16579  001066  0009               	tblrd		*+
 16580  001068  0100               	movlb	0	; () banked
 16581  00106A  CFF5 F0A9          	movff	tablat,?_scale
 16582  00106E  0009               	tblrd		*+
 16583  001070  CFF5 F0AA          	movff	tablat,?_scale+1
 16584  001074  0009               	tblrd		*+
 16585  001076  CFF5 F0AB          	movff	tablat,?_scale+2
 16586  00107A  000A               	tblrd		*-
 16587  00107C  CFF5 F0AC          	movff	tablat,?_scale+3
 16588  001080  0012               	return	
 16589  001082                     __end_ofPL66:
 16590                           	opt stack 0
 16591  001082                     PL70:
 16592                           	opt stack 18
 16593  001082  6F8F               	movwf	___awdiv@divisor& (0+255),b
 16594  001084  0101               	movlb	1	; () banked
 16595  001086  51B9               	movf	scale@scl& (0+255),w,b
 16596  001088  0100               	movlb	0	; () banked
 16597  00108A  6F8D               	movwf	___awdiv@dividend& (0+255),b
 16598  00108C  6B8E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16599  00108E  0012               	return	
 16600  001090                     __end_ofPL70:
 16601                           	opt stack 0
 16602  001090                     PL100:
 16603                           	opt stack 18
 16604  001090  0100               	movlb	0	; () banked
 16605  001092  6B90               	clrf	(___awdiv@divisor+1)& (0+255),b
 16606  001094  0E0A               	movlw	10
 16607  001096  6F8F               	movwf	___awdiv@divisor& (0+255),b
 16608  001098  6B8A               	clrf	(___awmod@divisor+1)& (0+255),b
 16609  00109A  0C64               	retlw	100
 16610  00109C                     __end_ofPL100:
 16611                           	opt stack 0
 16612                           tblptru	equ	0xFF8
 16613                           tblptrh	equ	0xFF7
 16614                           tblptrl	equ	0xFF6
 16615                           tablat	equ	0xFF5
 16616                           prodh	equ	0xFF4
 16617                           prodl	equ	0xFF3
 16618                           intcon	equ	0xFF2
 16619                           postinc0	equ	0xFEE
 16620                           wreg	equ	0xFE8
 16621                           indf1	equ	0xFE7
 16622                           postinc1	equ	0xFE6
 16623                           postdec1	equ	0xFE5
 16624                           fsr1h	equ	0xFE2
 16625                           fsr1l	equ	0xFE1
 16626                           indf2	equ	0xFDF
 16627                           postinc2	equ	0xFDE
 16628                           postdec2	equ	0xFDD
 16629                           fsr2h	equ	0xFDA
 16630                           fsr2l	equ	0xFD9
 16631                           status	equ	0xFD8
 16632                           
 16633 ;; *************** function ___awmod *****************
 16634 ;; Defined at:
 16635 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
 16636 ;; Parameters:    Size  Location     Type
 16637 ;;  dividend        2   39[BANK0 ] int 
 16638 ;;  divisor         2   41[BANK0 ] int 
 16639 ;; Auto vars:     Size  Location     Type
 16640 ;;  sign            1   44[BANK0 ] unsigned char 
 16641 ;;  counter         1   43[BANK0 ] unsigned char 
 16642 ;; Return value:  Size  Location     Type
 16643 ;;                  2   39[BANK0 ] int 
 16644 ;; Registers used:
 16645 ;;		wreg, status,2, status,0, prodl
 16646 ;; Tracked objects:
 16647 ;;		On entry : F/0
 16648 ;;		On exit  : F/0
 16649 ;;		Unchanged: 0/0
 16650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16651 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16652 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16654 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16655 ;;Total ram usage:        6 bytes
 16656 ;; Hardware stack levels used:    1
 16657 ;; Hardware stack levels required when called:    8
 16658 ;; This function calls:
 16659 ;;		Nothing
 16660 ;; This function is called by:
 16661 ;;		_scale
 16662 ;; This function uses a non-reentrant model
 16663 ;;
 16664                           
 16665                           	psect	text16
 16666  003118                     __ptext16:
 16667                           	opt stack 0
 16668  003118                     ___awmod:
 16669                           	opt stack 19
 16670                           
 16671                           ; BSR set to: 0
 16672                           
 16673                           ; BSR set to: 0
 16674                           ;incstack = 0
 16675  003118  6B8C               	clrf	___awmod@sign& (0+255),b
 16676                           
 16677                           ; BSR set to: 0
 16678  00311A  5188               	movf	(___awmod@dividend+1)& (0+255),w,b
 16679  00311C  0A80               	xorlw	128
 16680  00311E  6EF3               	movwf	prodl,c
 16681  003120  0E80               	movlw	128
 16682  003122  5CF3               	subwf	prodl,w,c
 16683  003124  0E00               	movlw	0
 16684  003126  B4D8               	btfsc	status,2,c
 16685  003128  5D87               	subwf	___awmod@dividend& (0+255),w,b
 16686  00312A  E206               	bc	l7937
 16687                           
 16688                           ; BSR set to: 0
 16689  00312C  6D87               	negf	___awmod@dividend& (0+255),b
 16690  00312E  1F88               	comf	(___awmod@dividend+1)& (0+255),f,b
 16691  003130  B0D8               	btfsc	status,0,c
 16692  003132  2B88               	incf	(___awmod@dividend+1)& (0+255),f,b
 16693                           
 16694                           ; BSR set to: 0
 16695  003134  0E01               	movlw	1
 16696  003136  6F8C               	movwf	___awmod@sign& (0+255),b
 16697  003138                     l7937:
 16698                           
 16699                           ; BSR set to: 0
 16700  003138  518A               	movf	(___awmod@divisor+1)& (0+255),w,b
 16701  00313A  0A80               	xorlw	128
 16702  00313C  6EF3               	movwf	prodl,c
 16703  00313E  0E80               	movlw	128
 16704  003140  5CF3               	subwf	prodl,w,c
 16705  003142  0E00               	movlw	0
 16706  003144  B4D8               	btfsc	status,2,c
 16707  003146  5D89               	subwf	___awmod@divisor& (0+255),w,b
 16708  003148  E204               	bc	l7941
 16709                           
 16710                           ; BSR set to: 0
 16711  00314A  6D89               	negf	___awmod@divisor& (0+255),b
 16712  00314C  1F8A               	comf	(___awmod@divisor+1)& (0+255),f,b
 16713  00314E  B0D8               	btfsc	status,0,c
 16714  003150  2B8A               	incf	(___awmod@divisor+1)& (0+255),f,b
 16715  003152                     l7941:
 16716                           
 16717                           ; BSR set to: 0
 16718  003152  518A               	movf	(___awmod@divisor+1)& (0+255),w,b
 16719  003154  1189               	iorwf	___awmod@divisor& (0+255),w,b
 16720  003156  E017               	bz	l7957
 16721                           
 16722                           ; BSR set to: 0
 16723  003158  0E01               	movlw	1
 16724  00315A  6F8B               	movwf	___awmod@counter& (0+255),b
 16725  00315C  D004               	goto	l7947
 16726  00315E                     l7945:
 16727                           
 16728                           ; BSR set to: 0
 16729  00315E  90D8               	bcf	status,0,c
 16730  003160  3789               	rlcf	___awmod@divisor& (0+255),f,b
 16731  003162  378A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 16732  003164  2B8B               	incf	___awmod@counter& (0+255),f,b
 16733  003166                     l7947:
 16734                           
 16735                           ; BSR set to: 0
 16736  003166  AF8A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 16737  003168  D7FA               	goto	l7945
 16738  00316A                     l7949:
 16739                           
 16740                           ; BSR set to: 0
 16741  00316A  5189               	movf	___awmod@divisor& (0+255),w,b
 16742  00316C  5D87               	subwf	___awmod@dividend& (0+255),w,b
 16743  00316E  518A               	movf	(___awmod@divisor+1)& (0+255),w,b
 16744  003170  5988               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 16745  003172  E304               	bnc	l7953
 16746                           
 16747                           ; BSR set to: 0
 16748  003174  5189               	movf	___awmod@divisor& (0+255),w,b
 16749  003176  5F87               	subwf	___awmod@dividend& (0+255),f,b
 16750  003178  518A               	movf	(___awmod@divisor+1)& (0+255),w,b
 16751  00317A  5B88               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 16752  00317C                     l7953:
 16753                           
 16754                           ; BSR set to: 0
 16755  00317C  90D8               	bcf	status,0,c
 16756  00317E  338A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 16757  003180  3389               	rrcf	___awmod@divisor& (0+255),f,b
 16758                           
 16759                           ; BSR set to: 0
 16760  003182  2F8B               	decfsz	___awmod@counter& (0+255),f,b
 16761  003184  D7F2               	goto	l7949
 16762  003186                     l7957:
 16763                           
 16764                           ; BSR set to: 0
 16765  003186  518C               	movf	___awmod@sign& (0+255),w,b
 16766  003188  E004               	bz	l7961
 16767                           
 16768                           ; BSR set to: 0
 16769  00318A  6D87               	negf	___awmod@dividend& (0+255),b
 16770  00318C  1F88               	comf	(___awmod@dividend+1)& (0+255),f,b
 16771  00318E  B0D8               	btfsc	status,0,c
 16772  003190  2B88               	incf	(___awmod@dividend+1)& (0+255),f,b
 16773  003192                     l7961:
 16774                           
 16775                           ; BSR set to: 0
 16776  003192  C087  F087         	movff	___awmod@dividend,?___awmod
 16777  003196  C088  F088         	movff	___awmod@dividend+1,?___awmod+1
 16778                           
 16779                           ; BSR set to: 0
 16780  00319A  0012               	return	
 16781  00319C                     __end_of___awmod:
 16782                           	opt stack 0
 16783                           tblptru	equ	0xFF8
 16784                           tblptrh	equ	0xFF7
 16785                           tblptrl	equ	0xFF6
 16786                           tablat	equ	0xFF5
 16787                           prodh	equ	0xFF4
 16788                           prodl	equ	0xFF3
 16789                           intcon	equ	0xFF2
 16790                           postinc0	equ	0xFEE
 16791                           wreg	equ	0xFE8
 16792                           indf1	equ	0xFE7
 16793                           postinc1	equ	0xFE6
 16794                           postdec1	equ	0xFE5
 16795                           fsr1h	equ	0xFE2
 16796                           fsr1l	equ	0xFE1
 16797                           indf2	equ	0xFDF
 16798                           postinc2	equ	0xFDE
 16799                           postdec2	equ	0xFDD
 16800                           fsr2h	equ	0xFDA
 16801                           fsr2l	equ	0xFD9
 16802                           status	equ	0xFD8
 16803                           
 16804 ;; *************** function ___awdiv *****************
 16805 ;; Defined at:
 16806 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
 16807 ;; Parameters:    Size  Location     Type
 16808 ;;  dividend        2   45[BANK0 ] int 
 16809 ;;  divisor         2   47[BANK0 ] int 
 16810 ;; Auto vars:     Size  Location     Type
 16811 ;;  quotient        2   51[BANK0 ] int 
 16812 ;;  sign            1   50[BANK0 ] unsigned char 
 16813 ;;  counter         1   49[BANK0 ] unsigned char 
 16814 ;; Return value:  Size  Location     Type
 16815 ;;                  2   45[BANK0 ] int 
 16816 ;; Registers used:
 16817 ;;		wreg, status,2, status,0, prodl
 16818 ;; Tracked objects:
 16819 ;;		On entry : F/0
 16820 ;;		On exit  : F/0
 16821 ;;		Unchanged: 0/0
 16822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16823 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16824 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16826 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16827 ;;Total ram usage:        8 bytes
 16828 ;; Hardware stack levels used:    1
 16829 ;; Hardware stack levels required when called:    8
 16830 ;; This function calls:
 16831 ;;		Nothing
 16832 ;; This function is called by:
 16833 ;;		_scale
 16834 ;;		_sprintf
 16835 ;; This function uses a non-reentrant model
 16836 ;;
 16837                           
 16838                           	psect	text17
 16839  002FF8                     __ptext17:
 16840                           	opt stack 0
 16841  002FF8                     ___awdiv:
 16842                           	opt stack 19
 16843                           
 16844                           ; BSR set to: 0
 16845                           
 16846                           ; BSR set to: 0
 16847                           ;incstack = 0
 16848  002FF8  6B92               	clrf	___awdiv@sign& (0+255),b
 16849                           
 16850                           ; BSR set to: 0
 16851  002FFA  5190               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16852  002FFC  0A80               	xorlw	128
 16853  002FFE  6EF3               	movwf	prodl,c
 16854  003000  0E80               	movlw	128
 16855  003002  5CF3               	subwf	prodl,w,c
 16856  003004  0E00               	movlw	0
 16857  003006  B4D8               	btfsc	status,2,c
 16858  003008  5D8F               	subwf	___awdiv@divisor& (0+255),w,b
 16859  00300A  E206               	bc	l7893
 16860                           
 16861                           ; BSR set to: 0
 16862  00300C  6D8F               	negf	___awdiv@divisor& (0+255),b
 16863  00300E  1F90               	comf	(___awdiv@divisor+1)& (0+255),f,b
 16864  003010  B0D8               	btfsc	status,0,c
 16865  003012  2B90               	incf	(___awdiv@divisor+1)& (0+255),f,b
 16866                           
 16867                           ; BSR set to: 0
 16868  003014  0E01               	movlw	1
 16869  003016  6F92               	movwf	___awdiv@sign& (0+255),b
 16870  003018                     l7893:
 16871                           
 16872                           ; BSR set to: 0
 16873  003018  518E               	movf	(___awdiv@dividend+1)& (0+255),w,b
 16874  00301A  0A80               	xorlw	128
 16875  00301C  6EF3               	movwf	prodl,c
 16876  00301E  0E80               	movlw	128
 16877  003020  5CF3               	subwf	prodl,w,c
 16878  003022  0E00               	movlw	0
 16879  003024  B4D8               	btfsc	status,2,c
 16880  003026  5D8D               	subwf	___awdiv@dividend& (0+255),w,b
 16881  003028  E206               	bc	l7899
 16882                           
 16883                           ; BSR set to: 0
 16884  00302A  6D8D               	negf	___awdiv@dividend& (0+255),b
 16885  00302C  1F8E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 16886  00302E  B0D8               	btfsc	status,0,c
 16887  003030  2B8E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 16888                           
 16889                           ; BSR set to: 0
 16890  003032  0E01               	movlw	1
 16891  003034  1B92               	xorwf	___awdiv@sign& (0+255),f,b
 16892  003036                     l7899:
 16893                           
 16894                           ; BSR set to: 0
 16895  003036  6B93               	clrf	___awdiv@quotient& (0+255),b
 16896  003038  6B94               	clrf	(___awdiv@quotient+1)& (0+255),b
 16897                           
 16898                           ; BSR set to: 0
 16899  00303A  5190               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16900  00303C  118F               	iorwf	___awdiv@divisor& (0+255),w,b
 16901  00303E  E01B               	bz	l7921
 16902                           
 16903                           ; BSR set to: 0
 16904  003040  0E01               	movlw	1
 16905  003042  6F91               	movwf	___awdiv@counter& (0+255),b
 16906  003044  D004               	goto	l7907
 16907  003046                     l7905:
 16908                           
 16909                           ; BSR set to: 0
 16910  003046  90D8               	bcf	status,0,c
 16911  003048  378F               	rlcf	___awdiv@divisor& (0+255),f,b
 16912  00304A  3790               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 16913  00304C  2B91               	incf	___awdiv@counter& (0+255),f,b
 16914  00304E                     l7907:
 16915                           
 16916                           ; BSR set to: 0
 16917  00304E  AF90               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 16918  003050  D7FA               	goto	l7905
 16919  003052                     l7909:
 16920                           
 16921                           ; BSR set to: 0
 16922  003052  90D8               	bcf	status,0,c
 16923  003054  3793               	rlcf	___awdiv@quotient& (0+255),f,b
 16924  003056  3794               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 16925                           
 16926                           ; BSR set to: 0
 16927  003058  518F               	movf	___awdiv@divisor& (0+255),w,b
 16928  00305A  5D8D               	subwf	___awdiv@dividend& (0+255),w,b
 16929  00305C  5190               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16930  00305E  598E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 16931  003060  E305               	bnc	l7917
 16932                           
 16933                           ; BSR set to: 0
 16934  003062  518F               	movf	___awdiv@divisor& (0+255),w,b
 16935  003064  5F8D               	subwf	___awdiv@dividend& (0+255),f,b
 16936  003066  5190               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16937  003068  5B8E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 16938                           
 16939                           ; BSR set to: 0
 16940  00306A  8193               	bsf	___awdiv@quotient& (0+255),0,b
 16941  00306C                     l7917:
 16942                           
 16943                           ; BSR set to: 0
 16944  00306C  90D8               	bcf	status,0,c
 16945  00306E  3390               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 16946  003070  338F               	rrcf	___awdiv@divisor& (0+255),f,b
 16947                           
 16948                           ; BSR set to: 0
 16949  003072  2F91               	decfsz	___awdiv@counter& (0+255),f,b
 16950  003074  D7EE               	goto	l7909
 16951  003076                     l7921:
 16952                           
 16953                           ; BSR set to: 0
 16954  003076  5192               	movf	___awdiv@sign& (0+255),w,b
 16955  003078  E004               	bz	l7925
 16956                           
 16957                           ; BSR set to: 0
 16958  00307A  6D93               	negf	___awdiv@quotient& (0+255),b
 16959  00307C  1F94               	comf	(___awdiv@quotient+1)& (0+255),f,b
 16960  00307E  B0D8               	btfsc	status,0,c
 16961  003080  2B94               	incf	(___awdiv@quotient+1)& (0+255),f,b
 16962  003082                     l7925:
 16963                           
 16964                           ; BSR set to: 0
 16965  003082  C093  F08D         	movff	___awdiv@quotient,?___awdiv
 16966  003086  C094  F08E         	movff	___awdiv@quotient+1,?___awdiv+1
 16967                           
 16968                           ; BSR set to: 0
 16969  00308A  0012               	return	
 16970  00308C                     __end_of___awdiv:
 16971                           	opt stack 0
 16972                           tblptru	equ	0xFF8
 16973                           tblptrh	equ	0xFF7
 16974                           tblptrl	equ	0xFF6
 16975                           tablat	equ	0xFF5
 16976                           prodh	equ	0xFF4
 16977                           prodl	equ	0xFF3
 16978                           intcon	equ	0xFF2
 16979                           postinc0	equ	0xFEE
 16980                           wreg	equ	0xFE8
 16981                           indf1	equ	0xFE7
 16982                           postinc1	equ	0xFE6
 16983                           postdec1	equ	0xFE5
 16984                           fsr1h	equ	0xFE2
 16985                           fsr1l	equ	0xFE1
 16986                           indf2	equ	0xFDF
 16987                           postinc2	equ	0xFDE
 16988                           postdec2	equ	0xFDD
 16989                           fsr2h	equ	0xFDA
 16990                           fsr2l	equ	0xFD9
 16991                           status	equ	0xFD8
 16992                           
 16993 ;; *************** function _isdigit *****************
 16994 ;; Defined at:
 16995 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
 16996 ;; Parameters:    Size  Location     Type
 16997 ;;  c               1    wreg     unsigned char 
 16998 ;; Auto vars:     Size  Location     Type
 16999 ;;  c               1   41[BANK0 ] unsigned char 
 17000 ;; Return value:  Size  Location     Type
 17001 ;;		None               void
 17002 ;; Registers used:
 17003 ;;		wreg, status,2, status,0
 17004 ;; Tracked objects:
 17005 ;;		On entry : F/1
 17006 ;;		On exit  : F/0
 17007 ;;		Unchanged: 0/0
 17008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17010 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17011 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17012 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17013 ;;Total ram usage:        3 bytes
 17014 ;; Hardware stack levels used:    1
 17015 ;; Hardware stack levels required when called:    8
 17016 ;; This function calls:
 17017 ;;		Nothing
 17018 ;; This function is called by:
 17019 ;;		_sprintf
 17020 ;; This function uses a non-reentrant model
 17021 ;;
 17022                           
 17023                           	psect	text18
 17024  003B4C                     __ptext18:
 17025                           	opt stack 0
 17026  003B4C                     _isdigit:
 17027                           	opt stack 20
 17028                           
 17029                           ; BSR set to: 0
 17030                           ;incstack = 0
 17031                           ;isdigit@c stored from wreg
 17032  003B4C  0100               	movlb	0	; () banked
 17033  003B4E  6F89               	movwf	isdigit@c& (0+255),b
 17034                           
 17035                           ; BSR set to: 0
 17036  003B50  6B88               	clrf	_isdigit$2836& (0+255),b
 17037                           
 17038                           ; BSR set to: 0
 17039  003B52  0E3A               	movlw	58
 17040  003B54  5D89               	subwf	isdigit@c& (0+255),w,b
 17041  003B56  E205               	bc	l8239
 17042                           
 17043                           ; BSR set to: 0
 17044  003B58  0E2F               	movlw	47
 17045  003B5A  6589               	cpfsgt	isdigit@c& (0+255),b
 17046  003B5C  D002               	goto	l8239
 17047                           
 17048                           ; BSR set to: 0
 17049  003B5E  0E01               	movlw	1
 17050  003B60  6F88               	movwf	_isdigit$2836& (0+255),b
 17051  003B62                     l8239:
 17052                           
 17053                           ; BSR set to: 0
 17054  003B62  C088  F087         	movff	_isdigit$2836,??_isdigit
 17055  003B66  3187               	rrcf	??_isdigit& (0+255),w,b
 17056                           
 17057                           ; BSR set to: 0
 17058  003B68  0012               	return	
 17059  003B6A                     __end_of_isdigit:
 17060                           	opt stack 0
 17061                           tblptru	equ	0xFF8
 17062                           tblptrh	equ	0xFF7
 17063                           tblptrl	equ	0xFF6
 17064                           tablat	equ	0xFF5
 17065                           prodh	equ	0xFF4
 17066                           prodl	equ	0xFF3
 17067                           intcon	equ	0xFF2
 17068                           postinc0	equ	0xFEE
 17069                           wreg	equ	0xFE8
 17070                           indf1	equ	0xFE7
 17071                           postinc1	equ	0xFE6
 17072                           postdec1	equ	0xFE5
 17073                           fsr1h	equ	0xFE2
 17074                           fsr1l	equ	0xFE1
 17075                           indf2	equ	0xFDF
 17076                           postinc2	equ	0xFDE
 17077                           postdec2	equ	0xFDD
 17078                           fsr2h	equ	0xFDA
 17079                           fsr2l	equ	0xFD9
 17080                           status	equ	0xFD8
 17081                           
 17082 ;; *************** function _fround *****************
 17083 ;; Defined at:
 17084 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
 17085 ;; Parameters:    Size  Location     Type
 17086 ;;  prec            1    wreg     unsigned char 
 17087 ;; Auto vars:     Size  Location     Type
 17088 ;;  prec            1   12[BANK1 ] unsigned char 
 17089 ;; Return value:  Size  Location     Type
 17090 ;;                  4   73[BANK0 ] unsigned char 
 17091 ;; Registers used:
 17092 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17093 ;; Tracked objects:
 17094 ;;		On entry : F/2
 17095 ;;		On exit  : F/0
 17096 ;;		Unchanged: 0/0
 17097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17098 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17099 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17100 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17101 ;;      Totals:         0       4      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17102 ;;Total ram usage:       17 bytes
 17103 ;; Hardware stack levels used:    1
 17104 ;; Hardware stack levels required when called:   10
 17105 ;; This function calls:
 17106 ;;		___flmul
 17107 ;;		___lbdiv
 17108 ;;		___lbmod
 17109 ;; This function is called by:
 17110 ;;		_sprintf
 17111 ;; This function uses a non-reentrant model
 17112 ;;
 17113                           
 17114                           	psect	text19
 17115  00170A                     __ptext19:
 17116                           	opt stack 0
 17117  00170A                     _fround:
 17118                           	opt stack 18
 17119                           
 17120                           ; BSR set to: 0
 17121                           ;incstack = 0
 17122                           ;fround@prec stored from wreg
 17123  00170A  0101               	movlb	1	; () banked
 17124  00170C  6FC1               	movwf	fround@prec& (0+255),b
 17125                           
 17126                           ; BSR set to: 1
 17127                           ;doprnt.c: 413: if(prec>=110)
 17128  00170E  0E6D               	movlw	109
 17129  001710  65C1               	cpfsgt	fround@prec& (0+255),b
 17130  001712  D05D               	goto	l8181
 17131                           
 17132                           ; BSR set to: 1
 17133                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17134  001714  0E0A               	movlw	10
 17135  001716  0100               	movlb	0	; () banked
 17136  001718  6F8B               	movwf	___lbdiv@divisor& (0+255),b
 17137  00171A  0E64               	movlw	100
 17138  00171C  6F87               	movwf	___lbmod@divisor& (0+255),b
 17139  00171E  0101               	movlb	1	; () banked
 17140  001720  51C1               	movf	fround@prec& (0+255),w,b
 17141  001722  EC22  F01D         	call	___lbmod
 17142  001726  EC95  F01C         	call	___lbdiv
 17143  00172A  D8BC               	call	PL64	;call to abstracted procedure
 17144  00172C  0E24               	movlw	36
 17145  00172E  27B5               	addwf	??_fround& (0+255),f,b
 17146  001730  0E00               	movlw	0
 17147  001732  23B6               	addwfc	(??_fround+1)& (0+255),f,b
 17148  001734  D8A1               	call	PL10	;call to abstracted procedure
 17149  001736  ECD2  F007         	call	PL2	;call to abstracted procedure
 17150  00173A  0E64               	movlw	100
 17151  00173C  6F8B               	movwf	___lbdiv@divisor& (0+255),b
 17152  00173E  0101               	movlb	1	; () banked
 17153  001740  51C1               	movf	fround@prec& (0+255),w,b
 17154  001742  EC95  F01C         	call	___lbdiv
 17155  001746  D8B8               	call	PL96	;call to abstracted procedure
 17156  001748  0E48               	movlw	72
 17157  00174A  D8A3               	call	PL36	;call to abstracted procedure
 17158  00174C  D89E               	call	PL20	;call to abstracted procedure
 17159  00174E  ECDE  F007         	call	PL4	;call to abstracted procedure
 17160  001752  ECCF  F013         	call	___flmul	;wreg free
 17161  001756  C096  F1BD         	movff	?___flmul,_fround$3236
 17162  00175A  C097  F1BE         	movff	?___flmul+1,_fround$3236+1
 17163  00175E  C098  F1BF         	movff	?___flmul+2,_fround$3236+2
 17164  001762  C099  F1C0         	movff	?___flmul+3,_fround$3236+3
 17165                           
 17166                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17167  001766  0E0A               	movlw	10
 17168  001768  6F87               	movwf	___lbmod@divisor& (0+255),b
 17169  00176A  0101               	movlb	1	; () banked
 17170  00176C  51C1               	movf	fround@prec& (0+255),w,b
 17171  00176E  EC22  F01D         	call	___lbmod
 17172  001772  D898               	call	PL64	;call to abstracted procedure
 17173  001774  D881               	call	PL10	;call to abstracted procedure
 17174  001776  ECD2  F007         	call	PL2	;call to abstracted procedure
 17175  00177A  C1BD  F096         	movff	_fround$3236,___flmul@f1
 17176  00177E  C1BE  F097         	movff	_fround$3236+1,___flmul@f1+1
 17177  001782  C1BF  F098         	movff	_fround$3236+2,___flmul@f1+2
 17178  001786  C1C0  F099         	movff	_fround$3236+3,___flmul@f1+3
 17179  00178A  ECCF  F013         	call	___flmul	;wreg free
 17180  00178E  C096  F1B9         	movff	?___flmul,_fround$3237
 17181  001792  C097  F1BA         	movff	?___flmul+1,_fround$3237+1
 17182  001796  C098  F1BB         	movff	?___flmul+2,_fround$3237+2
 17183  00179A  C099  F1BC         	movff	?___flmul+3,_fround$3237+3
 17184                           
 17185                           ; BSR set to: 0
 17186                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 17187  00179E  C1B9  F096         	movff	_fround$3237,___flmul@f1
 17188  0017A2  C1BA  F097         	movff	_fround$3237+1,___flmul@f1+1
 17189  0017A6  C1BB  F098         	movff	_fround$3237+2,___flmul@f1+2
 17190  0017AA  C1BC  F099         	movff	_fround$3237+3,___flmul@f1+3
 17191  0017AE  6B9A               	clrf	___flmul@f2& (0+255),b
 17192  0017B0  6B9B               	clrf	(___flmul@f2+1)& (0+255),b
 17193  0017B2  6B9C               	clrf	(___flmul@f2+2)& (0+255),b
 17194  0017B4  0E3F               	movlw	63
 17195  0017B6  6F9D               	movwf	(___flmul@f2+3)& (0+255),b
 17196  0017B8  ECCF  F013         	call	___flmul	;wreg free
 17197  0017BC  C096  F0A9         	movff	?___flmul,?_fround
 17198  0017C0  C097  F0AA         	movff	?___flmul+1,?_fround+1
 17199  0017C4  C098  F0AB         	movff	?___flmul+2,?_fround+2
 17200  0017C8  C099  F0AC         	movff	?___flmul+3,?_fround+3
 17201  0017CC  0012               	return	
 17202  0017CE                     l8181:
 17203                           
 17204                           ; BSR set to: 1
 17205                           ;doprnt.c: 415: else if(prec > 10)
 17206  0017CE  0E0A               	movlw	10
 17207  0017D0  65C1               	cpfsgt	fround@prec& (0+255),b
 17208  0017D2  D038               	goto	l8189
 17209                           
 17210                           ; BSR set to: 1
 17211                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 17212  0017D4  0100               	movlb	0	; () banked
 17213  0017D6  6F87               	movwf	___lbmod@divisor& (0+255),b
 17214  0017D8  0101               	movlb	1	; () banked
 17215  0017DA  51C1               	movf	fround@prec& (0+255),w,b
 17216  0017DC  EC22  F01D         	call	___lbmod
 17217  0017E0  D861               	call	PL64	;call to abstracted procedure
 17218  0017E2  D84A               	call	PL10	;call to abstracted procedure
 17219  0017E4  ECD2  F007         	call	PL2	;call to abstracted procedure
 17220  0017E8  0E0A               	movlw	10
 17221  0017EA  6F8B               	movwf	___lbdiv@divisor& (0+255),b
 17222  0017EC  0101               	movlb	1	; () banked
 17223  0017EE  51C1               	movf	fround@prec& (0+255),w,b
 17224  0017F0  EC95  F01C         	call	___lbdiv
 17225  0017F4  D861               	call	PL96	;call to abstracted procedure
 17226  0017F6  0E24               	movlw	36
 17227  0017F8  D84C               	call	PL36	;call to abstracted procedure
 17228  0017FA  D847               	call	PL20	;call to abstracted procedure
 17229  0017FC  ECDE  F007         	call	PL4	;call to abstracted procedure
 17230  001800  ECCF  F013         	call	___flmul	;wreg free
 17231  001804  C096  F1BD         	movff	?___flmul,_fround$3236
 17232  001808  C097  F1BE         	movff	?___flmul+1,_fround$3236+1
 17233  00180C  C098  F1BF         	movff	?___flmul+2,_fround$3236+2
 17234  001810  C099  F1C0         	movff	?___flmul+3,_fround$3236+3
 17235                           
 17236                           ; BSR set to: 0
 17237                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 17238  001814  C1BD  F096         	movff	_fround$3236,___flmul@f1
 17239  001818  C1BE  F097         	movff	_fround$3236+1,___flmul@f1+1
 17240  00181C  C1BF  F098         	movff	_fround$3236+2,___flmul@f1+2
 17241  001820  C1C0  F099         	movff	_fround$3236+3,___flmul@f1+3
 17242  001824  6B9A               	clrf	___flmul@f2& (0+255),b
 17243  001826  6B9B               	clrf	(___flmul@f2+1)& (0+255),b
 17244  001828  6B9C               	clrf	(___flmul@f2+2)& (0+255),b
 17245  00182A  0E3F               	movlw	63
 17246  00182C  6F9D               	movwf	(___flmul@f2+3)& (0+255),b
 17247  00182E  ECCF  F013         	call	___flmul	;wreg free
 17248  001832  C096  F0A9         	movff	?___flmul,?_fround
 17249  001836  C097  F0AA         	movff	?___flmul+1,?_fround+1
 17250  00183A  C098  F0AB         	movff	?___flmul+2,?_fround+2
 17251  00183E  C099  F0AC         	movff	?___flmul+3,?_fround+3
 17252  001842  0012               	return	
 17253  001844                     l8189:
 17254                           
 17255                           ; BSR set to: 1
 17256                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 17257  001844  51C1               	movf	fround@prec& (0+255),w,b
 17258  001846  0D04               	mullw	4
 17259  001848  0EA7               	movlw	low __npowers_
 17260  00184A  24F3               	addwf	prodl,w,c
 17261  00184C  6EF6               	movwf	tblptrl,c
 17262  00184E  0EDC               	movlw	high __npowers_
 17263  001850  20F4               	addwfc	prodh,w,c
 17264  001852  D81B               	call	PL20	;call to abstracted procedure
 17265  001854  ECDE  F007         	call	PL4	;call to abstracted procedure
 17266  001858  6B9A               	clrf	___flmul@f2& (0+255),b
 17267  00185A  6B9B               	clrf	(___flmul@f2+1)& (0+255),b
 17268  00185C  6B9C               	clrf	(___flmul@f2+2)& (0+255),b
 17269  00185E  0E3F               	movlw	63
 17270  001860  6F9D               	movwf	(___flmul@f2+3)& (0+255),b
 17271  001862  ECCF  F013         	call	___flmul	;wreg free
 17272  001866  C096  F0A9         	movff	?___flmul,?_fround
 17273  00186A  C097  F0AA         	movff	?___flmul+1,?_fround+1
 17274  00186E  C098  F0AB         	movff	?___flmul+2,?_fround+2
 17275  001872  C099  F0AC         	movff	?___flmul+3,?_fround+3
 17276                           
 17277                           ; BSR set to: 0
 17278  001876  0012               	return	
 17279  001878                     __end_of_fround:
 17280                           	opt stack 0
 17281  001878                     PL10:
 17282                           	opt stack 18
 17283  001878  0EA7               	movlw	low __npowers_
 17284  00187A  25B5               	addwf	??_fround& (0+255),w,b
 17285  00187C  6EF6               	movwf	tblptrl,c
 17286  00187E  0EDC               	movlw	high __npowers_
 17287  001880  21B6               	addwfc	(??_fround+1)& (0+255),w,b
 17288  001882  6EF7               	movwf	tblptrh,c
 17289  001884                     	if	0	;There are less than 3 active tblptr bytes
 17290  001884                     	endif
 17291  001884  0009               	tblrd		*+
 17292  001886  0100               	movlb	0	; () banked
 17293  001888  0012               	return	
 17294  00188A                     __end_ofPL10:
 17295                           	opt stack 0
 17296  00188A                     PL20:
 17297                           	opt stack 18
 17298  00188A  6EF7               	movwf	tblptrh,c
 17299  00188C                     	if	0	;There are less than 3 active tblptr bytes
 17300  00188C                     	endif
 17301  00188C  0009               	tblrd		*+
 17302  00188E  0100               	movlb	0	; () banked
 17303  001890  0012               	return	
 17304  001892                     __end_ofPL20:
 17305                           	opt stack 0
 17306  001892                     PL36:
 17307                           	opt stack 18
 17308  001892  27B7               	addwf	(??_fround+2)& (0+255),f,b
 17309  001894  0E00               	movlw	0
 17310  001896  23B8               	addwfc	(??_fround+3)& (0+255),f,b
 17311  001898  0EA7               	movlw	low __npowers_
 17312  00189A  25B7               	addwf	(??_fround+2)& (0+255),w,b
 17313  00189C  6EF6               	movwf	tblptrl,c
 17314  00189E  0EDC               	movlw	high __npowers_
 17315  0018A0  21B8               	addwfc	(??_fround+3)& (0+255),w,b
 17316  0018A2  0012               	return	
 17317  0018A4                     __end_ofPL36:
 17318                           	opt stack 0
 17319  0018A4                     PL64:
 17320                           	opt stack 18
 17321  0018A4  0101               	movlb	1	; () banked
 17322  0018A6  6FB5               	movwf	??_fround& (0+255),b
 17323  0018A8  6BB6               	clrf	(??_fround+1)& (0+255),b
 17324  0018AA  90D8               	bcf	status,0,c
 17325  0018AC  37B5               	rlcf	??_fround& (0+255),f,b
 17326  0018AE  37B6               	rlcf	(??_fround+1)& (0+255),f,b
 17327  0018B0  90D8               	bcf	status,0,c
 17328  0018B2  37B5               	rlcf	??_fround& (0+255),f,b
 17329  0018B4  37B6               	rlcf	(??_fround+1)& (0+255),f,b
 17330  0018B6  0012               	return	
 17331  0018B8                     __end_ofPL64:
 17332                           	opt stack 0
 17333  0018B8                     PL96:
 17334                           	opt stack 18
 17335  0018B8  0101               	movlb	1	; () banked
 17336  0018BA  6FB7               	movwf	(??_fround+2)& (0+255),b
 17337  0018BC  6BB8               	clrf	(??_fround+3)& (0+255),b
 17338  0018BE  90D8               	bcf	status,0,c
 17339  0018C0  37B7               	rlcf	(??_fround+2)& (0+255),f,b
 17340  0018C2  37B8               	rlcf	(??_fround+3)& (0+255),f,b
 17341  0018C4  90D8               	bcf	status,0,c
 17342  0018C6  37B7               	rlcf	(??_fround+2)& (0+255),f,b
 17343  0018C8  37B8               	rlcf	(??_fround+3)& (0+255),f,b
 17344  0018CA  0012               	return	
 17345  0018CC                     __end_ofPL96:
 17346                           	opt stack 0
 17347                           tblptru	equ	0xFF8
 17348                           tblptrh	equ	0xFF7
 17349                           tblptrl	equ	0xFF6
 17350                           tablat	equ	0xFF5
 17351                           prodh	equ	0xFF4
 17352                           prodl	equ	0xFF3
 17353                           intcon	equ	0xFF2
 17354                           postinc0	equ	0xFEE
 17355                           wreg	equ	0xFE8
 17356                           indf1	equ	0xFE7
 17357                           postinc1	equ	0xFE6
 17358                           postdec1	equ	0xFE5
 17359                           fsr1h	equ	0xFE2
 17360                           fsr1l	equ	0xFE1
 17361                           indf2	equ	0xFDF
 17362                           postinc2	equ	0xFDE
 17363                           postdec2	equ	0xFDD
 17364                           fsr2h	equ	0xFDA
 17365                           fsr2l	equ	0xFD9
 17366                           status	equ	0xFD8
 17367                           
 17368 ;; *************** function ___lbmod *****************
 17369 ;; Defined at:
 17370 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lbmod.c"
 17371 ;; Parameters:    Size  Location     Type
 17372 ;;  dividend        1    wreg     unsigned char 
 17373 ;;  divisor         1   39[BANK0 ] unsigned char 
 17374 ;; Auto vars:     Size  Location     Type
 17375 ;;  dividend        1   40[BANK0 ] unsigned char 
 17376 ;;  rem             1   42[BANK0 ] unsigned char 
 17377 ;;  counter         1   41[BANK0 ] unsigned char 
 17378 ;; Return value:  Size  Location     Type
 17379 ;;                  1    wreg      unsigned char 
 17380 ;; Registers used:
 17381 ;;		wreg, status,2, status,0
 17382 ;; Tracked objects:
 17383 ;;		On entry : F/1
 17384 ;;		On exit  : F/0
 17385 ;;		Unchanged: 0/0
 17386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17387 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17388 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17390 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17391 ;;Total ram usage:        4 bytes
 17392 ;; Hardware stack levels used:    1
 17393 ;; Hardware stack levels required when called:    8
 17394 ;; This function calls:
 17395 ;;		Nothing
 17396 ;; This function is called by:
 17397 ;;		_fround
 17398 ;; This function uses a non-reentrant model
 17399 ;;
 17400                           
 17401                           	psect	text20
 17402  003A44                     __ptext20:
 17403                           	opt stack 0
 17404  003A44                     ___lbmod:
 17405                           	opt stack 19
 17406                           
 17407                           ; BSR set to: 0
 17408                           ;incstack = 0
 17409                           ;___lbmod@dividend stored from wreg
 17410  003A44  0100               	movlb	0	; () banked
 17411  003A46  6F88               	movwf	___lbmod@dividend& (0+255),b
 17412                           
 17413                           ; BSR set to: 0
 17414  003A48  0E08               	movlw	8
 17415  003A4A  6F89               	movwf	___lbmod@counter& (0+255),b
 17416                           
 17417                           ; BSR set to: 0
 17418  003A4C  6B8A               	clrf	___lbmod@rem& (0+255),b
 17419  003A4E                     l7995:
 17420                           
 17421                           ; BSR set to: 0
 17422  003A4E  90D8               	bcf	status,0,c
 17423  003A50  3588               	rlcf	___lbmod@dividend& (0+255),w,b
 17424  003A52  358A               	rlcf	___lbmod@rem& (0+255),w,b
 17425  003A54  6F8A               	movwf	___lbmod@rem& (0+255),b
 17426                           
 17427                           ; BSR set to: 0
 17428  003A56  90D8               	bcf	status,0,c
 17429  003A58  3788               	rlcf	___lbmod@dividend& (0+255),f,b
 17430                           
 17431                           ; BSR set to: 0
 17432  003A5A  5187               	movf	___lbmod@divisor& (0+255),w,b
 17433  003A5C  5D8A               	subwf	___lbmod@rem& (0+255),w,b
 17434  003A5E  E302               	bnc	l8003
 17435                           
 17436                           ; BSR set to: 0
 17437  003A60  5187               	movf	___lbmod@divisor& (0+255),w,b
 17438  003A62  5F8A               	subwf	___lbmod@rem& (0+255),f,b
 17439  003A64                     l8003:
 17440                           
 17441                           ; BSR set to: 0
 17442  003A64  2F89               	decfsz	___lbmod@counter& (0+255),f,b
 17443  003A66  D7F3               	goto	l7995
 17444                           
 17445                           ; BSR set to: 0
 17446  003A68  518A               	movf	___lbmod@rem& (0+255),w,b
 17447                           
 17448                           ; BSR set to: 0
 17449  003A6A  0012               	return	
 17450  003A6C                     __end_of___lbmod:
 17451                           	opt stack 0
 17452                           tblptru	equ	0xFF8
 17453                           tblptrh	equ	0xFF7
 17454                           tblptrl	equ	0xFF6
 17455                           tablat	equ	0xFF5
 17456                           prodh	equ	0xFF4
 17457                           prodl	equ	0xFF3
 17458                           intcon	equ	0xFF2
 17459                           postinc0	equ	0xFEE
 17460                           wreg	equ	0xFE8
 17461                           indf1	equ	0xFE7
 17462                           postinc1	equ	0xFE6
 17463                           postdec1	equ	0xFE5
 17464                           fsr1h	equ	0xFE2
 17465                           fsr1l	equ	0xFE1
 17466                           indf2	equ	0xFDF
 17467                           postinc2	equ	0xFDE
 17468                           postdec2	equ	0xFDD
 17469                           fsr2h	equ	0xFDA
 17470                           fsr2l	equ	0xFD9
 17471                           status	equ	0xFD8
 17472                           
 17473 ;; *************** function ___lbdiv *****************
 17474 ;; Defined at:
 17475 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lbdiv.c"
 17476 ;; Parameters:    Size  Location     Type
 17477 ;;  dividend        1    wreg     unsigned char 
 17478 ;;  divisor         1   43[BANK0 ] unsigned char 
 17479 ;; Auto vars:     Size  Location     Type
 17480 ;;  dividend        1   44[BANK0 ] unsigned char 
 17481 ;;  quotient        1   46[BANK0 ] unsigned char 
 17482 ;;  counter         1   45[BANK0 ] unsigned char 
 17483 ;; Return value:  Size  Location     Type
 17484 ;;                  1    wreg      unsigned char 
 17485 ;; Registers used:
 17486 ;;		wreg, status,2, status,0
 17487 ;; Tracked objects:
 17488 ;;		On entry : E/0
 17489 ;;		On exit  : F/0
 17490 ;;		Unchanged: 0/0
 17491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17492 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17493 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17495 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17496 ;;Total ram usage:        4 bytes
 17497 ;; Hardware stack levels used:    1
 17498 ;; Hardware stack levels required when called:    8
 17499 ;; This function calls:
 17500 ;;		Nothing
 17501 ;; This function is called by:
 17502 ;;		_fround
 17503 ;; This function uses a non-reentrant model
 17504 ;;
 17505                           
 17506                           	psect	text21
 17507  00392A                     __ptext21:
 17508                           	opt stack 0
 17509  00392A                     ___lbdiv:
 17510                           	opt stack 19
 17511                           
 17512                           ; BSR set to: 0
 17513                           ;incstack = 0
 17514                           ;___lbdiv@dividend stored from wreg
 17515  00392A  0100               	movlb	0	; () banked
 17516  00392C  6F8C               	movwf	___lbdiv@dividend& (0+255),b
 17517                           
 17518                           ; BSR set to: 0
 17519  00392E  6B8E               	clrf	___lbdiv@quotient& (0+255),b
 17520                           
 17521                           ; BSR set to: 0
 17522  003930  518B               	movf	___lbdiv@divisor& (0+255),w,b
 17523  003932  E014               	bz	l7987
 17524                           
 17525                           ; BSR set to: 0
 17526  003934  0E01               	movlw	1
 17527  003936  6F8D               	movwf	___lbdiv@counter& (0+255),b
 17528  003938  D003               	goto	l7975
 17529  00393A                     l7971:
 17530                           
 17531                           ; BSR set to: 0
 17532  00393A  90D8               	bcf	status,0,c
 17533  00393C  378B               	rlcf	___lbdiv@divisor& (0+255),f,b
 17534                           
 17535                           ; BSR set to: 0
 17536  00393E  2B8D               	incf	___lbdiv@counter& (0+255),f,b
 17537  003940                     l7975:
 17538                           
 17539                           ; BSR set to: 0
 17540  003940  AF8B               	btfss	___lbdiv@divisor& (0+255),7,b
 17541  003942  D7FB               	goto	l7971
 17542  003944                     l7977:
 17543                           
 17544                           ; BSR set to: 0
 17545  003944  90D8               	bcf	status,0,c
 17546  003946  378E               	rlcf	___lbdiv@quotient& (0+255),f,b
 17547  003948  518B               	movf	___lbdiv@divisor& (0+255),w,b
 17548  00394A  5D8C               	subwf	___lbdiv@dividend& (0+255),w,b
 17549  00394C  E303               	bnc	l7983
 17550                           
 17551                           ; BSR set to: 0
 17552  00394E  518B               	movf	___lbdiv@divisor& (0+255),w,b
 17553  003950  5F8C               	subwf	___lbdiv@dividend& (0+255),f,b
 17554                           
 17555                           ; BSR set to: 0
 17556  003952  818E               	bsf	___lbdiv@quotient& (0+255),0,b
 17557  003954                     l7983:
 17558                           
 17559                           ; BSR set to: 0
 17560  003954  90D8               	bcf	status,0,c
 17561  003956  338B               	rrcf	___lbdiv@divisor& (0+255),f,b
 17562                           
 17563                           ; BSR set to: 0
 17564  003958  2F8D               	decfsz	___lbdiv@counter& (0+255),f,b
 17565  00395A  D7F4               	goto	l7977
 17566  00395C                     l7987:
 17567                           
 17568                           ; BSR set to: 0
 17569  00395C  518E               	movf	___lbdiv@quotient& (0+255),w,b
 17570                           
 17571                           ; BSR set to: 0
 17572  00395E  0012               	return	
 17573  003960                     __end_of___lbdiv:
 17574                           	opt stack 0
 17575                           tblptru	equ	0xFF8
 17576                           tblptrh	equ	0xFF7
 17577                           tblptrl	equ	0xFF6
 17578                           tablat	equ	0xFF5
 17579                           prodh	equ	0xFF4
 17580                           prodl	equ	0xFF3
 17581                           intcon	equ	0xFF2
 17582                           postinc0	equ	0xFEE
 17583                           wreg	equ	0xFE8
 17584                           indf1	equ	0xFE7
 17585                           postinc1	equ	0xFE6
 17586                           postdec1	equ	0xFE5
 17587                           fsr1h	equ	0xFE2
 17588                           fsr1l	equ	0xFE1
 17589                           indf2	equ	0xFDF
 17590                           postinc2	equ	0xFDE
 17591                           postdec2	equ	0xFDD
 17592                           fsr2h	equ	0xFDA
 17593                           fsr2l	equ	0xFD9
 17594                           status	equ	0xFD8
 17595                           
 17596 ;; *************** function ___flmul *****************
 17597 ;; Defined at:
 17598 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\flmul.c"
 17599 ;; Parameters:    Size  Location     Type
 17600 ;;  f1              4   54[BANK0 ] unsigned char 
 17601 ;;  f2              4   58[BANK0 ] unsigned char 
 17602 ;; Auto vars:     Size  Location     Type
 17603 ;;  f3_as_produc    4   67[BANK0 ] unsigned long 
 17604 ;;  sign            1   72[BANK0 ] unsigned char 
 17605 ;;  cntr            1   71[BANK0 ] unsigned char 
 17606 ;;  exp             1   66[BANK0 ] unsigned char 
 17607 ;; Return value:  Size  Location     Type
 17608 ;;                  4   54[BANK0 ] unsigned char 
 17609 ;; Registers used:
 17610 ;;		wreg, status,2, status,0, cstack
 17611 ;; Tracked objects:
 17612 ;;		On entry : F/0
 17613 ;;		On exit  : F/0
 17614 ;;		Unchanged: 0/0
 17615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17616 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17617 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17618 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17619 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17620 ;;Total ram usage:       19 bytes
 17621 ;; Hardware stack levels used:    1
 17622 ;; Hardware stack levels required when called:    9
 17623 ;; This function calls:
 17624 ;;		___flpack
 17625 ;; This function is called by:
 17626 ;;		_ds18b20_read
 17627 ;;		_fround
 17628 ;;		_scale
 17629 ;;		_sprintf
 17630 ;; This function uses a non-reentrant model
 17631 ;;
 17632                           
 17633                           	psect	text22
 17634  00279E                     __ptext22:
 17635                           	opt stack 0
 17636  00279E                     ___flmul:
 17637                           	opt stack 19
 17638                           
 17639                           ; BSR set to: 0
 17640                           
 17641                           ; BSR set to: 0
 17642                           ;incstack = 0
 17643  00279E  C096  F09E         	movff	___flmul@f1,??___flmul
 17644  0027A2  C097  F09F         	movff	___flmul@f1+1,??___flmul+1
 17645  0027A6  C098  F0A0         	movff	___flmul@f1+2,??___flmul+2
 17646  0027AA  C099  F0A1         	movff	___flmul@f1+3,??___flmul+3
 17647  0027AE  0E18               	movlw	24
 17648  0027B0  D001               	goto	u8580
 17649  0027B2                     u8585:
 17650  0027B2  D873               	call	PL142	;call to abstracted procedure
 17651  0027B4                     u8580:
 17652  0027B4  2EE8               	decfsz	wreg,f,c
 17653  0027B6  D7FD               	goto	u8585
 17654  0027B8  519E               	movf	??___flmul& (0+255),w,b
 17655  0027BA  6FA2               	movwf	___flmul@exp& (0+255),b
 17656  0027BC  0100               	movlb	0	; () banked
 17657  0027BE  67A2               	tstfsz	___flmul@exp& (0+255),b
 17658  0027C0  D005               	goto	l7843
 17659                           
 17660                           ; BSR set to: 0
 17661  0027C2  6B96               	clrf	?___flmul& (0+255),b
 17662  0027C4  6B97               	clrf	(?___flmul+1)& (0+255),b
 17663  0027C6  6B98               	clrf	(?___flmul+2)& (0+255),b
 17664  0027C8  6B99               	clrf	(?___flmul+3)& (0+255),b
 17665  0027CA  0012               	return	
 17666  0027CC                     l7843:
 17667                           
 17668                           ; BSR set to: 0
 17669  0027CC  C09A  F09E         	movff	___flmul@f2,??___flmul
 17670  0027D0  C09B  F09F         	movff	___flmul@f2+1,??___flmul+1
 17671  0027D4  C09C  F0A0         	movff	___flmul@f2+2,??___flmul+2
 17672  0027D8  C09D  F0A1         	movff	___flmul@f2+3,??___flmul+3
 17673  0027DC  0E18               	movlw	24
 17674  0027DE  D001               	goto	u8600
 17675  0027E0                     u8605:
 17676  0027E0  D85C               	call	PL142	;call to abstracted procedure
 17677  0027E2                     u8600:
 17678  0027E2  2EE8               	decfsz	wreg,f,c
 17679  0027E4  D7FD               	goto	u8605
 17680  0027E6  519E               	movf	??___flmul& (0+255),w,b
 17681  0027E8  6FA8               	movwf	___flmul@sign& (0+255),b
 17682  0027EA  0100               	movlb	0	; () banked
 17683  0027EC  67A8               	tstfsz	___flmul@sign& (0+255),b
 17684  0027EE  D005               	goto	l7847
 17685                           
 17686                           ; BSR set to: 0
 17687  0027F0  6B96               	clrf	?___flmul& (0+255),b
 17688  0027F2  6B97               	clrf	(?___flmul+1)& (0+255),b
 17689  0027F4  6B98               	clrf	(?___flmul+2)& (0+255),b
 17690  0027F6  6B99               	clrf	(?___flmul+3)& (0+255),b
 17691  0027F8  0012               	return	
 17692  0027FA                     l7847:
 17693                           
 17694                           ; BSR set to: 0
 17695  0027FA  51A8               	movf	___flmul@sign& (0+255),w,b
 17696  0027FC  0F7B               	addlw	123
 17697  0027FE  27A2               	addwf	___flmul@exp& (0+255),f,b
 17698                           
 17699                           ; BSR set to: 0
 17700  002800  C099  F0A8         	movff	___flmul@f1+3,___flmul@sign
 17701  002804  519D               	movf	(___flmul@f2+3)& (0+255),w,b
 17702  002806  1BA8               	xorwf	___flmul@sign& (0+255),f,b
 17703  002808  0E80               	movlw	128
 17704  00280A  17A8               	andwf	___flmul@sign& (0+255),f,b
 17705                           
 17706                           ; BSR set to: 0
 17707  00280C  8F98               	bsf	(___flmul@f1+2)& (0+255),7,b
 17708                           
 17709                           ; BSR set to: 0
 17710  00280E  8F9C               	bsf	(___flmul@f2+2)& (0+255),7,b
 17711  002810  6B9D               	clrf	(___flmul@f2+3)& (0+255),b
 17712                           
 17713                           ; BSR set to: 0
 17714  002812  6BA3               	clrf	___flmul@f3_as_product& (0+255),b
 17715  002814  6BA4               	clrf	(___flmul@f3_as_product+1)& (0+255),b
 17716  002816  6BA5               	clrf	(___flmul@f3_as_product+2)& (0+255),b
 17717  002818  6BA6               	clrf	(___flmul@f3_as_product+3)& (0+255),b
 17718                           
 17719                           ; BSR set to: 0
 17720  00281A  0E07               	movlw	7
 17721  00281C  6FA7               	movwf	___flmul@cntr& (0+255),b
 17722  00281E                     l7859:
 17723                           
 17724                           ; BSR set to: 0
 17725  00281E  A196               	btfss	___flmul@f1& (0+255),0,b
 17726  002820  D002               	goto	l7863
 17727                           
 17728                           ; BSR set to: 0
 17729  002822  519A               	movf	___flmul@f2& (0+255),w,b
 17730  002824  D82B               	call	PL118	;call to abstracted procedure
 17731  002826                     l7863:
 17732                           
 17733                           ; BSR set to: 0
 17734                           
 17735                           ; BSR set to: 0
 17736  002826  D832               	call	PL136	;call to abstracted procedure
 17737  002828  379A               	rlcf	___flmul@f2& (0+255),f,b
 17738  00282A  379B               	rlcf	(___flmul@f2+1)& (0+255),f,b
 17739  00282C  379C               	rlcf	(___flmul@f2+2)& (0+255),f,b
 17740  00282E  379D               	rlcf	(___flmul@f2+3)& (0+255),f,b
 17741                           
 17742                           ; BSR set to: 0
 17743  002830  2FA7               	decfsz	___flmul@cntr& (0+255),f,b
 17744  002832  D7F5               	goto	l7859
 17745                           
 17746                           ; BSR set to: 0
 17747  002834  0E11               	movlw	17
 17748  002836  6FA7               	movwf	___flmul@cntr& (0+255),b
 17749  002838                     l7871:
 17750                           
 17751                           ; BSR set to: 0
 17752  002838  A196               	btfss	___flmul@f1& (0+255),0,b
 17753  00283A  D002               	goto	l7875
 17754                           
 17755                           ; BSR set to: 0
 17756  00283C  519A               	movf	___flmul@f2& (0+255),w,b
 17757  00283E  D81E               	call	PL118	;call to abstracted procedure
 17758  002840                     l7875:
 17759                           
 17760                           ; BSR set to: 0
 17761                           
 17762                           ; BSR set to: 0
 17763  002840  D825               	call	PL136	;call to abstracted procedure
 17764  002842  33A6               	rrcf	(___flmul@f3_as_product+3)& (0+255),f,b
 17765  002844  33A5               	rrcf	(___flmul@f3_as_product+2)& (0+255),f,b
 17766  002846  33A4               	rrcf	(___flmul@f3_as_product+1)& (0+255),f,b
 17767  002848  33A3               	rrcf	___flmul@f3_as_product& (0+255),f,b
 17768                           
 17769                           ; BSR set to: 0
 17770  00284A  2FA7               	decfsz	___flmul@cntr& (0+255),f,b
 17771  00284C  D7F5               	goto	l7871
 17772                           
 17773                           ; BSR set to: 0
 17774  00284E  C0A3  F087         	movff	___flmul@f3_as_product,___flpack@arg
 17775  002852  C0A4  F088         	movff	___flmul@f3_as_product+1,___flpack@arg+1
 17776  002856  C0A5  F089         	movff	___flmul@f3_as_product+2,___flpack@arg+2
 17777  00285A  C0A6  F08A         	movff	___flmul@f3_as_product+3,___flpack@arg+3
 17778  00285E  C0A2  F08B         	movff	___flmul@exp,___flpack@exp
 17779  002862  C0A8  F08C         	movff	___flmul@sign,___flpack@sign
 17780  002866  EC0D  F016         	call	___flpack	;wreg free
 17781  00286A  C087  F096         	movff	?___flpack,?___flmul
 17782  00286E  C088  F097         	movff	?___flpack+1,?___flmul+1
 17783  002872  C089  F098         	movff	?___flpack+2,?___flmul+2
 17784  002876  C08A  F099         	movff	?___flpack+3,?___flmul+3
 17785                           
 17786                           ; BSR set to: 0
 17787  00287A  0012               	return	
 17788  00287C                     __end_of___flmul:
 17789                           	opt stack 0
 17790  00287C                     PL118:
 17791                           	opt stack 19
 17792  00287C  27A3               	addwf	___flmul@f3_as_product& (0+255),f,b
 17793  00287E  519B               	movf	(___flmul@f2+1)& (0+255),w,b
 17794  002880  23A4               	addwfc	(___flmul@f3_as_product+1)& (0+255),f,b
 17795  002882  519C               	movf	(___flmul@f2+2)& (0+255),w,b
 17796  002884  23A5               	addwfc	(___flmul@f3_as_product+2)& (0+255),f,b
 17797  002886  519D               	movf	(___flmul@f2+3)& (0+255),w,b
 17798  002888  23A6               	addwfc	(___flmul@f3_as_product+3)& (0+255),f,b
 17799  00288A  0012               	return	
 17800  00288C                     __end_ofPL118:
 17801                           	opt stack 0
 17802  00288C                     PL136:
 17803                           	opt stack 19
 17804  00288C  90D8               	bcf	status,0,c
 17805  00288E  3399               	rrcf	(___flmul@f1+3)& (0+255),f,b
 17806  002890  3398               	rrcf	(___flmul@f1+2)& (0+255),f,b
 17807  002892  3397               	rrcf	(___flmul@f1+1)& (0+255),f,b
 17808  002894  3396               	rrcf	___flmul@f1& (0+255),f,b
 17809  002896  90D8               	bcf	status,0,c
 17810  002898  0012               	return	
 17811  00289A                     __end_ofPL136:
 17812                           	opt stack 0
 17813  00289A                     PL142:
 17814                           	opt stack 19
 17815  00289A  90D8               	bcf	status,0,c
 17816  00289C  33A1               	rrcf	(??___flmul+3)& (0+255),f,b
 17817  00289E  33A0               	rrcf	(??___flmul+2)& (0+255),f,b
 17818  0028A0  339F               	rrcf	(??___flmul+1)& (0+255),f,b
 17819  0028A2  339E               	rrcf	??___flmul& (0+255),f,b
 17820  0028A4  0012               	return	
 17821  0028A6                     __end_ofPL142:
 17822                           	opt stack 0
 17823                           tblptru	equ	0xFF8
 17824                           tblptrh	equ	0xFF7
 17825                           tblptrl	equ	0xFF6
 17826                           tablat	equ	0xFF5
 17827                           prodh	equ	0xFF4
 17828                           prodl	equ	0xFF3
 17829                           intcon	equ	0xFF2
 17830                           postinc0	equ	0xFEE
 17831                           wreg	equ	0xFE8
 17832                           indf1	equ	0xFE7
 17833                           postinc1	equ	0xFE6
 17834                           postdec1	equ	0xFE5
 17835                           fsr1h	equ	0xFE2
 17836                           fsr1l	equ	0xFE1
 17837                           indf2	equ	0xFDF
 17838                           postinc2	equ	0xFDE
 17839                           postdec2	equ	0xFDD
 17840                           fsr2h	equ	0xFDA
 17841                           fsr2l	equ	0xFD9
 17842                           status	equ	0xFD8
 17843                           
 17844 ;; *************** function __tdiv_to_l_ *****************
 17845 ;; Defined at:
 17846 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdivl.c"
 17847 ;; Parameters:    Size  Location     Type
 17848 ;;  f1              4   39[BANK0 ] float 
 17849 ;;  f2              4   43[BANK0 ] float 
 17850 ;; Auto vars:     Size  Location     Type
 17851 ;;  quot            4   50[BANK0 ] unsigned long 
 17852 ;;  exp1            1   55[BANK0 ] unsigned char 
 17853 ;;  cntr            1   54[BANK0 ] unsigned char 
 17854 ;; Return value:  Size  Location     Type
 17855 ;;                  4   39[BANK0 ] unsigned long 
 17856 ;; Registers used:
 17857 ;;		wreg, status,2, status,0
 17858 ;; Tracked objects:
 17859 ;;		On entry : 0/0
 17860 ;;		On exit  : F/0
 17861 ;;		Unchanged: 0/0
 17862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17863 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17864 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17865 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17866 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17867 ;;Total ram usage:       17 bytes
 17868 ;; Hardware stack levels used:    1
 17869 ;; Hardware stack levels required when called:    8
 17870 ;; This function calls:
 17871 ;;		Nothing
 17872 ;; This function is called by:
 17873 ;;		_sprintf
 17874 ;; This function uses a non-reentrant model
 17875 ;;
 17876                           
 17877                           	psect	text23
 17878  0029AC                     __ptext23:
 17879                           	opt stack 0
 17880  0029AC                     __tdiv_to_l_:
 17881                           	opt stack 20
 17882                           
 17883                           ; BSR set to: 0
 17884                           ;incstack = 0
 17885  0029AC  0100               	movlb	0	; () banked
 17886  0029AE  C089  F08F         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 17887  0029B2  6B90               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 17888  0029B4  6B91               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 17889  0029B6  3588               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 17890  0029B8  378F               	rlcf	??__tdiv_to_l_& (0+255),f,b
 17891  0029BA  E301               	bnc	u9241
 17892  0029BC  8190               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 17893  0029BE                     u9241:
 17894  0029BE  518F               	movf	??__tdiv_to_l_& (0+255),w,b
 17895  0029C0  6F97               	movwf	__tdiv_to_l_@exp1& (0+255),b
 17896  0029C2  0100               	movlb	0	; () banked
 17897  0029C4  6797               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
 17898  0029C6  D005               	goto	l8247
 17899  0029C8                     l8245:
 17900                           
 17901                           ; BSR set to: 0
 17902  0029C8  6B87               	clrf	?__tdiv_to_l_& (0+255),b
 17903  0029CA  6B88               	clrf	(?__tdiv_to_l_+1)& (0+255),b
 17904  0029CC  6B89               	clrf	(?__tdiv_to_l_+2)& (0+255),b
 17905  0029CE  6B8A               	clrf	(?__tdiv_to_l_+3)& (0+255),b
 17906  0029D0  0012               	return	
 17907  0029D2                     l8247:
 17908                           
 17909                           ; BSR set to: 0
 17910  0029D2  C08D  F08F         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 17911  0029D6  6B90               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 17912  0029D8  6B91               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 17913  0029DA  358C               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 17914  0029DC  378F               	rlcf	??__tdiv_to_l_& (0+255),f,b
 17915  0029DE  E301               	bnc	u9261
 17916  0029E0  8190               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 17917  0029E2                     u9261:
 17918  0029E2  518F               	movf	??__tdiv_to_l_& (0+255),w,b
 17919  0029E4  6F96               	movwf	__tdiv_to_l_@cntr& (0+255),b
 17920  0029E6  0100               	movlb	0	; () banked
 17921  0029E8  6796               	tstfsz	__tdiv_to_l_@cntr& (0+255),b
 17922  0029EA  D001               	goto	l8251
 17923  0029EC  D7ED               	goto	l8245
 17924  0029EE                     l8251:
 17925                           
 17926                           ; BSR set to: 0
 17927  0029EE  8F88               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 17928                           
 17929                           ; BSR set to: 0
 17930  0029F0  6B89               	clrf	(__tdiv_to_l_@f1+2)& (0+255),b
 17931  0029F2  8F8C               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 17932                           
 17933                           ; BSR set to: 0
 17934  0029F4  6B8D               	clrf	(__tdiv_to_l_@f2+2)& (0+255),b
 17935                           
 17936                           ; BSR set to: 0
 17937  0029F6  6B92               	clrf	__tdiv_to_l_@quot& (0+255),b
 17938  0029F8  6B93               	clrf	(__tdiv_to_l_@quot+1)& (0+255),b
 17939  0029FA  6B94               	clrf	(__tdiv_to_l_@quot+2)& (0+255),b
 17940  0029FC  6B95               	clrf	(__tdiv_to_l_@quot+3)& (0+255),b
 17941                           
 17942                           ; BSR set to: 0
 17943  0029FE  0E7F               	movlw	127
 17944  002A00  5F97               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 17945                           
 17946                           ; BSR set to: 0
 17947  002A02  5196               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 17948  002A04  0F98               	addlw	152
 17949  002A06  5F97               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 17950                           
 17951                           ; BSR set to: 0
 17952  002A08  0E18               	movlw	24
 17953  002A0A  6F96               	movwf	__tdiv_to_l_@cntr& (0+255),b
 17954  002A0C                     l8265:
 17955                           
 17956                           ; BSR set to: 0
 17957  002A0C  90D8               	bcf	status,0,c
 17958  002A0E  3792               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 17959  002A10  3793               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 17960  002A12  3794               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 17961  002A14  3795               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 17962                           
 17963                           ; BSR set to: 0
 17964  002A16  518B               	movf	__tdiv_to_l_@f2& (0+255),w,b
 17965  002A18  5D87               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 17966  002A1A  518C               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 17967  002A1C  5988               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 17968  002A1E  518D               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 17969  002A20  5989               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 17970  002A22  E307               	bnc	l1790
 17971                           
 17972                           ; BSR set to: 0
 17973  002A24  518B               	movf	__tdiv_to_l_@f2& (0+255),w,b
 17974  002A26  5F87               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 17975  002A28  518C               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 17976  002A2A  5B88               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 17977  002A2C  518D               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 17978  002A2E  5B89               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 17979                           
 17980                           ; BSR set to: 0
 17981  002A30  8192               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 17982  002A32                     l1790:
 17983                           
 17984                           ; BSR set to: 0
 17985  002A32  90D8               	bcf	status,0,c
 17986  002A34  3787               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 17987  002A36  3788               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 17988  002A38  3789               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 17989                           
 17990                           ; BSR set to: 0
 17991  002A3A  2F96               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 17992  002A3C  D7E7               	goto	l8265
 17993                           
 17994                           ; BSR set to: 0
 17995  002A3E  AF97               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 17996  002A40  D00F               	goto	l8283
 17997                           
 17998                           ; BSR set to: 0
 17999  002A42  5197               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 18000  002A44  0A80               	xorlw	128
 18001  002A46  6F8F               	movwf	??__tdiv_to_l_& (0+255),b
 18002  002A48  0EE9               	movlw	233
 18003  002A4A  0A80               	xorlw	128
 18004  002A4C  5D8F               	subwf	??__tdiv_to_l_& (0+255),w,b
 18005  002A4E  E3BC               	bnc	l8245
 18006  002A50                     l8279:
 18007                           
 18008                           ; BSR set to: 0
 18009  002A50  90D8               	bcf	status,0,c
 18010  002A52  3395               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 18011  002A54  3394               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 18012  002A56  3393               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 18013  002A58  3392               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 18014                           
 18015                           ; BSR set to: 0
 18016  002A5A  3F97               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 18017  002A5C  D7F9               	goto	l8279
 18018  002A5E  D00C               	goto	l1796
 18019  002A60                     l8283:
 18020                           
 18021                           ; BSR set to: 0
 18022  002A60  0E17               	movlw	23
 18023  002A62  6597               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 18024  002A64  D007               	goto	l8289
 18025  002A66  D7B0               	goto	l8245
 18026  002A68                     l8287:
 18027                           
 18028                           ; BSR set to: 0
 18029  002A68  90D8               	bcf	status,0,c
 18030  002A6A  3792               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 18031  002A6C  3793               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 18032  002A6E  3794               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 18033  002A70  3795               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 18034  002A72  0797               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 18035  002A74                     l8289:
 18036                           
 18037                           ; BSR set to: 0
 18038  002A74  6797               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
 18039  002A76  D7F8               	goto	l8287
 18040  002A78                     l1796:
 18041                           
 18042                           ; BSR set to: 0
 18043  002A78  C092  F087         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 18044  002A7C  C093  F088         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 18045  002A80  C094  F089         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 18046  002A84  C095  F08A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 18047                           
 18048                           ; BSR set to: 0
 18049  002A88  0012               	return	
 18050  002A8A                     __end_of__tdiv_to_l_:
 18051                           	opt stack 0
 18052                           tblptru	equ	0xFF8
 18053                           tblptrh	equ	0xFF7
 18054                           tblptrl	equ	0xFF6
 18055                           tablat	equ	0xFF5
 18056                           prodh	equ	0xFF4
 18057                           prodl	equ	0xFF3
 18058                           intcon	equ	0xFF2
 18059                           postinc0	equ	0xFEE
 18060                           wreg	equ	0xFE8
 18061                           indf1	equ	0xFE7
 18062                           postinc1	equ	0xFE6
 18063                           postdec1	equ	0xFE5
 18064                           fsr1h	equ	0xFE2
 18065                           fsr1l	equ	0xFE1
 18066                           indf2	equ	0xFDF
 18067                           postinc2	equ	0xFDE
 18068                           postdec2	equ	0xFDD
 18069                           fsr2h	equ	0xFDA
 18070                           fsr2l	equ	0xFD9
 18071                           status	equ	0xFD8
 18072                           
 18073 ;; *************** function __div_to_l_ *****************
 18074 ;; Defined at:
 18075 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fldivl.c"
 18076 ;; Parameters:    Size  Location     Type
 18077 ;;  f1              4   39[BANK0 ] unsigned long 
 18078 ;;  f2              4   43[BANK0 ] unsigned long 
 18079 ;; Auto vars:     Size  Location     Type
 18080 ;;  quot            4   51[BANK0 ] unsigned long 
 18081 ;;  exp1            1   56[BANK0 ] unsigned char 
 18082 ;;  cntr            1   55[BANK0 ] unsigned char 
 18083 ;; Return value:  Size  Location     Type
 18084 ;;                  4   39[BANK0 ] unsigned long 
 18085 ;; Registers used:
 18086 ;;		wreg, status,2, status,0
 18087 ;; Tracked objects:
 18088 ;;		On entry : F/0
 18089 ;;		On exit  : F/0
 18090 ;;		Unchanged: 0/0
 18091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18092 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18093 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18094 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18095 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18096 ;;Total ram usage:       18 bytes
 18097 ;; Hardware stack levels used:    1
 18098 ;; Hardware stack levels required when called:    8
 18099 ;; This function calls:
 18100 ;;		Nothing
 18101 ;; This function is called by:
 18102 ;;		_sprintf
 18103 ;; This function uses a non-reentrant model
 18104 ;;
 18105                           
 18106                           	psect	text24
 18107  0028A6                     __ptext24:
 18108                           	opt stack 0
 18109  0028A6                     __div_to_l_:
 18110                           	opt stack 20
 18111                           
 18112                           ; BSR set to: 0
 18113                           
 18114                           ; BSR set to: 0
 18115                           ;incstack = 0
 18116  0028A6  C087  F08F         	movff	__div_to_l_@f1,??__div_to_l_
 18117  0028AA  C088  F090         	movff	__div_to_l_@f1+1,??__div_to_l_+1
 18118  0028AE  C089  F091         	movff	__div_to_l_@f1+2,??__div_to_l_+2
 18119  0028B2  C08A  F092         	movff	__div_to_l_@f1+3,??__div_to_l_+3
 18120  0028B6  0E18               	movlw	24
 18121  0028B8  D001               	goto	u9330
 18122  0028BA                     u9335:
 18123  0028BA  D872               	call	PL148	;call to abstracted procedure
 18124  0028BC                     u9330:
 18125  0028BC  2EE8               	decfsz	wreg,f,c
 18126  0028BE  D7FD               	goto	u9335
 18127  0028C0  518F               	movf	??__div_to_l_& (0+255),w,b
 18128  0028C2  6F98               	movwf	__div_to_l_@exp1& (0+255),b
 18129  0028C4  0100               	movlb	0	; () banked
 18130  0028C6  6798               	tstfsz	__div_to_l_@exp1& (0+255),b
 18131  0028C8  D005               	goto	l8295
 18132  0028CA                     l8293:
 18133                           
 18134                           ; BSR set to: 0
 18135  0028CA  6B87               	clrf	?__div_to_l_& (0+255),b
 18136  0028CC  6B88               	clrf	(?__div_to_l_+1)& (0+255),b
 18137  0028CE  6B89               	clrf	(?__div_to_l_+2)& (0+255),b
 18138  0028D0  6B8A               	clrf	(?__div_to_l_+3)& (0+255),b
 18139  0028D2  0012               	return	
 18140  0028D4                     l8295:
 18141                           
 18142                           ; BSR set to: 0
 18143  0028D4  C08B  F08F         	movff	__div_to_l_@f2,??__div_to_l_
 18144  0028D8  C08C  F090         	movff	__div_to_l_@f2+1,??__div_to_l_+1
 18145  0028DC  C08D  F091         	movff	__div_to_l_@f2+2,??__div_to_l_+2
 18146  0028E0  C08E  F092         	movff	__div_to_l_@f2+3,??__div_to_l_+3
 18147  0028E4  0E18               	movlw	24
 18148  0028E6  D001               	goto	u9350
 18149  0028E8                     u9355:
 18150  0028E8  D85B               	call	PL148	;call to abstracted procedure
 18151  0028EA                     u9350:
 18152  0028EA  2EE8               	decfsz	wreg,f,c
 18153  0028EC  D7FD               	goto	u9355
 18154  0028EE  518F               	movf	??__div_to_l_& (0+255),w,b
 18155  0028F0  6F97               	movwf	__div_to_l_@cntr& (0+255),b
 18156  0028F2  0100               	movlb	0	; () banked
 18157  0028F4  6797               	tstfsz	__div_to_l_@cntr& (0+255),b
 18158  0028F6  D001               	goto	l8299
 18159  0028F8  D7E8               	goto	l8293
 18160  0028FA                     l8299:
 18161                           
 18162                           ; BSR set to: 0
 18163  0028FA  8F89               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 18164                           
 18165                           ; BSR set to: 0
 18166  0028FC  6B8A               	clrf	(__div_to_l_@f1+3)& (0+255),b
 18167                           
 18168                           ; BSR set to: 0
 18169  0028FE  8F8D               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 18170  002900  6B8E               	clrf	(__div_to_l_@f2+3)& (0+255),b
 18171                           
 18172                           ; BSR set to: 0
 18173  002902  6B93               	clrf	__div_to_l_@quot& (0+255),b
 18174  002904  6B94               	clrf	(__div_to_l_@quot+1)& (0+255),b
 18175  002906  6B95               	clrf	(__div_to_l_@quot+2)& (0+255),b
 18176  002908  6B96               	clrf	(__div_to_l_@quot+3)& (0+255),b
 18177  00290A  0E7F               	movlw	127
 18178  00290C  5F98               	subwf	__div_to_l_@exp1& (0+255),f,b
 18179  00290E  5197               	movf	__div_to_l_@cntr& (0+255),w,b
 18180  002910  0FA0               	addlw	160
 18181  002912  5F98               	subwf	__div_to_l_@exp1& (0+255),f,b
 18182                           
 18183                           ; BSR set to: 0
 18184  002914  0E20               	movlw	32
 18185  002916  6F97               	movwf	__div_to_l_@cntr& (0+255),b
 18186  002918                     l8309:
 18187                           
 18188                           ; BSR set to: 0
 18189  002918  90D8               	bcf	status,0,c
 18190  00291A  3793               	rlcf	__div_to_l_@quot& (0+255),f,b
 18191  00291C  3794               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 18192  00291E  3795               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 18193  002920  3796               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 18194                           
 18195                           ; BSR set to: 0
 18196  002922  518B               	movf	__div_to_l_@f2& (0+255),w,b
 18197  002924  5D87               	subwf	__div_to_l_@f1& (0+255),w,b
 18198  002926  518C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 18199  002928  5988               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 18200  00292A  518D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 18201  00292C  5989               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 18202  00292E  518E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 18203  002930  598A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 18204  002932  E309               	bnc	l8317
 18205                           
 18206                           ; BSR set to: 0
 18207  002934  518B               	movf	__div_to_l_@f2& (0+255),w,b
 18208  002936  5F87               	subwf	__div_to_l_@f1& (0+255),f,b
 18209  002938  518C               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 18210  00293A  5B88               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 18211  00293C  518D               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 18212  00293E  5B89               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 18213  002940  518E               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 18214  002942  5B8A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 18215                           
 18216                           ; BSR set to: 0
 18217  002944  8193               	bsf	__div_to_l_@quot& (0+255),0,b
 18218  002946                     l8317:
 18219                           
 18220                           ; BSR set to: 0
 18221  002946  90D8               	bcf	status,0,c
 18222  002948  3787               	rlcf	__div_to_l_@f1& (0+255),f,b
 18223  00294A  3788               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 18224  00294C  3789               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 18225  00294E  378A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 18226                           
 18227                           ; BSR set to: 0
 18228  002950  2F97               	decfsz	__div_to_l_@cntr& (0+255),f,b
 18229  002952  D7E2               	goto	l8309
 18230                           
 18231                           ; BSR set to: 0
 18232  002954  AF98               	btfss	__div_to_l_@exp1& (0+255),7,b
 18233  002956  D00F               	goto	l8329
 18234                           
 18235                           ; BSR set to: 0
 18236  002958  5198               	movf	__div_to_l_@exp1& (0+255),w,b
 18237  00295A  0A80               	xorlw	128
 18238  00295C  6F8F               	movwf	??__div_to_l_& (0+255),b
 18239  00295E  0EE1               	movlw	225
 18240  002960  0A80               	xorlw	128
 18241  002962  5D8F               	subwf	??__div_to_l_& (0+255),w,b
 18242  002964  E3B2               	bnc	l8293
 18243  002966                     l8325:
 18244                           
 18245                           ; BSR set to: 0
 18246  002966  90D8               	bcf	status,0,c
 18247  002968  3396               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 18248  00296A  3395               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 18249  00296C  3394               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 18250  00296E  3393               	rrcf	__div_to_l_@quot& (0+255),f,b
 18251                           
 18252                           ; BSR set to: 0
 18253  002970  3F98               	incfsz	__div_to_l_@exp1& (0+255),f,b
 18254  002972  D7F9               	goto	l8325
 18255  002974  D00C               	goto	l1678
 18256  002976                     l8329:
 18257                           
 18258                           ; BSR set to: 0
 18259  002976  0E1F               	movlw	31
 18260  002978  6598               	cpfsgt	__div_to_l_@exp1& (0+255),b
 18261  00297A  D007               	goto	l8335
 18262  00297C  D7A6               	goto	l8293
 18263  00297E                     l8333:
 18264                           
 18265                           ; BSR set to: 0
 18266  00297E  90D8               	bcf	status,0,c
 18267  002980  3793               	rlcf	__div_to_l_@quot& (0+255),f,b
 18268  002982  3794               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 18269  002984  3795               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 18270  002986  3796               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 18271  002988  0798               	decf	__div_to_l_@exp1& (0+255),f,b
 18272  00298A                     l8335:
 18273                           
 18274                           ; BSR set to: 0
 18275  00298A  6798               	tstfsz	__div_to_l_@exp1& (0+255),b
 18276  00298C  D7F8               	goto	l8333
 18277  00298E                     l1678:
 18278                           
 18279                           ; BSR set to: 0
 18280  00298E  C093  F087         	movff	__div_to_l_@quot,?__div_to_l_
 18281  002992  C094  F088         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 18282  002996  C095  F089         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 18283  00299A  C096  F08A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 18284                           
 18285                           ; BSR set to: 0
 18286  00299E  0012               	return	
 18287  0029A0                     __end_of__div_to_l_:
 18288                           	opt stack 0
 18289  0029A0                     PL148:
 18290                           	opt stack 20
 18291  0029A0  90D8               	bcf	status,0,c
 18292  0029A2  3392               	rrcf	(??__div_to_l_+3)& (0+255),f,b
 18293  0029A4  3391               	rrcf	(??__div_to_l_+2)& (0+255),f,b
 18294  0029A6  3390               	rrcf	(??__div_to_l_+1)& (0+255),f,b
 18295  0029A8  338F               	rrcf	??__div_to_l_& (0+255),f,b
 18296  0029AA  0012               	return	
 18297  0029AC                     __end_ofPL148:
 18298                           	opt stack 0
 18299                           tblptru	equ	0xFF8
 18300                           tblptrh	equ	0xFF7
 18301                           tblptrl	equ	0xFF6
 18302                           tablat	equ	0xFF5
 18303                           prodh	equ	0xFF4
 18304                           prodl	equ	0xFF3
 18305                           intcon	equ	0xFF2
 18306                           postinc0	equ	0xFEE
 18307                           wreg	equ	0xFE8
 18308                           indf1	equ	0xFE7
 18309                           postinc1	equ	0xFE6
 18310                           postdec1	equ	0xFE5
 18311                           fsr1h	equ	0xFE2
 18312                           fsr1l	equ	0xFE1
 18313                           indf2	equ	0xFDF
 18314                           postinc2	equ	0xFDE
 18315                           postdec2	equ	0xFDD
 18316                           fsr2h	equ	0xFDA
 18317                           fsr2l	equ	0xFD9
 18318                           status	equ	0xFD8
 18319                           
 18320 ;; *************** function ___lltofl *****************
 18321 ;; Defined at:
 18322 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltofl.c"
 18323 ;; Parameters:    Size  Location     Type
 18324 ;;  c               4   49[BANK0 ] unsigned long 
 18325 ;; Auto vars:     Size  Location     Type
 18326 ;;		None
 18327 ;; Return value:  Size  Location     Type
 18328 ;;                  4   49[BANK0 ] unsigned long 
 18329 ;; Registers used:
 18330 ;;		wreg, status,2, status,0, cstack
 18331 ;; Tracked objects:
 18332 ;;		On entry : F/1
 18333 ;;		On exit  : F/0
 18334 ;;		Unchanged: 0/0
 18335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18336 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18339 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18340 ;;Total ram usage:        4 bytes
 18341 ;; Hardware stack levels used:    1
 18342 ;; Hardware stack levels required when called:    9
 18343 ;; This function calls:
 18344 ;;		___flpack
 18345 ;; This function is called by:
 18346 ;;		_sprintf
 18347 ;; This function uses a non-reentrant model
 18348 ;;
 18349                           
 18350                           	psect	text25
 18351  003960                     __ptext25:
 18352                           	opt stack 0
 18353  003960                     ___lltofl:
 18354                           	opt stack 19
 18355                           
 18356                           ; BSR set to: 1
 18357                           
 18358                           ; BSR set to: 0
 18359                           ;incstack = 0
 18360  003960  C091  F087         	movff	___lltofl@c,___flpack@arg
 18361  003964  C092  F088         	movff	___lltofl@c+1,___flpack@arg+1
 18362  003968  C093  F089         	movff	___lltofl@c+2,___flpack@arg+2
 18363  00396C  C094  F08A         	movff	___lltofl@c+3,___flpack@arg+3
 18364  003970  0E96               	movlw	150
 18365  003972  0100               	movlb	0	; () banked
 18366  003974  6F8B               	movwf	___flpack@exp& (0+255),b
 18367  003976  0E00               	movlw	0
 18368  003978  6B8C               	clrf	___flpack@sign& (0+255),b
 18369  00397A  EC0D  F016         	call	___flpack	;wreg free
 18370  00397E  C087  F091         	movff	?___flpack,?___lltofl
 18371  003982  C088  F092         	movff	?___flpack+1,?___lltofl+1
 18372  003986  C089  F093         	movff	?___flpack+2,?___lltofl+2
 18373  00398A  C08A  F094         	movff	?___flpack+3,?___lltofl+3
 18374                           
 18375                           ; BSR set to: 0
 18376  00398E  0012               	return	
 18377  003990                     __end_of___lltofl:
 18378                           	opt stack 0
 18379                           tblptru	equ	0xFF8
 18380                           tblptrh	equ	0xFF7
 18381                           tblptrl	equ	0xFF6
 18382                           tablat	equ	0xFF5
 18383                           prodh	equ	0xFF4
 18384                           prodl	equ	0xFF3
 18385                           intcon	equ	0xFF2
 18386                           postinc0	equ	0xFEE
 18387                           wreg	equ	0xFE8
 18388                           indf1	equ	0xFE7
 18389                           postinc1	equ	0xFE6
 18390                           postdec1	equ	0xFE5
 18391                           fsr1h	equ	0xFE2
 18392                           fsr1l	equ	0xFE1
 18393                           indf2	equ	0xFDF
 18394                           postinc2	equ	0xFDE
 18395                           postdec2	equ	0xFDD
 18396                           fsr2h	equ	0xFDA
 18397                           fsr2l	equ	0xFD9
 18398                           status	equ	0xFD8
 18399                           
 18400 ;; *************** function ___llmod *****************
 18401 ;; Defined at:
 18402 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
 18403 ;; Parameters:    Size  Location     Type
 18404 ;;  dividend        4   52[BANK0 ] unsigned long 
 18405 ;;  divisor         4   56[BANK0 ] unsigned long 
 18406 ;; Auto vars:     Size  Location     Type
 18407 ;;  counter         1   60[BANK0 ] unsigned char 
 18408 ;; Return value:  Size  Location     Type
 18409 ;;                  4   52[BANK0 ] unsigned long 
 18410 ;; Registers used:
 18411 ;;		wreg, status,2, status,0
 18412 ;; Tracked objects:
 18413 ;;		On entry : F/0
 18414 ;;		On exit  : F/0
 18415 ;;		Unchanged: 0/0
 18416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18417 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18418 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18420 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18421 ;;Total ram usage:        9 bytes
 18422 ;; Hardware stack levels used:    1
 18423 ;; Hardware stack levels required when called:    8
 18424 ;; This function calls:
 18425 ;;		Nothing
 18426 ;; This function is called by:
 18427 ;;		_sprintf
 18428 ;; This function uses a non-reentrant model
 18429 ;;
 18430                           
 18431                           	psect	text26
 18432  0033D4                     __ptext26:
 18433                           	opt stack 0
 18434  0033D4                     ___llmod:
 18435                           	opt stack 20
 18436                           
 18437                           ; BSR set to: 0
 18438                           
 18439                           ; BSR set to: 0
 18440                           ;incstack = 0
 18441  0033D4  519B               	movf	(___llmod@divisor+3)& (0+255),w,b
 18442  0033D6  1198               	iorwf	___llmod@divisor& (0+255),w,b
 18443  0033D8  1199               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 18444  0033DA  119A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 18445  0033DC  E023               	bz	l1885
 18446                           
 18447                           ; BSR set to: 0
 18448  0033DE  0E01               	movlw	1
 18449  0033E0  6F9C               	movwf	___llmod@counter& (0+255),b
 18450  0033E2  D006               	goto	l8441
 18451  0033E4                     l8439:
 18452                           
 18453                           ; BSR set to: 0
 18454  0033E4  90D8               	bcf	status,0,c
 18455  0033E6  3798               	rlcf	___llmod@divisor& (0+255),f,b
 18456  0033E8  3799               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 18457  0033EA  379A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 18458  0033EC  379B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 18459  0033EE  2B9C               	incf	___llmod@counter& (0+255),f,b
 18460  0033F0                     l8441:
 18461                           
 18462                           ; BSR set to: 0
 18463  0033F0  AF9B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 18464  0033F2  D7F8               	goto	l8439
 18465  0033F4                     l8443:
 18466                           
 18467                           ; BSR set to: 0
 18468  0033F4  5198               	movf	___llmod@divisor& (0+255),w,b
 18469  0033F6  5D94               	subwf	___llmod@dividend& (0+255),w,b
 18470  0033F8  5199               	movf	(___llmod@divisor+1)& (0+255),w,b
 18471  0033FA  5995               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 18472  0033FC  519A               	movf	(___llmod@divisor+2)& (0+255),w,b
 18473  0033FE  5996               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 18474  003400  519B               	movf	(___llmod@divisor+3)& (0+255),w,b
 18475  003402  5997               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 18476  003404  E308               	bnc	l8447
 18477                           
 18478                           ; BSR set to: 0
 18479  003406  5198               	movf	___llmod@divisor& (0+255),w,b
 18480  003408  5F94               	subwf	___llmod@dividend& (0+255),f,b
 18481  00340A  5199               	movf	(___llmod@divisor+1)& (0+255),w,b
 18482  00340C  5B95               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 18483  00340E  519A               	movf	(___llmod@divisor+2)& (0+255),w,b
 18484  003410  5B96               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 18485  003412  519B               	movf	(___llmod@divisor+3)& (0+255),w,b
 18486  003414  5B97               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 18487  003416                     l8447:
 18488                           
 18489                           ; BSR set to: 0
 18490  003416  90D8               	bcf	status,0,c
 18491  003418  339B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 18492  00341A  339A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 18493  00341C  3399               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 18494  00341E  3398               	rrcf	___llmod@divisor& (0+255),f,b
 18495                           
 18496                           ; BSR set to: 0
 18497  003420  2F9C               	decfsz	___llmod@counter& (0+255),f,b
 18498  003422  D7E8               	goto	l8443
 18499  003424                     l1885:
 18500                           
 18501                           ; BSR set to: 0
 18502  003424  C094  F094         	movff	___llmod@dividend,?___llmod
 18503  003428  C095  F095         	movff	___llmod@dividend+1,?___llmod+1
 18504  00342C  C096  F096         	movff	___llmod@dividend+2,?___llmod+2
 18505  003430  C097  F097         	movff	___llmod@dividend+3,?___llmod+3
 18506                           
 18507                           ; BSR set to: 0
 18508  003434  0012               	return	
 18509  003436                     __end_of___llmod:
 18510                           	opt stack 0
 18511                           tblptru	equ	0xFF8
 18512                           tblptrh	equ	0xFF7
 18513                           tblptrl	equ	0xFF6
 18514                           tablat	equ	0xFF5
 18515                           prodh	equ	0xFF4
 18516                           prodl	equ	0xFF3
 18517                           intcon	equ	0xFF2
 18518                           postinc0	equ	0xFEE
 18519                           wreg	equ	0xFE8
 18520                           indf1	equ	0xFE7
 18521                           postinc1	equ	0xFE6
 18522                           postdec1	equ	0xFE5
 18523                           fsr1h	equ	0xFE2
 18524                           fsr1l	equ	0xFE1
 18525                           indf2	equ	0xFDF
 18526                           postinc2	equ	0xFDE
 18527                           postdec2	equ	0xFDD
 18528                           fsr2h	equ	0xFDA
 18529                           fsr2l	equ	0xFD9
 18530                           status	equ	0xFD8
 18531                           
 18532 ;; *************** function ___lldiv *****************
 18533 ;; Defined at:
 18534 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
 18535 ;; Parameters:    Size  Location     Type
 18536 ;;  dividend        4   39[BANK0 ] unsigned long 
 18537 ;;  divisor         4   43[BANK0 ] unsigned long 
 18538 ;; Auto vars:     Size  Location     Type
 18539 ;;  quotient        4   47[BANK0 ] unsigned long 
 18540 ;;  counter         1   51[BANK0 ] unsigned char 
 18541 ;; Return value:  Size  Location     Type
 18542 ;;                  4   39[BANK0 ] unsigned long 
 18543 ;; Registers used:
 18544 ;;		wreg, status,2, status,0
 18545 ;; Tracked objects:
 18546 ;;		On entry : F/0
 18547 ;;		On exit  : F/0
 18548 ;;		Unchanged: 0/0
 18549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18550 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18551 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18553 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18554 ;;Total ram usage:       13 bytes
 18555 ;; Hardware stack levels used:    1
 18556 ;; Hardware stack levels required when called:    8
 18557 ;; This function calls:
 18558 ;;		Nothing
 18559 ;; This function is called by:
 18560 ;;		_sprintf
 18561 ;; This function uses a non-reentrant model
 18562 ;;
 18563                           
 18564                           	psect	text27
 18565  003216                     __ptext27:
 18566                           	opt stack 0
 18567  003216                     ___lldiv:
 18568                           	opt stack 20
 18569                           
 18570                           ; BSR set to: 0
 18571                           
 18572                           ; BSR set to: 0
 18573                           ;incstack = 0
 18574  003216  6B8F               	clrf	___lldiv@quotient& (0+255),b
 18575  003218  6B90               	clrf	(___lldiv@quotient+1)& (0+255),b
 18576  00321A  6B91               	clrf	(___lldiv@quotient+2)& (0+255),b
 18577  00321C  6B92               	clrf	(___lldiv@quotient+3)& (0+255),b
 18578                           
 18579                           ; BSR set to: 0
 18580  00321E  518E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 18581  003220  118B               	iorwf	___lldiv@divisor& (0+255),w,b
 18582  003222  118C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 18583  003224  118D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 18584  003226  E029               	bz	l1875
 18585                           
 18586                           ; BSR set to: 0
 18587  003228  0E01               	movlw	1
 18588  00322A  6F93               	movwf	___lldiv@counter& (0+255),b
 18589  00322C  D006               	goto	l8421
 18590  00322E                     l8419:
 18591                           
 18592                           ; BSR set to: 0
 18593  00322E  90D8               	bcf	status,0,c
 18594  003230  378B               	rlcf	___lldiv@divisor& (0+255),f,b
 18595  003232  378C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 18596  003234  378D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 18597  003236  378E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 18598  003238  2B93               	incf	___lldiv@counter& (0+255),f,b
 18599  00323A                     l8421:
 18600                           
 18601                           ; BSR set to: 0
 18602  00323A  AF8E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 18603  00323C  D7F8               	goto	l8419
 18604  00323E                     l8423:
 18605                           
 18606                           ; BSR set to: 0
 18607  00323E  90D8               	bcf	status,0,c
 18608  003240  378F               	rlcf	___lldiv@quotient& (0+255),f,b
 18609  003242  3790               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 18610  003244  3791               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 18611  003246  3792               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 18612                           
 18613                           ; BSR set to: 0
 18614  003248  518B               	movf	___lldiv@divisor& (0+255),w,b
 18615  00324A  5D87               	subwf	___lldiv@dividend& (0+255),w,b
 18616  00324C  518C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 18617  00324E  5988               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 18618  003250  518D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 18619  003252  5989               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 18620  003254  518E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 18621  003256  598A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 18622  003258  E309               	bnc	l8431
 18623                           
 18624                           ; BSR set to: 0
 18625  00325A  518B               	movf	___lldiv@divisor& (0+255),w,b
 18626  00325C  5F87               	subwf	___lldiv@dividend& (0+255),f,b
 18627  00325E  518C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 18628  003260  5B88               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 18629  003262  518D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 18630  003264  5B89               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 18631  003266  518E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 18632  003268  5B8A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 18633                           
 18634                           ; BSR set to: 0
 18635  00326A  818F               	bsf	___lldiv@quotient& (0+255),0,b
 18636  00326C                     l8431:
 18637                           
 18638                           ; BSR set to: 0
 18639  00326C  90D8               	bcf	status,0,c
 18640  00326E  338E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 18641  003270  338D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 18642  003272  338C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 18643  003274  338B               	rrcf	___lldiv@divisor& (0+255),f,b
 18644                           
 18645                           ; BSR set to: 0
 18646  003276  2F93               	decfsz	___lldiv@counter& (0+255),f,b
 18647  003278  D7E2               	goto	l8423
 18648  00327A                     l1875:
 18649                           
 18650                           ; BSR set to: 0
 18651  00327A  C08F  F087         	movff	___lldiv@quotient,?___lldiv
 18652  00327E  C090  F088         	movff	___lldiv@quotient+1,?___lldiv+1
 18653  003282  C091  F089         	movff	___lldiv@quotient+2,?___lldiv+2
 18654  003286  C092  F08A         	movff	___lldiv@quotient+3,?___lldiv+3
 18655                           
 18656                           ; BSR set to: 0
 18657  00328A  0012               	return	
 18658  00328C                     __end_of___lldiv:
 18659                           	opt stack 0
 18660                           tblptru	equ	0xFF8
 18661                           tblptrh	equ	0xFF7
 18662                           tblptrl	equ	0xFF6
 18663                           tablat	equ	0xFF5
 18664                           prodh	equ	0xFF4
 18665                           prodl	equ	0xFF3
 18666                           intcon	equ	0xFF2
 18667                           postinc0	equ	0xFEE
 18668                           wreg	equ	0xFE8
 18669                           indf1	equ	0xFE7
 18670                           postinc1	equ	0xFE6
 18671                           postdec1	equ	0xFE5
 18672                           fsr1h	equ	0xFE2
 18673                           fsr1l	equ	0xFE1
 18674                           indf2	equ	0xFDF
 18675                           postinc2	equ	0xFDE
 18676                           postdec2	equ	0xFDD
 18677                           fsr2h	equ	0xFDA
 18678                           fsr2l	equ	0xFD9
 18679                           status	equ	0xFD8
 18680                           
 18681 ;; *************** function ___fltol *****************
 18682 ;; Defined at:
 18683 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fltol.c"
 18684 ;; Parameters:    Size  Location     Type
 18685 ;;  f1              4    5[BANK1 ] unsigned long 
 18686 ;; Auto vars:     Size  Location     Type
 18687 ;;  exp1            1   14[BANK1 ] unsigned char 
 18688 ;;  sign1           1   13[BANK1 ] unsigned char 
 18689 ;; Return value:  Size  Location     Type
 18690 ;;                  4    5[BANK1 ] long 
 18691 ;; Registers used:
 18692 ;;		wreg, status,2, status,0
 18693 ;; Tracked objects:
 18694 ;;		On entry : C/2
 18695 ;;		On exit  : F/1
 18696 ;;		Unchanged: 0/0
 18697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18698 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18699 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18700 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18701 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18702 ;;Total ram usage:       10 bytes
 18703 ;; Hardware stack levels used:    1
 18704 ;; Hardware stack levels required when called:    8
 18705 ;; This function calls:
 18706 ;;		Nothing
 18707 ;; This function is called by:
 18708 ;;		_sprintf
 18709 ;; This function uses a non-reentrant model
 18710 ;;
 18711                           
 18712                           	psect	text28
 18713  002B58                     __ptext28:
 18714                           	opt stack 0
 18715  002B58                     ___fltol:
 18716                           	opt stack 20
 18717                           
 18718                           ; BSR set to: 0
 18719                           ;incstack = 0
 18720  002B58  0101               	movlb	1	; () banked
 18721  002B5A  C1BA  F1BE         	movff	___fltol@f1,??___fltol
 18722  002B5E  C1BB  F1BF         	movff	___fltol@f1+1,??___fltol+1
 18723  002B62  C1BC  F1C0         	movff	___fltol@f1+2,??___fltol+2
 18724  002B66  C1BD  F1C1         	movff	___fltol@f1+3,??___fltol+3
 18725  002B6A  0E18               	movlw	24
 18726  002B6C  D001               	goto	u9470
 18727  002B6E                     u9475:
 18728  002B6E  D84F               	call	PL146	;call to abstracted procedure
 18729  002B70                     u9470:
 18730  002B70  2EE8               	decfsz	wreg,f,c
 18731  002B72  D7FD               	goto	u9475
 18732  002B74  51BE               	movf	??___fltol& (0+255),w,b
 18733  002B76  6FC3               	movwf	___fltol@exp1& (0+255),b
 18734  002B78  0101               	movlb	1	; () banked
 18735  002B7A  67C3               	tstfsz	___fltol@exp1& (0+255),b
 18736  002B7C  D005               	goto	l8379
 18737  002B7E                     l8377:
 18738                           
 18739                           ; BSR set to: 1
 18740  002B7E  6BBA               	clrf	?___fltol& (0+255),b
 18741  002B80  6BBB               	clrf	(?___fltol+1)& (0+255),b
 18742  002B82  6BBC               	clrf	(?___fltol+2)& (0+255),b
 18743  002B84  6BBD               	clrf	(?___fltol+3)& (0+255),b
 18744  002B86  0012               	return	
 18745  002B88                     l8379:
 18746                           
 18747                           ; BSR set to: 1
 18748  002B88  C1BA  F1BE         	movff	___fltol@f1,??___fltol
 18749  002B8C  C1BB  F1BF         	movff	___fltol@f1+1,??___fltol+1
 18750  002B90  C1BC  F1C0         	movff	___fltol@f1+2,??___fltol+2
 18751  002B94  C1BD  F1C1         	movff	___fltol@f1+3,??___fltol+3
 18752  002B98  0E20               	movlw	32
 18753  002B9A  D001               	goto	u9490
 18754  002B9C                     u9495:
 18755  002B9C  D838               	call	PL146	;call to abstracted procedure
 18756  002B9E                     u9490:
 18757  002B9E  2EE8               	decfsz	wreg,f,c
 18758  002BA0  D7FD               	goto	u9495
 18759  002BA2  51BE               	movf	??___fltol& (0+255),w,b
 18760  002BA4  6FC2               	movwf	___fltol@sign1& (0+255),b
 18761                           
 18762                           ; BSR set to: 1
 18763  002BA6  8FBC               	bsf	(___fltol@f1+2)& (0+255),7,b
 18764                           
 18765                           ; BSR set to: 1
 18766  002BA8  6BBD               	clrf	(___fltol@f1+3)& (0+255),b
 18767                           
 18768                           ; BSR set to: 1
 18769  002BAA  0E96               	movlw	150
 18770  002BAC  5FC3               	subwf	___fltol@exp1& (0+255),f,b
 18771                           
 18772                           ; BSR set to: 1
 18773  002BAE  AFC3               	btfss	___fltol@exp1& (0+255),7,b
 18774  002BB0  D00F               	goto	l8397
 18775                           
 18776                           ; BSR set to: 1
 18777  002BB2  51C3               	movf	___fltol@exp1& (0+255),w,b
 18778  002BB4  0A80               	xorlw	128
 18779  002BB6  6FBE               	movwf	??___fltol& (0+255),b
 18780  002BB8  0EE9               	movlw	233
 18781  002BBA  0A80               	xorlw	128
 18782  002BBC  5DBE               	subwf	??___fltol& (0+255),w,b
 18783  002BBE  E3DF               	bnc	l8377
 18784  002BC0                     l8393:
 18785                           
 18786                           ; BSR set to: 1
 18787  002BC0  90D8               	bcf	status,0,c
 18788  002BC2  33BD               	rrcf	(___fltol@f1+3)& (0+255),f,b
 18789  002BC4  33BC               	rrcf	(___fltol@f1+2)& (0+255),f,b
 18790  002BC6  33BB               	rrcf	(___fltol@f1+1)& (0+255),f,b
 18791  002BC8  33BA               	rrcf	___fltol@f1& (0+255),f,b
 18792                           
 18793                           ; BSR set to: 1
 18794  002BCA  3FC3               	incfsz	___fltol@exp1& (0+255),f,b
 18795  002BCC  D7F9               	goto	l8393
 18796  002BCE  D00C               	goto	l8405
 18797  002BD0                     l8397:
 18798                           
 18799                           ; BSR set to: 1
 18800  002BD0  0E1F               	movlw	31
 18801  002BD2  65C3               	cpfsgt	___fltol@exp1& (0+255),b
 18802  002BD4  D007               	goto	l8403
 18803  002BD6  D7D3               	goto	l8377
 18804  002BD8                     l8401:
 18805                           
 18806                           ; BSR set to: 1
 18807  002BD8  90D8               	bcf	status,0,c
 18808  002BDA  37BA               	rlcf	___fltol@f1& (0+255),f,b
 18809  002BDC  37BB               	rlcf	(___fltol@f1+1)& (0+255),f,b
 18810  002BDE  37BC               	rlcf	(___fltol@f1+2)& (0+255),f,b
 18811  002BE0  37BD               	rlcf	(___fltol@f1+3)& (0+255),f,b
 18812  002BE2  07C3               	decf	___fltol@exp1& (0+255),f,b
 18813  002BE4                     l8403:
 18814                           
 18815                           ; BSR set to: 1
 18816  002BE4  67C3               	tstfsz	___fltol@exp1& (0+255),b
 18817  002BE6  D7F8               	goto	l8401
 18818  002BE8                     l8405:
 18819                           
 18820                           ; BSR set to: 1
 18821  002BE8  51C2               	movf	___fltol@sign1& (0+255),w,b
 18822  002BEA  E008               	bz	l8409
 18823                           
 18824                           ; BSR set to: 1
 18825  002BEC  1FBD               	comf	(___fltol@f1+3)& (0+255),f,b
 18826  002BEE  1FBC               	comf	(___fltol@f1+2)& (0+255),f,b
 18827  002BF0  1FBB               	comf	(___fltol@f1+1)& (0+255),f,b
 18828  002BF2  6DBA               	negf	___fltol@f1& (0+255),b
 18829  002BF4  0E00               	movlw	0
 18830  002BF6  23BB               	addwfc	(___fltol@f1+1)& (0+255),f,b
 18831  002BF8  23BC               	addwfc	(___fltol@f1+2)& (0+255),f,b
 18832  002BFA  23BD               	addwfc	(___fltol@f1+3)& (0+255),f,b
 18833  002BFC                     l8409:
 18834                           
 18835                           ; BSR set to: 1
 18836  002BFC  C1BA  F1BA         	movff	___fltol@f1,?___fltol
 18837  002C00  C1BB  F1BB         	movff	___fltol@f1+1,?___fltol+1
 18838  002C04  C1BC  F1BC         	movff	___fltol@f1+2,?___fltol+2
 18839  002C08  C1BD  F1BD         	movff	___fltol@f1+3,?___fltol+3
 18840                           
 18841                           ; BSR set to: 1
 18842  002C0C  0012               	return	
 18843  002C0E                     __end_of___fltol:
 18844                           	opt stack 0
 18845  002C0E                     PL146:
 18846                           	opt stack 20
 18847  002C0E  90D8               	bcf	status,0,c
 18848  002C10  33C1               	rrcf	(??___fltol+3)& (0+255),f,b
 18849  002C12  33C0               	rrcf	(??___fltol+2)& (0+255),f,b
 18850  002C14  33BF               	rrcf	(??___fltol+1)& (0+255),f,b
 18851  002C16  33BE               	rrcf	??___fltol& (0+255),f,b
 18852  002C18  0012               	return	
 18853  002C1A                     __end_ofPL146:
 18854                           	opt stack 0
 18855                           tblptru	equ	0xFF8
 18856                           tblptrh	equ	0xFF7
 18857                           tblptrl	equ	0xFF6
 18858                           tablat	equ	0xFF5
 18859                           prodh	equ	0xFF4
 18860                           prodl	equ	0xFF3
 18861                           intcon	equ	0xFF2
 18862                           postinc0	equ	0xFEE
 18863                           wreg	equ	0xFE8
 18864                           indf1	equ	0xFE7
 18865                           postinc1	equ	0xFE6
 18866                           postdec1	equ	0xFE5
 18867                           fsr1h	equ	0xFE2
 18868                           fsr1l	equ	0xFE1
 18869                           indf2	equ	0xFDF
 18870                           postinc2	equ	0xFDE
 18871                           postdec2	equ	0xFDD
 18872                           fsr2h	equ	0xFDA
 18873                           fsr2l	equ	0xFD9
 18874                           status	equ	0xFD8
 18875                           
 18876 ;; *************** function ___flsub *****************
 18877 ;; Defined at:
 18878 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\flsub.c"
 18879 ;; Parameters:    Size  Location     Type
 18880 ;;  f1              4   28[BANK1 ] long 
 18881 ;;  f2              4   32[BANK1 ] long 
 18882 ;; Auto vars:     Size  Location     Type
 18883 ;;		None
 18884 ;; Return value:  Size  Location     Type
 18885 ;;                  4   28[BANK1 ] long 
 18886 ;; Registers used:
 18887 ;;		wreg, status,2, status,0, cstack
 18888 ;; Tracked objects:
 18889 ;;		On entry : F/0
 18890 ;;		On exit  : E/0
 18891 ;;		Unchanged: 0/0
 18892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18893 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18896 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18897 ;;Total ram usage:        8 bytes
 18898 ;; Hardware stack levels used:    1
 18899 ;; Hardware stack levels required when called:   10
 18900 ;; This function calls:
 18901 ;;		___fladd
 18902 ;; This function is called by:
 18903 ;;		_sprintf
 18904 ;; This function uses a non-reentrant model
 18905 ;;
 18906                           
 18907                           	psect	text29
 18908  0038EE                     __ptext29:
 18909                           	opt stack 0
 18910  0038EE                     ___flsub:
 18911                           	opt stack 18
 18912                           
 18913                           ; BSR set to: 0
 18914                           
 18915                           ; BSR set to: 1
 18916                           ;incstack = 0
 18917  0038EE  0101               	movlb	1	; () banked
 18918  0038F0  0E80               	movlw	128
 18919  0038F2  1BD8               	xorwf	(___flsub@f2+3)& (0+255),f,b
 18920                           
 18921                           ; BSR set to: 1
 18922  0038F4  C1D1  F1C2         	movff	___flsub@f1,___fladd@f1
 18923  0038F8  C1D2  F1C3         	movff	___flsub@f1+1,___fladd@f1+1
 18924  0038FC  C1D3  F1C4         	movff	___flsub@f1+2,___fladd@f1+2
 18925  003900  C1D4  F1C5         	movff	___flsub@f1+3,___fladd@f1+3
 18926  003904  C1D5  F1C6         	movff	___flsub@f2,___fladd@f2
 18927  003908  C1D6  F1C7         	movff	___flsub@f2+1,___fladd@f2+1
 18928  00390C  C1D7  F1C8         	movff	___flsub@f2+2,___fladd@f2+2
 18929  003910  C1D8  F1C9         	movff	___flsub@f2+3,___fladd@f2+3
 18930  003914  EC66  F00C         	call	___fladd	;wreg free
 18931  003918  C1C2  F1D1         	movff	?___fladd,?___flsub
 18932  00391C  C1C3  F1D2         	movff	?___fladd+1,?___flsub+1
 18933  003920  C1C4  F1D3         	movff	?___fladd+2,?___flsub+2
 18934  003924  C1C5  F1D4         	movff	?___fladd+3,?___flsub+3
 18935  003928  0012               	return	
 18936  00392A                     __end_of___flsub:
 18937                           	opt stack 0
 18938                           tblptru	equ	0xFF8
 18939                           tblptrh	equ	0xFF7
 18940                           tblptrl	equ	0xFF6
 18941                           tablat	equ	0xFF5
 18942                           prodh	equ	0xFF4
 18943                           prodl	equ	0xFF3
 18944                           intcon	equ	0xFF2
 18945                           postinc0	equ	0xFEE
 18946                           wreg	equ	0xFE8
 18947                           indf1	equ	0xFE7
 18948                           postinc1	equ	0xFE6
 18949                           postdec1	equ	0xFE5
 18950                           fsr1h	equ	0xFE2
 18951                           fsr1l	equ	0xFE1
 18952                           indf2	equ	0xFDF
 18953                           postinc2	equ	0xFDE
 18954                           postdec2	equ	0xFDD
 18955                           fsr2h	equ	0xFDA
 18956                           fsr2l	equ	0xFD9
 18957                           status	equ	0xFD8
 18958                           
 18959 ;; *************** function ___fladd *****************
 18960 ;; Defined at:
 18961 ;;		line 88 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fladd.c"
 18962 ;; Parameters:    Size  Location     Type
 18963 ;;  f1              4   13[BANK1 ] long 
 18964 ;;  f2              4   17[BANK1 ] long 
 18965 ;; Auto vars:     Size  Location     Type
 18966 ;;  exp1            1   27[BANK1 ] unsigned char 
 18967 ;;  exp2            1   26[BANK1 ] unsigned char 
 18968 ;;  sign            1   25[BANK1 ] unsigned char 
 18969 ;; Return value:  Size  Location     Type
 18970 ;;                  4   13[BANK1 ] unsigned char 
 18971 ;; Registers used:
 18972 ;;		wreg, status,2, status,0, cstack
 18973 ;; Tracked objects:
 18974 ;;		On entry : E/0
 18975 ;;		On exit  : E/0
 18976 ;;		Unchanged: 0/0
 18977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18978 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18979 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18980 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18981 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18982 ;;Total ram usage:       15 bytes
 18983 ;; Hardware stack levels used:    1
 18984 ;; Hardware stack levels required when called:    9
 18985 ;; This function calls:
 18986 ;;		___flpack
 18987 ;; This function is called by:
 18988 ;;		_ds18b20_read
 18989 ;;		_sprintf
 18990 ;;		___flsub
 18991 ;; This function uses a non-reentrant model
 18992 ;;
 18993                           
 18994                           	psect	text30
 18995  0018CC                     __ptext30:
 18996                           	opt stack 0
 18997  0018CC                     ___fladd:
 18998                           	opt stack 19
 18999                           
 19000                           ;incstack = 0
 19001  0018CC  0101               	movlb	1	; () banked
 19002  0018CE  C1C2  F1CA         	movff	___fladd@f1,??___fladd
 19003  0018D2  C1C3  F1CB         	movff	___fladd@f1+1,??___fladd+1
 19004  0018D6  C1C4  F1CC         	movff	___fladd@f1+2,??___fladd+2
 19005  0018DA  C1C5  F1CD         	movff	___fladd@f1+3,??___fladd+3
 19006  0018DE  0E18               	movlw	24
 19007  0018E0  D001               	goto	u8370
 19008  0018E2                     u8375:
 19009  0018E2  D8BC               	call	PL144	;call to abstracted procedure
 19010  0018E4                     u8370:
 19011  0018E4  2EE8               	decfsz	wreg,f,c
 19012  0018E6  D7FD               	goto	u8375
 19013  0018E8  51CA               	movf	??___fladd& (0+255),w,b
 19014  0018EA  6FD0               	movwf	___fladd@exp1& (0+255),b
 19015  0018EC  C1C6  F1CA         	movff	___fladd@f2,??___fladd
 19016  0018F0  C1C7  F1CB         	movff	___fladd@f2+1,??___fladd+1
 19017  0018F4  C1C8  F1CC         	movff	___fladd@f2+2,??___fladd+2
 19018  0018F8  C1C9  F1CD         	movff	___fladd@f2+3,??___fladd+3
 19019  0018FC  0E18               	movlw	24
 19020  0018FE  D001               	goto	u8380
 19021  001900                     u8385:
 19022  001900  D8AD               	call	PL144	;call to abstracted procedure
 19023  001902                     u8380:
 19024  001902  2EE8               	decfsz	wreg,f,c
 19025  001904  D7FD               	goto	u8385
 19026  001906  51CA               	movf	??___fladd& (0+255),w,b
 19027  001908  6FCF               	movwf	___fladd@exp2& (0+255),b
 19028                           
 19029                           ; BSR set to: 1
 19030  00190A  51D0               	movf	___fladd@exp1& (0+255),w,b
 19031  00190C  E009               	bz	l1629
 19032                           
 19033                           ; BSR set to: 1
 19034  00190E  51CF               	movf	___fladd@exp2& (0+255),w,b
 19035  001910  5DD0               	subwf	___fladd@exp1& (0+255),w,b
 19036  001912  E20F               	bc	l7779
 19037                           
 19038                           ; BSR set to: 1
 19039  001914  51D0               	movf	___fladd@exp1& (0+255),w,b
 19040  001916  5DCF               	subwf	___fladd@exp2& (0+255),w,b
 19041  001918  6FCA               	movwf	??___fladd& (0+255),b
 19042  00191A  0E21               	movlw	33
 19043  00191C  5DCA               	subwf	??___fladd& (0+255),w,b
 19044  00191E  E309               	bnc	l7779
 19045  001920                     l1629:
 19046                           
 19047                           ; BSR set to: 1
 19048  001920  C1C6  F1C2         	movff	___fladd@f2,?___fladd
 19049  001924  C1C7  F1C3         	movff	___fladd@f2+1,?___fladd+1
 19050  001928  C1C8  F1C4         	movff	___fladd@f2+2,?___fladd+2
 19051  00192C  C1C9  F1C5         	movff	___fladd@f2+3,?___fladd+3
 19052  001930  0012               	return	
 19053  001932                     l7779:
 19054                           
 19055                           ; BSR set to: 1
 19056  001932  51CF               	movf	___fladd@exp2& (0+255),w,b
 19057  001934  E009               	bz	l1633
 19058                           
 19059                           ; BSR set to: 1
 19060  001936  51D0               	movf	___fladd@exp1& (0+255),w,b
 19061  001938  5DCF               	subwf	___fladd@exp2& (0+255),w,b
 19062  00193A  E20F               	bc	l7785
 19063                           
 19064                           ; BSR set to: 1
 19065  00193C  51CF               	movf	___fladd@exp2& (0+255),w,b
 19066  00193E  5DD0               	subwf	___fladd@exp1& (0+255),w,b
 19067  001940  6FCA               	movwf	??___fladd& (0+255),b
 19068  001942  0E21               	movlw	33
 19069  001944  5DCA               	subwf	??___fladd& (0+255),w,b
 19070  001946  E309               	bnc	l7785
 19071  001948                     l1633:
 19072                           
 19073                           ; BSR set to: 1
 19074  001948  C1C2  F1C2         	movff	___fladd@f1,?___fladd
 19075  00194C  C1C3  F1C3         	movff	___fladd@f1+1,?___fladd+1
 19076  001950  C1C4  F1C4         	movff	___fladd@f1+2,?___fladd+2
 19077  001954  C1C5  F1C5         	movff	___fladd@f1+3,?___fladd+3
 19078  001958  0012               	return	
 19079  00195A                     l7785:
 19080                           
 19081                           ; BSR set to: 1
 19082  00195A  0E06               	movlw	6
 19083  00195C  6FCE               	movwf	___fladd@sign& (0+255),b
 19084                           
 19085                           ; BSR set to: 1
 19086  00195E  BFC5               	btfsc	(___fladd@f1+3)& (0+255),7,b
 19087                           
 19088                           ; BSR set to: 1
 19089  001960  8FCE               	bsf	___fladd@sign& (0+255),7,b
 19090                           
 19091                           ; BSR set to: 1
 19092  001962  BFC9               	btfsc	(___fladd@f2+3)& (0+255),7,b
 19093                           
 19094                           ; BSR set to: 1
 19095  001964  8DCE               	bsf	___fladd@sign& (0+255),6,b
 19096                           
 19097                           ; BSR set to: 1
 19098  001966  8FC4               	bsf	(___fladd@f1+2)& (0+255),7,b
 19099                           
 19100                           ; BSR set to: 1
 19101  001968  6BC5               	clrf	(___fladd@f1+3)& (0+255),b
 19102                           
 19103                           ; BSR set to: 1
 19104  00196A  8FC8               	bsf	(___fladd@f2+2)& (0+255),7,b
 19105  00196C  6BC9               	clrf	(___fladd@f2+3)& (0+255),b
 19106  00196E  51CF               	movf	___fladd@exp2& (0+255),w,b
 19107  001970  5DD0               	subwf	___fladd@exp1& (0+255),w,b
 19108  001972  E21A               	bc	l7809
 19109  001974                     l7799:
 19110                           
 19111                           ; BSR set to: 1
 19112  001974  90D8               	bcf	status,0,c
 19113  001976  37C6               	rlcf	___fladd@f2& (0+255),f,b
 19114  001978  37C7               	rlcf	(___fladd@f2+1)& (0+255),f,b
 19115  00197A  37C8               	rlcf	(___fladd@f2+2)& (0+255),f,b
 19116  00197C  37C9               	rlcf	(___fladd@f2+3)& (0+255),f,b
 19117  00197E  07CF               	decf	___fladd@exp2& (0+255),f,b
 19118                           
 19119                           ; BSR set to: 1
 19120  001980  51CF               	movf	___fladd@exp2& (0+255),w,b
 19121  001982  19D0               	xorwf	___fladd@exp1& (0+255),w,b
 19122  001984  E00D               	bz	l7807
 19123                           
 19124                           ; BSR set to: 1
 19125  001986  07CE               	decf	___fladd@sign& (0+255),f,b
 19126  001988  C1CE  F1CA         	movff	___fladd@sign,??___fladd
 19127  00198C  0E07               	movlw	7
 19128  00198E  17CA               	andwf	??___fladd& (0+255),f,b
 19129  001990  E007               	bz	l7807
 19130  001992  D7F0               	goto	l7799
 19131  001994                     l7805:
 19132                           
 19133                           ; BSR set to: 1
 19134  001994  90D8               	bcf	status,0,c
 19135  001996  33C5               	rrcf	(___fladd@f1+3)& (0+255),f,b
 19136  001998  33C4               	rrcf	(___fladd@f1+2)& (0+255),f,b
 19137  00199A  33C3               	rrcf	(___fladd@f1+1)& (0+255),f,b
 19138  00199C  33C2               	rrcf	___fladd@f1& (0+255),f,b
 19139  00199E  2BD0               	incf	___fladd@exp1& (0+255),f,b
 19140  0019A0                     l7807:
 19141                           
 19142                           ; BSR set to: 1
 19143  0019A0  51CF               	movf	___fladd@exp2& (0+255),w,b
 19144  0019A2  63D0               	cpfseq	___fladd@exp1& (0+255),b
 19145  0019A4  D7F7               	goto	l7805
 19146  0019A6  D01C               	goto	l1644
 19147  0019A8                     l7809:
 19148                           
 19149                           ; BSR set to: 1
 19150  0019A8  51D0               	movf	___fladd@exp1& (0+255),w,b
 19151  0019AA  5DCF               	subwf	___fladd@exp2& (0+255),w,b
 19152  0019AC  E219               	bc	l1644
 19153  0019AE                     l7811:
 19154                           
 19155                           ; BSR set to: 1
 19156  0019AE  90D8               	bcf	status,0,c
 19157  0019B0  37C2               	rlcf	___fladd@f1& (0+255),f,b
 19158  0019B2  37C3               	rlcf	(___fladd@f1+1)& (0+255),f,b
 19159  0019B4  37C4               	rlcf	(___fladd@f1+2)& (0+255),f,b
 19160  0019B6  37C5               	rlcf	(___fladd@f1+3)& (0+255),f,b
 19161  0019B8  07D0               	decf	___fladd@exp1& (0+255),f,b
 19162                           
 19163                           ; BSR set to: 1
 19164  0019BA  51CF               	movf	___fladd@exp2& (0+255),w,b
 19165  0019BC  19D0               	xorwf	___fladd@exp1& (0+255),w,b
 19166  0019BE  E00D               	bz	l7819
 19167                           
 19168                           ; BSR set to: 1
 19169  0019C0  07CE               	decf	___fladd@sign& (0+255),f,b
 19170  0019C2  C1CE  F1CA         	movff	___fladd@sign,??___fladd
 19171  0019C6  0E07               	movlw	7
 19172  0019C8  17CA               	andwf	??___fladd& (0+255),f,b
 19173  0019CA  E007               	bz	l7819
 19174  0019CC  D7F0               	goto	l7811
 19175  0019CE                     l7817:
 19176                           
 19177                           ; BSR set to: 1
 19178  0019CE  90D8               	bcf	status,0,c
 19179  0019D0  33C9               	rrcf	(___fladd@f2+3)& (0+255),f,b
 19180  0019D2  33C8               	rrcf	(___fladd@f2+2)& (0+255),f,b
 19181  0019D4  33C7               	rrcf	(___fladd@f2+1)& (0+255),f,b
 19182  0019D6  33C6               	rrcf	___fladd@f2& (0+255),f,b
 19183  0019D8  2BCF               	incf	___fladd@exp2& (0+255),f,b
 19184  0019DA                     l7819:
 19185                           
 19186                           ; BSR set to: 1
 19187  0019DA  51CF               	movf	___fladd@exp2& (0+255),w,b
 19188  0019DC  63D0               	cpfseq	___fladd@exp1& (0+255),b
 19189  0019DE  D7F7               	goto	l7817
 19190  0019E0                     l1644:
 19191                           
 19192                           ; BSR set to: 1
 19193  0019E0  AFCE               	btfss	___fladd@sign& (0+255),7,b
 19194  0019E2  D009               	goto	l7823
 19195                           
 19196                           ; BSR set to: 1
 19197  0019E4  1FC2               	comf	___fladd@f1& (0+255),f,b
 19198  0019E6  1FC3               	comf	(___fladd@f1+1)& (0+255),f,b
 19199  0019E8  1FC4               	comf	(___fladd@f1+2)& (0+255),f,b
 19200  0019EA  1FC5               	comf	(___fladd@f1+3)& (0+255),f,b
 19201  0019EC  2BC2               	incf	___fladd@f1& (0+255),f,b
 19202  0019EE  0E00               	movlw	0
 19203  0019F0  23C3               	addwfc	(___fladd@f1+1)& (0+255),f,b
 19204  0019F2  23C4               	addwfc	(___fladd@f1+2)& (0+255),f,b
 19205  0019F4  23C5               	addwfc	(___fladd@f1+3)& (0+255),f,b
 19206  0019F6                     l7823:
 19207                           
 19208                           ; BSR set to: 1
 19209  0019F6  ADCE               	btfss	___fladd@sign& (0+255),6,b
 19210  0019F8  D002               	goto	l7827
 19211                           
 19212                           ; BSR set to: 1
 19213  0019FA  1FC6               	comf	___fladd@f2& (0+255),f,b
 19214  0019FC  D826               	call	PL102	;call to abstracted procedure
 19215  0019FE                     l7827:
 19216                           
 19217                           ; BSR set to: 1
 19218  0019FE  6BCE               	clrf	___fladd@sign& (0+255),b
 19219  001A00  51C2               	movf	___fladd@f1& (0+255),w,b
 19220  001A02  27C6               	addwf	___fladd@f2& (0+255),f,b
 19221  001A04  51C3               	movf	(___fladd@f1+1)& (0+255),w,b
 19222  001A06  23C7               	addwfc	(___fladd@f2+1)& (0+255),f,b
 19223  001A08  51C4               	movf	(___fladd@f1+2)& (0+255),w,b
 19224  001A0A  23C8               	addwfc	(___fladd@f2+2)& (0+255),f,b
 19225  001A0C  51C5               	movf	(___fladd@f1+3)& (0+255),w,b
 19226  001A0E  23C9               	addwfc	(___fladd@f2+3)& (0+255),f,b
 19227                           
 19228                           ; BSR set to: 1
 19229  001A10  AFC9               	btfss	(___fladd@f2+3)& (0+255),7,b
 19230  001A12  D004               	goto	l7835
 19231                           
 19232                           ; BSR set to: 1
 19233  001A14  1FC6               	comf	___fladd@f2& (0+255),f,b
 19234  001A16  D819               	call	PL102	;call to abstracted procedure
 19235                           
 19236                           ; BSR set to: 1
 19237  001A18  0E01               	movlw	1
 19238  001A1A  6FCE               	movwf	___fladd@sign& (0+255),b
 19239  001A1C                     l7835:
 19240                           
 19241                           ; BSR set to: 1
 19242  001A1C  C1C6  F087         	movff	___fladd@f2,___flpack@arg
 19243  001A20  C1C7  F088         	movff	___fladd@f2+1,___flpack@arg+1
 19244  001A24  C1C8  F089         	movff	___fladd@f2+2,___flpack@arg+2
 19245  001A28  C1C9  F08A         	movff	___fladd@f2+3,___flpack@arg+3
 19246  001A2C  C1D0  F08B         	movff	___fladd@exp1,___flpack@exp
 19247  001A30  C1CE  F08C         	movff	___fladd@sign,___flpack@sign
 19248  001A34  EC0D  F016         	call	___flpack	;wreg free
 19249  001A38  C087  F1C2         	movff	?___flpack,?___fladd
 19250  001A3C  C088  F1C3         	movff	?___flpack+1,?___fladd+1
 19251  001A40  C089  F1C4         	movff	?___flpack+2,?___fladd+2
 19252  001A44  C08A  F1C5         	movff	?___flpack+3,?___fladd+3
 19253  001A48  0012               	return	
 19254  001A4A                     __end_of___fladd:
 19255                           	opt stack 0
 19256  001A4A                     PL102:
 19257                           	opt stack 19
 19258  001A4A  1FC7               	comf	(___fladd@f2+1)& (0+255),f,b
 19259  001A4C  1FC8               	comf	(___fladd@f2+2)& (0+255),f,b
 19260  001A4E  1FC9               	comf	(___fladd@f2+3)& (0+255),f,b
 19261  001A50  2BC6               	incf	___fladd@f2& (0+255),f,b
 19262  001A52  0E00               	movlw	0
 19263  001A54  23C7               	addwfc	(___fladd@f2+1)& (0+255),f,b
 19264  001A56  23C8               	addwfc	(___fladd@f2+2)& (0+255),f,b
 19265  001A58  23C9               	addwfc	(___fladd@f2+3)& (0+255),f,b
 19266  001A5A  0C00               	retlw	0
 19267  001A5C                     __end_ofPL102:
 19268                           	opt stack 0
 19269  001A5C                     PL144:
 19270                           	opt stack 19
 19271  001A5C  90D8               	bcf	status,0,c
 19272  001A5E  33CD               	rrcf	(??___fladd+3)& (0+255),f,b
 19273  001A60  33CC               	rrcf	(??___fladd+2)& (0+255),f,b
 19274  001A62  33CB               	rrcf	(??___fladd+1)& (0+255),f,b
 19275  001A64  33CA               	rrcf	??___fladd& (0+255),f,b
 19276  001A66  0012               	return	
 19277  001A68                     __end_ofPL144:
 19278                           	opt stack 0
 19279                           tblptru	equ	0xFF8
 19280                           tblptrh	equ	0xFF7
 19281                           tblptrl	equ	0xFF6
 19282                           tablat	equ	0xFF5
 19283                           prodh	equ	0xFF4
 19284                           prodl	equ	0xFF3
 19285                           intcon	equ	0xFF2
 19286                           postinc0	equ	0xFEE
 19287                           wreg	equ	0xFE8
 19288                           indf1	equ	0xFE7
 19289                           postinc1	equ	0xFE6
 19290                           postdec1	equ	0xFE5
 19291                           fsr1h	equ	0xFE2
 19292                           fsr1l	equ	0xFE1
 19293                           indf2	equ	0xFDF
 19294                           postinc2	equ	0xFDE
 19295                           postdec2	equ	0xFDD
 19296                           fsr2h	equ	0xFDA
 19297                           fsr2l	equ	0xFD9
 19298                           status	equ	0xFD8
 19299                           
 19300 ;; *************** function ___flpack *****************
 19301 ;; Defined at:
 19302 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\double.c"
 19303 ;; Parameters:    Size  Location     Type
 19304 ;;  arg             4   39[BANK0 ] unsigned long 
 19305 ;;  exp             1   43[BANK0 ] unsigned char 
 19306 ;;  sign            1   44[BANK0 ] unsigned char 
 19307 ;; Auto vars:     Size  Location     Type
 19308 ;;		None
 19309 ;; Return value:  Size  Location     Type
 19310 ;;                  4   39[BANK0 ] unsigned char 
 19311 ;; Registers used:
 19312 ;;		wreg, status,2, status,0
 19313 ;; Tracked objects:
 19314 ;;		On entry : E/0
 19315 ;;		On exit  : F/0
 19316 ;;		Unchanged: 0/0
 19317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19318 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19320 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19321 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19322 ;;Total ram usage:       10 bytes
 19323 ;; Hardware stack levels used:    1
 19324 ;; Hardware stack levels required when called:    8
 19325 ;; This function calls:
 19326 ;;		Nothing
 19327 ;; This function is called by:
 19328 ;;		___awtofl
 19329 ;;		___fladd
 19330 ;;		___flmul
 19331 ;;		___lltofl
 19332 ;; This function uses a non-reentrant model
 19333 ;;
 19334                           
 19335                           	psect	text31
 19336  002C1A                     __ptext31:
 19337                           	opt stack 0
 19338  002C1A                     ___flpack:
 19339                           	opt stack 19
 19340                           
 19341                           ;incstack = 0
 19342  002C1A  0100               	movlb	0	; () banked
 19343  002C1C  518B               	movf	___flpack@exp& (0+255),w,b
 19344  002C1E  E005               	bz	l1610
 19345                           
 19346                           ; BSR set to: 0
 19347  002C20  518A               	movf	(___flpack@arg+3)& (0+255),w,b
 19348  002C22  1187               	iorwf	___flpack@arg& (0+255),w,b
 19349  002C24  1188               	iorwf	(___flpack@arg+1)& (0+255),w,b
 19350  002C26  1189               	iorwf	(___flpack@arg+2)& (0+255),w,b
 19351  002C28  E107               	bnz	l7723
 19352  002C2A                     l1610:
 19353                           
 19354                           ; BSR set to: 0
 19355  002C2A  6B87               	clrf	?___flpack& (0+255),b
 19356  002C2C  6B88               	clrf	(?___flpack+1)& (0+255),b
 19357  002C2E  6B89               	clrf	(?___flpack+2)& (0+255),b
 19358  002C30  6B8A               	clrf	(?___flpack+3)& (0+255),b
 19359  002C32  0012               	return	
 19360  002C34                     l7721:
 19361                           
 19362                           ; BSR set to: 0
 19363  002C34  2B8B               	incf	___flpack@exp& (0+255),f,b
 19364  002C36  D84A               	call	PL150	;call to abstracted procedure
 19365  002C38                     l7723:
 19366                           
 19367                           ; BSR set to: 0
 19368  002C38  6B8D               	clrf	??___flpack& (0+255),b
 19369  002C3A  6B8E               	clrf	(??___flpack+1)& (0+255),b
 19370  002C3C  6B8F               	clrf	(??___flpack+2)& (0+255),b
 19371  002C3E  0EFE               	movlw	254
 19372  002C40  158A               	andwf	(___flpack@arg+3)& (0+255),w,b
 19373  002C42  6F90               	movwf	(??___flpack+3)& (0+255),b
 19374  002C44  5190               	movf	(??___flpack+3)& (0+255),w,b
 19375  002C46  118D               	iorwf	??___flpack& (0+255),w,b
 19376  002C48  118E               	iorwf	(??___flpack+1)& (0+255),w,b
 19377  002C4A  118F               	iorwf	(??___flpack+2)& (0+255),w,b
 19378  002C4C  E008               	bz	l1615
 19379  002C4E  D7F2               	goto	l7721
 19380  002C50                     l7725:
 19381                           
 19382                           ; BSR set to: 0
 19383  002C50  2B8B               	incf	___flpack@exp& (0+255),f,b
 19384                           
 19385                           ; BSR set to: 0
 19386  002C52  2B87               	incf	___flpack@arg& (0+255),f,b
 19387  002C54  0E00               	movlw	0
 19388  002C56  2388               	addwfc	(___flpack@arg+1)& (0+255),f,b
 19389  002C58  2389               	addwfc	(___flpack@arg+2)& (0+255),f,b
 19390  002C5A  238A               	addwfc	(___flpack@arg+3)& (0+255),f,b
 19391                           
 19392                           ; BSR set to: 0
 19393  002C5C  D837               	call	PL150	;call to abstracted procedure
 19394  002C5E                     l1615:
 19395                           
 19396                           ; BSR set to: 0
 19397  002C5E  6B8D               	clrf	??___flpack& (0+255),b
 19398  002C60  6B8E               	clrf	(??___flpack+1)& (0+255),b
 19399  002C62  6B8F               	clrf	(??___flpack+2)& (0+255),b
 19400  002C64  518A               	movf	(___flpack@arg+3)& (0+255),w,b
 19401  002C66  6F90               	movwf	(??___flpack+3)& (0+255),b
 19402  002C68  5190               	movf	(??___flpack+3)& (0+255),w,b
 19403  002C6A  118D               	iorwf	??___flpack& (0+255),w,b
 19404  002C6C  118E               	iorwf	(??___flpack+1)& (0+255),w,b
 19405  002C6E  118F               	iorwf	(??___flpack+2)& (0+255),w,b
 19406  002C70  E007               	bz	l7733
 19407  002C72  D7EE               	goto	l7725
 19408  002C74                     l7731:
 19409                           
 19410                           ; BSR set to: 0
 19411  002C74  078B               	decf	___flpack@exp& (0+255),f,b
 19412  002C76  90D8               	bcf	status,0,c
 19413  002C78  3787               	rlcf	___flpack@arg& (0+255),f,b
 19414  002C7A  3788               	rlcf	(___flpack@arg+1)& (0+255),f,b
 19415  002C7C  3789               	rlcf	(___flpack@arg+2)& (0+255),f,b
 19416  002C7E  378A               	rlcf	(___flpack@arg+3)& (0+255),f,b
 19417  002C80                     l7733:
 19418                           
 19419                           ; BSR set to: 0
 19420  002C80  AF89               	btfss	(___flpack@arg+2)& (0+255),7,b
 19421  002C82  D7F8               	goto	l7731
 19422                           
 19423                           ; BSR set to: 0
 19424  002C84  B18B               	btfsc	___flpack@exp& (0+255),0,b
 19425  002C86  D002               	goto	l1621
 19426                           
 19427                           ; BSR set to: 0
 19428  002C88  0E7F               	movlw	127
 19429  002C8A  1789               	andwf	(___flpack@arg+2)& (0+255),f,b
 19430  002C8C                     l1621:
 19431                           
 19432                           ; BSR set to: 0
 19433  002C8C  90D8               	bcf	status,0,c
 19434  002C8E  338B               	rrcf	___flpack@exp& (0+255),f,b
 19435  002C90  C08B  F08D         	movff	___flpack@exp,??___flpack
 19436  002C94  6B8E               	clrf	(??___flpack+1)& (0+255),b
 19437  002C96  6B8F               	clrf	(??___flpack+2)& (0+255),b
 19438  002C98  6B90               	clrf	(??___flpack+3)& (0+255),b
 19439  002C9A  C08D  F090         	movff	??___flpack,??___flpack+3
 19440  002C9E  6B8F               	clrf	(??___flpack+2)& (0+255),b
 19441  002CA0  6B8E               	clrf	(??___flpack+1)& (0+255),b
 19442  002CA2  6B8D               	clrf	??___flpack& (0+255),b
 19443  002CA4  518D               	movf	??___flpack& (0+255),w,b
 19444  002CA6  1387               	iorwf	___flpack@arg& (0+255),f,b
 19445  002CA8  518E               	movf	(??___flpack+1)& (0+255),w,b
 19446  002CAA  1388               	iorwf	(___flpack@arg+1)& (0+255),f,b
 19447  002CAC  518F               	movf	(??___flpack+2)& (0+255),w,b
 19448  002CAE  1389               	iorwf	(___flpack@arg+2)& (0+255),f,b
 19449  002CB0  5190               	movf	(??___flpack+3)& (0+255),w,b
 19450  002CB2  138A               	iorwf	(___flpack@arg+3)& (0+255),f,b
 19451                           
 19452                           ; BSR set to: 0
 19453  002CB4  518C               	movf	___flpack@sign& (0+255),w,b
 19454  002CB6  A4D8               	btfss	status,2,c
 19455                           
 19456                           ; BSR set to: 0
 19457  002CB8  8F8A               	bsf	(___flpack@arg+3)& (0+255),7,b
 19458                           
 19459                           ; BSR set to: 0
 19460  002CBA  C087  F087         	movff	___flpack@arg,?___flpack
 19461  002CBE  C088  F088         	movff	___flpack@arg+1,?___flpack+1
 19462  002CC2  C089  F089         	movff	___flpack@arg+2,?___flpack+2
 19463  002CC6  C08A  F08A         	movff	___flpack@arg+3,?___flpack+3
 19464                           
 19465                           ; BSR set to: 0
 19466  002CCA  0012               	return	
 19467  002CCC                     __end_of___flpack:
 19468                           	opt stack 0
 19469  002CCC                     PL150:
 19470                           	opt stack 19
 19471  002CCC  90D8               	bcf	status,0,c
 19472  002CCE  338A               	rrcf	(___flpack@arg+3)& (0+255),f,b
 19473  002CD0  3389               	rrcf	(___flpack@arg+2)& (0+255),f,b
 19474  002CD2  3388               	rrcf	(___flpack@arg+1)& (0+255),f,b
 19475  002CD4  3387               	rrcf	___flpack@arg& (0+255),f,b
 19476  002CD6  0012               	return	
 19477  002CD8                     __end_ofPL150:
 19478                           	opt stack 0
 19479                           tblptru	equ	0xFF8
 19480                           tblptrh	equ	0xFF7
 19481                           tblptrl	equ	0xFF6
 19482                           tablat	equ	0xFF5
 19483                           prodh	equ	0xFF4
 19484                           prodl	equ	0xFF3
 19485                           intcon	equ	0xFF2
 19486                           postinc0	equ	0xFEE
 19487                           wreg	equ	0xFE8
 19488                           indf1	equ	0xFE7
 19489                           postinc1	equ	0xFE6
 19490                           postdec1	equ	0xFE5
 19491                           fsr1h	equ	0xFE2
 19492                           fsr1l	equ	0xFE1
 19493                           indf2	equ	0xFDF
 19494                           postinc2	equ	0xFDE
 19495                           postdec2	equ	0xFDD
 19496                           fsr2h	equ	0xFDA
 19497                           fsr2l	equ	0xFD9
 19498                           status	equ	0xFD8
 19499                           
 19500 ;; *************** function ___flneg *****************
 19501 ;; Defined at:
 19502 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\flneg.c"
 19503 ;; Parameters:    Size  Location     Type
 19504 ;;  f1              4   39[BANK0 ] unsigned char 
 19505 ;; Auto vars:     Size  Location     Type
 19506 ;;		None
 19507 ;; Return value:  Size  Location     Type
 19508 ;;                  4   39[BANK0 ] unsigned char 
 19509 ;; Registers used:
 19510 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19511 ;; Tracked objects:
 19512 ;;		On entry : F/2
 19513 ;;		On exit  : F/0
 19514 ;;		Unchanged: 0/0
 19515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19516 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19519 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19520 ;;Total ram usage:        4 bytes
 19521 ;; Hardware stack levels used:    1
 19522 ;; Hardware stack levels required when called:    8
 19523 ;; This function calls:
 19524 ;;		Nothing
 19525 ;; This function is called by:
 19526 ;;		_sprintf
 19527 ;; This function uses a non-reentrant model
 19528 ;;
 19529                           
 19530                           	psect	text32
 19531  003A6C                     __ptext32:
 19532                           	opt stack 0
 19533  003A6C                     ___flneg:
 19534                           	opt stack 20
 19535                           
 19536                           ; BSR set to: 2
 19537                           
 19538                           ; BSR set to: 0
 19539                           ;incstack = 0
 19540  003A6C  0100               	movlb	0	; () banked
 19541  003A6E  EE20  F087         	lfsr	2,___flneg@f1
 19542  003A72  50DE               	movf	postinc2,w,c
 19543  003A74  10DE               	iorwf	postinc2,w,c
 19544  003A76  10DE               	iorwf	postinc2,w,c
 19545  003A78  10DE               	iorwf	postinc2,w,c
 19546  003A7A  E002               	bz	l8371
 19547                           
 19548                           ; BSR set to: 0
 19549  003A7C  0E80               	movlw	128
 19550  003A7E  1B8A               	xorwf	(___flneg@f1+3)& (0+255),f,b
 19551  003A80                     l8371:
 19552                           
 19553                           ; BSR set to: 0
 19554  003A80  C087  F087         	movff	___flneg@f1,?___flneg
 19555  003A84  C088  F088         	movff	___flneg@f1+1,?___flneg+1
 19556  003A88  C089  F089         	movff	___flneg@f1+2,?___flneg+2
 19557  003A8C  C08A  F08A         	movff	___flneg@f1+3,?___flneg+3
 19558                           
 19559                           ; BSR set to: 0
 19560  003A90  0012               	return	
 19561  003A92                     __end_of___flneg:
 19562                           	opt stack 0
 19563                           tblptru	equ	0xFF8
 19564                           tblptrh	equ	0xFF7
 19565                           tblptrl	equ	0xFF6
 19566                           tablat	equ	0xFF5
 19567                           prodh	equ	0xFF4
 19568                           prodl	equ	0xFF3
 19569                           intcon	equ	0xFF2
 19570                           postinc0	equ	0xFEE
 19571                           wreg	equ	0xFE8
 19572                           indf1	equ	0xFE7
 19573                           postinc1	equ	0xFE6
 19574                           postdec1	equ	0xFE5
 19575                           fsr1h	equ	0xFE2
 19576                           fsr1l	equ	0xFE1
 19577                           indf2	equ	0xFDF
 19578                           postinc2	equ	0xFDE
 19579                           postdec2	equ	0xFDD
 19580                           fsr2h	equ	0xFDA
 19581                           fsr2l	equ	0xFD9
 19582                           status	equ	0xFD8
 19583                           
 19584 ;; *************** function ___flge *****************
 19585 ;; Defined at:
 19586 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\flge.c"
 19587 ;; Parameters:    Size  Location     Type
 19588 ;;  ff1             4   39[BANK0 ] unsigned char 
 19589 ;;  ff2             4   43[BANK0 ] unsigned char 
 19590 ;; Auto vars:     Size  Location     Type
 19591 ;;		None
 19592 ;; Return value:  Size  Location     Type
 19593 ;;		None               void
 19594 ;; Registers used:
 19595 ;;		wreg, status,2, status,0
 19596 ;; Tracked objects:
 19597 ;;		On entry : F/0
 19598 ;;		On exit  : F/0
 19599 ;;		Unchanged: 0/0
 19600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19601 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19604 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19605 ;;Total ram usage:        8 bytes
 19606 ;; Hardware stack levels used:    1
 19607 ;; Hardware stack levels required when called:    8
 19608 ;; This function calls:
 19609 ;;		Nothing
 19610 ;; This function is called by:
 19611 ;;		_sprintf
 19612 ;; This function uses a non-reentrant model
 19613 ;;
 19614                           
 19615                           	psect	text33
 19616  003746                     __ptext33:
 19617                           	opt stack 0
 19618  003746                     ___flge:
 19619                           	opt stack 20
 19620                           
 19621                           ; BSR set to: 0
 19622                           
 19623                           ; BSR set to: 0
 19624                           ;incstack = 0
 19625  003746  AF8A               	btfss	(___flge@ff1+3)& (0+255),7,b
 19626  003748  D009               	goto	l8357
 19627                           
 19628                           ; BSR set to: 0
 19629  00374A  6D87               	negf	___flge@ff1& (0+255),b
 19630  00374C  1F88               	comf	(___flge@ff1+1)& (0+255),f,b
 19631  00374E  B0D8               	btfsc	status,0,c
 19632  003750  2B88               	incf	(___flge@ff1+1)& (0+255),f,b
 19633  003752  1F89               	comf	(___flge@ff1+2)& (0+255),f,b
 19634  003754  B0D8               	btfsc	status,0,c
 19635  003756  2B89               	incf	(___flge@ff1+2)& (0+255),f,b
 19636  003758  0E80               	movlw	128
 19637  00375A  578A               	subfwb	(___flge@ff1+3)& (0+255),f,b
 19638  00375C                     l8357:
 19639                           
 19640                           ; BSR set to: 0
 19641  00375C  AF8E               	btfss	(___flge@ff2+3)& (0+255),7,b
 19642  00375E  D009               	goto	l1686
 19643                           
 19644                           ; BSR set to: 0
 19645  003760  6D8B               	negf	___flge@ff2& (0+255),b
 19646  003762  1F8C               	comf	(___flge@ff2+1)& (0+255),f,b
 19647  003764  B0D8               	btfsc	status,0,c
 19648  003766  2B8C               	incf	(___flge@ff2+1)& (0+255),f,b
 19649  003768  1F8D               	comf	(___flge@ff2+2)& (0+255),f,b
 19650  00376A  B0D8               	btfsc	status,0,c
 19651  00376C  2B8D               	incf	(___flge@ff2+2)& (0+255),f,b
 19652  00376E  0E80               	movlw	128
 19653  003770  578E               	subfwb	(___flge@ff2+3)& (0+255),f,b
 19654  003772                     l1686:
 19655                           
 19656                           ; BSR set to: 0
 19657  003772  0E80               	movlw	128
 19658  003774  1B8A               	xorwf	(___flge@ff1+3)& (0+255),f,b
 19659  003776  1B8E               	xorwf	(___flge@ff2+3)& (0+255),f,b
 19660  003778  518B               	movf	___flge@ff2& (0+255),w,b
 19661  00377A  5D87               	subwf	___flge@ff1& (0+255),w,b
 19662  00377C  518C               	movf	(___flge@ff2+1)& (0+255),w,b
 19663  00377E  5988               	subwfb	(___flge@ff1+1)& (0+255),w,b
 19664  003780  518D               	movf	(___flge@ff2+2)& (0+255),w,b
 19665  003782  5989               	subwfb	(___flge@ff1+2)& (0+255),w,b
 19666  003784  518E               	movf	(___flge@ff2+3)& (0+255),w,b
 19667  003786  598A               	subwfb	(___flge@ff1+3)& (0+255),w,b
 19668  003788  E202               	bc	l8363
 19669                           
 19670                           ; BSR set to: 0
 19671  00378A  90D8               	bcf	status,0,c
 19672  00378C  0012               	return	
 19673  00378E                     l8363:
 19674                           
 19675                           ; BSR set to: 0
 19676  00378E  80D8               	bsf	status,0,c
 19677                           
 19678                           ; BSR set to: 0
 19679  003790  0012               	return	
 19680  003792                     __end_of___flge:
 19681                           	opt stack 0
 19682                           tblptru	equ	0xFF8
 19683                           tblptrh	equ	0xFF7
 19684                           tblptrl	equ	0xFF6
 19685                           tablat	equ	0xFF5
 19686                           prodh	equ	0xFF4
 19687                           prodl	equ	0xFF3
 19688                           intcon	equ	0xFF2
 19689                           postinc0	equ	0xFEE
 19690                           wreg	equ	0xFE8
 19691                           indf1	equ	0xFE7
 19692                           postinc1	equ	0xFE6
 19693                           postdec1	equ	0xFE5
 19694                           fsr1h	equ	0xFE2
 19695                           fsr1l	equ	0xFE1
 19696                           indf2	equ	0xFDF
 19697                           postinc2	equ	0xFDE
 19698                           postdec2	equ	0xFDD
 19699                           fsr2h	equ	0xFDA
 19700                           fsr2l	equ	0xFD9
 19701                           status	equ	0xFD8
 19702                           
 19703 ;; *************** function _ks0108Rect *****************
 19704 ;; Defined at:
 19705 ;;		line 395 in file "../lib/ks0108.c"
 19706 ;; Parameters:    Size  Location     Type
 19707 ;;  x               1    wreg     unsigned char 
 19708 ;;  y               1   53[BANK0 ] unsigned char 
 19709 ;;  dx              1   54[BANK0 ] unsigned char 
 19710 ;;  dy              1   55[BANK0 ] unsigned char 
 19711 ;; Auto vars:     Size  Location     Type
 19712 ;;  x               1   61[BANK0 ] unsigned char 
 19713 ;;  _y              1   63[BANK0 ] unsigned char 
 19714 ;;  _x              1   62[BANK0 ] unsigned char 
 19715 ;; Return value:  Size  Location     Type
 19716 ;;		None               void
 19717 ;; Registers used:
 19718 ;;		wreg, status,2, status,0, cstack
 19719 ;; Tracked objects:
 19720 ;;		On entry : F/0
 19721 ;;		On exit  : F/0
 19722 ;;		Unchanged: 0/0
 19723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19724 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19725 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19726 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19727 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19728 ;;Total ram usage:       11 bytes
 19729 ;; Hardware stack levels used:    1
 19730 ;; Hardware stack levels required when called:   13
 19731 ;; This function calls:
 19732 ;;		_ks0108SetDot
 19733 ;; This function is called by:
 19734 ;;		_main
 19735 ;; This function uses a non-reentrant model
 19736 ;;
 19737                           
 19738                           	psect	text34
 19739  003496                     __ptext34:
 19740                           	opt stack 0
 19741  003496                     _ks0108Rect:
 19742                           	opt stack 17
 19743                           
 19744                           ; BSR set to: 0
 19745                           ;incstack = 0
 19746                           ;ks0108Rect@x stored from wreg
 19747  003496  6F9D               	movwf	ks0108Rect@x& (0+255),b
 19748                           
 19749                           ; BSR set to: 0
 19750                           ;ks0108.c: 396: BYTE _x, _y;
 19751                           ;ks0108.c: 397: for(_y = y; _y < (y + dy); _y ++){
 19752  003498  C095  F09F         	movff	ks0108Rect@y,ks0108Rect@_y
 19753  00349C  D014               	goto	l9257
 19754  00349E                     l9247:
 19755                           
 19756                           ; BSR set to: 0
 19757                           ;ks0108.c: 398: for(_x = x; _x < (x + dx); _x ++){
 19758  00349E  C09D  F09E         	movff	ks0108Rect@x,ks0108Rect@_x
 19759  0034A2  D006               	goto	l9253
 19760  0034A4                     l9249:
 19761                           
 19762                           ; BSR set to: 0
 19763                           ;ks0108.c: 400: ks0108SetDot(_x, _y);
 19764  0034A4  C09F  F090         	movff	ks0108Rect@_y,ks0108SetDot@y
 19765  0034A8  519E               	movf	ks0108Rect@_x& (0+255),w,b
 19766  0034AA  EC56  F01B         	call	_ks0108SetDot
 19767                           
 19768                           ; BSR set to: 0
 19769  0034AE  2B9E               	incf	ks0108Rect@_x& (0+255),f,b
 19770  0034B0                     l9253:
 19771                           
 19772                           ; BSR set to: 0
 19773  0034B0  5196               	movf	ks0108Rect@dx& (0+255),w,b
 19774  0034B2  C09D  F098         	movff	ks0108Rect@x,??_ks0108Rect
 19775  0034B6  6B99               	clrf	(??_ks0108Rect+1)& (0+255),b
 19776  0034B8  2798               	addwf	??_ks0108Rect& (0+255),f,b
 19777  0034BA  0E00               	movlw	0
 19778  0034BC  2399               	addwfc	(??_ks0108Rect+1)& (0+255),f,b
 19779  0034BE  519E               	movf	ks0108Rect@_x& (0+255),w,b
 19780  0034C0  D80E               	call	PL92	;call to abstracted procedure
 19781  0034C2  E3F0               	bnc	l9249
 19782                           
 19783                           ; BSR set to: 0
 19784  0034C4  2B9F               	incf	ks0108Rect@_y& (0+255),f,b
 19785  0034C6                     l9257:
 19786                           
 19787                           ; BSR set to: 0
 19788  0034C6  5197               	movf	ks0108Rect@dy& (0+255),w,b
 19789  0034C8  C095  F098         	movff	ks0108Rect@y,??_ks0108Rect
 19790  0034CC  6B99               	clrf	(??_ks0108Rect+1)& (0+255),b
 19791  0034CE  2798               	addwf	??_ks0108Rect& (0+255),f,b
 19792  0034D0  0E00               	movlw	0
 19793  0034D2  2399               	addwfc	(??_ks0108Rect+1)& (0+255),f,b
 19794  0034D4  519F               	movf	ks0108Rect@_y& (0+255),w,b
 19795  0034D6  D803               	call	PL92	;call to abstracted procedure
 19796  0034D8  B0D8               	btfsc	status,0,c
 19797  0034DA  0012               	return	
 19798  0034DC  D7E0               	goto	l9247
 19799  0034DE                     __end_of_ks0108Rect:
 19800                           	opt stack 0
 19801  0034DE                     PL92:
 19802                           	opt stack 17
 19803  0034DE  6F9A               	movwf	(??_ks0108Rect+2)& (0+255),b
 19804  0034E0  6B9B               	clrf	(??_ks0108Rect+3)& (0+255),b
 19805  0034E2  519B               	movf	(??_ks0108Rect+3)& (0+255),w,b
 19806  0034E4  0A80               	xorlw	128
 19807  0034E6  6F9C               	movwf	(??_ks0108Rect+4)& (0+255),b
 19808  0034E8  5198               	movf	??_ks0108Rect& (0+255),w,b
 19809  0034EA  5D9A               	subwf	(??_ks0108Rect+2)& (0+255),w,b
 19810  0034EC  5199               	movf	(??_ks0108Rect+1)& (0+255),w,b
 19811  0034EE  0A80               	xorlw	128
 19812  0034F0  599C               	subwfb	(??_ks0108Rect+4)& (0+255),w,b
 19813  0034F2  0012               	return	
 19814  0034F4                     __end_ofPL92:
 19815                           	opt stack 0
 19816                           tblptru	equ	0xFF8
 19817                           tblptrh	equ	0xFF7
 19818                           tblptrl	equ	0xFF6
 19819                           tablat	equ	0xFF5
 19820                           prodh	equ	0xFF4
 19821                           prodl	equ	0xFF3
 19822                           intcon	equ	0xFF2
 19823                           postinc0	equ	0xFEE
 19824                           wreg	equ	0xFE8
 19825                           indf1	equ	0xFE7
 19826                           postinc1	equ	0xFE6
 19827                           postdec1	equ	0xFE5
 19828                           fsr1h	equ	0xFE2
 19829                           fsr1l	equ	0xFE1
 19830                           indf2	equ	0xFDF
 19831                           postinc2	equ	0xFDE
 19832                           postdec2	equ	0xFDD
 19833                           fsr2h	equ	0xFDA
 19834                           fsr2l	equ	0xFD9
 19835                           status	equ	0xFD8
 19836                           
 19837 ;; *************** function _ks0108Line *****************
 19838 ;; Defined at:
 19839 ;;		line 350 in file "../lib/ks0108.c"
 19840 ;; Parameters:    Size  Location     Type
 19841 ;;  xn              1    wreg     unsigned char 
 19842 ;;  yn              1   53[BANK0 ] unsigned char 
 19843 ;;  xk              1   54[BANK0 ] unsigned char 
 19844 ;;  yk              1   55[BANK0 ] unsigned char 
 19845 ;; Auto vars:     Size  Location     Type
 19846 ;;  xn              1   59[BANK0 ] unsigned char 
 19847 ;;  s               1   58[BANK0 ] unsigned char 
 19848 ;;  dy              1   57[BANK0 ] unsigned char 
 19849 ;;  dx              1   56[BANK0 ] unsigned char 
 19850 ;; Return value:  Size  Location     Type
 19851 ;;		None               void
 19852 ;; Registers used:
 19853 ;;		wreg, status,2, status,0, cstack
 19854 ;; Tracked objects:
 19855 ;;		On entry : F/0
 19856 ;;		On exit  : F/0
 19857 ;;		Unchanged: 0/0
 19858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19859 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19860 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19862 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19863 ;;Total ram usage:        7 bytes
 19864 ;; Hardware stack levels used:    1
 19865 ;; Hardware stack levels required when called:   13
 19866 ;; This function calls:
 19867 ;;		_ks0108SetDot
 19868 ;; This function is called by:
 19869 ;;		_main
 19870 ;; This function uses a non-reentrant model
 19871 ;;
 19872                           
 19873                           	psect	text35
 19874  002F62                     __ptext35:
 19875                           	opt stack 0
 19876  002F62                     _ks0108Line:
 19877                           	opt stack 17
 19878                           
 19879                           ; BSR set to: 0
 19880                           ;incstack = 0
 19881                           ;ks0108Line@xn stored from wreg
 19882  002F62  6F9B               	movwf	ks0108Line@xn& (0+255),b
 19883                           
 19884                           ; BSR set to: 0
 19885                           ;ks0108.c: 351: BYTE dx, dy, s;
 19886                           ;ks0108.c: 354: if(xn > xk){
 19887  002F64  519B               	movf	ks0108Line@xn& (0+255),w,b
 19888  002F66  5D96               	subwf	ks0108Line@xk& (0+255),w,b
 19889  002F68  E206               	bc	l9201
 19890                           
 19891                           ; BSR set to: 0
 19892                           ;ks0108.c: 355: s = xn;
 19893  002F6A  C09B  F09A         	movff	ks0108Line@xn,ks0108Line@s
 19894                           
 19895                           ;ks0108.c: 356: xn = xk;
 19896  002F6E  C096  F09B         	movff	ks0108Line@xk,ks0108Line@xn
 19897                           
 19898                           ; BSR set to: 0
 19899                           ;ks0108.c: 357: xk = s;
 19900  002F72  C09A  F096         	movff	ks0108Line@s,ks0108Line@xk
 19901  002F76                     l9201:
 19902                           
 19903                           ; BSR set to: 0
 19904                           ;ks0108.c: 359: }
 19905                           ;ks0108.c: 360: if(yn > yk){
 19906  002F76  5195               	movf	ks0108Line@yn& (0+255),w,b
 19907  002F78  5D97               	subwf	ks0108Line@yk& (0+255),w,b
 19908  002F7A  E206               	bc	l9205
 19909                           
 19910                           ; BSR set to: 0
 19911                           ;ks0108.c: 361: s = yn;
 19912  002F7C  C095  F09A         	movff	ks0108Line@yn,ks0108Line@s
 19913                           
 19914                           ;ks0108.c: 362: yn = yk;
 19915  002F80  C097  F095         	movff	ks0108Line@yk,ks0108Line@yn
 19916                           
 19917                           ;ks0108.c: 363: yk = s;
 19918  002F84  C09A  F097         	movff	ks0108Line@s,ks0108Line@yk
 19919  002F88                     l9205:
 19920                           
 19921                           ; BSR set to: 0
 19922                           ;ks0108.c: 365: }
 19923                           ;ks0108.c: 366: dx = (xk - xn);
 19924  002F88  519B               	movf	ks0108Line@xn& (0+255),w,b
 19925  002F8A  5D96               	subwf	ks0108Line@xk& (0+255),w,b
 19926  002F8C  6F98               	movwf	ks0108Line@dx& (0+255),b
 19927                           
 19928                           ;ks0108.c: 367: dy = (yk - yn);
 19929  002F8E  5195               	movf	ks0108Line@yn& (0+255),w,b
 19930  002F90  5D97               	subwf	ks0108Line@yk& (0+255),w,b
 19931  002F92  6F99               	movwf	ks0108Line@dy& (0+255),b
 19932                           
 19933                           ; BSR set to: 0
 19934                           ;ks0108.c: 368: if((dx == 0) && (dy == 0)) return;
 19935  002F94  6798               	tstfsz	ks0108Line@dx& (0+255),b
 19936  002F96  D003               	goto	l9213
 19937                           
 19938                           ; BSR set to: 0
 19939  002F98  6799               	tstfsz	ks0108Line@dy& (0+255),b
 19940  002F9A  D001               	goto	l9213
 19941  002F9C  0012               	return	
 19942  002F9E                     l9213:
 19943                           
 19944                           ; BSR set to: 0
 19945                           ;ks0108.c: 371: if(dx >= dy){
 19946  002F9E  5199               	movf	ks0108Line@dy& (0+255),w,b
 19947  002FA0  5D98               	subwf	ks0108Line@dx& (0+255),w,b
 19948  002FA2  E315               	bnc	l1128
 19949                           
 19950                           ; BSR set to: 0
 19951                           ;ks0108.c: 372: s = 0;
 19952  002FA4  6B9A               	clrf	ks0108Line@s& (0+255),b
 19953                           
 19954                           ;ks0108.c: 373: while(xn < xk){
 19955  002FA6  D00E               	goto	l9229
 19956  002FA8                     l9217:
 19957                           
 19958                           ; BSR set to: 0
 19959                           ;ks0108.c: 374: ks0108SetDot(xn ++, yn);
 19960  002FA8  C095  F090         	movff	ks0108Line@yn,ks0108SetDot@y
 19961  002FAC  519B               	movf	ks0108Line@xn& (0+255),w,b
 19962  002FAE  EC56  F01B         	call	_ks0108SetDot
 19963                           
 19964                           ; BSR set to: 0
 19965  002FB2  2B9B               	incf	ks0108Line@xn& (0+255),f,b
 19966                           
 19967                           ; BSR set to: 0
 19968                           ;ks0108.c: 375: s = s + dy;
 19969  002FB4  5199               	movf	ks0108Line@dy& (0+255),w,b
 19970  002FB6  279A               	addwf	ks0108Line@s& (0+255),f,b
 19971                           
 19972                           ; BSR set to: 0
 19973                           ;ks0108.c: 376: if(s >= dx){
 19974  002FB8  5198               	movf	ks0108Line@dx& (0+255),w,b
 19975  002FBA  5D9A               	subwf	ks0108Line@s& (0+255),w,b
 19976  002FBC  E303               	bnc	l9229
 19977                           
 19978                           ; BSR set to: 0
 19979                           ;ks0108.c: 377: s = s - dx;
 19980  002FBE  5198               	movf	ks0108Line@dx& (0+255),w,b
 19981  002FC0  5F9A               	subwf	ks0108Line@s& (0+255),f,b
 19982                           
 19983                           ; BSR set to: 0
 19984                           ;ks0108.c: 378: yn ++;
 19985  002FC2  2B95               	incf	ks0108Line@yn& (0+255),f,b
 19986  002FC4                     l9229:
 19987                           
 19988                           ; BSR set to: 0
 19989  002FC4  5196               	movf	ks0108Line@xk& (0+255),w,b
 19990  002FC6  5D9B               	subwf	ks0108Line@xn& (0+255),w,b
 19991  002FC8  B0D8               	btfsc	status,0,c
 19992  002FCA  0012               	return	
 19993  002FCC  D7ED               	goto	l9217
 19994  002FCE                     l1128:
 19995                           
 19996                           ; BSR set to: 0
 19997                           ;ks0108.c: 382: s = 0;
 19998  002FCE  6B9A               	clrf	ks0108Line@s& (0+255),b
 19999                           
 20000                           ;ks0108.c: 383: while(yn < yk){
 20001  002FD0  D00E               	goto	l9243
 20002  002FD2                     l9231:
 20003                           
 20004                           ; BSR set to: 0
 20005                           ;ks0108.c: 384: ks0108SetDot(xn, yn ++);
 20006  002FD2  C095  F090         	movff	ks0108Line@yn,ks0108SetDot@y
 20007  002FD6  519B               	movf	ks0108Line@xn& (0+255),w,b
 20008  002FD8  EC56  F01B         	call	_ks0108SetDot
 20009                           
 20010                           ; BSR set to: 0
 20011  002FDC  2B95               	incf	ks0108Line@yn& (0+255),f,b
 20012                           
 20013                           ; BSR set to: 0
 20014                           ;ks0108.c: 385: s = s + dx;
 20015  002FDE  5198               	movf	ks0108Line@dx& (0+255),w,b
 20016  002FE0  279A               	addwf	ks0108Line@s& (0+255),f,b
 20017                           
 20018                           ; BSR set to: 0
 20019                           ;ks0108.c: 386: if(s >= dy){
 20020  002FE2  5199               	movf	ks0108Line@dy& (0+255),w,b
 20021  002FE4  5D9A               	subwf	ks0108Line@s& (0+255),w,b
 20022  002FE6  E303               	bnc	l9243
 20023                           
 20024                           ; BSR set to: 0
 20025                           ;ks0108.c: 387: s = s - dy;
 20026  002FE8  5199               	movf	ks0108Line@dy& (0+255),w,b
 20027  002FEA  5F9A               	subwf	ks0108Line@s& (0+255),f,b
 20028                           
 20029                           ; BSR set to: 0
 20030                           ;ks0108.c: 388: xn ++;
 20031  002FEC  2B9B               	incf	ks0108Line@xn& (0+255),f,b
 20032  002FEE                     l9243:
 20033                           
 20034                           ; BSR set to: 0
 20035  002FEE  5197               	movf	ks0108Line@yk& (0+255),w,b
 20036  002FF0  5D95               	subwf	ks0108Line@yn& (0+255),w,b
 20037  002FF2  B0D8               	btfsc	status,0,c
 20038                           
 20039                           ; BSR set to: 0
 20040  002FF4  0012               	return	
 20041  002FF6  D7ED               	goto	l9231
 20042  002FF8                     __end_of_ks0108Line:
 20043                           	opt stack 0
 20044                           tblptru	equ	0xFF8
 20045                           tblptrh	equ	0xFF7
 20046                           tblptrl	equ	0xFF6
 20047                           tablat	equ	0xFF5
 20048                           prodh	equ	0xFF4
 20049                           prodl	equ	0xFF3
 20050                           intcon	equ	0xFF2
 20051                           postinc0	equ	0xFEE
 20052                           wreg	equ	0xFE8
 20053                           indf1	equ	0xFE7
 20054                           postinc1	equ	0xFE6
 20055                           postdec1	equ	0xFE5
 20056                           fsr1h	equ	0xFE2
 20057                           fsr1l	equ	0xFE1
 20058                           indf2	equ	0xFDF
 20059                           postinc2	equ	0xFDE
 20060                           postdec2	equ	0xFDD
 20061                           fsr2h	equ	0xFDA
 20062                           fsr2l	equ	0xFD9
 20063                           status	equ	0xFD8
 20064                           
 20065 ;; *************** function _ks0108Init *****************
 20066 ;; Defined at:
 20067 ;;		line 118 in file "../lib/ks0108.c"
 20068 ;; Parameters:    Size  Location     Type
 20069 ;;		None
 20070 ;; Auto vars:     Size  Location     Type
 20071 ;;		None
 20072 ;; Return value:  Size  Location     Type
 20073 ;;		None               void
 20074 ;; Registers used:
 20075 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20076 ;; Tracked objects:
 20077 ;;		On entry : F/0
 20078 ;;		On exit  : F/0
 20079 ;;		Unchanged: 0/0
 20080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20085 ;;Total ram usage:        0 bytes
 20086 ;; Hardware stack levels used:    1
 20087 ;; Hardware stack levels required when called:   12
 20088 ;; This function calls:
 20089 ;;		_DelayMs
 20090 ;;		_ks0108Fill
 20091 ;;		_ks0108WriteCommand
 20092 ;; This function is called by:
 20093 ;;		_main
 20094 ;; This function uses a non-reentrant model
 20095 ;;
 20096                           
 20097                           	psect	text36
 20098  0037DC                     __ptext36:
 20099                           	opt stack 0
 20100  0037DC                     _ks0108Init:
 20101                           	opt stack 18
 20102                           
 20103                           ; BSR set to: 0
 20104                           ;ks0108.c: 123: TRISCbits.TRISC3 = 0;
 20105                           
 20106                           ; BSR set to: 0
 20107                           ;incstack = 0
 20108  0037DC  9694               	bcf	3988,3,c	;volatile
 20109                           
 20110                           ;ks0108.c: 124: TRISCbits.TRISC2 = 0;
 20111  0037DE  9494               	bcf	3988,2,c	;volatile
 20112                           
 20113                           ;ks0108.c: 125: TRISCbits.TRISC0 = 0;
 20114  0037E0  9094               	bcf	3988,0,c	;volatile
 20115                           
 20116                           ;ks0108.c: 127: TRISEbits.TRISE0 = 0;
 20117  0037E2  9096               	bcf	3990,0,c	;volatile
 20118                           
 20119                           ;ks0108.c: 128: TRISEbits.TRISE1 = 0;
 20120  0037E4  9296               	bcf	3990,1,c	;volatile
 20121                           
 20122                           ;ks0108.c: 129: TRISEbits.TRISE2 = 0;
 20123  0037E6  9496               	bcf	3990,2,c	;volatile
 20124                           
 20125                           ;ks0108.c: 131: LATC0 = 1;
 20126  0037E8  808B               	bsf	3979,0,c	;volatile
 20127                           
 20128                           ; BSR set to: 0
 20129                           ;ks0108.c: 133: DelayMs(1);
 20130  0037EA  0E01               	movlw	1
 20131  0037EC  EC0D  F01D         	call	_DelayMs
 20132                           
 20133                           ; BSR set to: 0
 20134                           ;ks0108.c: 135: pos.x = 0;
 20135  0037F0  6BD2               	clrf	_pos& (0+255),b
 20136                           
 20137                           ; BSR set to: 0
 20138                           ;ks0108.c: 136: pos.y = 0;
 20139  0037F2  6BD3               	clrf	(_pos+1)& (0+255),b
 20140                           
 20141                           ; BSR set to: 0
 20142                           ;ks0108.c: 137: pos.page = 0;
 20143  0037F4  6BD4               	clrf	(_pos+2)& (0+255),b
 20144                           
 20145                           ; BSR set to: 0
 20146                           ;ks0108.c: 140: ks0108WriteCommand(0x3F, 0x00);
 20147  0037F6  6B87               	clrf	ks0108WriteCommand@chip& (0+255),b
 20148  0037F8  0E3F               	movlw	63
 20149  0037FA  EC49  F01D         	call	_ks0108WriteCommand
 20150                           
 20151                           ;ks0108.c: 141: ks0108WriteCommand(0x3F, 0x01);
 20152  0037FE  0E01               	movlw	1
 20153  003800  0100               	movlb	0	; () banked
 20154  003802  6F87               	movwf	ks0108WriteCommand@chip& (0+255),b
 20155  003804  0E3F               	movlw	63
 20156  003806  EC49  F01D         	call	_ks0108WriteCommand
 20157                           
 20158                           ;ks0108.c: 143: ks0108WriteCommand(0xC0, 0x00);
 20159  00380A  0100               	movlb	0	; () banked
 20160  00380C  6B87               	clrf	ks0108WriteCommand@chip& (0+255),b
 20161  00380E  0EC0               	movlw	192
 20162  003810  EC49  F01D         	call	_ks0108WriteCommand
 20163                           
 20164                           ;ks0108.c: 144: ks0108WriteCommand(0xC0, 0x01);
 20165  003814  0E01               	movlw	1
 20166  003816  0100               	movlb	0	; () banked
 20167  003818  6F87               	movwf	ks0108WriteCommand@chip& (0+255),b
 20168  00381A  0EC0               	movlw	192
 20169  00381C  EC49  F01D         	call	_ks0108WriteCommand
 20170                           
 20171                           ;ks0108.c: 145: ks0108Fill(0x00);
 20172  003820  0E00               	movlw	0
 20173  003822  EFC8  F01C         	goto	_ks0108Fill
 20174  003826                     __end_of_ks0108Init:
 20175                           	opt stack 0
 20176                           tblptru	equ	0xFF8
 20177                           tblptrh	equ	0xFF7
 20178                           tblptrl	equ	0xFF6
 20179                           tablat	equ	0xFF5
 20180                           prodh	equ	0xFF4
 20181                           prodl	equ	0xFF3
 20182                           intcon	equ	0xFF2
 20183                           postinc0	equ	0xFEE
 20184                           wreg	equ	0xFE8
 20185                           indf1	equ	0xFE7
 20186                           postinc1	equ	0xFE6
 20187                           postdec1	equ	0xFE5
 20188                           fsr1h	equ	0xFE2
 20189                           fsr1l	equ	0xFE1
 20190                           indf2	equ	0xFDF
 20191                           postinc2	equ	0xFDE
 20192                           postdec2	equ	0xFDD
 20193                           fsr2h	equ	0xFDA
 20194                           fsr2l	equ	0xFD9
 20195                           status	equ	0xFD8
 20196                           
 20197 ;; *************** function _ks0108Fill *****************
 20198 ;; Defined at:
 20199 ;;		line 28 in file "../lib/ks0108.c"
 20200 ;; Parameters:    Size  Location     Type
 20201 ;;  mode            1    wreg     unsigned char 
 20202 ;; Auto vars:     Size  Location     Type
 20203 ;;  mode            1   45[BANK0 ] unsigned char 
 20204 ;;  i               1   47[BANK0 ] unsigned char 
 20205 ;;  j               1   46[BANK0 ] unsigned char 
 20206 ;; Return value:  Size  Location     Type
 20207 ;;		None               void
 20208 ;; Registers used:
 20209 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20210 ;; Tracked objects:
 20211 ;;		On entry : 0/0
 20212 ;;		On exit  : F/0
 20213 ;;		Unchanged: 0/0
 20214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20216 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20218 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20219 ;;Total ram usage:        3 bytes
 20220 ;; Hardware stack levels used:    1
 20221 ;; Hardware stack levels required when called:   11
 20222 ;; This function calls:
 20223 ;;		_ks0108GotoXY
 20224 ;;		_ks0108WriteData
 20225 ;; This function is called by:
 20226 ;;		_ks0108Init
 20227 ;; This function uses a non-reentrant model
 20228 ;;
 20229                           
 20230                           	psect	text37
 20231  003990                     __ptext37:
 20232                           	opt stack 0
 20233  003990                     _ks0108Fill:
 20234                           	opt stack 18
 20235                           
 20236                           ; BSR set to: 0
 20237                           ;incstack = 0
 20238                           ;ks0108Fill@mode stored from wreg
 20239  003990  0100               	movlb	0	; () banked
 20240  003992  6F8D               	movwf	ks0108Fill@mode& (0+255),b
 20241                           
 20242                           ; BSR set to: 0
 20243                           ;ks0108.c: 29: uint8_t i, j;
 20244                           ;ks0108.c: 31: for(i = 0; i < 8; i ++){
 20245  003994  6B8F               	clrf	ks0108Fill@i& (0+255),b
 20246  003996                     l9101:
 20247                           
 20248                           ; BSR set to: 0
 20249                           ;ks0108.c: 32: ks0108GotoXY(0, i * 8);
 20250  003996  518F               	movf	ks0108Fill@i& (0+255),w,b
 20251  003998  0D08               	mullw	8
 20252  00399A  CFF3 F089          	movff	prodl,ks0108GotoXY@y
 20253  00399E  0E00               	movlw	0
 20254  0039A0  EC7A  F01A         	call	_ks0108GotoXY
 20255                           
 20256                           ;ks0108.c: 33: for(j = 0; j < 128; j ++)
 20257  0039A4  0100               	movlb	0	; () banked
 20258  0039A6  6B8E               	clrf	ks0108Fill@j& (0+255),b
 20259  0039A8                     l9109:
 20260                           
 20261                           ; BSR set to: 0
 20262                           ;ks0108.c: 34: ks0108WriteData(mode);
 20263  0039A8  518D               	movf	ks0108Fill@mode& (0+255),w,b
 20264  0039AA  EC13  F01C         	call	_ks0108WriteData
 20265                           
 20266                           ; BSR set to: 0
 20267  0039AE  2B8E               	incf	ks0108Fill@j& (0+255),f,b
 20268                           
 20269                           ; BSR set to: 0
 20270  0039B0  0E7F               	movlw	127
 20271  0039B2  658E               	cpfsgt	ks0108Fill@j& (0+255),b
 20272  0039B4  D7F9               	goto	l9109
 20273                           
 20274                           ; BSR set to: 0
 20275  0039B6  2B8F               	incf	ks0108Fill@i& (0+255),f,b
 20276                           
 20277                           ; BSR set to: 0
 20278  0039B8  0E07               	movlw	7
 20279  0039BA  658F               	cpfsgt	ks0108Fill@i& (0+255),b
 20280  0039BC  D7EC               	goto	l9101
 20281  0039BE  0C07               	retlw	7
 20282  0039C0                     __end_of_ks0108Fill:
 20283                           	opt stack 0
 20284                           tblptru	equ	0xFF8
 20285                           tblptrh	equ	0xFF7
 20286                           tblptrl	equ	0xFF6
 20287                           tablat	equ	0xFF5
 20288                           prodh	equ	0xFF4
 20289                           prodl	equ	0xFF3
 20290                           intcon	equ	0xFF2
 20291                           postinc0	equ	0xFEE
 20292                           wreg	equ	0xFE8
 20293                           indf1	equ	0xFE7
 20294                           postinc1	equ	0xFE6
 20295                           postdec1	equ	0xFE5
 20296                           fsr1h	equ	0xFE2
 20297                           fsr1l	equ	0xFE1
 20298                           indf2	equ	0xFDF
 20299                           postinc2	equ	0xFDE
 20300                           postdec2	equ	0xFDD
 20301                           fsr2h	equ	0xFDA
 20302                           fsr2l	equ	0xFD9
 20303                           status	equ	0xFD8
 20304                           
 20305 ;; *************** function _DelayMs *****************
 20306 ;; Defined at:
 20307 ;;		line 41 in file "../lib/delay.c"
 20308 ;; Parameters:    Size  Location     Type
 20309 ;;  cnt             1    wreg     unsigned char 
 20310 ;; Auto vars:     Size  Location     Type
 20311 ;;  cnt             1   39[BANK0 ] unsigned char 
 20312 ;;  i               1   40[BANK0 ] unsigned char 
 20313 ;; Return value:  Size  Location     Type
 20314 ;;		None               void
 20315 ;; Registers used:
 20316 ;;		wreg, status,2
 20317 ;; Tracked objects:
 20318 ;;		On entry : F/0
 20319 ;;		On exit  : F/0
 20320 ;;		Unchanged: 0/0
 20321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20323 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20325 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20326 ;;Total ram usage:        2 bytes
 20327 ;; Hardware stack levels used:    1
 20328 ;; Hardware stack levels required when called:    8
 20329 ;; This function calls:
 20330 ;;		Nothing
 20331 ;; This function is called by:
 20332 ;;		_ks0108Init
 20333 ;; This function uses a non-reentrant model
 20334 ;;
 20335                           
 20336                           	psect	text38
 20337  003A1A                     __ptext38:
 20338                           	opt stack 0
 20339  003A1A                     _DelayMs:
 20340                           	opt stack 21
 20341                           
 20342                           ; BSR set to: 0
 20343                           ;incstack = 0
 20344                           ;DelayMs@cnt stored from wreg
 20345  003A1A  6F87               	movwf	DelayMs@cnt& (0+255),b
 20346  003A1C                     l1178:
 20347                           
 20348                           ; BSR set to: 0
 20349                           ;delay.c: 45: i = 4;
 20350                           
 20351                           ; BSR set to: 0
 20352  003A1C  0E04               	movlw	4
 20353  003A1E  6F88               	movwf	DelayMs@i& (0+255),b
 20354  003A20                     l1179:
 20355                           
 20356                           ; BSR set to: 0
 20357                           ;delay.c: 47: { delayus_variable=(unsigned char)(250/1); asm("movlb (_delayus_variable) 
      +                          >> 8"); asm("nop"); asm("nop"); asm("nop"); asm("nop"); asm("nop"); } asm("decfsz (_dela
      +                          yus_variable)&0ffh,f"); asm("goto $ - 12");;
 20358  003A20  0EFA               	movlw	250
 20359  003A22  6FCD               	movwf	_delayus_variable& (0+255),b
 20360  003A24  0100               	movlb	_delayus_variable shr (0+8)	;# 
 20361  003A26  F000               	nop		;# 
 20362  003A28  F000               	nop		;# 
 20363  003A2A  F000               	nop		;# 
 20364  003A2C  F000               	nop		;# 
 20365  003A2E  F000               	nop		;# 
 20366  003A30  2FCD               	decfsz	_delayus_variable& (0+255),f,b	;# 
 20367  003A32  EF13  F01D         	goto	($+-12)	;# 
 20368                           
 20369                           ;delay.c: 48: __nop();
 20370  003A36  F000               	nop	
 20371                           
 20372                           ;delay.c: 49: } while(--i);
 20373  003A38  0100               	movlb	0	; () banked
 20374  003A3A  2F88               	decfsz	DelayMs@i& (0+255),f,b
 20375  003A3C  D7F1               	goto	l1179
 20376                           
 20377                           ; BSR set to: 0
 20378                           ;delay.c: 50: } while(--cnt);
 20379  003A3E  2F87               	decfsz	DelayMs@cnt& (0+255),f,b
 20380  003A40  D7ED               	goto	l1178
 20381                           
 20382                           ; BSR set to: 0
 20383  003A42  0CFA               	retlw	250
 20384  003A44                     __end_of_DelayMs:
 20385                           	opt stack 0
 20386                           tblptru	equ	0xFF8
 20387                           tblptrh	equ	0xFF7
 20388                           tblptrl	equ	0xFF6
 20389                           tablat	equ	0xFF5
 20390                           prodh	equ	0xFF4
 20391                           prodl	equ	0xFF3
 20392                           intcon	equ	0xFF2
 20393                           postinc0	equ	0xFEE
 20394                           wreg	equ	0xFE8
 20395                           indf1	equ	0xFE7
 20396                           postinc1	equ	0xFE6
 20397                           postdec1	equ	0xFE5
 20398                           fsr1h	equ	0xFE2
 20399                           fsr1l	equ	0xFE1
 20400                           indf2	equ	0xFDF
 20401                           postinc2	equ	0xFDE
 20402                           postdec2	equ	0xFDD
 20403                           fsr2h	equ	0xFDA
 20404                           fsr2l	equ	0xFD9
 20405                           status	equ	0xFD8
 20406                           
 20407 ;; *************** function _ProcessMessages *****************
 20408 ;; Defined at:
 20409 ;;		line 110 in file "../lib/messages.c"
 20410 ;; Parameters:    Size  Location     Type
 20411 ;;		None
 20412 ;; Auto vars:     Size  Location     Type
 20413 ;;  i               1   39[BANK0 ] unsigned char 
 20414 ;; Return value:  Size  Location     Type
 20415 ;;		None               void
 20416 ;; Registers used:
 20417 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20418 ;; Tracked objects:
 20419 ;;		On entry : 0/0
 20420 ;;		On exit  : F/0
 20421 ;;		Unchanged: 0/0
 20422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20424 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20426 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20427 ;;Total ram usage:        1 bytes
 20428 ;; Hardware stack levels used:    1
 20429 ;; Hardware stack levels required when called:    8
 20430 ;; This function calls:
 20431 ;;		Nothing
 20432 ;; This function is called by:
 20433 ;;		_main
 20434 ;; This function uses a non-reentrant model
 20435 ;;
 20436                           
 20437                           	psect	text39
 20438  00319C                     __ptext39:
 20439                           	opt stack 0
 20440  00319C                     _ProcessMessages:
 20441                           	opt stack 22
 20442                           
 20443                           ;messages.c: 111: char i;
 20444                           ;messages.c: 112: for(i = 0; i < (10); i++){
 20445                           
 20446                           ; BSR set to: 0
 20447                           ;incstack = 0
 20448  00319C  0100               	movlb	0	; () banked
 20449  00319E  6B87               	clrf	ProcessMessages@i& (0+255),b
 20450  0031A0                     l7197:
 20451                           
 20452                           ; BSR set to: 0
 20453                           ;messages.c: 113: if(Messages[i] == MSG_PHASE_READY) Messages[i] = MSG_PHASE_NONE;
 20454  0031A0  5187               	movf	ProcessMessages@i& (0+255),w,b
 20455  0031A2  0F01               	addlw	low _Messages	;volatile
 20456  0031A4  6ED9               	movwf	fsr2l,c
 20457  0031A6  6ADA               	clrf	fsr2h,c
 20458  0031A8  0E02               	movlw	2
 20459  0031AA  62DF               	cpfseq	indf2,c
 20460  0031AC  D005               	goto	l974
 20461                           
 20462                           ; BSR set to: 0
 20463  0031AE  5187               	movf	ProcessMessages@i& (0+255),w,b
 20464  0031B0  0F01               	addlw	low _Messages	;volatile
 20465  0031B2  6ED9               	movwf	fsr2l,c
 20466  0031B4  6ADA               	clrf	fsr2h,c
 20467  0031B6  6ADF               	clrf	indf2,c
 20468  0031B8                     l974:
 20469                           
 20470                           ; BSR set to: 0
 20471                           ;messages.c: 114: if(Messages[i] == MSG_PHASE_PREPARE) Messages[i] = MSG_PHASE_READY;
 20472  0031B8  5187               	movf	ProcessMessages@i& (0+255),w,b
 20473  0031BA  0F01               	addlw	low _Messages	;volatile
 20474  0031BC  6ED9               	movwf	fsr2l,c
 20475  0031BE  6ADA               	clrf	fsr2h,c
 20476  0031C0  0E01               	movlw	1
 20477  0031C2  62DF               	cpfseq	indf2,c
 20478  0031C4  D003               	goto	l7203
 20479                           
 20480                           ; BSR set to: 0
 20481  0031C6  5187               	movf	ProcessMessages@i& (0+255),w,b
 20482  0031C8  0F01               	addlw	low _Messages	;volatile
 20483  0031CA  D820               	call	PL154	;call to abstracted procedure
 20484  0031CC                     l7203:
 20485                           
 20486                           ; BSR set to: 0
 20487  0031CC  2B87               	incf	ProcessMessages@i& (0+255),f,b
 20488                           
 20489                           ; BSR set to: 0
 20490  0031CE  0E09               	movlw	9
 20491  0031D0  6587               	cpfsgt	ProcessMessages@i& (0+255),b
 20492  0031D2  D7E6               	goto	l7197
 20493                           
 20494                           ; BSR set to: 0
 20495                           ;messages.c: 115: }
 20496                           ;messages.c: 118: for(i = 0; i < 1; i++) {
 20497  0031D4  6B87               	clrf	ProcessMessages@i& (0+255),b
 20498  0031D6                     l7211:
 20499                           
 20500                           ; BSR set to: 0
 20501                           ;messages.c: 119: if(BroadcastMessages[i] == MSG_PHASE_READY) BroadcastMessages[i] = MSG
      +                          _PHASE_NONE;
 20502  0031D6  5187               	movf	ProcessMessages@i& (0+255),w,b
 20503  0031D8  0FCB               	addlw	low _BroadcastMessages	;volatile
 20504  0031DA  6ED9               	movwf	fsr2l,c
 20505  0031DC  6ADA               	clrf	fsr2h,c
 20506  0031DE  0E02               	movlw	2
 20507  0031E0  62DF               	cpfseq	indf2,c
 20508  0031E2  D005               	goto	l978
 20509                           
 20510                           ; BSR set to: 0
 20511  0031E4  5187               	movf	ProcessMessages@i& (0+255),w,b
 20512  0031E6  0FCB               	addlw	low _BroadcastMessages	;volatile
 20513  0031E8  6ED9               	movwf	fsr2l,c
 20514  0031EA  6ADA               	clrf	fsr2h,c
 20515  0031EC  6ADF               	clrf	indf2,c
 20516  0031EE                     l978:
 20517                           
 20518                           ; BSR set to: 0
 20519                           ;messages.c: 120: if(BroadcastMessages[i] == MSG_PHASE_PREPARE) BroadcastMessages[i] = M
      +                          SG_PHASE_READY;
 20520  0031EE  5187               	movf	ProcessMessages@i& (0+255),w,b
 20521  0031F0  0FCB               	addlw	low _BroadcastMessages	;volatile
 20522  0031F2  6ED9               	movwf	fsr2l,c
 20523  0031F4  6ADA               	clrf	fsr2h,c
 20524  0031F6  0E01               	movlw	1
 20525  0031F8  62DF               	cpfseq	indf2,c
 20526  0031FA  D003               	goto	l7217
 20527                           
 20528                           ; BSR set to: 0
 20529  0031FC  5187               	movf	ProcessMessages@i& (0+255),w,b
 20530  0031FE  0FCB               	addlw	low _BroadcastMessages	;volatile
 20531  003200  D805               	call	PL154	;call to abstracted procedure
 20532  003202                     l7217:
 20533                           
 20534                           ; BSR set to: 0
 20535  003202  2B87               	incf	ProcessMessages@i& (0+255),f,b
 20536                           
 20537                           ; BSR set to: 0
 20538  003204  5187               	movf	ProcessMessages@i& (0+255),w,b
 20539  003206  A4D8               	btfss	status,2,c
 20540  003208  0012               	return	
 20541  00320A  D7E5               	goto	l7211
 20542  00320C                     __end_of_ProcessMessages:
 20543                           	opt stack 0
 20544  00320C                     PL154:
 20545                           	opt stack 22
 20546  00320C  6ED9               	movwf	fsr2l,c
 20547  00320E  6ADA               	clrf	fsr2h,c
 20548  003210  0E02               	movlw	2
 20549  003212  6EDF               	movwf	indf2,c
 20550  003214  0C02               	retlw	2
 20551  003216                     __end_ofPL154:
 20552                           	opt stack 0
 20553                           tblptru	equ	0xFF8
 20554                           tblptrh	equ	0xFF7
 20555                           tblptrl	equ	0xFF6
 20556                           tablat	equ	0xFF5
 20557                           prodh	equ	0xFF4
 20558                           prodl	equ	0xFF3
 20559                           intcon	equ	0xFF2
 20560                           postinc0	equ	0xFEE
 20561                           wreg	equ	0xFE8
 20562                           indf1	equ	0xFE7
 20563                           postinc1	equ	0xFE6
 20564                           postdec1	equ	0xFE5
 20565                           fsr1h	equ	0xFE2
 20566                           fsr1l	equ	0xFE1
 20567                           indf2	equ	0xFDF
 20568                           postinc2	equ	0xFDE
 20569                           postdec2	equ	0xFDD
 20570                           fsr2h	equ	0xFDA
 20571                           fsr2l	equ	0xFD9
 20572                           status	equ	0xFD8
 20573                           
 20574 ;; *************** function _LabelCreate *****************
 20575 ;; Defined at:
 20576 ;;		line 407 in file "../lib/ks0108.c"
 20577 ;; Parameters:    Size  Location     Type
 20578 ;;  lb              2    6[BANK1 ] PTR struct .
 20579 ;;		 -> lb_paket(36), lb_temp(36), 
 20580 ;;  x               1    8[BANK1 ] unsigned char 
 20581 ;;  y               1    9[BANK1 ] unsigned char 
 20582 ;;  font            2   10[BANK1 ] PTR const unsigned char 
 20583 ;;		 -> font13(2892), 
 20584 ;;  ln              1   12[BANK1 ] unsigned char 
 20585 ;; Auto vars:     Size  Location     Type
 20586 ;;  i               1    0        unsigned char 
 20587 ;; Return value:  Size  Location     Type
 20588 ;;		None               void
 20589 ;; Registers used:
 20590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20591 ;; Tracked objects:
 20592 ;;		On entry : F/1
 20593 ;;		On exit  : F/1
 20594 ;;		Unchanged: 0/0
 20595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20596 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20599 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20600 ;;Total ram usage:        7 bytes
 20601 ;; Hardware stack levels used:    1
 20602 ;; Hardware stack levels required when called:   15
 20603 ;; This function calls:
 20604 ;;		_LabelSetTxt
 20605 ;; This function is called by:
 20606 ;;		_main
 20607 ;; This function uses a non-reentrant model
 20608 ;;
 20609                           
 20610                           	psect	text40
 20611  0032FE                     __ptext40:
 20612                           	opt stack 0
 20613  0032FE                     _LabelCreate:
 20614                           	opt stack 15
 20615                           
 20616                           ; BSR set to: 1
 20617                           ;ks0108.c: 409: BYTE i;
 20618                           ;ks0108.c: 410: lb -> size = ln;
 20619                           
 20620                           ; BSR set to: 0
 20621                           ;incstack = 0
 20622  0032FE  EE20 F002          	lfsr	2,2
 20623  003302  51BB               	movf	LabelCreate@lb& (0+255),w,b
 20624  003304  26D9               	addwf	fsr2l,f,c
 20625  003306  51BC               	movf	(LabelCreate@lb+1)& (0+255),w,b
 20626  003308  22DA               	addwfc	fsr2h,f,c
 20627  00330A  C1C1  FFDF         	movff	LabelCreate@ln,indf2
 20628                           
 20629                           ;ks0108.c: 411: lb -> p_font = font;
 20630  00330E  EE20 F003          	lfsr	2,3
 20631  003312  51BB               	movf	LabelCreate@lb& (0+255),w,b
 20632  003314  26D9               	addwf	fsr2l,f,c
 20633  003316  51BC               	movf	(LabelCreate@lb+1)& (0+255),w,b
 20634  003318  22DA               	addwfc	fsr2h,f,c
 20635  00331A  C1BF  FFDE         	movff	LabelCreate@font,postinc2
 20636  00331E  C1C0  FFDD         	movff	LabelCreate@font+1,postdec2
 20637                           
 20638                           ; BSR set to: 1
 20639                           ;ks0108.c: 412: lb -> x = x;
 20640  003322  C1BB  FFD9         	movff	LabelCreate@lb,fsr2l
 20641  003326  C1BC  FFDA         	movff	LabelCreate@lb+1,fsr2h
 20642  00332A  C1BD  FFDF         	movff	LabelCreate@x,indf2
 20643                           
 20644                           ; BSR set to: 1
 20645                           ;ks0108.c: 413: lb -> y = y;
 20646  00332E  EE20 F001          	lfsr	2,1
 20647  003332  51BB               	movf	LabelCreate@lb& (0+255),w,b
 20648  003334  26D9               	addwf	fsr2l,f,c
 20649  003336  51BC               	movf	(LabelCreate@lb+1)& (0+255),w,b
 20650  003338  22DA               	addwfc	fsr2h,f,c
 20651  00333A  C1BE  FFDF         	movff	LabelCreate@y,indf2
 20652                           
 20653                           ; BSR set to: 1
 20654                           ;ks0108.c: 416: lb -> str[0] = 0;
 20655  00333E  EE20 F005          	lfsr	2,5
 20656  003342  51BB               	movf	LabelCreate@lb& (0+255),w,b
 20657  003344  26D9               	addwf	fsr2l,f,c
 20658  003346  51BC               	movf	(LabelCreate@lb+1)& (0+255),w,b
 20659  003348  22DA               	addwfc	fsr2h,f,c
 20660  00334A  6ADF               	clrf	indf2,c
 20661                           
 20662                           ; BSR set to: 1
 20663                           ;ks0108.c: 417: LabelSetTxt(lb, lb -> str);
 20664  00334C  C1BC  F0AB         	movff	LabelCreate@lb+1,LabelSetTxt@lb+1
 20665  003350  C1BB  F0AA         	movff	LabelCreate@lb,LabelSetTxt@lb
 20666  003354  0E05               	movlw	5
 20667  003356  0101               	movlb	1	; () banked
 20668  003358  25BB               	addwf	LabelCreate@lb& (0+255),w,b
 20669  00335A  0100               	movlb	0	; () banked
 20670  00335C  6FAC               	movwf	LabelSetTxt@str& (0+255),b
 20671  00335E  0E00               	movlw	0
 20672  003360  0101               	movlb	1	; () banked
 20673  003362  21BC               	addwfc	(LabelCreate@lb+1)& (0+255),w,b
 20674  003364  0100               	movlb	0	; () banked
 20675  003366  6FAD               	movwf	(LabelSetTxt@str+1)& (0+255),b
 20676  003368  EF15  F012         	goto	_LabelSetTxt	;wreg free
 20677  00336C                     __end_of_LabelCreate:
 20678                           	opt stack 0
 20679                           tblptru	equ	0xFF8
 20680                           tblptrh	equ	0xFF7
 20681                           tblptrl	equ	0xFF6
 20682                           tablat	equ	0xFF5
 20683                           prodh	equ	0xFF4
 20684                           prodl	equ	0xFF3
 20685                           intcon	equ	0xFF2
 20686                           postinc0	equ	0xFEE
 20687                           wreg	equ	0xFE8
 20688                           indf1	equ	0xFE7
 20689                           postinc1	equ	0xFE6
 20690                           postdec1	equ	0xFE5
 20691                           fsr1h	equ	0xFE2
 20692                           fsr1l	equ	0xFE1
 20693                           indf2	equ	0xFDF
 20694                           postinc2	equ	0xFDE
 20695                           postdec2	equ	0xFDD
 20696                           fsr2h	equ	0xFDA
 20697                           fsr2l	equ	0xFD9
 20698                           status	equ	0xFD8
 20699                           
 20700 ;; *************** function _LabelSetTxt *****************
 20701 ;; Defined at:
 20702 ;;		line 422 in file "../lib/ks0108.c"
 20703 ;; Parameters:    Size  Location     Type
 20704 ;;  lb              2   74[BANK0 ] PTR struct .
 20705 ;;		 -> lb_paket(36), lb_temp(36), 
 20706 ;;  str             2   76[BANK0 ] PTR unsigned char 
 20707 ;;		 -> str(40), lb_paket(36), lb_temp(36), 
 20708 ;; Auto vars:     Size  Location     Type
 20709 ;;  i               1    5[BANK1 ] unsigned char 
 20710 ;;  end             1    4[BANK1 ] unsigned char 
 20711 ;;  w               1    3[BANK1 ] unsigned char 
 20712 ;; Return value:  Size  Location     Type
 20713 ;;		None               void
 20714 ;; Registers used:
 20715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20716 ;; Tracked objects:
 20717 ;;		On entry : F/0
 20718 ;;		On exit  : F/1
 20719 ;;		Unchanged: 0/0
 20720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20721 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20722 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20723 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20724 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20725 ;;Total ram usage:       10 bytes
 20726 ;; Hardware stack levels used:    1
 20727 ;; Hardware stack levels required when called:   14
 20728 ;; This function calls:
 20729 ;;		_ks0108GotoXY
 20730 ;;		_ks0108PutChar
 20731 ;; This function is called by:
 20732 ;;		_main
 20733 ;;		_tsk_display
 20734 ;;		_LabelCreate
 20735 ;; This function uses a non-reentrant model
 20736 ;;
 20737                           
 20738                           	psect	text41
 20739  00242A                     __ptext41:
 20740                           	opt stack 0
 20741  00242A                     _LabelSetTxt:
 20742                           	opt stack 15
 20743                           
 20744                           ; BSR set to: 0
 20745                           ;ks0108.c: 423: BYTE i, w, end = 0;
 20746                           
 20747                           ; BSR set to: 1
 20748                           ;incstack = 0
 20749  00242A  0101               	movlb	1	; () banked
 20750  00242C  6BB9               	clrf	LabelSetTxt@end& (0+255),b
 20751                           
 20752                           ; BSR set to: 1
 20753                           ;ks0108.c: 426: ks0108GotoXY(lb -> x, lb -> y);
 20754  00242E  0100               	movlb	0	; () banked
 20755  002430  EE20 F001          	lfsr	2,1
 20756  002434  51AA               	movf	LabelSetTxt@lb& (0+255),w,b
 20757  002436  26D9               	addwf	fsr2l,f,c
 20758  002438  51AB               	movf	(LabelSetTxt@lb+1)& (0+255),w,b
 20759  00243A  22DA               	addwfc	fsr2h,f,c
 20760  00243C  50DF               	movf	indf2,w,c
 20761  00243E  6F89               	movwf	ks0108GotoXY@y& (0+255),b
 20762  002440  C0AA  FFD9         	movff	LabelSetTxt@lb,fsr2l
 20763  002444  C0AB  FFDA         	movff	LabelSetTxt@lb+1,fsr2h
 20764  002448  50DF               	movf	indf2,w,c
 20765  00244A  EC7A  F01A         	call	_ks0108GotoXY
 20766                           
 20767                           ;ks0108.c: 427: for(i = 0; i < lb -> size; i ++){
 20768  00244E  0101               	movlb	1	; () banked
 20769  002450  6BBA               	clrf	LabelSetTxt@i& (0+255),b
 20770  002452  D058               	goto	l9093
 20771  002454                     l9073:
 20772                           
 20773                           ; BSR set to: 1
 20774                           ;ks0108.c: 429: if(str[i] == 0){
 20775  002454  D864               	call	PL40	;call to abstracted procedure
 20776  002456  50DF               	movf	indf2,w,c
 20777  002458  E103               	bnz	l9077
 20778                           
 20779                           ; BSR set to: 0
 20780                           ;ks0108.c: 430: end = 1;
 20781  00245A  0E01               	movlw	1
 20782  00245C  0101               	movlb	1	; () banked
 20783  00245E  6FB9               	movwf	LabelSetTxt@end& (0+255),b
 20784  002460                     l9077:
 20785                           
 20786                           ;ks0108.c: 431: }
 20787                           ;ks0108.c: 432: if(end == 1){
 20788  002460  0101               	movlb	1	; () banked
 20789  002462  05B9               	decf	LabelSetTxt@end& (0+255),w,b
 20790  002464  E103               	bnz	l1155
 20791                           
 20792                           ; BSR set to: 1
 20793                           ;ks0108.c: 433: str[i] = ' ';
 20794  002466  D85B               	call	PL40	;call to abstracted procedure
 20795  002468  0E20               	movlw	32
 20796  00246A  6EDF               	movwf	indf2,c
 20797  00246C                     l1155:
 20798                           
 20799                           ;ks0108.c: 434: }
 20800                           ;ks0108.c: 436: if(lb -> str[i] != str[i]){
 20801  00246C  0101               	movlb	1	; () banked
 20802  00246E  D857               	call	PL40	;call to abstracted procedure
 20803  002470  50DF               	movf	indf2,w,c
 20804  002472  0101               	movlb	1	; () banked
 20805  002474  6FB5               	movwf	??_LabelSetTxt& (0+255),b
 20806  002476  51BA               	movf	LabelSetTxt@i& (0+255),w,b
 20807  002478  0100               	movlb	0	; () banked
 20808  00247A  25AA               	addwf	LabelSetTxt@lb& (0+255),w,b
 20809  00247C  0101               	movlb	1	; () banked
 20810  00247E  6FB6               	movwf	(??_LabelSetTxt+1)& (0+255),b
 20811  002480  0E00               	movlw	0
 20812  002482  0100               	movlb	0	; () banked
 20813  002484  21AB               	addwfc	(LabelSetTxt@lb+1)& (0+255),w,b
 20814  002486  0101               	movlb	1	; () banked
 20815  002488  6FB7               	movwf	(??_LabelSetTxt+2)& (0+255),b
 20816  00248A  0E05               	movlw	5
 20817  00248C  25B6               	addwf	(??_LabelSetTxt+1)& (0+255),w,b
 20818  00248E  6ED9               	movwf	fsr2l,c
 20819  002490  0E00               	movlw	0
 20820  002492  21B7               	addwfc	(??_LabelSetTxt+2)& (0+255),w,b
 20821  002494  6EDA               	movwf	fsr2h,c
 20822  002496  50DF               	movf	indf2,w,c
 20823  002498  19B5               	xorwf	??_LabelSetTxt& (0+255),w,b
 20824  00249A  E02A               	bz	l9089
 20825                           
 20826                           ; BSR set to: 1
 20827                           ;ks0108.c: 438: w = ks0108PutChar(lb -> str[i], lb -> p_font, 0);
 20828  00249C  D854               	call	PL50	;call to abstracted procedure
 20829  00249E  6B97               	clrf	ks0108PutChar@mode& (0+255),b
 20830  0024A0  0101               	movlb	1	; () banked
 20831  0024A2  51BA               	movf	LabelSetTxt@i& (0+255),w,b
 20832  0024A4  D844               	call	PL48	;call to abstracted procedure
 20833  0024A6  6ED9               	movwf	fsr2l,c
 20834  0024A8  0E00               	movlw	0
 20835  0024AA  21B6               	addwfc	(??_LabelSetTxt+1)& (0+255),w,b
 20836  0024AC  6EDA               	movwf	fsr2h,c
 20837  0024AE  50DF               	movf	indf2,w,c
 20838  0024B0  EC47  F013         	call	_ks0108PutChar
 20839  0024B4  0101               	movlb	1	; () banked
 20840  0024B6  6FB8               	movwf	LabelSetTxt@w& (0+255),b
 20841                           
 20842                           ; BSR set to: 1
 20843                           ;ks0108.c: 440: pos.x -= w;
 20844  0024B8  51B8               	movf	LabelSetTxt@w& (0+255),w,b
 20845  0024BA  0100               	movlb	0	; () banked
 20846  0024BC  5FD2               	subwf	_pos& (0+255),f,b
 20847                           
 20848                           ; BSR set to: 0
 20849                           ;ks0108.c: 442: lb -> str[i] = str[i];
 20850  0024BE  0101               	movlb	1	; () banked
 20851  0024C0  D82E               	call	PL40	;call to abstracted procedure
 20852  0024C2  0101               	movlb	1	; () banked
 20853  0024C4  51BA               	movf	LabelSetTxt@i& (0+255),w,b
 20854  0024C6  D833               	call	PL48	;call to abstracted procedure
 20855  0024C8  6EE1               	movwf	fsr1l,c
 20856  0024CA  0E00               	movlw	0
 20857  0024CC  21B6               	addwfc	(??_LabelSetTxt+1)& (0+255),w,b
 20858  0024CE  6EE2               	movwf	fsr1h,c
 20859  0024D0  CFDF FFE7          	movff	indf2,indf1
 20860                           
 20861                           ; BSR set to: 1
 20862                           ;ks0108.c: 443: ks0108PutChar(lb -> str[i], lb -> p_font, 1);
 20863  0024D4  D838               	call	PL50	;call to abstracted procedure
 20864  0024D6  0E01               	movlw	1
 20865  0024D8  6F97               	movwf	ks0108PutChar@mode& (0+255),b
 20866  0024DA  0101               	movlb	1	; () banked
 20867  0024DC  51BA               	movf	LabelSetTxt@i& (0+255),w,b
 20868  0024DE  D827               	call	PL48	;call to abstracted procedure
 20869  0024E0  6ED9               	movwf	fsr2l,c
 20870  0024E2  0E00               	movlw	0
 20871  0024E4  21B6               	addwfc	(??_LabelSetTxt+1)& (0+255),w,b
 20872  0024E6  6EDA               	movwf	fsr2h,c
 20873  0024E8  50DF               	movf	indf2,w,c
 20874  0024EA  EC47  F013         	call	_ks0108PutChar
 20875                           
 20876                           ;ks0108.c: 444: } else {
 20877  0024EE  D008               	goto	l9091
 20878  0024F0                     l9089:
 20879                           
 20880                           ; BSR set to: 1
 20881                           ;ks0108.c: 446: ks0108PutChar(str[i], lb -> p_font, 2);
 20882  0024F0  D82A               	call	PL50	;call to abstracted procedure
 20883  0024F2  0E02               	movlw	2
 20884  0024F4  6F97               	movwf	ks0108PutChar@mode& (0+255),b
 20885  0024F6  0101               	movlb	1	; () banked
 20886  0024F8  D812               	call	PL40	;call to abstracted procedure
 20887  0024FA  50DF               	movf	indf2,w,c
 20888  0024FC  EC47  F013         	call	_ks0108PutChar
 20889  002500                     l9091:
 20890                           
 20891                           ; BSR set to: 0
 20892  002500  0101               	movlb	1	; () banked
 20893  002502  2BBA               	incf	LabelSetTxt@i& (0+255),f,b
 20894  002504                     l9093:
 20895                           
 20896                           ; BSR set to: 1
 20897  002504  0100               	movlb	0	; () banked
 20898  002506  EE20 F002          	lfsr	2,2
 20899  00250A  51AA               	movf	LabelSetTxt@lb& (0+255),w,b
 20900  00250C  26D9               	addwf	fsr2l,f,c
 20901  00250E  51AB               	movf	(LabelSetTxt@lb+1)& (0+255),w,b
 20902  002510  22DA               	addwfc	fsr2h,f,c
 20903  002512  50DF               	movf	indf2,w,c
 20904  002514  0101               	movlb	1	; () banked
 20905  002516  5DBA               	subwf	LabelSetTxt@i& (0+255),w,b
 20906  002518  B0D8               	btfsc	status,0,c
 20907  00251A  0012               	return	
 20908  00251C  D79B               	goto	l9073
 20909  00251E                     __end_of_LabelSetTxt:
 20910                           	opt stack 0
 20911  00251E                     PL40:
 20912                           	opt stack 15
 20913  00251E  51BA               	movf	LabelSetTxt@i& (0+255),w,b
 20914  002520  0100               	movlb	0	; () banked
 20915  002522  25AC               	addwf	LabelSetTxt@str& (0+255),w,b
 20916  002524  6ED9               	movwf	fsr2l,c
 20917  002526  0E00               	movlw	0
 20918  002528  21AD               	addwfc	(LabelSetTxt@str+1)& (0+255),w,b
 20919  00252A  6EDA               	movwf	fsr2h,c
 20920  00252C  0012               	return	
 20921  00252E                     __end_ofPL40:
 20922                           	opt stack 0
 20923  00252E                     PL48:
 20924                           	opt stack 15
 20925  00252E  0100               	movlb	0	; () banked
 20926  002530  25AA               	addwf	LabelSetTxt@lb& (0+255),w,b
 20927  002532  0101               	movlb	1	; () banked
 20928  002534  6FB5               	movwf	??_LabelSetTxt& (0+255),b
 20929  002536  0E00               	movlw	0
 20930  002538  0100               	movlb	0	; () banked
 20931  00253A  21AB               	addwfc	(LabelSetTxt@lb+1)& (0+255),w,b
 20932  00253C  0101               	movlb	1	; () banked
 20933  00253E  6FB6               	movwf	(??_LabelSetTxt+1)& (0+255),b
 20934  002540  0E05               	movlw	5
 20935  002542  25B5               	addwf	??_LabelSetTxt& (0+255),w,b
 20936  002544  0012               	return	
 20937  002546                     __end_ofPL48:
 20938                           	opt stack 0
 20939  002546                     PL50:
 20940                           	opt stack 15
 20941  002546  0100               	movlb	0	; () banked
 20942  002548  EE20 F003          	lfsr	2,3
 20943  00254C  51AA               	movf	LabelSetTxt@lb& (0+255),w,b
 20944  00254E  26D9               	addwf	fsr2l,f,c
 20945  002550  51AB               	movf	(LabelSetTxt@lb+1)& (0+255),w,b
 20946  002552  22DA               	addwfc	fsr2h,f,c
 20947  002554  CFDE F095          	movff	postinc2,ks0108PutChar@p_font
 20948  002558  CFDD F096          	movff	postdec2,ks0108PutChar@p_font+1
 20949  00255C  0012               	return	
 20950  00255E                     __end_ofPL50:
 20951                           	opt stack 0
 20952                           tblptru	equ	0xFF8
 20953                           tblptrh	equ	0xFF7
 20954                           tblptrl	equ	0xFF6
 20955                           tablat	equ	0xFF5
 20956                           prodh	equ	0xFF4
 20957                           prodl	equ	0xFF3
 20958                           intcon	equ	0xFF2
 20959                           postinc0	equ	0xFEE
 20960                           wreg	equ	0xFE8
 20961                           indf1	equ	0xFE7
 20962                           postinc1	equ	0xFE6
 20963                           postdec1	equ	0xFE5
 20964                           fsr1h	equ	0xFE2
 20965                           fsr1l	equ	0xFE1
 20966                           indf2	equ	0xFDF
 20967                           postinc2	equ	0xFDE
 20968                           postdec2	equ	0xFDD
 20969                           fsr2h	equ	0xFDA
 20970                           fsr2l	equ	0xFD9
 20971                           status	equ	0xFD8
 20972                           
 20973 ;; *************** function _ks0108PutChar *****************
 20974 ;; Defined at:
 20975 ;;		line 282 in file "../lib/ks0108.c"
 20976 ;; Parameters:    Size  Location     Type
 20977 ;;  s               1    wreg     unsigned char 
 20978 ;;  p_font          2   53[BANK0 ] PTR const unsigned char 
 20979 ;;		 -> font23(5955), font13(2892), 
 20980 ;;  mode            1   55[BANK0 ] unsigned char 
 20981 ;; Auto vars:     Size  Location     Type
 20982 ;;  s               1   58[BANK0 ] unsigned char 
 20983 ;;  base            2   72[BANK0 ] unsigned short 
 20984 ;;  pChImage        2   61[BANK0 ] PTR const unsigned char 
 20985 ;;		 -> font23(5955), font13(2892), 
 20986 ;;  mask            1   71[BANK0 ] unsigned char 
 20987 ;;  x               1   70[BANK0 ] unsigned char 
 20988 ;;  y               1   69[BANK0 ] unsigned char 
 20989 ;;  chWidth         1   68[BANK0 ] unsigned char 
 20990 ;;  y_              1   67[BANK0 ] unsigned char 
 20991 ;;  x_              1   66[BANK0 ] unsigned char 
 20992 ;;  temp            1   65[BANK0 ] unsigned char 
 20993 ;;  yCnt            1   64[BANK0 ] unsigned char 
 20994 ;;  xCnt            1   63[BANK0 ] unsigned char 
 20995 ;;  _fontWidth      1   60[BANK0 ] unsigned char 
 20996 ;;  _fontHeight     1   59[BANK0 ] unsigned char 
 20997 ;; Return value:  Size  Location     Type
 20998 ;;                  1    wreg      unsigned char 
 20999 ;; Registers used:
 21000 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21001 ;; Tracked objects:
 21002 ;;		On entry : E/0
 21003 ;;		On exit  : F/0
 21004 ;;		Unchanged: 0/0
 21005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21006 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21007 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21008 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21009 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21010 ;;Total ram usage:       21 bytes
 21011 ;; Hardware stack levels used:    1
 21012 ;; Hardware stack levels required when called:   13
 21013 ;; This function calls:
 21014 ;;		___wmul
 21015 ;;		_ks0108ClearDot
 21016 ;;		_ks0108SetDot
 21017 ;; This function is called by:
 21018 ;;		_main
 21019 ;;		_LabelSetTxt
 21020 ;; This function uses a non-reentrant model
 21021 ;;
 21022                           
 21023                           	psect	text42
 21024  00268E                     __ptext42:
 21025                           	opt stack 0
 21026  00268E                     _ks0108PutChar:
 21027                           	opt stack 15
 21028                           
 21029                           ; BSR set to: 1
 21030                           ;incstack = 0
 21031                           ;ks0108PutChar@s stored from wreg
 21032  00268E  0100               	movlb	0	; () banked
 21033  002690  6F9A               	movwf	ks0108PutChar@s& (0+255),b
 21034                           
 21035                           ; BSR set to: 0
 21036                           ;ks0108.c: 287: BYTE temp = 0, mask, _fontHeight, _fontWidth;
 21037  002692  6BA1               	clrf	ks0108PutChar@temp& (0+255),b
 21038                           
 21039                           ; BSR set to: 0
 21040                           ;ks0108.c: 288: const char *pChImage;
 21041                           ;ks0108.c: 290: _fontHeight = p_font[0];
 21042  002694  C095  FFF6         	movff	ks0108PutChar@p_font,tblptrl
 21043  002698  C096  FFF7         	movff	ks0108PutChar@p_font+1,tblptrh
 21044  00269C                     	if	0	;tblptru may be non-zero
 21045  00269C                     	endif
 21046  00269C                     	if	0	;tblptru may be non-zero
 21047  00269C                     	endif
 21048  00269C  0008               	tblrd		*
 21049  00269E  CFF5 F09B          	movff	tablat,ks0108PutChar@_fontHeight
 21050                           
 21051                           ; BSR set to: 0
 21052                           ;ks0108.c: 291: _fontWidth = p_font[1];
 21053  0026A2  2995               	incf	ks0108PutChar@p_font& (0+255),w,b
 21054  0026A4  D869               	call	PL98	;call to abstracted procedure
 21055  0026A6  CFF5 F09C          	movff	tablat,ks0108PutChar@_fontWidth
 21056                           
 21057                           ;ks0108.c: 293: base = s - 32;
 21058  0026AA  0EE0               	movlw	224
 21059  0026AC  259A               	addwf	ks0108PutChar@s& (0+255),w,b
 21060  0026AE  6FA8               	movwf	ks0108PutChar@base& (0+255),b
 21061  0026B0  6BA9               	clrf	(ks0108PutChar@base+1)& (0+255),b
 21062  0026B2  0EFF               	movlw	255
 21063  0026B4  23A9               	addwfc	(ks0108PutChar@base+1)& (0+255),f,b
 21064                           
 21065                           ; BSR set to: 0
 21066                           ;ks0108.c: 294: base *= p_font[2];
 21067  0026B6  C0A8  F087         	movff	ks0108PutChar@base,___wmul@multiplier
 21068  0026BA  C0A9  F088         	movff	ks0108PutChar@base+1,___wmul@multiplier+1
 21069  0026BE  0E02               	movlw	2
 21070  0026C0  2595               	addwf	ks0108PutChar@p_font& (0+255),w,b
 21071  0026C2  D85A               	call	PL98	;call to abstracted procedure
 21072  0026C4  50F5               	movf	tablat,w,c
 21073  0026C6  6F89               	movwf	___wmul@multiplicand& (0+255),b
 21074  0026C8  6B8A               	clrf	(___wmul@multiplicand+1)& (0+255),b
 21075  0026CA  EC5C  F01D         	call	___wmul	;wreg free
 21076  0026CE  C087  F0A8         	movff	?___wmul,ks0108PutChar@base
 21077  0026D2  C088  F0A9         	movff	?___wmul+1,ks0108PutChar@base+1
 21078                           
 21079                           ; BSR set to: 0
 21080                           ;ks0108.c: 295: base += 3;
 21081  0026D6  0E03               	movlw	3
 21082  0026D8  27A8               	addwf	ks0108PutChar@base& (0+255),f,b
 21083  0026DA  0E00               	movlw	0
 21084  0026DC  23A9               	addwfc	(ks0108PutChar@base+1)& (0+255),f,b
 21085                           
 21086                           ; BSR set to: 0
 21087                           ;ks0108.c: 298: chWidth = p_font[base];
 21088  0026DE  D856               	call	PL106	;call to abstracted procedure
 21089  0026E0  C098  FFF6         	movff	??_ks0108PutChar,tblptrl
 21090  0026E4  C099  FFF7         	movff	??_ks0108PutChar+1,tblptrh
 21091  0026E8                     	if	0	;tblptru may be non-zero
 21092  0026E8                     	endif
 21093  0026E8                     	if	0	;tblptru may be non-zero
 21094  0026E8                     	endif
 21095  0026E8  0008               	tblrd		*
 21096  0026EA  CFF5 F0A4          	movff	tablat,ks0108PutChar@chWidth
 21097                           
 21098                           ; BSR set to: 0
 21099                           ;ks0108.c: 299: pChImage = & p_font[base + 1];
 21100  0026EE  D84E               	call	PL106	;call to abstracted procedure
 21101  0026F0  2998               	incf	??_ks0108PutChar& (0+255),w,b
 21102  0026F2  6F9D               	movwf	ks0108PutChar@pChImage& (0+255),b
 21103  0026F4  0E00               	movlw	0
 21104  0026F6  2199               	addwfc	(??_ks0108PutChar+1)& (0+255),w,b
 21105  0026F8  6F9E               	movwf	(ks0108PutChar@pChImage+1)& (0+255),b
 21106                           
 21107                           ; BSR set to: 0
 21108                           ;ks0108.c: 301: y_ = pos.y;
 21109  0026FA  C0D3  F0A3         	movff	_pos+1,ks0108PutChar@y_
 21110                           
 21111                           ; BSR set to: 0
 21112                           ;ks0108.c: 302: x_ = pos.x;
 21113  0026FE  C0D2  F0A2         	movff	_pos,ks0108PutChar@x_
 21114                           
 21115                           ; BSR set to: 0
 21116                           ;ks0108.c: 304: y = y_;
 21117  002702  C0A3  F0A5         	movff	ks0108PutChar@y_,ks0108PutChar@y
 21118                           
 21119                           ; BSR set to: 0
 21120                           ;ks0108.c: 306: for(yCnt = 0; yCnt < _fontHeight; yCnt ++){
 21121  002706  6BA0               	clrf	ks0108PutChar@yCnt& (0+255),b
 21122  002708  D02D               	goto	l8161
 21123  00270A                     l1104:
 21124                           
 21125                           ; BSR set to: 0
 21126                           ;ks0108.c: 307: x = x_;
 21127  00270A  C0A2  F0A6         	movff	ks0108PutChar@x_,ks0108PutChar@x
 21128                           
 21129                           ;ks0108.c: 308: mask = 0;
 21130  00270E  6BA7               	clrf	ks0108PutChar@mask& (0+255),b
 21131                           
 21132                           ;ks0108.c: 309: for(xCnt = 0; xCnt < _fontWidth; xCnt ++){
 21133  002710  6B9F               	clrf	ks0108PutChar@xCnt& (0+255),b
 21134  002712  D023               	goto	l1105
 21135  002714                     l1106:
 21136                           
 21137                           ; BSR set to: 0
 21138                           ;ks0108.c: 310: if(mask == 0){
 21139  002714  67A7               	tstfsz	ks0108PutChar@mask& (0+255),b
 21140  002716  D00B               	goto	l8145
 21141                           
 21142                           ; BSR set to: 0
 21143                           ;ks0108.c: 311: temp = * pChImage ++;
 21144  002718  C09D  FFF6         	movff	ks0108PutChar@pChImage,tblptrl
 21145  00271C  C09E  FFF7         	movff	ks0108PutChar@pChImage+1,tblptrh
 21146  002720                     	if	0	;tblptru may be non-zero
 21147  002720                     	endif
 21148  002720                     	if	0	;tblptru may be non-zero
 21149  002720                     	endif
 21150  002720  0008               	tblrd		*
 21151  002722  CFF5 F0A1          	movff	tablat,ks0108PutChar@temp
 21152                           
 21153                           ; BSR set to: 0
 21154  002726  4B9D               	infsnz	ks0108PutChar@pChImage& (0+255),f,b
 21155  002728  2B9E               	incf	(ks0108PutChar@pChImage+1)& (0+255),f,b
 21156                           
 21157                           ; BSR set to: 0
 21158                           ;ks0108.c: 312: mask = 0x80;
 21159  00272A  0E80               	movlw	128
 21160  00272C  6FA7               	movwf	ks0108PutChar@mask& (0+255),b
 21161  00272E                     l8145:
 21162                           
 21163                           ; BSR set to: 0
 21164                           ;ks0108.c: 313: }
 21165                           ;ks0108.c: 315: if(temp & mask){
 21166  00272E  51A1               	movf	ks0108PutChar@temp& (0+255),w,b
 21167  002730  15A7               	andwf	ks0108PutChar@mask& (0+255),w,b
 21168  002732  E00F               	bz	l8153
 21169                           
 21170                           ; BSR set to: 0
 21171                           ;ks0108.c: 316: if(mode == 1)
 21172  002734  0597               	decf	ks0108PutChar@mode& (0+255),w,b
 21173  002736  E106               	bnz	l1109
 21174                           
 21175                           ; BSR set to: 0
 21176                           ;ks0108.c: 317: ks0108SetDot(x, y);
 21177  002738  C0A5  F090         	movff	ks0108PutChar@y,ks0108SetDot@y
 21178  00273C  51A6               	movf	ks0108PutChar@x& (0+255),w,b
 21179  00273E  EC56  F01B         	call	_ks0108SetDot
 21180  002742  D007               	goto	l8153
 21181  002744                     l1109:
 21182                           
 21183                           ; BSR set to: 0
 21184                           ;ks0108.c: 318: else if(mode == 0)
 21185  002744  6797               	tstfsz	ks0108PutChar@mode& (0+255),b
 21186  002746  D005               	goto	l8153
 21187                           
 21188                           ; BSR set to: 0
 21189                           ;ks0108.c: 319: ks0108ClearDot(x, y);
 21190  002748  C0A5  F090         	movff	ks0108PutChar@y,ks0108ClearDot@y
 21191  00274C  51A6               	movf	ks0108PutChar@x& (0+255),w,b
 21192  00274E  ECA9  F01A         	call	_ks0108ClearDot
 21193  002752                     l8153:
 21194                           
 21195                           ; BSR set to: 0
 21196                           ;ks0108.c: 322: }
 21197                           ;ks0108.c: 324: x ++;
 21198  002752  2BA6               	incf	ks0108PutChar@x& (0+255),f,b
 21199                           
 21200                           ; BSR set to: 0
 21201                           ;ks0108.c: 325: mask >>= 1;
 21202  002754  90D8               	bcf	status,0,c
 21203  002756  33A7               	rrcf	ks0108PutChar@mask& (0+255),f,b
 21204                           
 21205                           ; BSR set to: 0
 21206  002758  2B9F               	incf	ks0108PutChar@xCnt& (0+255),f,b
 21207  00275A                     l1105:
 21208                           
 21209                           ; BSR set to: 0
 21210  00275A  519C               	movf	ks0108PutChar@_fontWidth& (0+255),w,b
 21211  00275C  5D9F               	subwf	ks0108PutChar@xCnt& (0+255),w,b
 21212  00275E  E3DA               	bnc	l1106
 21213                           
 21214                           ; BSR set to: 0
 21215                           ;ks0108.c: 326: }
 21216                           ;ks0108.c: 327: y ++;
 21217  002760  2BA5               	incf	ks0108PutChar@y& (0+255),f,b
 21218  002762  2BA0               	incf	ks0108PutChar@yCnt& (0+255),f,b
 21219  002764                     l8161:
 21220                           
 21221                           ; BSR set to: 0
 21222  002764  519B               	movf	ks0108PutChar@_fontHeight& (0+255),w,b
 21223  002766  5DA0               	subwf	ks0108PutChar@yCnt& (0+255),w,b
 21224  002768  E3D0               	bnc	l1104
 21225                           
 21226                           ; BSR set to: 0
 21227                           ;ks0108.c: 328: }
 21228                           ;ks0108.c: 332: pos.x = x_ + chWidth;
 21229  00276A  51A2               	movf	ks0108PutChar@x_& (0+255),w,b
 21230  00276C  25A4               	addwf	ks0108PutChar@chWidth& (0+255),w,b
 21231  00276E  6FD2               	movwf	_pos& (0+255),b
 21232                           
 21233                           ; BSR set to: 0
 21234                           ;ks0108.c: 333: pos.y = y_;
 21235  002770  C0A3  F0D3         	movff	ks0108PutChar@y_,_pos+1
 21236                           
 21237                           ; BSR set to: 0
 21238                           ;ks0108.c: 335: return chWidth;
 21239  002774  51A4               	movf	ks0108PutChar@chWidth& (0+255),w,b
 21240                           
 21241                           ; BSR set to: 0
 21242  002776  0012               	return	
 21243  002778                     __end_of_ks0108PutChar:
 21244                           	opt stack 0
 21245  002778                     PL98:
 21246                           	opt stack 15
 21247  002778  6F98               	movwf	??_ks0108PutChar& (0+255),b
 21248  00277A  0E00               	movlw	0
 21249  00277C  2196               	addwfc	(ks0108PutChar@p_font+1)& (0+255),w,b
 21250  00277E  6F99               	movwf	(??_ks0108PutChar+1)& (0+255),b
 21251  002780  C098  FFF6         	movff	??_ks0108PutChar,tblptrl
 21252  002784  C099  FFF7         	movff	??_ks0108PutChar+1,tblptrh
 21253  002788                     	if	0	;tblptru may be non-zero
 21254  002788                     	endif
 21255  002788                     	if	0	;tblptru may be non-zero
 21256  002788                     	endif
 21257  002788  0008               	tblrd		*
 21258  00278A  0012               	return	
 21259  00278C                     __end_ofPL98:
 21260                           	opt stack 0
 21261  00278C                     PL106:
 21262                           	opt stack 15
 21263  00278C  C095  F098         	movff	ks0108PutChar@p_font,??_ks0108PutChar
 21264  002790  C096  F099         	movff	ks0108PutChar@p_font+1,??_ks0108PutChar+1
 21265  002794  51A8               	movf	ks0108PutChar@base& (0+255),w,b
 21266  002796  2798               	addwf	??_ks0108PutChar& (0+255),f,b
 21267  002798  51A9               	movf	(ks0108PutChar@base+1)& (0+255),w,b
 21268  00279A  2399               	addwfc	(??_ks0108PutChar+1)& (0+255),f,b
 21269  00279C  0012               	return	
 21270  00279E                     __end_ofPL106:
 21271                           	opt stack 0
 21272                           tblptru	equ	0xFF8
 21273                           tblptrh	equ	0xFF7
 21274                           tblptrl	equ	0xFF6
 21275                           tablat	equ	0xFF5
 21276                           prodh	equ	0xFF4
 21277                           prodl	equ	0xFF3
 21278                           intcon	equ	0xFF2
 21279                           postinc0	equ	0xFEE
 21280                           wreg	equ	0xFE8
 21281                           indf1	equ	0xFE7
 21282                           postinc1	equ	0xFE6
 21283                           postdec1	equ	0xFE5
 21284                           fsr1h	equ	0xFE2
 21285                           fsr1l	equ	0xFE1
 21286                           indf2	equ	0xFDF
 21287                           postinc2	equ	0xFDE
 21288                           postdec2	equ	0xFDD
 21289                           fsr2h	equ	0xFDA
 21290                           fsr2l	equ	0xFD9
 21291                           status	equ	0xFD8
 21292                           
 21293 ;; *************** function _ks0108SetDot *****************
 21294 ;; Defined at:
 21295 ;;		line 83 in file "../lib/ks0108.c"
 21296 ;; Parameters:    Size  Location     Type
 21297 ;;  x               1    wreg     unsigned char 
 21298 ;;  y               1   48[BANK0 ] unsigned char 
 21299 ;; Auto vars:     Size  Location     Type
 21300 ;;  x               1   51[BANK0 ] unsigned char 
 21301 ;;  data            1   52[BANK0 ] unsigned char 
 21302 ;; Return value:  Size  Location     Type
 21303 ;;		None               void
 21304 ;; Registers used:
 21305 ;;		wreg, status,2, status,0, cstack
 21306 ;; Tracked objects:
 21307 ;;		On entry : F/0
 21308 ;;		On exit  : F/0
 21309 ;;		Unchanged: 0/0
 21310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21311 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21312 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21313 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21314 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21315 ;;Total ram usage:        5 bytes
 21316 ;; Hardware stack levels used:    1
 21317 ;; Hardware stack levels required when called:   12
 21318 ;; This function calls:
 21319 ;;		_ks0108GotoXY
 21320 ;;		_ks0108ReadData
 21321 ;;		_ks0108WriteData
 21322 ;; This function is called by:
 21323 ;;		_ks0108PutChar
 21324 ;;		_ks0108Line
 21325 ;;		_ks0108Rect
 21326 ;; This function uses a non-reentrant model
 21327 ;;
 21328                           
 21329                           	psect	text43
 21330  0036AC                     __ptext43:
 21331                           	opt stack 0
 21332  0036AC                     _ks0108SetDot:
 21333                           	opt stack 15
 21334                           
 21335                           ; BSR set to: 0
 21336                           ;incstack = 0
 21337                           ;ks0108SetDot@x stored from wreg
 21338  0036AC  6F93               	movwf	ks0108SetDot@x& (0+255),b
 21339                           
 21340                           ; BSR set to: 0
 21341                           ;ks0108.c: 84: uint8_t data;
 21342                           ;ks0108.c: 86: ks0108GotoXY(x, y);
 21343  0036AE  C090  F089         	movff	ks0108SetDot@y,ks0108GotoXY@y
 21344  0036B2  5193               	movf	ks0108SetDot@x& (0+255),w,b
 21345  0036B4  EC7A  F01A         	call	_ks0108GotoXY
 21346                           
 21347                           ;ks0108.c: 87: data = ks0108ReadData(1);
 21348  0036B8  0E01               	movlw	1
 21349  0036BA  ECB6  F019         	call	_ks0108ReadData
 21350  0036BE  6F94               	movwf	ks0108SetDot@data& (0+255),b
 21351                           
 21352                           ;ks0108.c: 88: data = ks0108ReadData(1);
 21353  0036C0  0E01               	movlw	1
 21354  0036C2  ECB6  F019         	call	_ks0108ReadData
 21355  0036C6  6F94               	movwf	ks0108SetDot@data& (0+255),b
 21356                           
 21357                           ; BSR set to: 0
 21358                           ;ks0108.c: 90: if(! (data & (0x01 << (y % 8)))){
 21359  0036C8  C090  F091         	movff	ks0108SetDot@y,??_ks0108SetDot
 21360  0036CC  D80A               	call	PL78	;call to abstracted procedure
 21361  0036CE  1594               	andwf	ks0108SetDot@data& (0+255),w,b
 21362  0036D0  A4D8               	btfss	status,2,c
 21363  0036D2  0012               	return	
 21364                           
 21365                           ; BSR set to: 0
 21366                           ;ks0108.c: 92: data |= 0x01 << (y % 8);
 21367  0036D4  C090  F091         	movff	ks0108SetDot@y,??_ks0108SetDot
 21368  0036D8  D804               	call	PL78	;call to abstracted procedure
 21369  0036DA  1394               	iorwf	ks0108SetDot@data& (0+255),f,b
 21370                           
 21371                           ; BSR set to: 0
 21372                           ;ks0108.c: 94: ks0108WriteData(data);
 21373  0036DC  5194               	movf	ks0108SetDot@data& (0+255),w,b
 21374  0036DE  EF13  F01C         	goto	_ks0108WriteData
 21375  0036E2                     __end_of_ks0108SetDot:
 21376                           	opt stack 0
 21377  0036E2                     PL78:
 21378                           	opt stack 15
 21379  0036E2  0E07               	movlw	7
 21380  0036E4  1791               	andwf	??_ks0108SetDot& (0+255),f,b
 21381  0036E6  0E01               	movlw	1
 21382  0036E8  6F92               	movwf	(??_ks0108SetDot+1)& (0+255),b
 21383  0036EA  2B91               	incf	??_ks0108SetDot& (0+255),f,b
 21384  0036EC  D002               	goto	u8314
 21385  0036EE                     u8315:
 21386  0036EE  90D8               	bcf	status,0,c
 21387  0036F0  3792               	rlcf	(??_ks0108SetDot+1)& (0+255),f,b
 21388  0036F2                     u8314:
 21389  0036F2  2F91               	decfsz	??_ks0108SetDot& (0+255),f,b
 21390  0036F4  D7FC               	goto	u8315
 21391  0036F6  5192               	movf	(??_ks0108SetDot+1)& (0+255),w,b
 21392  0036F8  0012               	return	
 21393  0036FA                     __end_ofPL78:
 21394                           	opt stack 0
 21395                           tblptru	equ	0xFF8
 21396                           tblptrh	equ	0xFF7
 21397                           tblptrl	equ	0xFF6
 21398                           tablat	equ	0xFF5
 21399                           prodh	equ	0xFF4
 21400                           prodl	equ	0xFF3
 21401                           intcon	equ	0xFF2
 21402                           postinc0	equ	0xFEE
 21403                           wreg	equ	0xFE8
 21404                           indf1	equ	0xFE7
 21405                           postinc1	equ	0xFE6
 21406                           postdec1	equ	0xFE5
 21407                           fsr1h	equ	0xFE2
 21408                           fsr1l	equ	0xFE1
 21409                           indf2	equ	0xFDF
 21410                           postinc2	equ	0xFDE
 21411                           postdec2	equ	0xFDD
 21412                           fsr2h	equ	0xFDA
 21413                           fsr2l	equ	0xFD9
 21414                           status	equ	0xFD8
 21415                           
 21416 ;; *************** function _ks0108ClearDot *****************
 21417 ;; Defined at:
 21418 ;;		line 100 in file "../lib/ks0108.c"
 21419 ;; Parameters:    Size  Location     Type
 21420 ;;  x               1    wreg     unsigned char 
 21421 ;;  y               1   48[BANK0 ] unsigned char 
 21422 ;; Auto vars:     Size  Location     Type
 21423 ;;  x               1   51[BANK0 ] unsigned char 
 21424 ;;  data            1   52[BANK0 ] unsigned char 
 21425 ;; Return value:  Size  Location     Type
 21426 ;;		None               void
 21427 ;; Registers used:
 21428 ;;		wreg, status,2, status,0, cstack
 21429 ;; Tracked objects:
 21430 ;;		On entry : F/0
 21431 ;;		On exit  : F/0
 21432 ;;		Unchanged: 0/0
 21433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21434 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21435 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21436 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21437 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21438 ;;Total ram usage:        5 bytes
 21439 ;; Hardware stack levels used:    1
 21440 ;; Hardware stack levels required when called:   12
 21441 ;; This function calls:
 21442 ;;		_ks0108GotoXY
 21443 ;;		_ks0108ReadData
 21444 ;;		_ks0108WriteData
 21445 ;; This function is called by:
 21446 ;;		_ks0108PutChar
 21447 ;; This function uses a non-reentrant model
 21448 ;;
 21449                           
 21450                           	psect	text44
 21451  003552                     __ptext44:
 21452                           	opt stack 0
 21453  003552                     _ks0108ClearDot:
 21454                           	opt stack 15
 21455                           
 21456                           ; BSR set to: 0
 21457                           ;incstack = 0
 21458                           ;ks0108ClearDot@x stored from wreg
 21459  003552  6F93               	movwf	ks0108ClearDot@x& (0+255),b
 21460                           
 21461                           ; BSR set to: 0
 21462                           ;ks0108.c: 101: uint8_t data;
 21463                           ;ks0108.c: 103: ks0108GotoXY(x, y);
 21464  003554  C090  F089         	movff	ks0108ClearDot@y,ks0108GotoXY@y
 21465  003558  5193               	movf	ks0108ClearDot@x& (0+255),w,b
 21466  00355A  EC7A  F01A         	call	_ks0108GotoXY
 21467                           
 21468                           ;ks0108.c: 104: data = ks0108ReadData(1);
 21469  00355E  0E01               	movlw	1
 21470  003560  ECB6  F019         	call	_ks0108ReadData
 21471  003564  6F94               	movwf	ks0108ClearDot@data& (0+255),b
 21472                           
 21473                           ;ks0108.c: 105: data = ks0108ReadData(1);
 21474  003566  0E01               	movlw	1
 21475  003568  ECB6  F019         	call	_ks0108ReadData
 21476  00356C  6F94               	movwf	ks0108ClearDot@data& (0+255),b
 21477                           
 21478                           ; BSR set to: 0
 21479                           ;ks0108.c: 107: if((data & (0x01 << (y % 8)))){
 21480  00356E  C090  F091         	movff	ks0108ClearDot@y,??_ks0108ClearDot
 21481  003572  D816               	call	PL152	;call to abstracted procedure
 21482  003574  D002               	goto	u8344
 21483  003576                     u8345:
 21484  003576  90D8               	bcf	status,0,c
 21485  003578  3792               	rlcf	(??_ks0108ClearDot+1)& (0+255),f,b
 21486  00357A                     u8344:
 21487  00357A  2F91               	decfsz	??_ks0108ClearDot& (0+255),f,b
 21488  00357C  D7FC               	goto	u8345
 21489  00357E  5192               	movf	(??_ks0108ClearDot+1)& (0+255),w,b
 21490  003580  1594               	andwf	ks0108ClearDot@data& (0+255),w,b
 21491  003582  B4D8               	btfsc	status,2,c
 21492  003584  0012               	return	
 21493                           
 21494                           ; BSR set to: 0
 21495                           ;ks0108.c: 109: data &= ~ (0x01 << (y % 8));
 21496  003586  C090  F091         	movff	ks0108ClearDot@y,??_ks0108ClearDot
 21497  00358A  D80A               	call	PL152	;call to abstracted procedure
 21498  00358C  D002               	goto	u8364
 21499  00358E                     u8365:
 21500  00358E  90D8               	bcf	status,0,c
 21501  003590  3792               	rlcf	(??_ks0108ClearDot+1)& (0+255),f,b
 21502  003592                     u8364:
 21503  003592  2F91               	decfsz	??_ks0108ClearDot& (0+255),f,b
 21504  003594  D7FC               	goto	u8365
 21505  003596  1D92               	comf	(??_ks0108ClearDot+1)& (0+255),w,b
 21506  003598  1794               	andwf	ks0108ClearDot@data& (0+255),f,b
 21507                           
 21508                           ; BSR set to: 0
 21509                           ;ks0108.c: 111: ks0108WriteData(data);
 21510  00359A  5194               	movf	ks0108ClearDot@data& (0+255),w,b
 21511  00359C  EF13  F01C         	goto	_ks0108WriteData
 21512  0035A0                     __end_of_ks0108ClearDot:
 21513                           	opt stack 0
 21514  0035A0                     PL152:
 21515                           	opt stack 15
 21516  0035A0  0E07               	movlw	7
 21517  0035A2  1791               	andwf	??_ks0108ClearDot& (0+255),f,b
 21518  0035A4  0E01               	movlw	1
 21519  0035A6  6F92               	movwf	(??_ks0108ClearDot+1)& (0+255),b
 21520  0035A8  2B91               	incf	??_ks0108ClearDot& (0+255),f,b
 21521  0035AA  0C01               	retlw	1
 21522  0035AC                     __end_ofPL152:
 21523                           	opt stack 0
 21524                           tblptru	equ	0xFF8
 21525                           tblptrh	equ	0xFF7
 21526                           tblptrl	equ	0xFF6
 21527                           tablat	equ	0xFF5
 21528                           prodh	equ	0xFF4
 21529                           prodl	equ	0xFF3
 21530                           intcon	equ	0xFF2
 21531                           postinc0	equ	0xFEE
 21532                           wreg	equ	0xFE8
 21533                           indf1	equ	0xFE7
 21534                           postinc1	equ	0xFE6
 21535                           postdec1	equ	0xFE5
 21536                           fsr1h	equ	0xFE2
 21537                           fsr1l	equ	0xFE1
 21538                           indf2	equ	0xFDF
 21539                           postinc2	equ	0xFDE
 21540                           postdec2	equ	0xFDD
 21541                           fsr2h	equ	0xFDA
 21542                           fsr2l	equ	0xFD9
 21543                           status	equ	0xFD8
 21544                           
 21545 ;; *************** function _ks0108WriteData *****************
 21546 ;; Defined at:
 21547 ;;		line 236 in file "../lib/ks0108.c"
 21548 ;; Parameters:    Size  Location     Type
 21549 ;;  data            1    wreg     unsigned char 
 21550 ;; Auto vars:     Size  Location     Type
 21551 ;;  data            1   41[BANK0 ] unsigned char 
 21552 ;; Return value:  Size  Location     Type
 21553 ;;		None               void
 21554 ;; Registers used:
 21555 ;;		wreg, status,2, status,0, cstack
 21556 ;; Tracked objects:
 21557 ;;		On entry : F/0
 21558 ;;		On exit  : F/0
 21559 ;;		Unchanged: 0/0
 21560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21562 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21564 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21565 ;;Total ram usage:        1 bytes
 21566 ;; Hardware stack levels used:    1
 21567 ;; Hardware stack levels required when called:   10
 21568 ;; This function calls:
 21569 ;;		_ks0108Enable
 21570 ;;		_ks0108WriteCommand
 21571 ;; This function is called by:
 21572 ;;		_ks0108Fill
 21573 ;;		_ks0108SetDot
 21574 ;;		_ks0108ClearDot
 21575 ;; This function uses a non-reentrant model
 21576 ;;
 21577                           
 21578                           	psect	text45
 21579  003826                     __ptext45:
 21580                           	opt stack 0
 21581  003826                     _ks0108WriteData:
 21582                           	opt stack 16
 21583                           
 21584                           ; BSR set to: 0
 21585                           ;incstack = 0
 21586                           ;ks0108WriteData@data stored from wreg
 21587  003826  6F89               	movwf	ks0108WriteData@data& (0+255),b
 21588                           
 21589                           ; BSR set to: 0
 21590                           ;ks0108.c: 238: if(pos.x >= 128)
 21591  003828  0E7F               	movlw	127
 21592  00382A  65D2               	cpfsgt	_pos& (0+255),b
 21593  00382C  D001               	goto	l7649
 21594  00382E  0C7F               	retlw	127
 21595  003830                     l7649:
 21596                           
 21597                           ; BSR set to: 0
 21598                           ;ks0108.c: 241: if(pos.x < 64){
 21599  003830  0E40               	movlw	64
 21600  003832  5DD2               	subwf	_pos& (0+255),w,b
 21601  003834  E203               	bc	l7653
 21602                           
 21603                           ; BSR set to: 0
 21604                           ;ks0108.c: 242: LATC3 = 1;
 21605  003836  868B               	bsf	3979,3,c	;volatile
 21606                           
 21607                           ;ks0108.c: 243: LATC2 = 0;
 21608  003838  948B               	bcf	3979,2,c	;volatile
 21609                           
 21610                           ;ks0108.c: 244: } else if(pos.x >= 64){
 21611  00383A  D005               	goto	l7657
 21612  00383C                     l7653:
 21613                           
 21614                           ; BSR set to: 0
 21615  00383C  0E3F               	movlw	63
 21616  00383E  65D2               	cpfsgt	_pos& (0+255),b
 21617  003840  D002               	goto	l7657
 21618                           
 21619                           ; BSR set to: 0
 21620                           ;ks0108.c: 245: LATC3 = 0;
 21621  003842  968B               	bcf	3979,3,c	;volatile
 21622                           
 21623                           ;ks0108.c: 246: LATC2 = 1;
 21624  003844  848B               	bsf	3979,2,c	;volatile
 21625  003846                     l7657:
 21626                           
 21627                           ; BSR set to: 0
 21628                           ;ks0108.c: 247: }
 21629                           ;ks0108.c: 249: if(pos.x == 64){
 21630  003846  51D2               	movf	_pos& (0+255),w,b
 21631  003848  0A40               	xorlw	64
 21632  00384A  E105               	bnz	l7661
 21633                           
 21634                           ; BSR set to: 0
 21635                           ;ks0108.c: 250: ks0108WriteCommand(0x40, 0x01);
 21636  00384C  0E01               	movlw	1
 21637  00384E  6F87               	movwf	ks0108WriteCommand@chip& (0+255),b
 21638  003850  0E40               	movlw	64
 21639  003852  EC49  F01D         	call	_ks0108WriteCommand
 21640  003856                     l7661:
 21641                           
 21642                           ;ks0108.c: 254: }
 21643                           ;ks0108.c: 257: LATE1 = 0;
 21644  003856  928D               	bcf	3981,1,c	;volatile
 21645                           
 21646                           ;ks0108.c: 258: LATE2 = 1;
 21647  003858  848D               	bsf	3981,2,c	;volatile
 21648                           
 21649                           ;ks0108.c: 260: TRISD = 0x00;
 21650  00385A  6A95               	clrf	3989,c	;volatile
 21651                           
 21652                           ;ks0108.c: 267: LATD = data;
 21653  00385C  C089  FF8C         	movff	ks0108WriteData@data,3980	;volatile
 21654                           
 21655                           ;ks0108.c: 269: ks0108Enable();
 21656  003860  ECE0  F01C         	call	_ks0108Enable	;wreg free
 21657                           
 21658                           ;ks0108.c: 276: pos.x ++;
 21659  003864  0100               	movlb	0	; () banked
 21660  003866  2BD2               	incf	_pos& (0+255),f,b
 21661                           
 21662                           ; BSR set to: 0
 21663                           ;ks0108.c: 278: LATD = 0;
 21664  003868  6A8C               	clrf	3980,c	;volatile
 21665                           
 21666                           ; BSR set to: 0
 21667  00386A  0012               	return	
 21668  00386C                     __end_of_ks0108WriteData:
 21669                           	opt stack 0
 21670                           tblptru	equ	0xFF8
 21671                           tblptrh	equ	0xFF7
 21672                           tblptrl	equ	0xFF6
 21673                           tablat	equ	0xFF5
 21674                           prodh	equ	0xFF4
 21675                           prodl	equ	0xFF3
 21676                           intcon	equ	0xFF2
 21677                           postinc0	equ	0xFEE
 21678                           wreg	equ	0xFE8
 21679                           indf1	equ	0xFE7
 21680                           postinc1	equ	0xFE6
 21681                           postdec1	equ	0xFE5
 21682                           fsr1h	equ	0xFE2
 21683                           fsr1l	equ	0xFE1
 21684                           indf2	equ	0xFDF
 21685                           postinc2	equ	0xFDE
 21686                           postdec2	equ	0xFDD
 21687                           fsr2h	equ	0xFDA
 21688                           fsr2l	equ	0xFD9
 21689                           status	equ	0xFD8
 21690                           
 21691 ;; *************** function _ks0108ReadData *****************
 21692 ;; Defined at:
 21693 ;;		line 159 in file "../lib/ks0108.c"
 21694 ;; Parameters:    Size  Location     Type
 21695 ;;  incXAdd         1    wreg     unsigned char 
 21696 ;; Auto vars:     Size  Location     Type
 21697 ;;  incXAdd         1   45[BANK0 ] unsigned char 
 21698 ;;  i               1   47[BANK0 ] volatile unsigned char 
 21699 ;;  data            1   46[BANK0 ] unsigned char 
 21700 ;; Return value:  Size  Location     Type
 21701 ;;                  1    wreg      unsigned char 
 21702 ;; Registers used:
 21703 ;;		wreg, status,2, status,0, cstack
 21704 ;; Tracked objects:
 21705 ;;		On entry : 0/0
 21706 ;;		On exit  : F/0
 21707 ;;		Unchanged: 0/0
 21708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21710 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21712 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21713 ;;Total ram usage:        3 bytes
 21714 ;; Hardware stack levels used:    1
 21715 ;; Hardware stack levels required when called:   11
 21716 ;; This function calls:
 21717 ;;		_ks0108GotoXY
 21718 ;; This function is called by:
 21719 ;;		_ks0108SetDot
 21720 ;;		_ks0108ClearDot
 21721 ;; This function uses a non-reentrant model
 21722 ;;
 21723                           
 21724                           	psect	text46
 21725  00336C                     __ptext46:
 21726                           	opt stack 0
 21727  00336C                     _ks0108ReadData:
 21728                           	opt stack 15
 21729                           
 21730                           ; BSR set to: 0
 21731                           ;incstack = 0
 21732                           ;ks0108ReadData@incXAdd stored from wreg
 21733  00336C  0100               	movlb	0	; () banked
 21734  00336E  6F8D               	movwf	ks0108ReadData@incXAdd& (0+255),b
 21735                           
 21736                           ; BSR set to: 0
 21737                           ;ks0108.c: 160: uint8_t data;
 21738                           ;ks0108.c: 161: volatile uint8_t i;
 21739                           ;ks0108.c: 167: LATD = 0x00;
 21740  003370  6A8C               	clrf	3980,c	;volatile
 21741                           
 21742                           ;ks0108.c: 168: TRISD = 0xff;
 21743  003372  6895               	setf	3989,c	;volatile
 21744                           
 21745                           ; BSR set to: 0
 21746                           ;ks0108.c: 170: if(pos.x < 64){
 21747  003374  0E40               	movlw	64
 21748  003376  5DD2               	subwf	_pos& (0+255),w,b
 21749  003378  E203               	bc	l7681
 21750                           
 21751                           ; BSR set to: 0
 21752                           ;ks0108.c: 171: LATC3 = 1;
 21753  00337A  868B               	bsf	3979,3,c	;volatile
 21754                           
 21755                           ;ks0108.c: 172: LATC2 = 0;
 21756  00337C  948B               	bcf	3979,2,c	;volatile
 21757                           
 21758                           ;ks0108.c: 173: } else if(pos.x >= 64){
 21759  00337E  D005               	goto	l1076
 21760  003380                     l7681:
 21761                           
 21762                           ; BSR set to: 0
 21763  003380  0E3F               	movlw	63
 21764  003382  65D2               	cpfsgt	_pos& (0+255),b
 21765  003384  D002               	goto	l1076
 21766                           
 21767                           ; BSR set to: 0
 21768                           ;ks0108.c: 174: LATC3 = 0;
 21769  003386  968B               	bcf	3979,3,c	;volatile
 21770                           
 21771                           ;ks0108.c: 175: LATC2 = 1;
 21772  003388  848B               	bsf	3979,2,c	;volatile
 21773  00338A                     l1076:
 21774                           
 21775                           ; BSR set to: 0
 21776                           ;ks0108.c: 176: }
 21777                           ;ks0108.c: 178: LATE1 = 1;
 21778  00338A  828D               	bsf	3981,1,c	;volatile
 21779                           
 21780                           ;ks0108.c: 179: LATE2 = 1;
 21781  00338C  848D               	bsf	3981,2,c	;volatile
 21782                           
 21783                           ;ks0108.c: 181: for(i = 0; i < 8; i ++);
 21784  00338E  6B8F               	clrf	ks0108ReadData@i& (0+255),b	;volatile
 21785  003390  D001               	goto	L9
 21786  003392                     l7689:
 21787                           
 21788                           ; BSR set to: 0
 21789  003392  2B8F               	incf	ks0108ReadData@i& (0+255),f,b	;volatile
 21790  003394                     L9:
 21791                           
 21792                           ; BSR set to: 0
 21793  003394  0E07               	movlw	7
 21794  003396  658F               	cpfsgt	ks0108ReadData@i& (0+255),b	;volatile
 21795  003398  D7FC               	goto	l7689
 21796                           
 21797                           ; BSR set to: 0
 21798                           ;ks0108.c: 183: LATE0 = 1;
 21799  00339A  808D               	bsf	3981,0,c	;volatile
 21800                           
 21801                           ;ks0108.c: 185: for(i = 0; i < 8; i ++);
 21802  00339C  6B8F               	clrf	ks0108ReadData@i& (0+255),b	;volatile
 21803  00339E  D001               	goto	L10
 21804  0033A0                     l7697:
 21805                           
 21806                           ; BSR set to: 0
 21807  0033A0  2B8F               	incf	ks0108ReadData@i& (0+255),f,b	;volatile
 21808  0033A2                     L10:
 21809                           
 21810                           ; BSR set to: 0
 21811  0033A2  0E07               	movlw	7
 21812  0033A4  658F               	cpfsgt	ks0108ReadData@i& (0+255),b	;volatile
 21813  0033A6  D7FC               	goto	l7697
 21814                           
 21815                           ; BSR set to: 0
 21816                           ;ks0108.c: 187: data = PORTD;
 21817  0033A8  CF83 F08E          	movff	3971,ks0108ReadData@data	;volatile
 21818                           
 21819                           ;ks0108.c: 192: LATE0 = 0;
 21820  0033AC  908D               	bcf	3981,0,c	;volatile
 21821                           
 21822                           ;ks0108.c: 194: for(i = 0; i < 8; i ++);
 21823  0033AE  6B8F               	clrf	ks0108ReadData@i& (0+255),b	;volatile
 21824  0033B0  D001               	goto	L11
 21825  0033B2                     l7705:
 21826                           
 21827                           ; BSR set to: 0
 21828  0033B2  2B8F               	incf	ks0108ReadData@i& (0+255),f,b	;volatile
 21829  0033B4                     L11:
 21830                           
 21831                           ; BSR set to: 0
 21832  0033B4  0E07               	movlw	7
 21833  0033B6  658F               	cpfsgt	ks0108ReadData@i& (0+255),b	;volatile
 21834  0033B8  D7FC               	goto	l7705
 21835                           
 21836                           ; BSR set to: 0
 21837                           ;ks0108.c: 203: TRISD = 0x00;
 21838  0033BA  6A95               	clrf	3989,c	;volatile
 21839                           
 21840                           ;ks0108.c: 206: if(incXAdd == 0)
 21841  0033BC  678D               	tstfsz	ks0108ReadData@incXAdd& (0+255),b
 21842  0033BE  D002               	goto	l7711
 21843                           
 21844                           ; BSR set to: 0
 21845                           ;ks0108.c: 207: pos.x ++;
 21846  0033C0  2BD2               	incf	_pos& (0+255),f,b
 21847  0033C2  D005               	goto	l7713
 21848  0033C4                     l7711:
 21849                           
 21850                           ; BSR set to: 0
 21851                           ;ks0108.c: 208: else
 21852                           ;ks0108.c: 209: ks0108GotoXY(pos.x, pos.y);
 21853  0033C4  C0D3  F089         	movff	_pos+1,ks0108GotoXY@y
 21854  0033C8  51D2               	movf	_pos& (0+255),w,b
 21855  0033CA  EC7A  F01A         	call	_ks0108GotoXY
 21856  0033CE                     l7713:
 21857                           
 21858                           ;ks0108.c: 212: return data;
 21859  0033CE  0100               	movlb	0	; () banked
 21860  0033D0  518E               	movf	ks0108ReadData@data& (0+255),w,b
 21861                           
 21862                           ; BSR set to: 0
 21863  0033D2  0012               	return	
 21864  0033D4                     __end_of_ks0108ReadData:
 21865                           	opt stack 0
 21866                           tblptru	equ	0xFF8
 21867                           tblptrh	equ	0xFF7
 21868                           tblptrl	equ	0xFF6
 21869                           tablat	equ	0xFF5
 21870                           prodh	equ	0xFF4
 21871                           prodl	equ	0xFF3
 21872                           intcon	equ	0xFF2
 21873                           postinc0	equ	0xFEE
 21874                           wreg	equ	0xFE8
 21875                           indf1	equ	0xFE7
 21876                           postinc1	equ	0xFE6
 21877                           postdec1	equ	0xFE5
 21878                           fsr1h	equ	0xFE2
 21879                           fsr1l	equ	0xFE1
 21880                           indf2	equ	0xFDF
 21881                           postinc2	equ	0xFDE
 21882                           postdec2	equ	0xFDD
 21883                           fsr2h	equ	0xFDA
 21884                           fsr2l	equ	0xFD9
 21885                           status	equ	0xFD8
 21886                           
 21887 ;; *************** function _ks0108GotoXY *****************
 21888 ;; Defined at:
 21889 ;;		line 50 in file "../lib/ks0108.c"
 21890 ;; Parameters:    Size  Location     Type
 21891 ;;  x               1    wreg     unsigned char 
 21892 ;;  y               1   41[BANK0 ] unsigned char 
 21893 ;; Auto vars:     Size  Location     Type
 21894 ;;  x               1   44[BANK0 ] unsigned char 
 21895 ;;  cmd             1   43[BANK0 ] unsigned char 
 21896 ;;  chip            1   42[BANK0 ] unsigned char 
 21897 ;; Return value:  Size  Location     Type
 21898 ;;		None               void
 21899 ;; Registers used:
 21900 ;;		wreg, status,2, status,0, cstack
 21901 ;; Tracked objects:
 21902 ;;		On entry : F/0
 21903 ;;		On exit  : 0/0
 21904 ;;		Unchanged: 0/0
 21905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21906 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21907 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21909 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21910 ;;Total ram usage:        4 bytes
 21911 ;; Hardware stack levels used:    1
 21912 ;; Hardware stack levels required when called:   10
 21913 ;; This function calls:
 21914 ;;		_ks0108WriteCommand
 21915 ;; This function is called by:
 21916 ;;		_main
 21917 ;;		_ks0108Fill
 21918 ;;		_ks0108SetDot
 21919 ;;		_ks0108ClearDot
 21920 ;;		_ks0108ReadData
 21921 ;;		_LabelSetTxt
 21922 ;; This function uses a non-reentrant model
 21923 ;;
 21924                           
 21925                           	psect	text47
 21926  0034F4                     __ptext47:
 21927                           	opt stack 0
 21928  0034F4                     _ks0108GotoXY:
 21929                           	opt stack 15
 21930                           
 21931                           ; BSR set to: 0
 21932                           ;incstack = 0
 21933                           ;ks0108GotoXY@x stored from wreg
 21934  0034F4  6F8C               	movwf	ks0108GotoXY@x& (0+255),b
 21935                           
 21936                           ; BSR set to: 0
 21937                           ;ks0108.c: 51: uint8_t chip = 0x00, cmd;
 21938  0034F6  6B8A               	clrf	ks0108GotoXY@chip& (0+255),b
 21939                           
 21940                           ; BSR set to: 0
 21941                           ;ks0108.c: 53: if(x > 127) x = 0;
 21942  0034F8  0E7F               	movlw	127
 21943  0034FA  658C               	cpfsgt	ks0108GotoXY@x& (0+255),b
 21944  0034FC  D001               	goto	l7623
 21945                           
 21946                           ; BSR set to: 0
 21947  0034FE  6B8C               	clrf	ks0108GotoXY@x& (0+255),b
 21948  003500                     l7623:
 21949                           
 21950                           ; BSR set to: 0
 21951                           ;ks0108.c: 54: if(y > 63) y = 0;
 21952  003500  0E3F               	movlw	63
 21953  003502  6589               	cpfsgt	ks0108GotoXY@y& (0+255),b
 21954  003504  D001               	goto	l1059
 21955                           
 21956                           ; BSR set to: 0
 21957  003506  6B89               	clrf	ks0108GotoXY@y& (0+255),b
 21958  003508                     l1059:
 21959                           
 21960                           ; BSR set to: 0
 21961                           ;ks0108.c: 56: pos.x = x;
 21962  003508  C08C  F0D2         	movff	ks0108GotoXY@x,_pos
 21963                           
 21964                           ;ks0108.c: 57: pos.y = y;
 21965  00350C  C089  F0D3         	movff	ks0108GotoXY@y,_pos+1
 21966                           
 21967                           ; BSR set to: 0
 21968                           ;ks0108.c: 58: pos.page = y >> 3;
 21969  003510  3989               	swapf	ks0108GotoXY@y& (0+255),w,b
 21970  003512  46E8               	rlncf	wreg,f,c
 21971  003514  0B1F               	andlw	31
 21972  003516  6FD4               	movwf	(_pos+2)& (0+255),b
 21973                           
 21974                           ; BSR set to: 0
 21975                           ;ks0108.c: 60: if(x >= 64){
 21976  003518  0E3F               	movlw	63
 21977  00351A  658C               	cpfsgt	ks0108GotoXY@x& (0+255),b
 21978  00351C  D004               	goto	l7635
 21979                           
 21980                           ; BSR set to: 0
 21981                           ;ks0108.c: 61: x -= 64;
 21982  00351E  0E40               	movlw	64
 21983  003520  5F8C               	subwf	ks0108GotoXY@x& (0+255),f,b
 21984                           
 21985                           ; BSR set to: 0
 21986                           ;ks0108.c: 62: chip = 0x01;
 21987  003522  0E01               	movlw	1
 21988  003524  6F8A               	movwf	ks0108GotoXY@chip& (0+255),b
 21989  003526                     l7635:
 21990                           
 21991                           ; BSR set to: 0
 21992                           ;ks0108.c: 63: }
 21993                           ;ks0108.c: 70: cmd = 0x40 | x;
 21994  003526  518C               	movf	ks0108GotoXY@x& (0+255),w,b
 21995  003528  0940               	iorlw	64
 21996  00352A  6F8B               	movwf	ks0108GotoXY@cmd& (0+255),b
 21997                           
 21998                           ; BSR set to: 0
 21999                           ;ks0108.c: 71: ks0108WriteCommand(cmd, chip);
 22000  00352C  C08A  F087         	movff	ks0108GotoXY@chip,ks0108WriteCommand@chip
 22001  003530  518B               	movf	ks0108GotoXY@cmd& (0+255),w,b
 22002  003532  EC49  F01D         	call	_ks0108WriteCommand
 22003                           
 22004                           ;ks0108.c: 73: cmd = 0xB8 | pos.page;
 22005  003536  0100               	movlb	0	; () banked
 22006  003538  51D4               	movf	(_pos+2)& (0+255),w,b
 22007  00353A  09B8               	iorlw	184
 22008  00353C  6F8B               	movwf	ks0108GotoXY@cmd& (0+255),b
 22009                           
 22010                           ; BSR set to: 0
 22011                           ;ks0108.c: 75: ks0108WriteCommand(cmd, 0x00);
 22012  00353E  6B87               	clrf	ks0108WriteCommand@chip& (0+255),b
 22013  003540  518B               	movf	ks0108GotoXY@cmd& (0+255),w,b
 22014  003542  EC49  F01D         	call	_ks0108WriteCommand
 22015                           
 22016                           ;ks0108.c: 76: ks0108WriteCommand(cmd, 0x01);
 22017  003546  0E01               	movlw	1
 22018  003548  0100               	movlb	0	; () banked
 22019  00354A  6F87               	movwf	ks0108WriteCommand@chip& (0+255),b
 22020  00354C  518B               	movf	ks0108GotoXY@cmd& (0+255),w,b
 22021  00354E  EF49  F01D         	goto	_ks0108WriteCommand
 22022  003552                     __end_of_ks0108GotoXY:
 22023                           	opt stack 0
 22024                           tblptru	equ	0xFF8
 22025                           tblptrh	equ	0xFF7
 22026                           tblptrl	equ	0xFF6
 22027                           tablat	equ	0xFF5
 22028                           prodh	equ	0xFF4
 22029                           prodl	equ	0xFF3
 22030                           intcon	equ	0xFF2
 22031                           postinc0	equ	0xFEE
 22032                           wreg	equ	0xFE8
 22033                           indf1	equ	0xFE7
 22034                           postinc1	equ	0xFE6
 22035                           postdec1	equ	0xFE5
 22036                           fsr1h	equ	0xFE2
 22037                           fsr1l	equ	0xFE1
 22038                           indf2	equ	0xFDF
 22039                           postinc2	equ	0xFDE
 22040                           postdec2	equ	0xFDD
 22041                           fsr2h	equ	0xFDA
 22042                           fsr2l	equ	0xFD9
 22043                           status	equ	0xFD8
 22044                           
 22045 ;; *************** function _ks0108WriteCommand *****************
 22046 ;; Defined at:
 22047 ;;		line 216 in file "../lib/ks0108.c"
 22048 ;; Parameters:    Size  Location     Type
 22049 ;;  cmd             1    wreg     unsigned char 
 22050 ;;  chip            1   39[BANK0 ] unsigned char 
 22051 ;; Auto vars:     Size  Location     Type
 22052 ;;  cmd             1   40[BANK0 ] unsigned char 
 22053 ;; Return value:  Size  Location     Type
 22054 ;;		None               void
 22055 ;; Registers used:
 22056 ;;		wreg, status,2, status,0, cstack
 22057 ;; Tracked objects:
 22058 ;;		On entry : F/0
 22059 ;;		On exit  : 0/0
 22060 ;;		Unchanged: 0/0
 22061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22062 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22063 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22065 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22066 ;;Total ram usage:        2 bytes
 22067 ;; Hardware stack levels used:    1
 22068 ;; Hardware stack levels required when called:    9
 22069 ;; This function calls:
 22070 ;;		_ks0108Enable
 22071 ;; This function is called by:
 22072 ;;		_ks0108GotoXY
 22073 ;;		_ks0108Init
 22074 ;;		_ks0108WriteData
 22075 ;; This function uses a non-reentrant model
 22076 ;;
 22077                           
 22078                           	psect	text48
 22079  003A92                     __ptext48:
 22080                           	opt stack 0
 22081  003A92                     _ks0108WriteCommand:
 22082                           	opt stack 16
 22083                           
 22084                           ;incstack = 0
 22085                           ;ks0108WriteCommand@cmd stored from wreg
 22086  003A92  6F88               	movwf	ks0108WriteCommand@cmd& (0+255),b
 22087                           
 22088                           ; BSR set to: 0
 22089                           ;ks0108.c: 218: if(chip == 0x00){
 22090  003A94  6787               	tstfsz	ks0108WriteCommand@chip& (0+255),b
 22091  003A96  D003               	goto	l7609
 22092                           
 22093                           ; BSR set to: 0
 22094                           ;ks0108.c: 219: LATC3 = 1;
 22095  003A98  868B               	bsf	3979,3,c	;volatile
 22096                           
 22097                           ;ks0108.c: 220: LATC2 = 0;
 22098  003A9A  948B               	bcf	3979,2,c	;volatile
 22099                           
 22100                           ;ks0108.c: 221: } else if(chip == 0x01){
 22101  003A9C  D004               	goto	l1090
 22102  003A9E                     l7609:
 22103                           
 22104                           ; BSR set to: 0
 22105  003A9E  0587               	decf	ks0108WriteCommand@chip& (0+255),w,b
 22106  003AA0  E102               	bnz	l1090
 22107                           
 22108                           ; BSR set to: 0
 22109                           ;ks0108.c: 222: LATC3 = 0;
 22110  003AA2  968B               	bcf	3979,3,c	;volatile
 22111                           
 22112                           ;ks0108.c: 223: LATC2 = 1;
 22113  003AA4  848B               	bsf	3979,2,c	;volatile
 22114  003AA6                     l1090:
 22115                           
 22116                           ; BSR set to: 0
 22117                           ;ks0108.c: 224: }
 22118                           ;ks0108.c: 226: LATE1 = 0;
 22119  003AA6  928D               	bcf	3981,1,c	;volatile
 22120                           
 22121                           ;ks0108.c: 227: LATE2 = 0;
 22122  003AA8  948D               	bcf	3981,2,c	;volatile
 22123                           
 22124                           ;ks0108.c: 229: TRISD = 0x00;
 22125  003AAA  6A95               	clrf	3989,c	;volatile
 22126                           
 22127                           ;ks0108.c: 230: LATD = cmd;
 22128  003AAC  C088  FF8C         	movff	ks0108WriteCommand@cmd,3980	;volatile
 22129                           
 22130                           ; BSR set to: 0
 22131                           ;ks0108.c: 231: ks0108Enable();
 22132  003AB0  ECE0  F01C         	call	_ks0108Enable	;wreg free
 22133                           
 22134                           ;ks0108.c: 232: LATD = 0x00;
 22135  003AB4  6A8C               	clrf	3980,c	;volatile
 22136  003AB6  0012               	return	
 22137  003AB8                     __end_of_ks0108WriteCommand:
 22138                           	opt stack 0
 22139                           tblptru	equ	0xFF8
 22140                           tblptrh	equ	0xFF7
 22141                           tblptrl	equ	0xFF6
 22142                           tablat	equ	0xFF5
 22143                           prodh	equ	0xFF4
 22144                           prodl	equ	0xFF3
 22145                           intcon	equ	0xFF2
 22146                           postinc0	equ	0xFEE
 22147                           wreg	equ	0xFE8
 22148                           indf1	equ	0xFE7
 22149                           postinc1	equ	0xFE6
 22150                           postdec1	equ	0xFE5
 22151                           fsr1h	equ	0xFE2
 22152                           fsr1l	equ	0xFE1
 22153                           indf2	equ	0xFDF
 22154                           postinc2	equ	0xFDE
 22155                           postdec2	equ	0xFDD
 22156                           fsr2h	equ	0xFDA
 22157                           fsr2l	equ	0xFD9
 22158                           status	equ	0xFD8
 22159                           
 22160 ;; *************** function _ks0108Enable *****************
 22161 ;; Defined at:
 22162 ;;		line 19 in file "../lib/ks0108.c"
 22163 ;; Parameters:    Size  Location     Type
 22164 ;;		None
 22165 ;; Auto vars:     Size  Location     Type
 22166 ;;		None
 22167 ;; Return value:  Size  Location     Type
 22168 ;;		None               void
 22169 ;; Registers used:
 22170 ;;		wreg, status,2
 22171 ;; Tracked objects:
 22172 ;;		On entry : 0/0
 22173 ;;		On exit  : 0/0
 22174 ;;		Unchanged: 0/0
 22175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22180 ;;Total ram usage:        0 bytes
 22181 ;; Hardware stack levels used:    1
 22182 ;; Hardware stack levels required when called:    8
 22183 ;; This function calls:
 22184 ;;		Nothing
 22185 ;; This function is called by:
 22186 ;;		_ks0108WriteCommand
 22187 ;;		_ks0108WriteData
 22188 ;; This function uses a non-reentrant model
 22189 ;;
 22190                           
 22191                           	psect	text49
 22192  0039C0                     __ptext49:
 22193                           	opt stack 0
 22194  0039C0                     _ks0108Enable:
 22195                           	opt stack 16
 22196                           
 22197                           ;ks0108.c: 20: { delayus_variable=(unsigned char)(1/1); asm("movlb (_delayus_variable) >
      +                          > 8"); asm("nop"); asm("nop"); asm("nop"); asm("nop"); asm("nop"); } asm("decfsz (_delay
      +                          us_variable)&0ffh,f"); asm("goto $ - 12");;
 22198                           
 22199                           ;incstack = 0
 22200  0039C0  0E01               	movlw	1
 22201  0039C2  0100               	movlb	0	; () banked
 22202  0039C4  6FCD               	movwf	_delayus_variable& (0+255),b
 22203  0039C6  0100               	movlb	_delayus_variable shr (0+8)	;# 
 22204  0039C8  F000               	nop		;# 
 22205  0039CA  F000               	nop		;# 
 22206  0039CC  F000               	nop		;# 
 22207  0039CE  F000               	nop		;# 
 22208  0039D0  F000               	nop		;# 
 22209  0039D2  2FCD               	decfsz	_delayus_variable& (0+255),f,b	;# 
 22210  0039D4  EFE4  F01C         	goto	($+-12)	;# 
 22211                           
 22212                           ;ks0108.c: 21: LATE0 = 1;
 22213  0039D8  808D               	bsf	3981,0,c	;volatile
 22214                           
 22215                           ;ks0108.c: 22: { delayus_variable=(unsigned char)(1/1); asm("movlb (_delayus_variable) >
      +                          > 8"); asm("nop"); asm("nop"); asm("nop"); asm("nop"); asm("nop"); } asm("decfsz (_delay
      +                          us_variable)&0ffh,f"); asm("goto $ - 12");;
 22216  0039DA  F000               	nop		;# 
 22217  0039DC  F000               	nop		;# 
 22218  0039DE  F000               	nop		;# 
 22219  0039E0  F000               	nop		;# 
 22220  0039E2  F000               	nop		;# 
 22221  0039E4  2FCD               	decfsz	_delayus_variable& (0+255),f,b	;# 
 22222  0039E6  EFED  F01C         	goto	($+-12)	;# 
 22223                           
 22224                           ;ks0108.c: 23: LATE0 = 0;
 22225  0039EA  908D               	bcf	3981,0,c	;volatile
 22226  0039EC  0C01               	retlw	1
 22227  0039EE                     __end_of_ks0108Enable:
 22228                           	opt stack 0
 22229                           tblptru	equ	0xFF8
 22230                           tblptrh	equ	0xFF7
 22231                           tblptrl	equ	0xFF6
 22232                           tablat	equ	0xFF5
 22233                           prodh	equ	0xFF4
 22234                           prodl	equ	0xFF3
 22235                           intcon	equ	0xFF2
 22236                           postinc0	equ	0xFEE
 22237                           wreg	equ	0xFE8
 22238                           indf1	equ	0xFE7
 22239                           postinc1	equ	0xFE6
 22240                           postdec1	equ	0xFE5
 22241                           fsr1h	equ	0xFE2
 22242                           fsr1l	equ	0xFE1
 22243                           indf2	equ	0xFDF
 22244                           postinc2	equ	0xFDE
 22245                           postdec2	equ	0xFDD
 22246                           fsr2h	equ	0xFDA
 22247                           fsr2l	equ	0xFD9
 22248                           status	equ	0xFD8
 22249                           
 22250 ;; *************** function ___wmul *****************
 22251 ;; Defined at:
 22252 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
 22253 ;; Parameters:    Size  Location     Type
 22254 ;;  multiplier      2   39[BANK0 ] unsigned int 
 22255 ;;  multiplicand    2   41[BANK0 ] unsigned int 
 22256 ;; Auto vars:     Size  Location     Type
 22257 ;;  product         2   43[BANK0 ] unsigned int 
 22258 ;; Return value:  Size  Location     Type
 22259 ;;                  2   39[BANK0 ] unsigned int 
 22260 ;; Registers used:
 22261 ;;		wreg, status,2, status,0, prodl, prodh
 22262 ;; Tracked objects:
 22263 ;;		On entry : F/0
 22264 ;;		On exit  : F/0
 22265 ;;		Unchanged: 0/0
 22266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22267 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22268 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22270 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22271 ;;Total ram usage:        6 bytes
 22272 ;; Hardware stack levels used:    1
 22273 ;; Hardware stack levels required when called:    8
 22274 ;; This function calls:
 22275 ;;		Nothing
 22276 ;; This function is called by:
 22277 ;;		_ks0108PutChar
 22278 ;;		_sprintf
 22279 ;; This function uses a non-reentrant model
 22280 ;;
 22281                           
 22282                           	psect	text50
 22283  003AB8                     __ptext50:
 22284                           	opt stack 0
 22285  003AB8                     ___wmul:
 22286                           	opt stack 20
 22287                           
 22288                           ; BSR set to: 0
 22289                           
 22290                           ;incstack = 0
 22291  003AB8  5187               	movf	___wmul@multiplier& (0+255),w,b
 22292  003ABA  0389               	mulwf	___wmul@multiplicand& (0+255),b
 22293  003ABC  CFF3 F08B          	movff	prodl,___wmul@product
 22294  003AC0  CFF4 F08C          	movff	prodh,___wmul@product+1
 22295  003AC4  5187               	movf	___wmul@multiplier& (0+255),w,b
 22296  003AC6  038A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 22297  003AC8  50F3               	movf	prodl,w,c
 22298  003ACA  278C               	addwf	(___wmul@product+1)& (0+255),f,b
 22299  003ACC  5188               	movf	(___wmul@multiplier+1)& (0+255),w,b
 22300  003ACE  0389               	mulwf	___wmul@multiplicand& (0+255),b
 22301  003AD0  50F3               	movf	prodl,w,c
 22302  003AD2  278C               	addwf	(___wmul@product+1)& (0+255),f,b
 22303                           
 22304                           ; BSR set to: 0
 22305  003AD4  C08B  F087         	movff	___wmul@product,?___wmul
 22306  003AD8  C08C  F088         	movff	___wmul@product+1,?___wmul+1
 22307                           
 22308                           ; BSR set to: 0
 22309  003ADC  0012               	return	
 22310  003ADE                     __end_of___wmul:
 22311                           	opt stack 0
 22312                           tblptru	equ	0xFF8
 22313                           tblptrh	equ	0xFF7
 22314                           tblptrl	equ	0xFF6
 22315                           tablat	equ	0xFF5
 22316                           prodh	equ	0xFF4
 22317                           prodl	equ	0xFF3
 22318                           intcon	equ	0xFF2
 22319                           postinc0	equ	0xFEE
 22320                           wreg	equ	0xFE8
 22321                           indf1	equ	0xFE7
 22322                           postinc1	equ	0xFE6
 22323                           postdec1	equ	0xFE5
 22324                           fsr1h	equ	0xFE2
 22325                           fsr1l	equ	0xFE1
 22326                           indf2	equ	0xFDF
 22327                           postinc2	equ	0xFDE
 22328                           postdec2	equ	0xFDD
 22329                           fsr2h	equ	0xFDA
 22330                           fsr2l	equ	0xFD9
 22331                           status	equ	0xFD8
 22332                           
 22333 ;; *************** function _InitializeSystem *****************
 22334 ;; Defined at:
 22335 ;;		line 24 in file "../misc.c"
 22336 ;; Parameters:    Size  Location     Type
 22337 ;;		None
 22338 ;; Auto vars:     Size  Location     Type
 22339 ;;  pll_startup_    2   55[BANK0 ] unsigned int 
 22340 ;; Return value:  Size  Location     Type
 22341 ;;		None               void
 22342 ;; Registers used:
 22343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22344 ;; Tracked objects:
 22345 ;;		On entry : F/0
 22346 ;;		On exit  : F/0
 22347 ;;		Unchanged: 0/0
 22348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22350 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22352 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22353 ;;Total ram usage:        2 bytes
 22354 ;; Hardware stack levels used:    1
 22355 ;; Hardware stack levels required when called:    9
 22356 ;; This function calls:
 22357 ;;		_MTouchInit
 22358 ;;		_MTouchSetButton
 22359 ;;		_MTouchSetSensor
 22360 ;;		_uart16_init
 22361 ;; This function is called by:
 22362 ;;		_main
 22363 ;; This function uses a non-reentrant model
 22364 ;;
 22365                           
 22366                           	psect	text51
 22367  00109C                     __ptext51:
 22368                           	opt stack 0
 22369  00109C                     _InitializeSystem:
 22370                           	opt stack 21
 22371                           
 22372                           ; BSR set to: 0
 22373                           ;misc.c: 36: unsigned int pll_startup_counter = 600;
 22374                           
 22375                           ; BSR set to: 0
 22376                           ;incstack = 0
 22377  00109C  0E02               	movlw	2
 22378  00109E  6F98               	movwf	(InitializeSystem@pll_startup_counter+1)& (0+255),b
 22379  0010A0  0E58               	movlw	88
 22380  0010A2  6F97               	movwf	InitializeSystem@pll_startup_counter& (0+255),b
 22381                           
 22382                           ;misc.c: 38: OSCCON = 0b01110000;
 22383  0010A4  0E70               	movlw	112
 22384  0010A6  6ED3               	movwf	4051,c	;volatile
 22385                           
 22386                           ; BSR set to: 0
 22387                           ;misc.c: 39: OSCTUNEbits.PLLEN = 1;
 22388  0010A8  8C9B               	bsf	3995,6,c	;volatile
 22389  0010AA                     l6751:
 22390                           
 22391                           ; BSR set to: 0
 22392  0010AA  0797               	decf	InitializeSystem@pll_startup_counter& (0+255),f,b
 22393  0010AC  A0D8               	btfss	status,0,c
 22394  0010AE  0798               	decf	(InitializeSystem@pll_startup_counter+1)& (0+255),f,b
 22395  0010B0  0100               	movlb	0	; () banked
 22396  0010B2  2997               	incf	InitializeSystem@pll_startup_counter& (0+255),w,b
 22397  0010B4  B4D8               	btfsc	status,2,c
 22398  0010B6  2998               	incf	(InitializeSystem@pll_startup_counter+1)& (0+255),w,b
 22399  0010B8  E1F8               	bnz	l6751
 22400                           
 22401                           ; BSR set to: 0
 22402                           ;misc.c: 44: RCONbits.IPEN = 1;
 22403  0010BA  8ED0               	bsf	4048,7,c	;volatile
 22404                           
 22405                           ; BSR set to: 0
 22406                           ;misc.c: 47: T2CONbits.T2CKPS = 3;
 22407  0010BC  0E03               	movlw	3
 22408  0010BE  12BA               	iorwf	4026,f,c	;volatile
 22409                           
 22410                           ;misc.c: 48: PR2 = 200;
 22411  0010C0  0EC8               	movlw	200
 22412  0010C2  6EBB               	movwf	4027,c	;volatile
 22413                           
 22414                           ;misc.c: 49: T2CONbits.T2OUTPS = 3;
 22415  0010C4  50BA               	movf	4026,w,c	;volatile
 22416  0010C6  0B87               	andlw	-121
 22417  0010C8  0918               	iorlw	24
 22418  0010CA  6EBA               	movwf	4026,c	;volatile
 22419                           
 22420                           ; BSR set to: 0
 22421                           ;misc.c: 50: T2CONbits.TMR2ON = 1;
 22422  0010CC  84BA               	bsf	4026,2,c	;volatile
 22423                           
 22424                           ; BSR set to: 0
 22425                           ;misc.c: 51: IPR1bits.TMR2IP = 1;
 22426  0010CE  829F               	bsf	3999,1,c	;volatile
 22427                           
 22428                           ; BSR set to: 0
 22429                           ;misc.c: 52: PIR1bits.TMR2IF = 0;
 22430  0010D0  929E               	bcf	3998,1,c	;volatile
 22431                           
 22432                           ; BSR set to: 0
 22433                           ;misc.c: 53: PIE1bits.TMR2IE = 1;
 22434  0010D2  829D               	bsf	3997,1,c	;volatile
 22435                           
 22436                           ;misc.c: 56: T4CONbits.T4CKPS = 3;
 22437  0010D4  0E03               	movlw	3
 22438  0010D6  010F               	movlb	15	; () banked
 22439  0010D8  1351               	iorwf	81,f,b	;volatile
 22440                           
 22441                           ;misc.c: 57: PR4 = 100;
 22442  0010DA  0E64               	movlw	100
 22443  0010DC  6F52               	movwf	82,b	;volatile
 22444                           
 22445                           ; BSR set to: 15
 22446                           ;misc.c: 58: T4CONbits.T4OUTPS = 0;
 22447  0010DE  9751               	bcf	81,3,b	;volatile
 22448  0010E0  9951               	bcf	81,4,b	;volatile
 22449  0010E2  9B51               	bcf	81,5,b	;volatile
 22450  0010E4  9D51               	bcf	81,6,b	;volatile
 22451                           
 22452                           ; BSR set to: 15
 22453                           ;misc.c: 59: T4CONbits.TMR4ON = 1;
 22454  0010E6  8551               	bsf	81,2,b	;volatile
 22455                           
 22456                           ; BSR set to: 15
 22457                           ;misc.c: 60: IPR5bits.TMR4IP = 1;
 22458  0010E8  807F               	bsf	3967,0,c	;volatile
 22459                           
 22460                           ; BSR set to: 15
 22461                           ;misc.c: 61: PIR5bits.TMR4IF = 0;
 22462  0010EA  907E               	bcf	3966,0,c	;volatile
 22463                           
 22464                           ; BSR set to: 15
 22465                           ;misc.c: 62: PIE5bits.TMR4IE = 1;
 22466  0010EC  807D               	bsf	3965,0,c	;volatile
 22467                           
 22468                           ; BSR set to: 15
 22469                           ;misc.c: 70: MTouchInit();
 22470  0010EE  ECC4  F01D         	call	_MTouchInit	;wreg free
 22471                           
 22472                           ; BSR set to: 15
 22473                           ;misc.c: 72: ANSELA = 0b00000000;
 22474  0010F2  6B38               	clrf	56,b	;volatile
 22475                           
 22476                           ; BSR set to: 15
 22477                           ;misc.c: 73: ANSELB = 0b00000000;
 22478  0010F4  6B39               	clrf	57,b	;volatile
 22479                           
 22480                           ; BSR set to: 15
 22481                           ;misc.c: 74: ANSELC = 0b00000000;
 22482  0010F6  6B3A               	clrf	58,b	;volatile
 22483                           
 22484                           ; BSR set to: 15
 22485                           ;misc.c: 75: ANSELD = 0b00000000;
 22486  0010F8  6B3B               	clrf	59,b	;volatile
 22487                           
 22488                           ; BSR set to: 15
 22489                           ;misc.c: 76: ANSELE = 0b00000000;
 22490  0010FA  6B3C               	clrf	60,b	;volatile
 22491                           
 22492                           ; BSR set to: 15
 22493                           ;misc.c: 78: CCP5CON = 0;
 22494  0010FC  6B54               	clrf	84,b	;volatile
 22495                           
 22496                           ; BSR set to: 15
 22497                           ;misc.c: 82: MTouchSetSensor(0, &TRISB, &LATB, 0, 12, -1, -1, -1);
 22498  0010FE  0E0F               	movlw	15	;volatile
 22499  001100  0100               	movlb	0	; () banked
 22500  001102  6F88               	movwf	(MTouchSetSensor@tris+1)& (0+255),b
 22501  001104  D8DD               	call	PL42	;call to abstracted procedure
 22502  001106  6B8B               	clrf	MTouchSetSensor@ioBitNumber& (0+255),b
 22503  001108  0E0C               	movlw	12
 22504  00110A  D8D3               	call	PL12	;call to abstracted procedure
 22505  00110C  0E00               	movlw	0
 22506  00110E  ECFB  F00D         	call	_MTouchSetSensor
 22507                           
 22508                           ; BSR set to: 0
 22509                           ;misc.c: 83: MTouchSetSensor(1, &TRISB, &LATB, 1, 10, -1, -1, -1);
 22510  001112  0E0F               	movlw	15	;volatile
 22511  001114  6F88               	movwf	(MTouchSetSensor@tris+1)& (0+255),b
 22512  001116  D8D4               	call	PL42	;call to abstracted procedure
 22513  001118  0E01               	movlw	1
 22514  00111A  6F8B               	movwf	MTouchSetSensor@ioBitNumber& (0+255),b
 22515  00111C  0E0A               	movlw	10
 22516  00111E  D8C9               	call	PL12	;call to abstracted procedure
 22517  001120  0E01               	movlw	1
 22518  001122  ECFB  F00D         	call	_MTouchSetSensor
 22519                           
 22520                           ; BSR set to: 0
 22521                           ;misc.c: 84: MTouchSetSensor(2, &TRISB, &LATB, 2, 8, -1, -1, -1);
 22522  001126  0E0F               	movlw	15	;volatile
 22523  001128  6F88               	movwf	(MTouchSetSensor@tris+1)& (0+255),b
 22524  00112A  D8CA               	call	PL42	;call to abstracted procedure
 22525  00112C  0E02               	movlw	2
 22526  00112E  6F8B               	movwf	MTouchSetSensor@ioBitNumber& (0+255),b
 22527  001130  0E08               	movlw	8
 22528  001132  D8BF               	call	PL12	;call to abstracted procedure
 22529  001134  0E02               	movlw	2
 22530  001136  ECFB  F00D         	call	_MTouchSetSensor
 22531                           
 22532                           ; BSR set to: 0
 22533                           ;misc.c: 85: MTouchSetSensor(3, &TRISB, &LATB, 5, 13, -1, -1, -1);
 22534  00113A  0E0F               	movlw	15	;volatile
 22535  00113C  6F88               	movwf	(MTouchSetSensor@tris+1)& (0+255),b
 22536  00113E  D8C0               	call	PL42	;call to abstracted procedure
 22537  001140  0E05               	movlw	5
 22538  001142  6F8B               	movwf	MTouchSetSensor@ioBitNumber& (0+255),b
 22539  001144  0E0D               	movlw	13
 22540  001146  D8B5               	call	PL12	;call to abstracted procedure
 22541  001148  0E03               	movlw	3
 22542  00114A  ECFB  F00D         	call	_MTouchSetSensor
 22543                           
 22544                           ; BSR set to: 0
 22545                           ;misc.c: 86: MTouchSetSensor(4, &TRISA, &LATA, 0, 0, -1, -1, -1);
 22546  00114E  0E0F               	movlw	15	;volatile
 22547  001150  6F88               	movwf	(MTouchSetSensor@tris+1)& (0+255),b
 22548  001152  D8BD               	call	PL58	;call to abstracted procedure
 22549  001154  6B8B               	clrf	MTouchSetSensor@ioBitNumber& (0+255),b
 22550  001156  6B8C               	clrf	MTouchSetSensor@channelNumber& (0+255),b
 22551  001158  698E               	setf	(MTouchSetSensor@threshold+1)& (0+255),b
 22552  00115A  698D               	setf	MTouchSetSensor@threshold& (0+255),b
 22553  00115C  6990               	setf	(MTouchSetSensor@oversampling+1)& (0+255),b
 22554  00115E  698F               	setf	MTouchSetSensor@oversampling& (0+255),b
 22555  001160  6991               	setf	MTouchSetSensor@chargeDelay& (0+255),b
 22556  001162  0E04               	movlw	4
 22557  001164  ECFB  F00D         	call	_MTouchSetSensor
 22558                           
 22559                           ; BSR set to: 0
 22560                           ;misc.c: 87: MTouchSetSensor(5, &TRISA, &LATA, 1, 1, -1, -1, -1);
 22561  001168  0E0F               	movlw	15	;volatile
 22562  00116A  6F88               	movwf	(MTouchSetSensor@tris+1)& (0+255),b
 22563  00116C  D8B0               	call	PL58	;call to abstracted procedure
 22564  00116E  0E01               	movlw	1
 22565  001170  6F8B               	movwf	MTouchSetSensor@ioBitNumber& (0+255),b
 22566  001172  D89F               	call	PL12	;call to abstracted procedure
 22567  001174  0E05               	movlw	5
 22568  001176  ECFB  F00D         	call	_MTouchSetSensor
 22569                           
 22570                           ; BSR set to: 0
 22571                           ;misc.c: 88: MTouchSetSensor(6, &TRISB, &LATB, 4, 11, -1, -1, -1);
 22572  00117A  0E0F               	movlw	15	;volatile
 22573  00117C  6F88               	movwf	(MTouchSetSensor@tris+1)& (0+255),b
 22574  00117E  D8A0               	call	PL42	;call to abstracted procedure
 22575  001180  0E04               	movlw	4
 22576  001182  6F8B               	movwf	MTouchSetSensor@ioBitNumber& (0+255),b
 22577  001184  0E0B               	movlw	11
 22578  001186  D895               	call	PL12	;call to abstracted procedure
 22579  001188  0E06               	movlw	6
 22580  00118A  ECFB  F00D         	call	_MTouchSetSensor
 22581                           
 22582                           ; BSR set to: 0
 22583                           ;misc.c: 89: MTouchSetSensor(7, &TRISB, &LATB, 3, 9, -1, -1, -1);
 22584  00118E  0E0F               	movlw	15	;volatile
 22585  001190  6F88               	movwf	(MTouchSetSensor@tris+1)& (0+255),b
 22586  001192  D896               	call	PL42	;call to abstracted procedure
 22587  001194  0E03               	movlw	3
 22588  001196  6F8B               	movwf	MTouchSetSensor@ioBitNumber& (0+255),b
 22589  001198  0E09               	movlw	9
 22590  00119A  D88B               	call	PL12	;call to abstracted procedure
 22591  00119C  0E07               	movlw	7
 22592  00119E  ECFB  F00D         	call	_MTouchSetSensor
 22593                           
 22594                           ; BSR set to: 0
 22595                           ;misc.c: 90: MTouchSetSensor(8, &TRISA, &LATA, 2, 2, -1, -1, -1);
 22596  0011A2  0E0F               	movlw	15	;volatile
 22597  0011A4  6F88               	movwf	(MTouchSetSensor@tris+1)& (0+255),b
 22598  0011A6  D893               	call	PL58	;call to abstracted procedure
 22599  0011A8  0E02               	movlw	2
 22600  0011AA  6F8B               	movwf	MTouchSetSensor@ioBitNumber& (0+255),b
 22601  0011AC  D882               	call	PL12	;call to abstracted procedure
 22602  0011AE  0E08               	movlw	8
 22603  0011B0  ECFB  F00D         	call	_MTouchSetSensor
 22604                           
 22605                           ; BSR set to: 0
 22606                           ;misc.c: 91: MTouchSetSensor(9, &TRISA, &LATA, 3, 3, -1, -1, -1);
 22607  0011B4  0E0F               	movlw	15	;volatile
 22608  0011B6  6F88               	movwf	(MTouchSetSensor@tris+1)& (0+255),b
 22609  0011B8  D88A               	call	PL58	;call to abstracted procedure
 22610  0011BA  0E03               	movlw	3
 22611  0011BC  6F8B               	movwf	MTouchSetSensor@ioBitNumber& (0+255),b
 22612  0011BE  D879               	call	PL12	;call to abstracted procedure
 22613  0011C0  0E09               	movlw	9
 22614  0011C2  ECFB  F00D         	call	_MTouchSetSensor
 22615                           
 22616                           ; BSR set to: 0
 22617                           ;misc.c: 92: MTouchSetSensor(10, &TRISA, &LATA, 5, 4, -1, -1, -1);
 22618  0011C6  0E0F               	movlw	15	;volatile
 22619  0011C8  6F88               	movwf	(MTouchSetSensor@tris+1)& (0+255),b
 22620  0011CA  D881               	call	PL58	;call to abstracted procedure
 22621  0011CC  0E05               	movlw	5
 22622  0011CE  6F8B               	movwf	MTouchSetSensor@ioBitNumber& (0+255),b
 22623  0011D0  0E04               	movlw	4
 22624  0011D2  D86F               	call	PL12	;call to abstracted procedure
 22625  0011D4  0E0A               	movlw	10
 22626  0011D6  ECFB  F00D         	call	_MTouchSetSensor
 22627                           
 22628                           ; BSR set to: 0
 22629                           ;misc.c: 124: MTouchSetButton(KEY_0_AVT_PWR_220, 0, DECODE_ONE_EVENT);
 22630  0011DA  6B87               	clrf	MTouchSetButton@sensorNumber& (0+255),b
 22631  0011DC  0E10               	movlw	16
 22632  0011DE  6F88               	movwf	MTouchSetButton@decode& (0+255),b
 22633  0011E0  0E00               	movlw	0
 22634  0011E2  EC46  F018         	call	_MTouchSetButton
 22635                           
 22636                           ; BSR set to: 0
 22637                           ;misc.c: 125: MTouchSetButton(KEY_1_LT_NOSHY, 1, DECODE_ONE_EVENT);
 22638  0011E6  0E01               	movlw	1
 22639  0011E8  6F87               	movwf	MTouchSetButton@sensorNumber& (0+255),b
 22640  0011EA  0E10               	movlw	16
 22641  0011EC  6F88               	movwf	MTouchSetButton@decode& (0+255),b
 22642  0011EE  0E01               	movlw	1
 22643  0011F0  EC46  F018         	call	_MTouchSetButton
 22644                           
 22645                           ; BSR set to: 0
 22646                           ;misc.c: 126: MTouchSetButton(KEY_2_LT_SALON_M, 2, DECODE_ONE_EVENT);
 22647  0011F4  0E02               	movlw	2
 22648  0011F6  6F87               	movwf	MTouchSetButton@sensorNumber& (0+255),b
 22649  0011F8  0E10               	movlw	16
 22650  0011FA  6F88               	movwf	MTouchSetButton@decode& (0+255),b
 22651  0011FC  0E02               	movlw	2
 22652  0011FE  EC46  F018         	call	_MTouchSetButton
 22653                           
 22654                           ; BSR set to: 0
 22655                           ;misc.c: 127: MTouchSetButton(KEY_3_LT_SALON_P, 3, DECODE_ONE_EVENT);
 22656  001202  0E03               	movlw	3
 22657  001204  6F87               	movwf	MTouchSetButton@sensorNumber& (0+255),b
 22658  001206  0E10               	movlw	16
 22659  001208  6F88               	movwf	MTouchSetButton@decode& (0+255),b
 22660  00120A  0E03               	movlw	3
 22661  00120C  EC46  F018         	call	_MTouchSetButton
 22662                           
 22663                           ; BSR set to: 0
 22664                           ;misc.c: 128: MTouchSetButton(KEY_4_VENT_OUT, 4, DECODE_ONE_EVENT);
 22665  001210  0E04               	movlw	4
 22666  001212  6F87               	movwf	MTouchSetButton@sensorNumber& (0+255),b
 22667  001214  0E10               	movlw	16
 22668  001216  6F88               	movwf	MTouchSetButton@decode& (0+255),b
 22669  001218  0E04               	movlw	4
 22670  00121A  EC46  F018         	call	_MTouchSetButton
 22671                           
 22672                           ; BSR set to: 0
 22673                           ;misc.c: 129: MTouchSetButton(KEY_5_VENT_IN, 5, DECODE_ONE_EVENT);
 22674  00121E  0E05               	movlw	5
 22675  001220  6F87               	movwf	MTouchSetButton@sensorNumber& (0+255),b
 22676  001222  0E10               	movlw	16
 22677  001224  6F88               	movwf	MTouchSetButton@decode& (0+255),b
 22678  001226  0E05               	movlw	5
 22679  001228  EC46  F018         	call	_MTouchSetButton
 22680                           
 22681                           ; BSR set to: 0
 22682                           ;misc.c: 130: MTouchSetButton(KEY_6_ROZ_ON, 6, DECODE_ONE_EVENT);
 22683  00122C  0E06               	movlw	6
 22684  00122E  6F87               	movwf	MTouchSetButton@sensorNumber& (0+255),b
 22685  001230  0E10               	movlw	16
 22686  001232  6F88               	movwf	MTouchSetButton@decode& (0+255),b
 22687  001234  0E06               	movlw	6
 22688  001236  EC46  F018         	call	_MTouchSetButton
 22689                           
 22690                           ; BSR set to: 0
 22691                           ;misc.c: 131: MTouchSetButton(KEY_7_LT_OUT_BACK, 7, DECODE_ONE_EVENT);
 22692  00123A  0E07               	movlw	7
 22693  00123C  6F87               	movwf	MTouchSetButton@sensorNumber& (0+255),b
 22694  00123E  0E10               	movlw	16
 22695  001240  6F88               	movwf	MTouchSetButton@decode& (0+255),b
 22696  001242  0E07               	movlw	7
 22697  001244  EC46  F018         	call	_MTouchSetButton
 22698                           
 22699                           ; BSR set to: 0
 22700                           ;misc.c: 132: MTouchSetButton(KEY_8_LT_OUT_SIDE, 8, DECODE_ONE_EVENT);
 22701  001248  0E08               	movlw	8
 22702  00124A  6F87               	movwf	MTouchSetButton@sensorNumber& (0+255),b
 22703  00124C  0E10               	movlw	16
 22704  00124E  6F88               	movwf	MTouchSetButton@decode& (0+255),b
 22705  001250  0E08               	movlw	8
 22706  001252  EC46  F018         	call	_MTouchSetButton
 22707                           
 22708                           ; BSR set to: 0
 22709                           ;misc.c: 133: MTouchSetButton(KEY_9_LT_KOND_M, 9, DECODE_ONE_EVENT);
 22710  001256  0E09               	movlw	9
 22711  001258  6F87               	movwf	MTouchSetButton@sensorNumber& (0+255),b
 22712  00125A  0E10               	movlw	16
 22713  00125C  6F88               	movwf	MTouchSetButton@decode& (0+255),b
 22714  00125E  0E09               	movlw	9
 22715  001260  EC46  F018         	call	_MTouchSetButton
 22716                           
 22717                           ; BSR set to: 0
 22718                           ;misc.c: 134: MTouchSetButton(KEY_10_LT_KOND_P, 10, DECODE_ONE_EVENT);
 22719  001264  0E0A               	movlw	10
 22720  001266  6F87               	movwf	MTouchSetButton@sensorNumber& (0+255),b
 22721  001268  0E10               	movlw	16
 22722  00126A  6F88               	movwf	MTouchSetButton@decode& (0+255),b
 22723  00126C  0E0A               	movlw	10
 22724  00126E  EC46  F018         	call	_MTouchSetButton
 22725                           
 22726                           ; BSR set to: 0
 22727                           ;misc.c: 137: MTouchSetButton(KEY_2_LT_SALON_MM, 2, DECODE_PRESS_REPEAT );
 22728  001272  0E02               	movlw	2
 22729  001274  6F87               	movwf	MTouchSetButton@sensorNumber& (0+255),b
 22730  001276  0E08               	movlw	8
 22731  001278  6F88               	movwf	MTouchSetButton@decode& (0+255),b
 22732  00127A  0E0B               	movlw	11
 22733  00127C  EC46  F018         	call	_MTouchSetButton
 22734                           
 22735                           ; BSR set to: 0
 22736                           ;misc.c: 138: MTouchSetButton(KEY_3_LT_SALON_PP, 3, DECODE_PRESS_REPEAT );
 22737  001280  0E03               	movlw	3
 22738  001282  6F87               	movwf	MTouchSetButton@sensorNumber& (0+255),b
 22739  001284  0E08               	movlw	8
 22740  001286  6F88               	movwf	MTouchSetButton@decode& (0+255),b
 22741  001288  0E0C               	movlw	12
 22742  00128A  EC46  F018         	call	_MTouchSetButton
 22743                           
 22744                           ; BSR set to: 0
 22745                           ;misc.c: 140: uart16_init();
 22746  00128E  ECB5  F01D         	call	_uart16_init	;wreg free
 22747                           
 22748                           ; BSR set to: 0
 22749                           ;misc.c: 141: TRISCbits.TRISC6 = 0;
 22750  001292  9C94               	bcf	3988,6,c	;volatile
 22751                           
 22752                           ; BSR set to: 0
 22753                           ;misc.c: 142: TRISCbits.TRISC7 = 1;
 22754  001294  8E94               	bsf	3988,7,c	;volatile
 22755                           
 22756                           ; BSR set to: 0
 22757                           ;misc.c: 143: RCIP = 0;
 22758  001296  9A9F               	bcf	3999,5,c	;volatile
 22759                           
 22760                           ; BSR set to: 0
 22761                           ;misc.c: 144: RCIE = 1;
 22762  001298  8A9D               	bsf	3997,5,c	;volatile
 22763                           
 22764                           ; BSR set to: 0
 22765                           ;misc.c: 146: TRISBbits.TRISB6 = 0;
 22766  00129A  9C93               	bcf	3987,6,c	;volatile
 22767                           
 22768                           ; BSR set to: 0
 22769                           ;misc.c: 147: TRISBbits.TRISB7 = 0;
 22770  00129C  9E93               	bcf	3987,7,c	;volatile
 22771                           
 22772                           ; BSR set to: 0
 22773                           ;misc.c: 148: TRISAbits.TRISA6 = 0;
 22774  00129E  9C92               	bcf	3986,6,c	;volatile
 22775                           
 22776                           ; BSR set to: 0
 22777                           ;misc.c: 149: TRISAbits.TRISA7 = 0;
 22778  0012A0  9E92               	bcf	3986,7,c	;volatile
 22779                           
 22780                           ; BSR set to: 0
 22781                           ;misc.c: 151: LATBbits.LATB6 = 0;
 22782  0012A2  9C8A               	bcf	3978,6,c	;volatile
 22783                           
 22784                           ; BSR set to: 0
 22785                           ;misc.c: 152: LATBbits.LATB7 = 0;
 22786  0012A4  9E8A               	bcf	3978,7,c	;volatile
 22787                           
 22788                           ; BSR set to: 0
 22789                           ;misc.c: 153: LATAbits.LATA6 = 0;
 22790  0012A6  9C89               	bcf	3977,6,c	;volatile
 22791                           
 22792                           ; BSR set to: 0
 22793                           ;misc.c: 154: LATAbits.LATA7 = 0;
 22794  0012A8  9E89               	bcf	3977,7,c	;volatile
 22795                           
 22796                           ; BSR set to: 0
 22797                           ;misc.c: 157: TRISCbits.TRISC4 = 0;
 22798  0012AA  9894               	bcf	3988,4,c	;volatile
 22799                           
 22800                           ; BSR set to: 0
 22801                           ;misc.c: 158: LATCbits.LATC4 = 1;
 22802  0012AC  888B               	bsf	3979,4,c	;volatile
 22803                           
 22804                           ; BSR set to: 0
 22805                           ;misc.c: 161: INTCONbits.PEIE = 1;
 22806  0012AE  8CF2               	bsf	intcon,6,c	;volatile
 22807                           
 22808                           ; BSR set to: 0
 22809  0012B0  0012               	return	
 22810  0012B2                     __end_of_InitializeSystem:
 22811                           	opt stack 0
 22812  0012B2                     PL12:
 22813                           	opt stack 21
 22814  0012B2  6F8C               	movwf	MTouchSetSensor@channelNumber& (0+255),b
 22815  0012B4  698E               	setf	(MTouchSetSensor@threshold+1)& (0+255),b
 22816  0012B6  698D               	setf	MTouchSetSensor@threshold& (0+255),b
 22817  0012B8  6990               	setf	(MTouchSetSensor@oversampling+1)& (0+255),b
 22818  0012BA  698F               	setf	MTouchSetSensor@oversampling& (0+255),b
 22819  0012BC  6991               	setf	MTouchSetSensor@chargeDelay& (0+255),b
 22820  0012BE  0012               	return	
 22821  0012C0                     __end_ofPL12:
 22822                           	opt stack 0
 22823  0012C0                     PL42:
 22824                           	opt stack 21
 22825  0012C0  0E93               	movlw	147	;volatile
 22826  0012C2  6F87               	movwf	MTouchSetSensor@tris& (0+255),b
 22827  0012C4  0E0F               	movlw	15	;volatile
 22828  0012C6  6F8A               	movwf	(MTouchSetSensor@lat+1)& (0+255),b
 22829  0012C8  0E8A               	movlw	138	;volatile
 22830  0012CA  6F89               	movwf	MTouchSetSensor@lat& (0+255),b
 22831  0012CC  0C8A               	retlw	138
 22832  0012CE                     __end_ofPL42:
 22833                           	opt stack 0
 22834  0012CE                     PL58:
 22835                           	opt stack 21
 22836  0012CE  0E92               	movlw	146	;volatile
 22837  0012D0  6F87               	movwf	MTouchSetSensor@tris& (0+255),b
 22838  0012D2  0E0F               	movlw	15	;volatile
 22839  0012D4  6F8A               	movwf	(MTouchSetSensor@lat+1)& (0+255),b
 22840  0012D6  0E89               	movlw	137	;volatile
 22841  0012D8  6F89               	movwf	MTouchSetSensor@lat& (0+255),b
 22842  0012DA  0C89               	retlw	137
 22843  0012DC                     __end_ofPL58:
 22844                           	opt stack 0
 22845                           tblptru	equ	0xFF8
 22846                           tblptrh	equ	0xFF7
 22847                           tblptrl	equ	0xFF6
 22848                           tablat	equ	0xFF5
 22849                           prodh	equ	0xFF4
 22850                           prodl	equ	0xFF3
 22851                           intcon	equ	0xFF2
 22852                           postinc0	equ	0xFEE
 22853                           wreg	equ	0xFE8
 22854                           indf1	equ	0xFE7
 22855                           postinc1	equ	0xFE6
 22856                           postdec1	equ	0xFE5
 22857                           fsr1h	equ	0xFE2
 22858                           fsr1l	equ	0xFE1
 22859                           indf2	equ	0xFDF
 22860                           postinc2	equ	0xFDE
 22861                           postdec2	equ	0xFDD
 22862                           fsr2h	equ	0xFDA
 22863                           fsr2l	equ	0xFD9
 22864                           status	equ	0xFD8
 22865                           
 22866 ;; *************** function _uart16_init *****************
 22867 ;; Defined at:
 22868 ;;		line 27 in file "../lib/usart.c"
 22869 ;; Parameters:    Size  Location     Type
 22870 ;;		None
 22871 ;; Auto vars:     Size  Location     Type
 22872 ;;		None
 22873 ;; Return value:  Size  Location     Type
 22874 ;;		None               void
 22875 ;; Registers used:
 22876 ;;		wreg, status,2
 22877 ;; Tracked objects:
 22878 ;;		On entry : F/0
 22879 ;;		On exit  : F/0
 22880 ;;		Unchanged: F/0
 22881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22886 ;;Total ram usage:        0 bytes
 22887 ;; Hardware stack levels used:    1
 22888 ;; Hardware stack levels required when called:    8
 22889 ;; This function calls:
 22890 ;;		Nothing
 22891 ;; This function is called by:
 22892 ;;		_InitializeSystem
 22893 ;; This function uses a non-reentrant model
 22894 ;;
 22895                           
 22896                           	psect	text52
 22897  003B6A                     __ptext52:
 22898                           	opt stack 0
 22899  003B6A                     _uart16_init:
 22900                           	opt stack 21
 22901                           
 22902                           ; BSR set to: 0
 22903                           ;usart.c: 29: SPBRG = ((64000000ul)/(64UL * 9600))-1;
 22904                           
 22905                           ; BSR set to: 0
 22906                           ;incstack = 0
 22907  003B6A  0E67               	movlw	103
 22908  003B6C  6EAF               	movwf	4015,c	;volatile
 22909                           
 22910                           ; BSR set to: 0
 22911                           ;usart.c: 30: BRGH1 = 0;
 22912  003B6E  94AC               	bcf	4012,2,c	;volatile
 22913                           
 22914                           ; BSR set to: 0
 22915                           ;usart.c: 34: BRG161 = 0;
 22916  003B70  96B8               	bcf	4024,3,c	;volatile
 22917                           
 22918                           ; BSR set to: 0
 22919                           ;usart.c: 37: SYNC1 = 0;
 22920  003B72  98AC               	bcf	4012,4,c	;volatile
 22921                           
 22922                           ; BSR set to: 0
 22923                           ;usart.c: 38: SPEN1 = 1;
 22924  003B74  8EAB               	bsf	4011,7,c	;volatile
 22925                           
 22926                           ; BSR set to: 0
 22927                           ;usart.c: 39: CREN1 = 1;
 22928  003B76  88AB               	bsf	4011,4,c	;volatile
 22929                           
 22930                           ; BSR set to: 0
 22931                           ;usart.c: 40: SREN1 = 0;
 22932  003B78  9AAB               	bcf	4011,5,c	;volatile
 22933                           
 22934                           ; BSR set to: 0
 22935                           ;usart.c: 41: TXIE = 0;
 22936  003B7A  989D               	bcf	3997,4,c	;volatile
 22937                           
 22938                           ; BSR set to: 0
 22939                           ;usart.c: 42: RCIE = 0;
 22940  003B7C  9A9D               	bcf	3997,5,c	;volatile
 22941                           
 22942                           ; BSR set to: 0
 22943                           ;usart.c: 43: TX91 = 0;
 22944  003B7E  9CAC               	bcf	4012,6,c	;volatile
 22945                           
 22946                           ; BSR set to: 0
 22947                           ;usart.c: 44: RX91 = 0;
 22948  003B80  9CAB               	bcf	4011,6,c	;volatile
 22949                           
 22950                           ; BSR set to: 0
 22951                           ;usart.c: 45: TXEN1 = 0;
 22952  003B82  9AAC               	bcf	4012,5,c	;volatile
 22953                           
 22954                           ; BSR set to: 0
 22955                           ;usart.c: 46: TXEN1 = 1;
 22956  003B84  8AAC               	bsf	4012,5,c	;volatile
 22957                           
 22958                           ; BSR set to: 0
 22959  003B86  0C67               	retlw	103
 22960  003B88                     __end_of_uart16_init:
 22961                           	opt stack 0
 22962                           tblptru	equ	0xFF8
 22963                           tblptrh	equ	0xFF7
 22964                           tblptrl	equ	0xFF6
 22965                           tablat	equ	0xFF5
 22966                           prodh	equ	0xFF4
 22967                           prodl	equ	0xFF3
 22968                           intcon	equ	0xFF2
 22969                           postinc0	equ	0xFEE
 22970                           wreg	equ	0xFE8
 22971                           indf1	equ	0xFE7
 22972                           postinc1	equ	0xFE6
 22973                           postdec1	equ	0xFE5
 22974                           fsr1h	equ	0xFE2
 22975                           fsr1l	equ	0xFE1
 22976                           indf2	equ	0xFDF
 22977                           postinc2	equ	0xFDE
 22978                           postdec2	equ	0xFDD
 22979                           fsr2h	equ	0xFDA
 22980                           fsr2l	equ	0xFD9
 22981                           status	equ	0xFD8
 22982                           
 22983 ;; *************** function _MTouchSetSensor *****************
 22984 ;; Defined at:
 22985 ;;		line 78 in file "../lib/mTouchCap/mTouchSensor.c"
 22986 ;; Parameters:    Size  Location     Type
 22987 ;;  sensorNumber    1    wreg     unsigned char 
 22988 ;;  tris            2   39[BANK0 ] PTR volatile unsigned ch
 22989 ;;		 -> TRISA(1), TRISB(1), 
 22990 ;;  lat             2   41[BANK0 ] PTR volatile unsigned ch
 22991 ;;		 -> LATA(1), LATB(1), 
 22992 ;;  ioBitNumber     1   43[BANK0 ] unsigned char 
 22993 ;;  channelNumbe    1   44[BANK0 ] unsigned char 
 22994 ;;  threshold       2   45[BANK0 ] short 
 22995 ;;  oversampling    2   47[BANK0 ] short 
 22996 ;;  chargeDelay     1   49[BANK0 ] char 
 22997 ;; Auto vars:     Size  Location     Type
 22998 ;;  sensorNumber    1   52[BANK0 ] unsigned char 
 22999 ;;  pSensor         2   53[BANK0 ] PTR struct tag_SENSOR
 23000 ;;		 -> sensors(352), 
 23001 ;; Return value:  Size  Location     Type
 23002 ;;		None               void
 23003 ;; Registers used:
 23004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23005 ;; Tracked objects:
 23006 ;;		On entry : F/0
 23007 ;;		On exit  : F/0
 23008 ;;		Unchanged: 0/0
 23009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23010 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23011 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23012 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23013 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23014 ;;Total ram usage:       16 bytes
 23015 ;; Hardware stack levels used:    1
 23016 ;; Hardware stack levels required when called:    8
 23017 ;; This function calls:
 23018 ;;		Nothing
 23019 ;; This function is called by:
 23020 ;;		_InitializeSystem
 23021 ;; This function uses a non-reentrant model
 23022 ;;
 23023                           
 23024                           	psect	text53
 23025  001BF6                     __ptext53:
 23026                           	opt stack 0
 23027  001BF6                     _MTouchSetSensor:
 23028                           	opt stack 21
 23029                           
 23030                           ; BSR set to: 0
 23031                           ;incstack = 0
 23032                           ;MTouchSetSensor@sensorNumber stored from wreg
 23033  001BF6  6F94               	movwf	MTouchSetSensor@sensorNumber& (0+255),b
 23034                           
 23035                           ; BSR set to: 0
 23036                           ;mTouchSensor.c: 81: SENSOR* pSensor;
 23037                           ;mTouchSensor.c: 83: pSensor = (SENSOR*)sensors + sensorNumber;
 23038  001BF8  5194               	movf	MTouchSetSensor@sensorNumber& (0+255),w,b
 23039  001BFA  0D20               	mullw	32
 23040  001BFC  0E00               	movlw	low _sensors
 23041  001BFE  24F3               	addwf	prodl,w,c
 23042  001C00  6F95               	movwf	MTouchSetSensor@pSensor& (0+255),b
 23043  001C02  0E04               	movlw	high _sensors
 23044  001C04  20F4               	addwfc	prodh,w,c
 23045  001C06  6F96               	movwf	(MTouchSetSensor@pSensor+1)& (0+255),b
 23046                           
 23047                           ; BSR set to: 0
 23048                           ;mTouchSensor.c: 85: if(threshold > 0)
 23049  001C08  518E               	movf	(MTouchSetSensor@threshold+1)& (0+255),w,b
 23050  001C0A  0A80               	xorlw	128
 23051  001C0C  0F80               	addlw	-128
 23052  001C0E  0E01               	movlw	1
 23053  001C10  B4D8               	btfsc	status,2,c
 23054  001C12  5D8D               	subwf	MTouchSetSensor@threshold& (0+255),w,b
 23055  001C14  E31A               	bnc	l6023
 23056                           
 23057                           ; BSR set to: 0
 23058                           ;mTouchSensor.c: 86: {
 23059                           ;mTouchSensor.c: 87: pSensor->pressThreshold = threshold;
 23060  001C16  EE20 F012          	lfsr	2,18
 23061  001C1A  5195               	movf	MTouchSetSensor@pSensor& (0+255),w,b
 23062  001C1C  26D9               	addwf	fsr2l,f,c
 23063  001C1E  5196               	movf	(MTouchSetSensor@pSensor+1)& (0+255),w,b
 23064  001C20  22DA               	addwfc	fsr2h,f,c
 23065  001C22  C08D  FFDE         	movff	MTouchSetSensor@threshold,postinc2
 23066  001C26  C08E  FFDD         	movff	MTouchSetSensor@threshold+1,postdec2
 23067                           
 23068                           ;mTouchSensor.c: 88: pSensor->releaseThreshold = threshold>>1;
 23069  001C2A  358E               	rlcf	(MTouchSetSensor@threshold+1)& (0+255),w,b
 23070  001C2C  318E               	rrcf	(MTouchSetSensor@threshold+1)& (0+255),w,b
 23071  001C2E  6F93               	movwf	(??_MTouchSetSensor+1)& (0+255),b
 23072  001C30  318D               	rrcf	MTouchSetSensor@threshold& (0+255),w,b
 23073  001C32  6F92               	movwf	??_MTouchSetSensor& (0+255),b
 23074  001C34  EE20 F014          	lfsr	2,20
 23075  001C38  5195               	movf	MTouchSetSensor@pSensor& (0+255),w,b
 23076  001C3A  26D9               	addwf	fsr2l,f,c
 23077  001C3C  5196               	movf	(MTouchSetSensor@pSensor+1)& (0+255),w,b
 23078  001C3E  22DA               	addwfc	fsr2h,f,c
 23079  001C40  C092  FFDE         	movff	??_MTouchSetSensor,postinc2
 23080  001C44  C093  FFDD         	movff	??_MTouchSetSensor+1,postdec2
 23081                           
 23082                           ;mTouchSensor.c: 89: }else{
 23083  001C48  D00F               	goto	l78
 23084  001C4A                     l6023:
 23085                           
 23086                           ; BSR set to: 0
 23087                           ;mTouchSensor.c: 90: pSensor->pressThreshold = 800;
 23088  001C4A  EE20 F012          	lfsr	2,18
 23089  001C4E  D88C               	call	PL128	;call to abstracted procedure
 23090  001C50  0E03               	movlw	3
 23091  001C52  6EDD               	movwf	postdec2,c
 23092                           
 23093                           ;mTouchSensor.c: 91: pSensor->releaseThreshold = 800>>1;
 23094  001C54  EE20 F014          	lfsr	2,20
 23095  001C58  5195               	movf	MTouchSetSensor@pSensor& (0+255),w,b
 23096  001C5A  26D9               	addwf	fsr2l,f,c
 23097  001C5C  5196               	movf	(MTouchSetSensor@pSensor+1)& (0+255),w,b
 23098  001C5E  22DA               	addwfc	fsr2h,f,c
 23099  001C60  0E90               	movlw	144
 23100  001C62  6EDE               	movwf	postinc2,c
 23101  001C64  0E01               	movlw	1
 23102  001C66  6EDD               	movwf	postdec2,c
 23103  001C68                     l78:
 23104                           
 23105                           ; BSR set to: 0
 23106                           ;mTouchSensor.c: 92: }
 23107                           ;mTouchSensor.c: 93: pSensor->trisReg = tris;
 23108  001C68  EE20 F008          	lfsr	2,8
 23109  001C6C  5195               	movf	MTouchSetSensor@pSensor& (0+255),w,b
 23110  001C6E  26D9               	addwf	fsr2l,f,c
 23111  001C70  5196               	movf	(MTouchSetSensor@pSensor+1)& (0+255),w,b
 23112  001C72  22DA               	addwfc	fsr2h,f,c
 23113  001C74  C087  FFDE         	movff	MTouchSetSensor@tris,postinc2
 23114  001C78  C088  FFDD         	movff	MTouchSetSensor@tris+1,postdec2
 23115                           
 23116                           ;mTouchSensor.c: 94: pSensor->latReg = lat;
 23117  001C7C  EE20 F00A          	lfsr	2,10
 23118  001C80  5195               	movf	MTouchSetSensor@pSensor& (0+255),w,b
 23119  001C82  26D9               	addwf	fsr2l,f,c
 23120  001C84  5196               	movf	(MTouchSetSensor@pSensor+1)& (0+255),w,b
 23121  001C86  22DA               	addwfc	fsr2h,f,c
 23122  001C88  C089  FFDE         	movff	MTouchSetSensor@lat,postinc2
 23123  001C8C  C08A  FFDD         	movff	MTouchSetSensor@lat+1,postdec2
 23124                           
 23125                           ;mTouchSensor.c: 95: pSensor->ioMask = 1<<ioBitNumber;
 23126  001C90  EE20 F01D          	lfsr	2,29
 23127  001C94  5195               	movf	MTouchSetSensor@pSensor& (0+255),w,b
 23128  001C96  26D9               	addwf	fsr2l,f,c
 23129  001C98  5196               	movf	(MTouchSetSensor@pSensor+1)& (0+255),w,b
 23130  001C9A  22DA               	addwfc	fsr2h,f,c
 23131  001C9C  C08B  F092         	movff	MTouchSetSensor@ioBitNumber,??_MTouchSetSensor
 23132  001CA0  0E01               	movlw	1
 23133  001CA2  6F93               	movwf	(??_MTouchSetSensor+1)& (0+255),b
 23134  001CA4  2B92               	incf	??_MTouchSetSensor& (0+255),f,b
 23135  001CA6  D002               	goto	u5834
 23136  001CA8                     u5835:
 23137  001CA8  90D8               	bcf	status,0,c
 23138  001CAA  3793               	rlcf	(??_MTouchSetSensor+1)& (0+255),f,b
 23139  001CAC                     u5834:
 23140  001CAC  2F92               	decfsz	??_MTouchSetSensor& (0+255),f,b
 23141  001CAE  D7FC               	goto	u5835
 23142  001CB0  5193               	movf	(??_MTouchSetSensor+1)& (0+255),w,b
 23143  001CB2  6EDF               	movwf	indf2,c
 23144                           
 23145                           ;mTouchSensor.c: 96: pSensor->channelNumber = channelNumber;
 23146  001CB4  EE20 F01E          	lfsr	2,30
 23147  001CB8  5195               	movf	MTouchSetSensor@pSensor& (0+255),w,b
 23148  001CBA  26D9               	addwf	fsr2l,f,c
 23149  001CBC  5196               	movf	(MTouchSetSensor@pSensor+1)& (0+255),w,b
 23150  001CBE  22DA               	addwfc	fsr2h,f,c
 23151  001CC0  C08C  FFDF         	movff	MTouchSetSensor@channelNumber,indf2
 23152                           
 23153                           ;mTouchSensor.c: 97: pSensor->state = SENSOR_INITIALIZING;
 23154  001CC4  EE20 F01C          	lfsr	2,28
 23155  001CC8  5195               	movf	MTouchSetSensor@pSensor& (0+255),w,b
 23156  001CCA  26D9               	addwf	fsr2l,f,c
 23157  001CCC  5196               	movf	(MTouchSetSensor@pSensor+1)& (0+255),w,b
 23158  001CCE  22DA               	addwfc	fsr2h,f,c
 23159  001CD0  6ADF               	clrf	indf2,c
 23160                           
 23161                           ;mTouchSensor.c: 98: pSensor->debounceCount = 8 + 50;
 23162  001CD2  EE20 F01A          	lfsr	2,26
 23163  001CD6  5195               	movf	MTouchSetSensor@pSensor& (0+255),w,b
 23164  001CD8  26D9               	addwf	fsr2l,f,c
 23165  001CDA  5196               	movf	(MTouchSetSensor@pSensor+1)& (0+255),w,b
 23166  001CDC  22DA               	addwfc	fsr2h,f,c
 23167  001CDE  0E3A               	movlw	58
 23168  001CE0  6EDE               	movwf	postinc2,c
 23169  001CE2  6ADD               	clrf	postdec2,c
 23170                           
 23171                           ; BSR set to: 0
 23172                           ;mTouchSensor.c: 101: if(oversampling > 0)
 23173  001CE4  5190               	movf	(MTouchSetSensor@oversampling+1)& (0+255),w,b
 23174  001CE6  0A80               	xorlw	128
 23175  001CE8  0F80               	addlw	-128
 23176  001CEA  0E01               	movlw	1
 23177  001CEC  B4D8               	btfsc	status,2,c
 23178  001CEE  5D8F               	subwf	MTouchSetSensor@oversampling& (0+255),w,b
 23179  001CF0  E30B               	bnc	l6029
 23180                           
 23181                           ; BSR set to: 0
 23182                           ;mTouchSensor.c: 102: {
 23183                           ;mTouchSensor.c: 103: pSensor->samplesNumber = oversampling;
 23184  001CF2  EE20 F010          	lfsr	2,16
 23185  001CF6  5195               	movf	MTouchSetSensor@pSensor& (0+255),w,b
 23186  001CF8  26D9               	addwf	fsr2l,f,c
 23187  001CFA  5196               	movf	(MTouchSetSensor@pSensor+1)& (0+255),w,b
 23188  001CFC  22DA               	addwfc	fsr2h,f,c
 23189  001CFE  C08F  FFDE         	movff	MTouchSetSensor@oversampling,postinc2
 23190  001D02  C090  FFDD         	movff	MTouchSetSensor@oversampling+1,postdec2
 23191                           
 23192                           ;mTouchSensor.c: 104: }else{
 23193  001D06  D004               	goto	l6031
 23194  001D08                     l6029:
 23195                           
 23196                           ; BSR set to: 0
 23197                           ;mTouchSensor.c: 105: pSensor->samplesNumber = 32;
 23198  001D08  EE20 F010          	lfsr	2,16
 23199  001D0C  D82D               	call	PL128	;call to abstracted procedure
 23200  001D0E  6ADD               	clrf	postdec2,c
 23201  001D10                     l6031:
 23202                           
 23203                           ; BSR set to: 0
 23204                           ;mTouchSensor.c: 106: }
 23205                           ;mTouchSensor.c: 108: pSensor->sampleCounter = pSensor->samplesNumber;
 23206  001D10  EE20 F010          	lfsr	2,16
 23207  001D14  5195               	movf	MTouchSetSensor@pSensor& (0+255),w,b
 23208  001D16  26D9               	addwf	fsr2l,f,c
 23209  001D18  5196               	movf	(MTouchSetSensor@pSensor+1)& (0+255),w,b
 23210  001D1A  22DA               	addwfc	fsr2h,f,c
 23211  001D1C  EE10 F00E          	lfsr	1,14
 23212  001D20  5195               	movf	MTouchSetSensor@pSensor& (0+255),w,b
 23213  001D22  26E1               	addwf	fsr1l,f,c
 23214  001D24  5196               	movf	(MTouchSetSensor@pSensor+1)& (0+255),w,b
 23215  001D26  22E2               	addwfc	fsr1h,f,c
 23216  001D28  CFDE FFE6          	movff	postinc2,postinc1
 23217  001D2C  CFDD FFE5          	movff	postdec2,postdec1
 23218                           
 23219                           ; BSR set to: 0
 23220                           ;mTouchSensor.c: 119: pSensor->delta = 0;
 23221  001D30  EE20 F018          	lfsr	2,24
 23222  001D34  5195               	movf	MTouchSetSensor@pSensor& (0+255),w,b
 23223  001D36  26D9               	addwf	fsr2l,f,c
 23224  001D38  5196               	movf	(MTouchSetSensor@pSensor+1)& (0+255),w,b
 23225  001D3A  22DA               	addwfc	fsr2h,f,c
 23226  001D3C  6ADE               	clrf	postinc2,c
 23227  001D3E  6ADD               	clrf	postdec2,c
 23228                           
 23229                           ; BSR set to: 0
 23230                           ;mTouchSensor.c: 120: pSensor->oversampleFilterData = 0;
 23231  001D40  EE20 F004          	lfsr	2,4
 23232  001D44  5195               	movf	MTouchSetSensor@pSensor& (0+255),w,b
 23233  001D46  26D9               	addwf	fsr2l,f,c
 23234  001D48  5196               	movf	(MTouchSetSensor@pSensor+1)& (0+255),w,b
 23235  001D4A  22DA               	addwfc	fsr2h,f,c
 23236  001D4C  6ADE               	clrf	postinc2,c
 23237  001D4E  6ADE               	clrf	postinc2,c
 23238  001D50  6ADE               	clrf	postinc2,c
 23239  001D52  6ADD               	clrf	postdec2,c
 23240                           
 23241                           ; BSR set to: 0
 23242                           ;mTouchSensor.c: 121: pSensor->decimateFilterData = 0;
 23243  001D54  EE20 F00C          	lfsr	2,12
 23244  001D58  5195               	movf	MTouchSetSensor@pSensor& (0+255),w,b
 23245  001D5A  26D9               	addwf	fsr2l,f,c
 23246  001D5C  5196               	movf	(MTouchSetSensor@pSensor+1)& (0+255),w,b
 23247  001D5E  22DA               	addwfc	fsr2h,f,c
 23248  001D60  0E00               	movlw	0
 23249  001D62  6EDE               	movwf	postinc2,c
 23250  001D64  6EDD               	movwf	postdec2,c
 23251                           
 23252                           ; BSR set to: 0
 23253  001D66  0C00               	retlw	0
 23254  001D68                     __end_of_MTouchSetSensor:
 23255                           	opt stack 0
 23256  001D68                     PL128:
 23257                           	opt stack 21
 23258  001D68  5195               	movf	MTouchSetSensor@pSensor& (0+255),w,b
 23259  001D6A  26D9               	addwf	fsr2l,f,c
 23260  001D6C  5196               	movf	(MTouchSetSensor@pSensor+1)& (0+255),w,b
 23261  001D6E  22DA               	addwfc	fsr2h,f,c
 23262  001D70  0E20               	movlw	32
 23263  001D72  6EDE               	movwf	postinc2,c
 23264  001D74  0C20               	retlw	32
 23265  001D76                     __end_ofPL128:
 23266                           	opt stack 0
 23267                           tblptru	equ	0xFF8
 23268                           tblptrh	equ	0xFF7
 23269                           tblptrl	equ	0xFF6
 23270                           tablat	equ	0xFF5
 23271                           prodh	equ	0xFF4
 23272                           prodl	equ	0xFF3
 23273                           intcon	equ	0xFF2
 23274                           postinc0	equ	0xFEE
 23275                           wreg	equ	0xFE8
 23276                           indf1	equ	0xFE7
 23277                           postinc1	equ	0xFE6
 23278                           postdec1	equ	0xFE5
 23279                           fsr1h	equ	0xFE2
 23280                           fsr1l	equ	0xFE1
 23281                           indf2	equ	0xFDF
 23282                           postinc2	equ	0xFDE
 23283                           postdec2	equ	0xFDD
 23284                           fsr2h	equ	0xFDA
 23285                           fsr2l	equ	0xFD9
 23286                           status	equ	0xFD8
 23287                           
 23288 ;; *************** function _MTouchSetButton *****************
 23289 ;; Defined at:
 23290 ;;		line 68 in file "../lib/mTouchCap/mTouchButton.c"
 23291 ;; Parameters:    Size  Location     Type
 23292 ;;  buttonNumber    1    wreg     unsigned char 
 23293 ;;  sensorNumber    1   39[BANK0 ] unsigned char 
 23294 ;;  decode          1   40[BANK0 ] unsigned char 
 23295 ;; Auto vars:     Size  Location     Type
 23296 ;;  buttonNumber    1   43[BANK0 ] unsigned char 
 23297 ;;  pButton         2   44[BANK0 ] PTR struct tag_MTOUCHBUT
 23298 ;;		 -> buttons(104), 
 23299 ;; Return value:  Size  Location     Type
 23300 ;;		None               void
 23301 ;; Registers used:
 23302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23303 ;; Tracked objects:
 23304 ;;		On entry : F/0
 23305 ;;		On exit  : F/0
 23306 ;;		Unchanged: 0/0
 23307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23308 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23309 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23310 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23311 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23312 ;;Total ram usage:        7 bytes
 23313 ;; Hardware stack levels used:    1
 23314 ;; Hardware stack levels required when called:    8
 23315 ;; This function calls:
 23316 ;;		Nothing
 23317 ;; This function is called by:
 23318 ;;		_InitializeSystem
 23319 ;; This function uses a non-reentrant model
 23320 ;;
 23321                           
 23322                           	psect	text54
 23323  00308C                     __ptext54:
 23324                           	opt stack 0
 23325  00308C                     _MTouchSetButton:
 23326                           	opt stack 21
 23327                           
 23328                           ; BSR set to: 0
 23329                           ;incstack = 0
 23330                           ;MTouchSetButton@buttonNumber stored from wreg
 23331  00308C  6F8B               	movwf	MTouchSetButton@buttonNumber& (0+255),b
 23332                           
 23333                           ; BSR set to: 0
 23334                           ;mTouchButton.c: 69: MTOUCHBUTTON* pButton;
 23335                           ;mTouchButton.c: 71: pButton = (MTOUCHBUTTON*)buttons + buttonNumber;
 23336  00308E  518B               	movf	MTouchSetButton@buttonNumber& (0+255),w,b
 23337  003090  0D08               	mullw	8
 23338  003092  0E00               	movlw	low _buttons
 23339  003094  24F3               	addwf	prodl,w,c
 23340  003096  0100               	movlb	0	; () banked
 23341  003098  6F8C               	movwf	MTouchSetButton@pButton& (0+255),b
 23342  00309A  0E02               	movlw	high _buttons
 23343  00309C  20F4               	addwfc	prodh,w,c
 23344  00309E  6F8D               	movwf	(MTouchSetButton@pButton+1)& (0+255),b
 23345                           
 23346                           ; BSR set to: 0
 23347                           ;mTouchButton.c: 73: pButton->state = CONTROL_RELEASED | CONTROL_IDLE;
 23348  0030A0  C08C  FFD9         	movff	MTouchSetButton@pButton,fsr2l
 23349  0030A4  C08D  FFDA         	movff	MTouchSetButton@pButton+1,fsr2h
 23350  0030A8  0E82               	movlw	130
 23351  0030AA  6EDF               	movwf	indf2,c
 23352                           
 23353                           ; BSR set to: 0
 23354                           ;mTouchButton.c: 74: pButton->curState = CONTROL_RELEASED;
 23355  0030AC  EE20 F001          	lfsr	2,1
 23356  0030B0  518C               	movf	MTouchSetButton@pButton& (0+255),w,b
 23357  0030B2  26D9               	addwf	fsr2l,f,c
 23358  0030B4  518D               	movf	(MTouchSetButton@pButton+1)& (0+255),w,b
 23359  0030B6  22DA               	addwfc	fsr2h,f,c
 23360  0030B8  0E02               	movlw	2
 23361  0030BA  6EDF               	movwf	indf2,c
 23362                           
 23363                           ; BSR set to: 0
 23364                           ;mTouchButton.c: 75: pButton->decode = decode;
 23365  0030BC  EE20 F002          	lfsr	2,2
 23366  0030C0  518C               	movf	MTouchSetButton@pButton& (0+255),w,b
 23367  0030C2  26D9               	addwf	fsr2l,f,c
 23368  0030C4  518D               	movf	(MTouchSetButton@pButton+1)& (0+255),w,b
 23369  0030C6  22DA               	addwfc	fsr2h,f,c
 23370  0030C8  C088  FFDF         	movff	MTouchSetButton@decode,indf2
 23371                           
 23372                           ; BSR set to: 0
 23373                           ;mTouchButton.c: 76: pButton->pSensor = (SENSOR*)sensors + sensorNumber;
 23374  0030CC  5187               	movf	MTouchSetButton@sensorNumber& (0+255),w,b
 23375  0030CE  0D20               	mullw	32
 23376  0030D0  0E00               	movlw	low _sensors
 23377  0030D2  6F89               	movwf	??_MTouchSetButton& (0+255),b
 23378  0030D4  0E04               	movlw	high _sensors
 23379  0030D6  6F8A               	movwf	(??_MTouchSetButton+1)& (0+255),b
 23380  0030D8  50F3               	movf	prodl,w,c
 23381  0030DA  2789               	addwf	??_MTouchSetButton& (0+255),f,b
 23382  0030DC  50F4               	movf	prodh,w,c
 23383  0030DE  238A               	addwfc	(??_MTouchSetButton+1)& (0+255),f,b
 23384  0030E0  EE20 F004          	lfsr	2,4
 23385  0030E4  518C               	movf	MTouchSetButton@pButton& (0+255),w,b
 23386  0030E6  26D9               	addwf	fsr2l,f,c
 23387  0030E8  518D               	movf	(MTouchSetButton@pButton+1)& (0+255),w,b
 23388  0030EA  22DA               	addwfc	fsr2h,f,c
 23389  0030EC  C089  FFDE         	movff	??_MTouchSetButton,postinc2
 23390  0030F0  C08A  FFDD         	movff	??_MTouchSetButton+1,postdec2
 23391                           
 23392                           ; BSR set to: 0
 23393                           ;mTouchButton.c: 77: pButton->pressCounter = 6400;
 23394  0030F4  EE20 F006          	lfsr	2,6
 23395  0030F8  518C               	movf	MTouchSetButton@pButton& (0+255),w,b
 23396  0030FA  26D9               	addwf	fsr2l,f,c
 23397  0030FC  518D               	movf	(MTouchSetButton@pButton+1)& (0+255),w,b
 23398  0030FE  22DA               	addwfc	fsr2h,f,c
 23399  003100  6ADE               	clrf	postinc2,c
 23400  003102  0E19               	movlw	25
 23401  003104  6EDD               	movwf	postdec2,c
 23402                           
 23403                           ; BSR set to: 0
 23404                           ;mTouchButton.c: 78: pButton->prevSensorState = SENSOR_RELEASED;
 23405  003106  EE20 F003          	lfsr	2,3
 23406  00310A  518C               	movf	MTouchSetButton@pButton& (0+255),w,b
 23407  00310C  26D9               	addwf	fsr2l,f,c
 23408  00310E  518D               	movf	(MTouchSetButton@pButton+1)& (0+255),w,b
 23409  003110  22DA               	addwfc	fsr2h,f,c
 23410  003112  0E01               	movlw	1
 23411  003114  6EDF               	movwf	indf2,c
 23412                           
 23413                           ; BSR set to: 0
 23414  003116  0C01               	retlw	1
 23415  003118                     __end_of_MTouchSetButton:
 23416                           	opt stack 0
 23417                           tblptru	equ	0xFF8
 23418                           tblptrh	equ	0xFF7
 23419                           tblptrl	equ	0xFF6
 23420                           tablat	equ	0xFF5
 23421                           prodh	equ	0xFF4
 23422                           prodl	equ	0xFF3
 23423                           intcon	equ	0xFF2
 23424                           postinc0	equ	0xFEE
 23425                           wreg	equ	0xFE8
 23426                           indf1	equ	0xFE7
 23427                           postinc1	equ	0xFE6
 23428                           postdec1	equ	0xFE5
 23429                           fsr1h	equ	0xFE2
 23430                           fsr1l	equ	0xFE1
 23431                           indf2	equ	0xFDF
 23432                           postinc2	equ	0xFDE
 23433                           postdec2	equ	0xFDD
 23434                           fsr2h	equ	0xFDA
 23435                           fsr2l	equ	0xFD9
 23436                           status	equ	0xFD8
 23437                           
 23438 ;; *************** function _MTouchInit *****************
 23439 ;; Defined at:
 23440 ;;		line 125 in file "../lib/mTouchCap/mTouchSensor.c"
 23441 ;; Parameters:    Size  Location     Type
 23442 ;;		None
 23443 ;; Auto vars:     Size  Location     Type
 23444 ;;		None
 23445 ;; Return value:  Size  Location     Type
 23446 ;;		None               void
 23447 ;; Registers used:
 23448 ;;		wreg, status,2
 23449 ;; Tracked objects:
 23450 ;;		On entry : F/F
 23451 ;;		On exit  : F/F
 23452 ;;		Unchanged: E/0
 23453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23458 ;;Total ram usage:        0 bytes
 23459 ;; Hardware stack levels used:    1
 23460 ;; Hardware stack levels required when called:    8
 23461 ;; This function calls:
 23462 ;;		Nothing
 23463 ;; This function is called by:
 23464 ;;		_InitializeSystem
 23465 ;; This function uses a non-reentrant model
 23466 ;;
 23467                           
 23468                           	psect	text55
 23469  003B88                     __ptext55:
 23470                           	opt stack 0
 23471  003B88                     _MTouchInit:
 23472                           	opt stack 21
 23473                           
 23474                           ; BSR set to: 15
 23475                           ;mTouchSensor.c: 128: {ADCON0=0; ADCON1=0; ADCON2=0; ADCON2bits.ADFM=1; ADCON2bits.ACQT=
      +                          1; ADCON2bits.ADCS = 1; ADCON0bits.ADON = 1;};
 23476                           
 23477                           ; BSR set to: 0
 23478                           ;incstack = 0
 23479  003B88  6AC2               	clrf	4034,c	;volatile
 23480  003B8A  6AC1               	clrf	4033,c	;volatile
 23481  003B8C  6AC0               	clrf	4032,c	;volatile
 23482  003B8E  8EC0               	bsf	4032,7,c	;volatile
 23483                           
 23484                           ; BSR set to: 15
 23485  003B90  50C0               	movf	4032,w,c	;volatile
 23486  003B92  0BC7               	andlw	-57
 23487  003B94  0908               	iorlw	8
 23488  003B96  6EC0               	movwf	4032,c	;volatile
 23489  003B98  50C0               	movf	4032,w,c	;volatile
 23490  003B9A  0BF8               	andlw	-8
 23491  003B9C  0901               	iorlw	1
 23492  003B9E  6EC0               	movwf	4032,c	;volatile
 23493                           
 23494                           ; BSR set to: 15
 23495  003BA0  80C2               	bsf	4034,0,c	;volatile
 23496                           
 23497                           ; BSR set to: 15
 23498  003BA2  0012               	return	
 23499  003BA4                     __end_of_MTouchInit:
 23500                           	opt stack 0
 23501                           tblptru	equ	0xFF8
 23502                           tblptrh	equ	0xFF7
 23503                           tblptrl	equ	0xFF6
 23504                           tablat	equ	0xFF5
 23505                           prodh	equ	0xFF4
 23506                           prodl	equ	0xFF3
 23507                           intcon	equ	0xFF2
 23508                           postinc0	equ	0xFEE
 23509                           wreg	equ	0xFE8
 23510                           indf1	equ	0xFE7
 23511                           postinc1	equ	0xFE6
 23512                           postdec1	equ	0xFE5
 23513                           fsr1h	equ	0xFE2
 23514                           fsr1l	equ	0xFE1
 23515                           indf2	equ	0xFDF
 23516                           postinc2	equ	0xFDE
 23517                           postdec2	equ	0xFDD
 23518                           fsr2h	equ	0xFDA
 23519                           fsr2l	equ	0xFD9
 23520                           status	equ	0xFD8
 23521                           
 23522 ;; *************** function _InitMessages *****************
 23523 ;; Defined at:
 23524 ;;		line 20 in file "../lib/messages.c"
 23525 ;; Parameters:    Size  Location     Type
 23526 ;;		None
 23527 ;; Auto vars:     Size  Location     Type
 23528 ;;  i               1   39[BANK0 ] unsigned char 
 23529 ;; Return value:  Size  Location     Type
 23530 ;;		None               void
 23531 ;; Registers used:
 23532 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23533 ;; Tracked objects:
 23534 ;;		On entry : 0/0
 23535 ;;		On exit  : F/0
 23536 ;;		Unchanged: 0/0
 23537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23539 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23541 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23542 ;;Total ram usage:        1 bytes
 23543 ;; Hardware stack levels used:    1
 23544 ;; Hardware stack levels required when called:    8
 23545 ;; This function calls:
 23546 ;;		Nothing
 23547 ;; This function is called by:
 23548 ;;		_main
 23549 ;; This function uses a non-reentrant model
 23550 ;;
 23551                           
 23552                           	psect	text56
 23553  0038B0                     __ptext56:
 23554                           	opt stack 0
 23555  0038B0                     _InitMessages:
 23556                           	opt stack 22
 23557                           
 23558                           ;messages.c: 21: char i;
 23559                           ;messages.c: 23: for(i = 0; i < (10); i++){
 23560                           
 23561                           ; BSR set to: 15
 23562                           ;incstack = 0
 23563  0038B0  0100               	movlb	0	; () banked
 23564  0038B2  6B87               	clrf	InitMessages@i& (0+255),b
 23565  0038B4                     l6721:
 23566                           
 23567                           ; BSR set to: 0
 23568                           ;messages.c: 24: Messages[i] = MSG_PHASE_NONE;
 23569  0038B4  5187               	movf	InitMessages@i& (0+255),w,b
 23570  0038B6  0F01               	addlw	low _Messages	;volatile
 23571  0038B8  6ED9               	movwf	fsr2l,c
 23572  0038BA  6ADA               	clrf	fsr2h,c
 23573  0038BC  6ADF               	clrf	indf2,c
 23574                           
 23575                           ; BSR set to: 0
 23576  0038BE  2B87               	incf	InitMessages@i& (0+255),f,b
 23577                           
 23578                           ; BSR set to: 0
 23579  0038C0  0E09               	movlw	9
 23580  0038C2  6587               	cpfsgt	InitMessages@i& (0+255),b
 23581  0038C4  D7F7               	goto	l6721
 23582                           
 23583                           ; BSR set to: 0
 23584                           ;messages.c: 28: }
 23585                           ;messages.c: 31: for(i = 0; i < 1; i++)
 23586  0038C6  6B87               	clrf	InitMessages@i& (0+255),b
 23587  0038C8                     l6731:
 23588                           
 23589                           ; BSR set to: 0
 23590                           ;messages.c: 32: BroadcastMessages[i] = MSG_PHASE_NONE;
 23591  0038C8  5187               	movf	InitMessages@i& (0+255),w,b
 23592  0038CA  0FCB               	addlw	low _BroadcastMessages	;volatile
 23593  0038CC  6ED9               	movwf	fsr2l,c
 23594  0038CE  6ADA               	clrf	fsr2h,c
 23595  0038D0  6ADF               	clrf	indf2,c
 23596                           
 23597                           ; BSR set to: 0
 23598  0038D2  2B87               	incf	InitMessages@i& (0+255),f,b
 23599                           
 23600                           ; BSR set to: 0
 23601  0038D4  5187               	movf	InitMessages@i& (0+255),w,b
 23602  0038D6  E0F8               	bz	l6731
 23603                           
 23604                           ; BSR set to: 0
 23605                           ;messages.c: 36: for(i = 0; i < 4; i++)
 23606  0038D8  6B87               	clrf	InitMessages@i& (0+255),b
 23607  0038DA                     l6741:
 23608                           
 23609                           ; BSR set to: 0
 23610                           ;messages.c: 37: BSem[i] = 0;
 23611  0038DA  5187               	movf	InitMessages@i& (0+255),w,b
 23612  0038DC  0F0B               	addlw	low _BSem	;volatile
 23613  0038DE  6ED9               	movwf	fsr2l,c
 23614  0038E0  6ADA               	clrf	fsr2h,c
 23615  0038E2  6ADF               	clrf	indf2,c
 23616                           
 23617                           ; BSR set to: 0
 23618  0038E4  2B87               	incf	InitMessages@i& (0+255),f,b
 23619                           
 23620                           ; BSR set to: 0
 23621  0038E6  0E03               	movlw	3
 23622  0038E8  6587               	cpfsgt	InitMessages@i& (0+255),b
 23623  0038EA  D7F7               	goto	l6741
 23624  0038EC  0C03               	retlw	3
 23625  0038EE                     __end_of_InitMessages:
 23626                           	opt stack 0
 23627                           tblptru	equ	0xFF8
 23628                           tblptrh	equ	0xFF7
 23629                           tblptrl	equ	0xFF6
 23630                           tablat	equ	0xFF5
 23631                           prodh	equ	0xFF4
 23632                           prodl	equ	0xFF3
 23633                           intcon	equ	0xFF2
 23634                           postinc0	equ	0xFEE
 23635                           wreg	equ	0xFE8
 23636                           indf1	equ	0xFE7
 23637                           postinc1	equ	0xFE6
 23638                           postdec1	equ	0xFE5
 23639                           fsr1h	equ	0xFE2
 23640                           fsr1l	equ	0xFE1
 23641                           indf2	equ	0xFDF
 23642                           postinc2	equ	0xFDE
 23643                           postdec2	equ	0xFDD
 23644                           fsr2h	equ	0xFDA
 23645                           fsr2l	equ	0xFD9
 23646                           status	equ	0xFD8
 23647                           
 23648 ;; *************** function _LO_ISR *****************
 23649 ;; Defined at:
 23650 ;;		line 89 in file "../isr.c"
 23651 ;; Parameters:    Size  Location     Type
 23652 ;;		None
 23653 ;; Auto vars:     Size  Location     Type
 23654 ;;  i               1   34[COMRAM] unsigned char 
 23655 ;;  lcData          1   33[COMRAM] unsigned char 
 23656 ;;  lcAdr           1   32[COMRAM] unsigned char 
 23657 ;; Return value:  Size  Location     Type
 23658 ;;		None               void
 23659 ;; Registers used:
 23660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23661 ;; Tracked objects:
 23662 ;;		On entry : 0/0
 23663 ;;		On exit  : 0/0
 23664 ;;		Unchanged: 0/0
 23665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23667 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23668 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23669 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23670 ;;Total ram usage:       17 bytes
 23671 ;; Hardware stack levels used:    1
 23672 ;; Hardware stack levels required when called:    7
 23673 ;; This function calls:
 23674 ;;		_BSemOn
 23675 ;;		_Busy_eep
 23676 ;;		_Read_b_eep
 23677 ;;		_SendMessage
 23678 ;;		_Write_b_eep
 23679 ;;		_crc_mb
 23680 ;;		_crc_mb_check
 23681 ;;		_putbyte
 23682 ;;		_set_ee_default
 23683 ;;		_timed_getc
 23684 ;; This function is called by:
 23685 ;;		Interrupt level 1
 23686 ;; This function uses a non-reentrant model
 23687 ;;
 23688                           
 23689                           	psect	intcodelo
 23690  000018                     __pintcodelo:
 23691                           	opt stack 0
 23692  000018                     _LO_ISR:
 23693                           	opt stack 15
 23694                           
 23695                           ; BSR set to: 0
 23696                           ;incstack = 0
 23697  000018  CFD8 F03E          	movff	status,??_LO_ISR+5
 23698  00001C  CFE8 F03F          	movff	wreg,??_LO_ISR+6
 23699  000020  CFE0 F040          	movff	bsr,??_LO_ISR+7
 23700  000024  CFD9 F041          	movff	fsr2l,??_LO_ISR+8
 23701  000028  CFDA F042          	movff	fsr2h,??_LO_ISR+9
 23702  00002C  CFF6 F043          	movff	tblptrl,??_LO_ISR+10
 23703  000030  CFF7 F044          	movff	tblptrh,??_LO_ISR+11
 23704  000034  CFF8 F045          	movff	tblptru,??_LO_ISR+12
 23705  000038  CFF5 F046          	movff	tablat,??_LO_ISR+13
 23706                           
 23707                           ;isr.c: 91: char i;
 23708                           ;isr.c: 92: char lcData, lcAdr;
 23709                           ;isr.c: 95: __nop();
 23710  00003C  F000               	nop	
 23711                           
 23712                           ;isr.c: 97: if(RCIF && RCIE) {
 23713  00003E  BA9E               	btfsc	3998,5,c	;volatile
 23714  000040  AA9D               	btfss	3997,5,c	;volatile
 23715  000042  D1C3               	goto	i1l480
 23716                           
 23717                           ;isr.c: 101: RxTxBuff[0] = timed_getc();
 23718  000044  EC6F  F01D         	call	_timed_getc	;wreg free
 23719  000048  0101               	movlb	1	; () banked
 23720  00004A  6F0D               	movwf	_RxTxBuff& (0+255),b
 23721                           
 23722                           ; BSR set to: 1
 23723                           ;isr.c: 104: if(RxTxBuff[0] == 0xEA) {
 23724  00004C  510D               	movf	_RxTxBuff& (0+255),w,b
 23725  00004E  0AEA               	xorlw	234
 23726  000050  B4D8               	btfsc	status,2,c
 23727                           
 23728                           ; BSR set to: 1
 23729  000052  00FF               	reset		;# 
 23730                           
 23731                           ;isr.c: 106: }
 23732                           ;isr.c: 108: if((RxTxBuff[0] != 0x55)) goto error;
 23733  000054  510D               	movf	_RxTxBuff& (0+255),w,b
 23734  000056  0A55               	xorlw	85
 23735  000058  B4D8               	btfsc	status,2,c
 23736                           
 23737                           ; BSR set to: 1
 23738                           ;isr.c: 109: if((FERR1) || (OERR1) || timeout_error) goto error;
 23739  00005A  B4AB               	btfsc	4011,2,c	;volatile
 23740  00005C  D1AD               	goto	i1l405
 23741                           
 23742                           ; BSR set to: 1
 23743  00005E  B2AB               	btfsc	4011,1,c	;volatile
 23744  000060  D1AB               	goto	i1l405
 23745                           
 23746                           ; BSR set to: 1
 23747  000062  5026               	movf	_timeout_error,w,c	;volatile
 23748  000064  E001 D1A8          	bnz	i1l405
 23749                           
 23750                           ; BSR set to: 1
 23751                           ;isr.c: 111: RxTxBuff[1] = timed_getc();
 23752  000068  EC6F  F01D         	call	_timed_getc	;wreg free
 23753  00006C  0101               	movlb	1	; () banked
 23754  00006E  6F0E               	movwf	(_RxTxBuff+1)& (0+255),b
 23755                           
 23756                           ; BSR set to: 1
 23757                           ;isr.c: 112: if((FERR1) || (OERR1) || timeout_error) goto error;
 23758  000070  A4AB               	btfss	4011,2,c	;volatile
 23759                           
 23760                           ; BSR set to: 1
 23761  000072  B2AB               	btfsc	4011,1,c	;volatile
 23762  000074  D1A1               	goto	i1l405
 23763                           
 23764                           ; BSR set to: 1
 23765  000076  5026               	movf	_timeout_error,w,c	;volatile
 23766  000078  E001 D19E          	bnz	i1l405
 23767  00007C  D18F               	goto	i1l7475
 23768  00007E                     i1l7273:
 23769                           
 23770                           ; BSR set to: 1
 23771                           ;isr.c: 122: RxTxBuff[2] = timed_getc();
 23772  00007E  EC6F  F01D         	call	_timed_getc	;wreg free
 23773  000082  0101               	movlb	1	; () banked
 23774  000084  6F0F               	movwf	(_RxTxBuff+2)& (0+255),b
 23775                           
 23776                           ; BSR set to: 1
 23777                           ;isr.c: 123: if((FERR1) || (OERR1) || timeout_error) goto error;
 23778  000086  A4AB               	btfss	4011,2,c	;volatile
 23779                           
 23780                           ; BSR set to: 1
 23781  000088  B2AB               	btfsc	4011,1,c	;volatile
 23782  00008A  D196               	goto	i1l405
 23783                           
 23784                           ; BSR set to: 1
 23785  00008C  5026               	movf	_timeout_error,w,c	;volatile
 23786  00008E  E001 D193          	bnz	i1l405
 23787                           
 23788                           ; BSR set to: 1
 23789                           ;isr.c: 125: RxTxBuff[3] = timed_getc();
 23790  000092  EC6F  F01D         	call	_timed_getc	;wreg free
 23791  000096  0101               	movlb	1	; () banked
 23792  000098  6F10               	movwf	(_RxTxBuff+3)& (0+255),b
 23793                           
 23794                           ; BSR set to: 1
 23795                           ;isr.c: 126: if((FERR1) || (OERR1) || timeout_error) goto error;
 23796  00009A  A4AB               	btfss	4011,2,c	;volatile
 23797                           
 23798                           ; BSR set to: 1
 23799  00009C  B2AB               	btfsc	4011,1,c	;volatile
 23800  00009E  D18C               	goto	i1l405
 23801                           
 23802                           ; BSR set to: 1
 23803  0000A0  5026               	movf	_timeout_error,w,c	;volatile
 23804  0000A2  E001 D189          	bnz	i1l405
 23805                           
 23806                           ; BSR set to: 1
 23807                           ;isr.c: 128: for(i = 0; i < RxTxBuff[3] + 2; i++) {
 23808  0000A6  6A49               	clrf	LO_ISR@i,c
 23809  0000A8  D010               	goto	i1l7299
 23810  0000AA                     i1l7289:
 23811                           
 23812                           ; BSR set to: 1
 23813                           ;isr.c: 129: RxTxBuff[i + 4] = timed_getc();
 23814  0000AA  0E11               	movlw	low (_RxTxBuff+4)
 23815  0000AC  2449               	addwf	LO_ISR@i,w,c
 23816  0000AE  6ED9               	movwf	fsr2l,c
 23817  0000B0  6ADA               	clrf	fsr2h,c
 23818  0000B2  0E01               	movlw	high (_RxTxBuff+4)
 23819  0000B4  22DA               	addwfc	fsr2h,f,c
 23820  0000B6  EC6F  F01D         	call	_timed_getc	;wreg free
 23821  0000BA  6EDF               	movwf	indf2,c
 23822                           
 23823                           ;isr.c: 130: if((FERR1) || (OERR1) || timeout_error) goto error;
 23824  0000BC  A4AB               	btfss	4011,2,c	;volatile
 23825  0000BE  B2AB               	btfsc	4011,1,c	;volatile
 23826  0000C0  D17B               	goto	i1l405
 23827  0000C2  5026               	movf	_timeout_error,w,c	;volatile
 23828  0000C4  E001 D178          	bnz	i1l405
 23829  0000C8  2A49               	incf	LO_ISR@i,f,c
 23830  0000CA                     i1l7299:
 23831  0000CA  0101               	movlb	1	; () banked
 23832  0000CC  5110               	movf	(_RxTxBuff+3)& (0+255),w,b
 23833  0000CE  6E39               	movwf	??_LO_ISR& (0+255),c
 23834  0000D0  6A3A               	clrf	(??_LO_ISR+1)& (0+255),c
 23835  0000D2  0E02               	movlw	2
 23836  0000D4  2639               	addwf	??_LO_ISR,f,c
 23837  0000D6  0E00               	movlw	0
 23838  0000D8  223A               	addwfc	??_LO_ISR+1,f,c
 23839  0000DA  5049               	movf	LO_ISR@i,w,c
 23840  0000DC  6E3B               	movwf	(??_LO_ISR+2)& (0+255),c
 23841  0000DE  6A3C               	clrf	(??_LO_ISR+3)& (0+255),c
 23842  0000E0  503C               	movf	??_LO_ISR+3,w,c
 23843  0000E2  0A80               	xorlw	128
 23844  0000E4  6E3D               	movwf	(??_LO_ISR+4)& (0+255),c
 23845  0000E6  5039               	movf	??_LO_ISR,w,c
 23846  0000E8  5C3B               	subwf	??_LO_ISR+2,w,c
 23847  0000EA  503A               	movf	??_LO_ISR+1,w,c
 23848  0000EC  0A80               	xorlw	128
 23849  0000EE  583D               	subwfb	(??_LO_ISR+4)& (0+255),w,c
 23850  0000F0  E3DC               	bnc	i1l7289
 23851                           
 23852                           ; BSR set to: 1
 23853                           ;isr.c: 131: }
 23854                           ;isr.c: 132: if(crc_mb_check(RxTxBuff, RxTxBuff[3] + 4) == 0) break;
 23855  0000F2  0E01               	movlw	high _RxTxBuff
 23856  0000F4  6E30               	movwf	crc_mb_check@buffer+1,c
 23857  0000F6  0E0D               	movlw	low _RxTxBuff
 23858  0000F8  6E2F               	movwf	crc_mb_check@buffer,c
 23859  0000FA  5110               	movf	(_RxTxBuff+3)& (0+255),w,b
 23860  0000FC  0F04               	addlw	4
 23861  0000FE  6E31               	movwf	crc_mb_check@cnt,c
 23862  000100  ECD6  F01A         	call	_crc_mb_check	;wreg free
 23863  000104  0900               	iorlw	0
 23864  000106  E101 D157          	bz	i1l405
 23865                           
 23866                           ;isr.c: 134: for(i = 0; i < RxTxBuff[3]; i++) {
 23867  00010A  6A49               	clrf	LO_ISR@i,c
 23868  00010C  D014               	goto	i1l7311
 23869  00010E                     i1l7305:
 23870                           
 23871                           ; BSR set to: 1
 23872                           ;isr.c: 135: (Busy_eep(), Write_b_eep(RxTxBuff[2]++,RxTxBuff[4 + i]));
 23873  00010E  EC0D  F01E         	call	_Busy_eep	;wreg free
 23874  000112  0101               	movlb	1	; () banked
 23875  000114  EE21  F00F         	lfsr	2,_RxTxBuff+2
 23876  000118  50DF               	movf	indf2,w,c
 23877  00011A  2ADF               	incf	indf2,f,c
 23878  00011C  6E27               	movwf	Write_b_eep@badd,c
 23879  00011E  6A28               	clrf	Write_b_eep@badd+1,c
 23880  000120  0E11               	movlw	low (_RxTxBuff+4)
 23881  000122  2449               	addwf	LO_ISR@i,w,c
 23882  000124  6ED9               	movwf	fsr2l,c
 23883  000126  6ADA               	clrf	fsr2h,c
 23884  000128  0E01               	movlw	high (_RxTxBuff+4)
 23885  00012A  22DA               	addwfc	fsr2h,f,c
 23886  00012C  50DF               	movf	indf2,w,c
 23887  00012E  6E29               	movwf	Write_b_eep@bdat,c
 23888  000130  EC36  F01C         	call	_Write_b_eep	;wreg free
 23889  000134  2A49               	incf	LO_ISR@i,f,c
 23890  000136                     i1l7311:
 23891  000136  0101               	movlb	1	; () banked
 23892  000138  5110               	movf	(_RxTxBuff+3)& (0+255),w,b
 23893  00013A  5C49               	subwf	LO_ISR@i,w,c
 23894  00013C  E3E8               	bnc	i1l7305
 23895                           
 23896                           ; BSR set to: 1
 23897                           ;isr.c: 136: }
 23898                           ;isr.c: 137: crc_mb(RxTxBuff, (0+2)); for(i = 0; i < ((0) + 4); i ++) {putbyte(RxTxBuff[
      +                          i]);};
 23899  00013E  0E01               	movlw	high _RxTxBuff
 23900  000140  6E30               	movwf	crc_mb@buffer+1,c
 23901  000142  0E0D               	movlw	low _RxTxBuff
 23902  000144  6E2F               	movwf	crc_mb@buffer,c
 23903  000146  0E02               	movlw	2
 23904  000148  6E31               	movwf	crc_mb@count,c
 23905  00014A  EC2E  F01B         	call	_crc_mb	;wreg free
 23906  00014E  6A49               	clrf	LO_ISR@i,c
 23907  000150                     i1l7321:
 23908  000150  0101               	movlb	1	; () banked
 23909  000152  0E0D               	movlw	low _RxTxBuff
 23910  000154  2449               	addwf	LO_ISR@i,w,c
 23911  000156  6ED9               	movwf	fsr2l,c
 23912  000158  6ADA               	clrf	fsr2h,c
 23913  00015A  0E01               	movlw	high _RxTxBuff
 23914  00015C  22DA               	addwfc	fsr2h,f,c
 23915  00015E  50DF               	movf	indf2,w,c
 23916  000160  EC07  F01E         	call	_putbyte
 23917                           
 23918                           ; BSR set to: 1
 23919  000164  2A49               	incf	LO_ISR@i,f,c
 23920                           
 23921                           ; BSR set to: 1
 23922  000166  0E03               	movlw	3
 23923  000168  6449               	cpfsgt	LO_ISR@i,c
 23924  00016A  D7F2               	goto	i1l7321
 23925  00016C  D125               	goto	i1l405
 23926  00016E                     i1l7327:
 23927                           
 23928                           ; BSR set to: 1
 23929                           ;isr.c: 142: for(i = 2; i < ((2) + 4); i ++) {RxTxBuff[i] = timed_getc();if((FERR1) || (
      +                          OERR1) || timeout_error) goto error;}if(crc_mb_check(RxTxBuff, (2) + 2) == 0) break;
 23930  00016E  0E02               	movlw	2
 23931  000170  6E49               	movwf	LO_ISR@i,c
 23932  000172                     i1l7333:
 23933  000172  0101               	movlb	1	; () banked
 23934  000174  0E0D               	movlw	low _RxTxBuff
 23935  000176  2449               	addwf	LO_ISR@i,w,c
 23936  000178  6ED9               	movwf	fsr2l,c
 23937  00017A  6ADA               	clrf	fsr2h,c
 23938  00017C  0E01               	movlw	high _RxTxBuff
 23939  00017E  22DA               	addwfc	fsr2h,f,c
 23940  000180  EC6F  F01D         	call	_timed_getc	;wreg free
 23941  000184  6EDF               	movwf	indf2,c
 23942  000186  A4AB               	btfss	4011,2,c	;volatile
 23943  000188  B2AB               	btfsc	4011,1,c	;volatile
 23944  00018A  D116               	goto	i1l405
 23945  00018C  5026               	movf	_timeout_error,w,c	;volatile
 23946  00018E  E001 D113          	bnz	i1l405
 23947  000192  2A49               	incf	LO_ISR@i,f,c
 23948  000194  0E05               	movlw	5
 23949  000196  6449               	cpfsgt	LO_ISR@i,c
 23950  000198  D7EC               	goto	i1l7333
 23951  00019A  0101               	movlb	1	; () banked
 23952  00019C  0E01               	movlw	high _RxTxBuff
 23953  00019E  6E30               	movwf	crc_mb_check@buffer+1,c
 23954  0001A0  0E0D               	movlw	low _RxTxBuff
 23955  0001A2  6E2F               	movwf	crc_mb_check@buffer,c
 23956  0001A4  0E04               	movlw	4
 23957  0001A6  6E31               	movwf	crc_mb_check@cnt,c
 23958  0001A8  ECD6  F01A         	call	_crc_mb_check	;wreg free
 23959  0001AC  0900               	iorlw	0
 23960  0001AE  E101 D103          	bz	i1l405
 23961                           
 23962                           ;isr.c: 143: lcAdr = RxTxBuff[2];
 23963  0001B2  C10F  F047         	movff	_RxTxBuff+2,LO_ISR@lcAdr
 23964                           
 23965                           ;isr.c: 144: lcData = RxTxBuff[3];
 23966  0001B6  C110  F048         	movff	_RxTxBuff+3,LO_ISR@lcData
 23967                           
 23968                           ;isr.c: 145: for(i = 0; i < lcData; i++) {
 23969  0001BA  6A49               	clrf	LO_ISR@i,c
 23970  0001BC  D00F               	goto	i1l7355
 23971  0001BE                     i1l7349:
 23972                           
 23973                           ;isr.c: 146: RxTxBuff[2 + i] = Read_b_eep(lcAdr++);
 23974  0001BE  0101               	movlb	1	; () banked
 23975  0001C0  0E0F               	movlw	low (_RxTxBuff+2)
 23976  0001C2  2449               	addwf	LO_ISR@i,w,c
 23977  0001C4  6ED9               	movwf	fsr2l,c
 23978  0001C6  6ADA               	clrf	fsr2h,c
 23979  0001C8  0E01               	movlw	high (_RxTxBuff+2)
 23980  0001CA  22DA               	addwfc	fsr2h,f,c
 23981  0001CC  C047  F027         	movff	LO_ISR@lcAdr,Read_b_eep@badd
 23982  0001D0  6A28               	clrf	Read_b_eep@badd+1,c
 23983  0001D2  EC95  F01D         	call	_Read_b_eep	;wreg free
 23984  0001D6  6EDF               	movwf	indf2,c
 23985  0001D8  2A47               	incf	LO_ISR@lcAdr,f,c
 23986  0001DA  2A49               	incf	LO_ISR@i,f,c
 23987  0001DC                     i1l7355:
 23988  0001DC  5048               	movf	LO_ISR@lcData,w,c
 23989  0001DE  5C49               	subwf	LO_ISR@i,w,c
 23990  0001E0  E3EE               	bnc	i1l7349
 23991                           
 23992                           ;isr.c: 147: }
 23993                           ;isr.c: 148: crc_mb(RxTxBuff, (lcData+2)); for(i = 0; i < ((lcData) + 4); i ++) {putbyte
      +                          (RxTxBuff[i]);};
 23994  0001E2  0101               	movlb	1	; () banked
 23995  0001E4  0E01               	movlw	high _RxTxBuff
 23996  0001E6  6E30               	movwf	crc_mb@buffer+1,c
 23997  0001E8  0E0D               	movlw	low _RxTxBuff
 23998  0001EA  6E2F               	movwf	crc_mb@buffer,c
 23999  0001EC  5048               	movf	LO_ISR@lcData,w,c
 24000  0001EE  0F02               	addlw	2
 24001  0001F0  6E31               	movwf	crc_mb@count,c
 24002  0001F2  EC2E  F01B         	call	_crc_mb	;wreg free
 24003  0001F6  6A49               	clrf	LO_ISR@i,c
 24004  0001F8  D00B               	goto	i1l7365
 24005  0001FA                     i1l7361:
 24006  0001FA  0101               	movlb	1	; () banked
 24007  0001FC  0E0D               	movlw	low _RxTxBuff
 24008  0001FE  2449               	addwf	LO_ISR@i,w,c
 24009  000200  6ED9               	movwf	fsr2l,c
 24010  000202  6ADA               	clrf	fsr2h,c
 24011  000204  0E01               	movlw	high _RxTxBuff
 24012  000206  22DA               	addwfc	fsr2h,f,c
 24013  000208  50DF               	movf	indf2,w,c
 24014  00020A  EC07  F01E         	call	_putbyte
 24015                           
 24016                           ; BSR set to: 1
 24017  00020E  2A49               	incf	LO_ISR@i,f,c
 24018  000210                     i1l7365:
 24019  000210  5048               	movf	LO_ISR@lcData,w,c
 24020  000212  6E39               	movwf	??_LO_ISR& (0+255),c
 24021  000214  6A3A               	clrf	(??_LO_ISR+1)& (0+255),c
 24022  000216  0E04               	movlw	4
 24023  000218  2639               	addwf	??_LO_ISR,f,c
 24024  00021A  0E00               	movlw	0
 24025  00021C  223A               	addwfc	??_LO_ISR+1,f,c
 24026  00021E  5049               	movf	LO_ISR@i,w,c
 24027  000220  6E3B               	movwf	(??_LO_ISR+2)& (0+255),c
 24028  000222  6A3C               	clrf	(??_LO_ISR+3)& (0+255),c
 24029  000224  503C               	movf	??_LO_ISR+3,w,c
 24030  000226  0A80               	xorlw	128
 24031  000228  6E3D               	movwf	(??_LO_ISR+4)& (0+255),c
 24032  00022A  5039               	movf	??_LO_ISR,w,c
 24033  00022C  5C3B               	subwf	??_LO_ISR+2,w,c
 24034  00022E  503A               	movf	??_LO_ISR+1,w,c
 24035  000230  0A80               	xorlw	128
 24036  000232  583D               	subwfb	(??_LO_ISR+4)& (0+255),w,c
 24037  000234  E301 D0C0          	bc	i1l405
 24038  000238  D7E0               	goto	i1l7361
 24039  00023A                     i1l7367:
 24040                           
 24041                           ; BSR set to: 1
 24042                           ;isr.c: 152: for(i = 2; i < ((1) + 4); i ++) {RxTxBuff[i] = timed_getc();if((FERR1) || (
      +                          OERR1) || timeout_error) goto error;}if(crc_mb_check(RxTxBuff, (1) + 2) == 0) break;
 24043  00023A  0E02               	movlw	2
 24044  00023C  6E49               	movwf	LO_ISR@i,c
 24045  00023E                     i1l7373:
 24046  00023E  0101               	movlb	1	; () banked
 24047  000240  0E0D               	movlw	low _RxTxBuff
 24048  000242  2449               	addwf	LO_ISR@i,w,c
 24049  000244  6ED9               	movwf	fsr2l,c
 24050  000246  6ADA               	clrf	fsr2h,c
 24051  000248  0E01               	movlw	high _RxTxBuff
 24052  00024A  22DA               	addwfc	fsr2h,f,c
 24053  00024C  EC6F  F01D         	call	_timed_getc	;wreg free
 24054  000250  6EDF               	movwf	indf2,c
 24055  000252  A4AB               	btfss	4011,2,c	;volatile
 24056  000254  B2AB               	btfsc	4011,1,c	;volatile
 24057  000256  D0B0               	goto	i1l405
 24058  000258  5026               	movf	_timeout_error,w,c	;volatile
 24059  00025A  E001 D0AD          	bnz	i1l405
 24060  00025E  2A49               	incf	LO_ISR@i,f,c
 24061  000260  0E04               	movlw	4
 24062  000262  6449               	cpfsgt	LO_ISR@i,c
 24063  000264  D7EC               	goto	i1l7373
 24064  000266  0101               	movlb	1	; () banked
 24065  000268  0E01               	movlw	high _RxTxBuff
 24066  00026A  6E30               	movwf	crc_mb_check@buffer+1,c
 24067  00026C  0E0D               	movlw	low _RxTxBuff
 24068  00026E  6E2F               	movwf	crc_mb_check@buffer,c
 24069  000270  0E03               	movlw	3
 24070  000272  6E31               	movwf	crc_mb_check@cnt,c
 24071  000274  ECD6  F01A         	call	_crc_mb_check	;wreg free
 24072  000278  0900               	iorlw	0
 24073  00027A  E101 D09D          	bz	i1l405
 24074                           
 24075                           ;isr.c: 153: SendMessage(USB_FLASH_SEND_CMD);
 24076  00027E  0E05               	movlw	5
 24077  000280  ECEA  F01D         	call	_SendMessage
 24078                           
 24079                           ;isr.c: 155: crc_mb(RxTxBuff, (0+2)); for(i = 0; i < ((0) + 4); i ++) {putbyte(RxTxBuff[
      +                          i]);};
 24080  000284  0101               	movlb	1	; () banked
 24081  000286  0E01               	movlw	high _RxTxBuff
 24082  000288  6E30               	movwf	crc_mb@buffer+1,c
 24083  00028A  0E0D               	movlw	low _RxTxBuff
 24084  00028C  6E2F               	movwf	crc_mb@buffer,c
 24085  00028E  0E02               	movlw	2
 24086  000290  6E31               	movwf	crc_mb@count,c
 24087  000292  EC2E  F01B         	call	_crc_mb	;wreg free
 24088  000296  6A49               	clrf	LO_ISR@i,c
 24089  000298                     i1l7397:
 24090  000298  0101               	movlb	1	; () banked
 24091  00029A  0E0D               	movlw	low _RxTxBuff
 24092  00029C  2449               	addwf	LO_ISR@i,w,c
 24093  00029E  6ED9               	movwf	fsr2l,c
 24094  0002A0  6ADA               	clrf	fsr2h,c
 24095  0002A2  0E01               	movlw	high _RxTxBuff
 24096  0002A4  22DA               	addwfc	fsr2h,f,c
 24097  0002A6  50DF               	movf	indf2,w,c
 24098  0002A8  EC07  F01E         	call	_putbyte
 24099                           
 24100                           ; BSR set to: 1
 24101  0002AC  2A49               	incf	LO_ISR@i,f,c
 24102                           
 24103                           ; BSR set to: 1
 24104  0002AE  0E03               	movlw	3
 24105  0002B0  6449               	cpfsgt	LO_ISR@i,c
 24106  0002B2  D7F2               	goto	i1l7397
 24107  0002B4  D081               	goto	i1l405
 24108  0002B6                     i1l7403:
 24109                           
 24110                           ; BSR set to: 1
 24111                           ;isr.c: 160: for(i = 2; i < ((0) + 4); i ++) {RxTxBuff[i] = timed_getc();if((FERR1) || (
      +                          OERR1) || timeout_error) goto error;}if(crc_mb_check(RxTxBuff, (0) + 2) == 0) break;
 24112  0002B6  0E02               	movlw	2
 24113  0002B8  6E49               	movwf	LO_ISR@i,c
 24114  0002BA                     i1l7409:
 24115  0002BA  0101               	movlb	1	; () banked
 24116  0002BC  0E0D               	movlw	low _RxTxBuff
 24117  0002BE  2449               	addwf	LO_ISR@i,w,c
 24118  0002C0  6ED9               	movwf	fsr2l,c
 24119  0002C2  6ADA               	clrf	fsr2h,c
 24120  0002C4  0E01               	movlw	high _RxTxBuff
 24121  0002C6  22DA               	addwfc	fsr2h,f,c
 24122  0002C8  EC6F  F01D         	call	_timed_getc	;wreg free
 24123  0002CC  6EDF               	movwf	indf2,c
 24124  0002CE  A4AB               	btfss	4011,2,c	;volatile
 24125  0002D0  B2AB               	btfsc	4011,1,c	;volatile
 24126  0002D2  D072               	goto	i1l405
 24127  0002D4  5026               	movf	_timeout_error,w,c	;volatile
 24128  0002D6  E170               	bnz	i1l405
 24129  0002D8  2A49               	incf	LO_ISR@i,f,c
 24130  0002DA  0E03               	movlw	3
 24131  0002DC  6449               	cpfsgt	LO_ISR@i,c
 24132  0002DE  D7ED               	goto	i1l7409
 24133  0002E0  0101               	movlb	1	; () banked
 24134  0002E2  0E01               	movlw	high _RxTxBuff
 24135  0002E4  6E30               	movwf	crc_mb_check@buffer+1,c
 24136  0002E6  0E0D               	movlw	low _RxTxBuff
 24137  0002E8  6E2F               	movwf	crc_mb_check@buffer,c
 24138  0002EA  0E02               	movlw	2
 24139  0002EC  6E31               	movwf	crc_mb_check@cnt,c
 24140  0002EE  ECD6  F01A         	call	_crc_mb_check	;wreg free
 24141  0002F2  0900               	iorlw	0
 24142  0002F4  E061               	bz	i1l405
 24143                           
 24144                           ;isr.c: 161: set_ee_default();
 24145  0002F6  EC03  F01B         	call	_set_ee_default	;wreg free
 24146                           
 24147                           ;isr.c: 162: crc_mb(RxTxBuff, (0+2)); for(i = 0; i < ((0) + 4); i ++) {putbyte(RxTxBuff[
      +                          i]);};
 24148  0002FA  0101               	movlb	1	; () banked
 24149  0002FC  0E01               	movlw	high _RxTxBuff
 24150  0002FE  6E30               	movwf	crc_mb@buffer+1,c
 24151  000300  0E0D               	movlw	low _RxTxBuff
 24152  000302  6E2F               	movwf	crc_mb@buffer,c
 24153  000304  0E02               	movlw	2
 24154  000306  6E31               	movwf	crc_mb@count,c
 24155  000308  EC2E  F01B         	call	_crc_mb	;wreg free
 24156  00030C  6A49               	clrf	LO_ISR@i,c
 24157  00030E                     i1l7435:
 24158  00030E  0101               	movlb	1	; () banked
 24159  000310  0E0D               	movlw	low _RxTxBuff
 24160  000312  2449               	addwf	LO_ISR@i,w,c
 24161  000314  6ED9               	movwf	fsr2l,c
 24162  000316  6ADA               	clrf	fsr2h,c
 24163  000318  0E01               	movlw	high _RxTxBuff
 24164  00031A  22DA               	addwfc	fsr2h,f,c
 24165  00031C  50DF               	movf	indf2,w,c
 24166  00031E  EC07  F01E         	call	_putbyte
 24167                           
 24168                           ; BSR set to: 1
 24169  000322  2A49               	incf	LO_ISR@i,f,c
 24170                           
 24171                           ; BSR set to: 1
 24172  000324  0E03               	movlw	3
 24173  000326  6449               	cpfsgt	LO_ISR@i,c
 24174  000328  D7F2               	goto	i1l7435
 24175  00032A  D046               	goto	i1l405
 24176  00032C                     i1l7441:
 24177                           
 24178                           ; BSR set to: 1
 24179                           ;isr.c: 167: for(i = 2; i < ((1) + 4); i ++) {RxTxBuff[i] = timed_getc();if((FERR1) || (
      +                          OERR1) || timeout_error) goto error;}if(crc_mb_check(RxTxBuff, (1) + 2) == 0) break;
 24180  00032C  0E02               	movlw	2
 24181  00032E  6E49               	movwf	LO_ISR@i,c
 24182  000330                     i1l7447:
 24183  000330  0101               	movlb	1	; () banked
 24184  000332  0E0D               	movlw	low _RxTxBuff
 24185  000334  2449               	addwf	LO_ISR@i,w,c
 24186  000336  6ED9               	movwf	fsr2l,c
 24187  000338  6ADA               	clrf	fsr2h,c
 24188  00033A  0E01               	movlw	high _RxTxBuff
 24189  00033C  22DA               	addwfc	fsr2h,f,c
 24190  00033E  EC6F  F01D         	call	_timed_getc	;wreg free
 24191  000342  6EDF               	movwf	indf2,c
 24192  000344  A4AB               	btfss	4011,2,c	;volatile
 24193  000346  B2AB               	btfsc	4011,1,c	;volatile
 24194  000348  D037               	goto	i1l405
 24195  00034A  5026               	movf	_timeout_error,w,c	;volatile
 24196  00034C  E135               	bnz	i1l405
 24197  00034E  2A49               	incf	LO_ISR@i,f,c
 24198  000350  0E04               	movlw	4
 24199  000352  6449               	cpfsgt	LO_ISR@i,c
 24200  000354  D7ED               	goto	i1l7447
 24201  000356  0101               	movlb	1	; () banked
 24202  000358  0E01               	movlw	high _RxTxBuff
 24203  00035A  6E30               	movwf	crc_mb_check@buffer+1,c
 24204  00035C  0E0D               	movlw	low _RxTxBuff
 24205  00035E  6E2F               	movwf	crc_mb_check@buffer,c
 24206  000360  0E03               	movlw	3
 24207  000362  6E31               	movwf	crc_mb_check@cnt,c
 24208  000364  ECD6  F01A         	call	_crc_mb_check	;wreg free
 24209  000368  0900               	iorlw	0
 24210  00036A  E026               	bz	i1l405
 24211  00036C  D00C               	goto	i1l7471
 24212  00036E                     i1l7463:
 24213                           
 24214                           ; BSR set to: 1
 24215                           ;isr.c: 172: BSemOn(SEM_RX_DONE);
 24216  00036E  0E01               	movlw	1
 24217  000370  ECF2  F01D         	call	_BSemOn
 24218                           
 24219                           ;isr.c: 173: break;
 24220  000374  D010               	goto	i1l474
 24221  000376                     i1l7465:
 24222                           
 24223                           ; BSR set to: 1
 24224                           ;isr.c: 175: BSemOn(SEM_WR_DONE);
 24225  000376  0E02               	movlw	2
 24226  000378  ECF2  F01D         	call	_BSemOn
 24227                           
 24228                           ;isr.c: 176: break;
 24229  00037C  D00C               	goto	i1l474
 24230  00037E                     i1l7467:
 24231                           
 24232                           ; BSR set to: 1
 24233                           ;isr.c: 178: BSemOn(SEM_WR_ERR);
 24234  00037E  0E03               	movlw	3
 24235  000380  ECF2  F01D         	call	_BSemOn
 24236                           
 24237                           ;isr.c: 179: break;
 24238  000384  D008               	goto	i1l474
 24239  000386                     i1l7471:
 24240  000386  0101               	movlb	1	; () banked
 24241  000388  510F               	movf	(_RxTxBuff+2)& (0+255),w,b
 24242                           
 24243                           ; Switch size 1, requested type "space"
 24244                           ; Number of cases is 3, Range of values is 1 to 3
 24245                           ; switch strategies available:
 24246                           ; Name         Instructions Cycles
 24247                           ; simple_byte           10     6 (average)
 24248                           ;	Chosen strategy is simple_byte
 24249  00038A  0A01               	xorlw	1	; case 1
 24250  00038C  E0F0               	bz	i1l7463
 24251  00038E  0A03               	xorlw	3	; case 2
 24252  000390  E0F2               	bz	i1l7465
 24253  000392  0A01               	xorlw	1	; case 3
 24254  000394  E0F4               	bz	i1l7467
 24255  000396                     i1l474:
 24256                           
 24257                           ;isr.c: 184: __nop();
 24258  000396  F000               	nop	
 24259                           
 24260                           ;isr.c: 185: __nop();
 24261  000398  F000               	nop	
 24262                           
 24263                           ;isr.c: 186: break;
 24264  00039A  D00E               	goto	i1l405
 24265  00039C                     i1l7475:
 24266                           
 24267                           ; BSR set to: 1
 24268  00039C  510E               	movf	(_RxTxBuff+1)& (0+255),w,b
 24269                           
 24270                           ; Switch size 1, requested type "space"
 24271                           ; Number of cases is 5, Range of values is 8 to 16
 24272                           ; switch strategies available:
 24273                           ; Name         Instructions Cycles
 24274                           ; simple_byte           16     9 (average)
 24275                           ;	Chosen strategy is simple_byte
 24276  00039E  0A08               	xorlw	8	; case 8
 24277  0003A0  E101 D66D          	bz	i1l7273
 24278  0003A4  0A01               	xorlw	1	; case 9
 24279  0003A6  E101 D6E2          	bz	i1l7327
 24280  0003AA  0A03               	xorlw	3	; case 10
 24281  0003AC  E101 D745          	bz	i1l7367
 24282  0003B0  0A01               	xorlw	1	; case 11
 24283  0003B2  E081               	bz	i1l7403
 24284  0003B4  0A1B               	xorlw	27	; case 16
 24285  0003B6  E0BA               	bz	i1l7441
 24286  0003B8                     i1l405:
 24287                           
 24288                           ;isr.c: 192: if(RCIF) dummy = RCREG;
 24289  0003B8  BA9E               	btfsc	3998,5,c	;volatile
 24290  0003BA  CFAE F025          	movff	4014,_dummy	;volatile
 24291                           
 24292                           ;isr.c: 193: if(RCIF) dummy = RCREG;
 24293  0003BE  BA9E               	btfsc	3998,5,c	;volatile
 24294  0003C0  CFAE F025          	movff	4014,_dummy	;volatile
 24295                           
 24296                           ;isr.c: 194: CREN1 = 0;
 24297  0003C4  98AB               	bcf	4011,4,c	;volatile
 24298                           
 24299                           ;isr.c: 195: __nop();
 24300  0003C6  F000               	nop	
 24301                           
 24302                           ;isr.c: 196: CREN1 = 1;
 24303  0003C8  88AB               	bsf	4011,4,c	;volatile
 24304  0003CA                     i1l480:
 24305  0003CA  C046  FFF5         	movff	??_LO_ISR+13,tablat
 24306  0003CE  C045  FFF8         	movff	??_LO_ISR+12,tblptru
 24307  0003D2  C044  FFF7         	movff	??_LO_ISR+11,tblptrh
 24308  0003D6  C043  FFF6         	movff	??_LO_ISR+10,tblptrl
 24309  0003DA  C042  FFDA         	movff	??_LO_ISR+9,fsr2h
 24310  0003DE  C041  FFD9         	movff	??_LO_ISR+8,fsr2l
 24311  0003E2  C040  FFE0         	movff	??_LO_ISR+7,bsr
 24312  0003E6  C03F  FFE8         	movff	??_LO_ISR+6,wreg
 24313  0003EA  C03E  FFD8         	movff	??_LO_ISR+5,status
 24314  0003EE  0010               	retfie	
 24315  0003F0                     __end_of_LO_ISR:
 24316                           	opt stack 0
 24317                           tblptru	equ	0xFF8
 24318                           tblptrh	equ	0xFF7
 24319                           tblptrl	equ	0xFF6
 24320                           tablat	equ	0xFF5
 24321                           prodh	equ	0xFF4
 24322                           prodl	equ	0xFF3
 24323                           intcon	equ	0xFF2
 24324                           postinc0	equ	0xFEE
 24325                           wreg	equ	0xFE8
 24326                           indf1	equ	0xFE7
 24327                           postinc1	equ	0xFE6
 24328                           postdec1	equ	0xFE5
 24329                           fsr1h	equ	0xFE2
 24330                           fsr1l	equ	0xFE1
 24331                           bsr	equ	0xFE0
 24332                           indf2	equ	0xFDF
 24333                           postinc2	equ	0xFDE
 24334                           postdec2	equ	0xFDD
 24335                           fsr2h	equ	0xFDA
 24336                           fsr2l	equ	0xFD9
 24337                           status	equ	0xFD8
 24338                           
 24339 ;; *************** function _timed_getc *****************
 24340 ;; Defined at:
 24341 ;;		line 97 in file "../lib/usart.c"
 24342 ;; Parameters:    Size  Location     Type
 24343 ;;		None
 24344 ;; Auto vars:     Size  Location     Type
 24345 ;;  timeout         2    0[COMRAM] unsigned short 
 24346 ;; Return value:  Size  Location     Type
 24347 ;;                  1    wreg      unsigned char 
 24348 ;; Registers used:
 24349 ;;		wreg, status,2, status,0, cstack
 24350 ;; Tracked objects:
 24351 ;;		On entry : 0/0
 24352 ;;		On exit  : 0/0
 24353 ;;		Unchanged: 0/0
 24354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24356 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24358 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24359 ;;Total ram usage:        2 bytes
 24360 ;; Hardware stack levels used:    1
 24361 ;; Hardware stack levels required when called:    5
 24362 ;; This function calls:
 24363 ;;		_getbyte
 24364 ;; This function is called by:
 24365 ;;		_LO_ISR
 24366 ;; This function uses a non-reentrant model
 24367 ;;
 24368                           
 24369                           	psect	text58
 24370  003ADE                     __ptext58:
 24371                           	opt stack 0
 24372  003ADE                     _timed_getc:
 24373                           	opt stack 16
 24374                           
 24375                           ;usart.c: 98: WORD timeout;
 24376                           ;usart.c: 100: timeout_error = 0;
 24377                           
 24378                           ;incstack = 0
 24379  003ADE  6A26               	clrf	_timeout_error,c	;volatile
 24380                           
 24381                           ;usart.c: 101: timeout = 0;
 24382  003AE0  6A27               	clrf	timed_getc@timeout,c
 24383  003AE2  6A28               	clrf	timed_getc@timeout+1,c
 24384  003AE4                     i1l222:
 24385  003AE4  F000               	nop	
 24386  003AE6  BA9E               	btfsc	3998,5,c	;volatile
 24387  003AE8  D007               	goto	i1l225
 24388  003AEA  4A27               	infsnz	timed_getc@timeout,f,c
 24389  003AEC  2A28               	incf	timed_getc@timeout+1,f,c
 24390  003AEE  0E10               	movlw	16
 24391  003AF0  5C27               	subwf	timed_getc@timeout& (0+255),w,c
 24392  003AF2  0E27               	movlw	39
 24393  003AF4  5828               	subwfb	(timed_getc@timeout+1)& (0+255),w,c
 24394  003AF6  E3F6               	bnc	i1l222
 24395  003AF8                     i1l225:
 24396                           
 24397                           ;usart.c: 105: if (RCIF) {
 24398  003AF8  BA9E               	btfsc	3998,5,c	;volatile
 24399                           
 24400                           ;usart.c: 106: return (getbyte());
 24401  003AFA  EF03  F01E         	goto	i1l211	;wreg free
 24402                           
 24403                           ;usart.c: 108: timeout_error = 1;
 24404  003AFE  0E01               	movlw	1
 24405  003B00  6E26               	movwf	_timeout_error,c	;volatile
 24406                           
 24407                           ;usart.c: 109: return (0);
 24408  003B02  0C00               	retlw	0
 24409  003B04                     __end_of_timed_getc:
 24410                           	opt stack 0
 24411                           tblptru	equ	0xFF8
 24412                           tblptrh	equ	0xFF7
 24413                           tblptrl	equ	0xFF6
 24414                           tablat	equ	0xFF5
 24415                           prodh	equ	0xFF4
 24416                           prodl	equ	0xFF3
 24417                           intcon	equ	0xFF2
 24418                           postinc0	equ	0xFEE
 24419                           wreg	equ	0xFE8
 24420                           indf1	equ	0xFE7
 24421                           postinc1	equ	0xFE6
 24422                           postdec1	equ	0xFE5
 24423                           fsr1h	equ	0xFE2
 24424                           fsr1l	equ	0xFE1
 24425                           bsr	equ	0xFE0
 24426                           indf2	equ	0xFDF
 24427                           postinc2	equ	0xFDE
 24428                           postdec2	equ	0xFDD
 24429                           fsr2h	equ	0xFDA
 24430                           fsr2l	equ	0xFD9
 24431                           status	equ	0xFD8
 24432                           
 24433 ;; *************** function _getbyte *****************
 24434 ;; Defined at:
 24435 ;;		line 76 in file "../lib/usart.c"
 24436 ;; Parameters:    Size  Location     Type
 24437 ;;		None
 24438 ;; Auto vars:     Size  Location     Type
 24439 ;;		None
 24440 ;; Return value:  Size  Location     Type
 24441 ;;                  1    wreg      unsigned char 
 24442 ;; Registers used:
 24443 ;;		wreg, status,2
 24444 ;; Tracked objects:
 24445 ;;		On entry : 0/0
 24446 ;;		On exit  : 0/0
 24447 ;;		Unchanged: 0/0
 24448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24453 ;;Total ram usage:        0 bytes
 24454 ;; Hardware stack levels used:    1
 24455 ;; Hardware stack levels required when called:    4
 24456 ;; This function calls:
 24457 ;;		Nothing
 24458 ;; This function is called by:
 24459 ;;		_timed_getc
 24460 ;; This function uses a non-reentrant model
 24461 ;;
 24462                           
 24463                           	psect	text59
 24464  003C02                     __ptext59:
 24465                           	opt stack 0
 24466  003C02                     _getbyte:
 24467                           	opt stack 16
 24468                           
 24469                           ;usart.c: 78: while (!RCIF) {
 24470                           
 24471                           ;incstack = 0
 24472  003C02  D001               	goto	i1l211
 24473  003C04                     i1l212:
 24474                           
 24475                           ;usart.c: 79: __nop();
 24476  003C04  F000               	nop	
 24477  003C06                     i1l211:
 24478  003C06  AA9E               	btfss	3998,5,c	;volatile
 24479  003C08  D7FD               	goto	i1l212
 24480                           
 24481                           ;usart.c: 81: }
 24482                           ;usart.c: 82: return RCREG;
 24483  003C0A  50AE               	movf	4014,w,c	;volatile
 24484  003C0C  0012               	return	
 24485  003C0E                     __end_of_getbyte:
 24486                           	opt stack 0
 24487                           tblptru	equ	0xFF8
 24488                           tblptrh	equ	0xFF7
 24489                           tblptrl	equ	0xFF6
 24490                           tablat	equ	0xFF5
 24491                           prodh	equ	0xFF4
 24492                           prodl	equ	0xFF3
 24493                           intcon	equ	0xFF2
 24494                           postinc0	equ	0xFEE
 24495                           wreg	equ	0xFE8
 24496                           indf1	equ	0xFE7
 24497                           postinc1	equ	0xFE6
 24498                           postdec1	equ	0xFE5
 24499                           fsr1h	equ	0xFE2
 24500                           fsr1l	equ	0xFE1
 24501                           bsr	equ	0xFE0
 24502                           indf2	equ	0xFDF
 24503                           postinc2	equ	0xFDE
 24504                           postdec2	equ	0xFDD
 24505                           fsr2h	equ	0xFDA
 24506                           fsr2l	equ	0xFD9
 24507                           status	equ	0xFD8
 24508                           
 24509 ;; *************** function _set_ee_default *****************
 24510 ;; Defined at:
 24511 ;;		line 28 in file "../lib/eeprom.c"
 24512 ;; Parameters:    Size  Location     Type
 24513 ;;		None
 24514 ;; Auto vars:     Size  Location     Type
 24515 ;;  i               2   13[COMRAM] unsigned int 
 24516 ;;  c1              1   12[COMRAM] unsigned char 
 24517 ;;  c               1   11[COMRAM] unsigned char 
 24518 ;; Return value:  Size  Location     Type
 24519 ;;		None               void
 24520 ;; Registers used:
 24521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24522 ;; Tracked objects:
 24523 ;;		On entry : 0/1
 24524 ;;		On exit  : 0/0
 24525 ;;		Unchanged: 0/0
 24526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24528 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24530 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24531 ;;Total ram usage:        4 bytes
 24532 ;; Hardware stack levels used:    1
 24533 ;; Hardware stack levels required when called:    6
 24534 ;; This function calls:
 24535 ;;		_read___ee
 24536 ;;		_write___ee
 24537 ;; This function is called by:
 24538 ;;		_LO_ISR
 24539 ;; This function uses a non-reentrant model
 24540 ;;
 24541                           
 24542                           	psect	text60
 24543  003606                     __ptext60:
 24544                           	opt stack 0
 24545  003606                     _set_ee_default:
 24546                           	opt stack 15
 24547                           
 24548                           ;eeprom.c: 29: unsigned int i;
 24549                           ;eeprom.c: 30: char c, c1;
 24550                           ;eeprom.c: 31: for(i = 0; i < 256; i ++){
 24551                           
 24552                           ;incstack = 0
 24553  003606  6A34               	clrf	set_ee_default@i,c
 24554  003608  6A35               	clrf	set_ee_default@i+1,c
 24555  00360A                     i1l6635:
 24556                           
 24557                           ;eeprom.c: 33: c = eedata[i];
 24558  00360A  0EA7               	movlw	low _eedata
 24559  00360C  2434               	addwf	set_ee_default@i,w,c
 24560  00360E  6EF6               	movwf	tblptrl,c
 24561  003610  0EDB               	movlw	high _eedata
 24562  003612  2035               	addwfc	set_ee_default@i+1,w,c
 24563  003614  6EF7               	movwf	tblptrh,c
 24564  003616                     	if	0	;There are less than 3 active tblptr bytes
 24565  003616                     	endif
 24566  003616  0008               	tblrd		*
 24567  003618  CFF5 F032          	movff	tablat,set_ee_default@c
 24568                           
 24569                           ;eeprom.c: 34: read___ee(i, (char *)&c1, sizeof(c1));
 24570  00361C  C034  F02C         	movff	set_ee_default@i,read___ee@adr
 24571  003620  C035  F02D         	movff	set_ee_default@i+1,read___ee@adr+1
 24572  003624  0E33               	movlw	low set_ee_default@c1
 24573  003626  6E2E               	movwf	read___ee@var,c
 24574  003628  0E01               	movlw	1
 24575  00362A  6E2F               	movwf	read___ee@byte,c
 24576  00362C  EC82  F01D         	call	_read___ee	;wreg free
 24577                           
 24578                           ;eeprom.c: 35: if(c != c1){
 24579  003630  5032               	movf	set_ee_default@c,w,c
 24580  003632  1833               	xorwf	set_ee_default@c1,w,c
 24581  003634  E00A               	bz	i1l6643
 24582                           
 24583                           ;eeprom.c: 36: write___ee(i, (char *)&c, sizeof(c));
 24584  003636  C034  F02E         	movff	set_ee_default@i,write___ee@adr
 24585  00363A  C035  F02F         	movff	set_ee_default@i+1,write___ee@adr+1
 24586  00363E  0E32               	movlw	low set_ee_default@c
 24587  003640  6E30               	movwf	write___ee@var,c
 24588  003642  0E01               	movlw	1
 24589  003644  6E31               	movwf	write___ee@byte,c
 24590  003646  ECF7  F01C         	call	_write___ee	;wreg free
 24591  00364A                     i1l6643:
 24592  00364A  4A34               	infsnz	set_ee_default@i,f,c
 24593  00364C  2A35               	incf	set_ee_default@i+1,f,c
 24594  00364E  0E00               	movlw	0
 24595  003650  5C34               	subwf	set_ee_default@i,w,c
 24596  003652  0E01               	movlw	1
 24597  003654  5835               	subwfb	set_ee_default@i+1,w,c
 24598  003656  B0D8               	btfsc	status,0,c
 24599  003658  0012               	return	
 24600  00365A  D7D7               	goto	i1l6635
 24601  00365C                     __end_of_set_ee_default:
 24602                           	opt stack 0
 24603                           tblptru	equ	0xFF8
 24604                           tblptrh	equ	0xFF7
 24605                           tblptrl	equ	0xFF6
 24606                           tablat	equ	0xFF5
 24607                           prodh	equ	0xFF4
 24608                           prodl	equ	0xFF3
 24609                           intcon	equ	0xFF2
 24610                           postinc0	equ	0xFEE
 24611                           wreg	equ	0xFE8
 24612                           indf1	equ	0xFE7
 24613                           postinc1	equ	0xFE6
 24614                           postdec1	equ	0xFE5
 24615                           fsr1h	equ	0xFE2
 24616                           fsr1l	equ	0xFE1
 24617                           bsr	equ	0xFE0
 24618                           indf2	equ	0xFDF
 24619                           postinc2	equ	0xFDE
 24620                           postdec2	equ	0xFDD
 24621                           fsr2h	equ	0xFDA
 24622                           fsr2l	equ	0xFD9
 24623                           status	equ	0xFD8
 24624                           
 24625 ;; *************** function _write___ee *****************
 24626 ;; Defined at:
 24627 ;;		line 11 in file "../lib/eeprom.c"
 24628 ;; Parameters:    Size  Location     Type
 24629 ;;  adr             2    7[COMRAM] unsigned int 
 24630 ;;  var             1    9[COMRAM] PTR unsigned char 
 24631 ;;		 -> set_ee_default@c(1), 
 24632 ;;  byte            1   10[COMRAM] unsigned char 
 24633 ;; Auto vars:     Size  Location     Type
 24634 ;;		None
 24635 ;; Return value:  Size  Location     Type
 24636 ;;		None               void
 24637 ;; Registers used:
 24638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24639 ;; Tracked objects:
 24640 ;;		On entry : 0/1
 24641 ;;		On exit  : 0/0
 24642 ;;		Unchanged: 0/0
 24643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24644 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24647 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24648 ;;Total ram usage:        4 bytes
 24649 ;; Hardware stack levels used:    1
 24650 ;; Hardware stack levels required when called:    5
 24651 ;; This function calls:
 24652 ;;		_Busy_eep
 24653 ;;		_Write_b_eep
 24654 ;; This function is called by:
 24655 ;;		_set_ee_default
 24656 ;; This function uses a non-reentrant model
 24657 ;;
 24658                           
 24659                           	psect	text61
 24660  0039EE                     __ptext61:
 24661                           	opt stack 0
 24662  0039EE                     _write___ee:
 24663                           	opt stack 15
 24664                           
 24665                           ;eeprom.c: 12: while(byte--){
 24666                           
 24667                           ;incstack = 0
 24668  0039EE  D010               	goto	i1l6091
 24669  0039F0                     i1l6087:
 24670                           
 24671                           ;eeprom.c: 13: (Busy_eep(), Write_b_eep(adr+byte,(unsigned char)(*(((unsigned char *)var
      +                          )+byte))));
 24672  0039F0  EC0D  F01E         	call	_Busy_eep	;wreg free
 24673  0039F4  5031               	movf	write___ee@byte,w,c
 24674  0039F6  242E               	addwf	write___ee@adr,w,c
 24675  0039F8  6E27               	movwf	Write_b_eep@badd,c
 24676  0039FA  0E00               	movlw	0
 24677  0039FC  202F               	addwfc	write___ee@adr+1,w,c
 24678  0039FE  6E28               	movwf	Write_b_eep@badd+1,c
 24679  003A00  5030               	movf	write___ee@var,w,c
 24680  003A02  2431               	addwf	write___ee@byte,w,c
 24681  003A04  6ED9               	movwf	fsr2l,c
 24682  003A06  6ADA               	clrf	fsr2h,c
 24683  003A08  50DF               	movf	indf2,w,c
 24684  003A0A  6E29               	movwf	Write_b_eep@bdat,c
 24685  003A0C  EC36  F01C         	call	_Write_b_eep	;wreg free
 24686  003A10                     i1l6091:
 24687  003A10  0631               	decf	write___ee@byte,f,c
 24688  003A12  2831               	incf	write___ee@byte& (0+255),w,c
 24689  003A14  B4D8               	btfsc	status,2,c
 24690  003A16  0012               	return	
 24691  003A18  D7EB               	goto	i1l6087
 24692  003A1A                     __end_of_write___ee:
 24693                           	opt stack 0
 24694                           tblptru	equ	0xFF8
 24695                           tblptrh	equ	0xFF7
 24696                           tblptrl	equ	0xFF6
 24697                           tablat	equ	0xFF5
 24698                           prodh	equ	0xFF4
 24699                           prodl	equ	0xFF3
 24700                           intcon	equ	0xFF2
 24701                           postinc0	equ	0xFEE
 24702                           wreg	equ	0xFE8
 24703                           indf1	equ	0xFE7
 24704                           postinc1	equ	0xFE6
 24705                           postdec1	equ	0xFE5
 24706                           fsr1h	equ	0xFE2
 24707                           fsr1l	equ	0xFE1
 24708                           bsr	equ	0xFE0
 24709                           indf2	equ	0xFDF
 24710                           postinc2	equ	0xFDE
 24711                           postdec2	equ	0xFDD
 24712                           fsr2h	equ	0xFDA
 24713                           fsr2l	equ	0xFD9
 24714                           status	equ	0xFD8
 24715                           
 24716 ;; *************** function _Write_b_eep *****************
 24717 ;; Defined at:
 24718 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\EEP\write_B.c"
 24719 ;; Parameters:    Size  Location     Type
 24720 ;;  badd            2    0[COMRAM] unsigned int 
 24721 ;;  bdat            1    2[COMRAM] unsigned char 
 24722 ;; Auto vars:     Size  Location     Type
 24723 ;;  GIE_BIT_VAL     1    6[COMRAM] unsigned char 
 24724 ;; Return value:  Size  Location     Type
 24725 ;;		None               void
 24726 ;; Registers used:
 24727 ;;		wreg, status,2, status,0
 24728 ;; Tracked objects:
 24729 ;;		On entry : 0/1
 24730 ;;		On exit  : 0/0
 24731 ;;		Unchanged: 0/0
 24732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24733 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24735 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24736 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24737 ;;Total ram usage:        7 bytes
 24738 ;; Hardware stack levels used:    1
 24739 ;; Hardware stack levels required when called:    4
 24740 ;; This function calls:
 24741 ;;		Nothing
 24742 ;; This function is called by:
 24743 ;;		_write___ee
 24744 ;;		_LO_ISR
 24745 ;; This function uses a non-reentrant model
 24746 ;;
 24747                           
 24748                           	psect	text62
 24749  00386C                     __ptext62:
 24750                           	opt stack 0
 24751  00386C                     _Write_b_eep:
 24752                           	opt stack 15
 24753                           
 24754                           ;incstack = 0
 24755  00386C  C028  F02A         	movff	Write_b_eep@badd+1,??_Write_b_eep
 24756  003870  C02A  F02B         	movff	??_Write_b_eep,??_Write_b_eep+1
 24757  003874  6A2C               	clrf	(??_Write_b_eep+2)& (0+255),c
 24758  003876  502B               	movf	??_Write_b_eep+1,w,c
 24759  003878  0B03               	andlw	3
 24760  00387A  6EAA               	movwf	4010,c	;volatile
 24761  00387C  C027  FFA9         	movff	Write_b_eep@badd,4009	;volatile
 24762  003880  C029  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
 24763  003884  9EA6               	bcf	4006,7,c	;volatile
 24764  003886  9CA6               	bcf	4006,6,c	;volatile
 24765  003888  84A6               	bsf	4006,2,c	;volatile
 24766  00388A  0E00               	movlw	0
 24767  00388C  BEF2               	btfsc	intcon,7,c	;volatile
 24768  00388E  0E01               	movlw	1
 24769  003890  6E2D               	movwf	Write_b_eep@GIE_BIT_VAL,c
 24770  003892  9EF2               	bcf	intcon,7,c	;volatile
 24771  003894  0E55               	movlw	85
 24772  003896  6EA7               	movwf	4007,c	;volatile
 24773  003898  0EAA               	movlw	170
 24774  00389A  6EA7               	movwf	4007,c	;volatile
 24775  00389C  82A6               	bsf	4006,1,c	;volatile
 24776  00389E                     i1l1381:
 24777  00389E  B2A6               	btfsc	4006,1,c	;volatile
 24778  0038A0  D7FE               	goto	i1l1381
 24779  0038A2  B02D               	btfsc	Write_b_eep@GIE_BIT_VAL,0,c
 24780  0038A4  D002               	bra	i1u501_25
 24781  0038A6  9EF2               	bcf	intcon,7,c	;volatile
 24782  0038A8  D001               	bra	i1u501_26
 24783  0038AA                     i1u501_25:
 24784  0038AA  8EF2               	bsf	intcon,7,c	;volatile
 24785  0038AC                     i1u501_26:
 24786  0038AC  94A6               	bcf	4006,2,c	;volatile
 24787  0038AE  0012               	return	
 24788  0038B0                     __end_of_Write_b_eep:
 24789                           	opt stack 0
 24790                           tblptru	equ	0xFF8
 24791                           tblptrh	equ	0xFF7
 24792                           tblptrl	equ	0xFF6
 24793                           tablat	equ	0xFF5
 24794                           prodh	equ	0xFF4
 24795                           prodl	equ	0xFF3
 24796                           intcon	equ	0xFF2
 24797                           postinc0	equ	0xFEE
 24798                           wreg	equ	0xFE8
 24799                           indf1	equ	0xFE7
 24800                           postinc1	equ	0xFE6
 24801                           postdec1	equ	0xFE5
 24802                           fsr1h	equ	0xFE2
 24803                           fsr1l	equ	0xFE1
 24804                           bsr	equ	0xFE0
 24805                           indf2	equ	0xFDF
 24806                           postinc2	equ	0xFDE
 24807                           postdec2	equ	0xFDD
 24808                           fsr2h	equ	0xFDA
 24809                           fsr2l	equ	0xFD9
 24810                           status	equ	0xFD8
 24811                           
 24812 ;; *************** function _Busy_eep *****************
 24813 ;; Defined at:
 24814 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\EEP\busy_eep.c"
 24815 ;; Parameters:    Size  Location     Type
 24816 ;;		None
 24817 ;; Auto vars:     Size  Location     Type
 24818 ;;		None
 24819 ;; Return value:  Size  Location     Type
 24820 ;;		None               void
 24821 ;; Registers used:
 24822 ;;		None
 24823 ;; Tracked objects:
 24824 ;;		On entry : 0/1
 24825 ;;		On exit  : 0/0
 24826 ;;		Unchanged: 0/0
 24827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24832 ;;Total ram usage:        0 bytes
 24833 ;; Hardware stack levels used:    1
 24834 ;; Hardware stack levels required when called:    4
 24835 ;; This function calls:
 24836 ;;		Nothing
 24837 ;; This function is called by:
 24838 ;;		_write___ee
 24839 ;;		_LO_ISR
 24840 ;; This function uses a non-reentrant model
 24841 ;;
 24842                           
 24843                           	psect	text63
 24844  003C1A                     __ptext63:
 24845                           	opt stack 0
 24846  003C1A                     _Busy_eep:
 24847                           	opt stack 15
 24848  003C1A                     i1l1350:
 24849  003C1A  A2A6               	btfss	4006,1,c	;volatile
 24850  003C1C  0012               	return	
 24851  003C1E  D7FD               	goto	i1l1350
 24852  003C20                     __end_of_Busy_eep:
 24853                           	opt stack 0
 24854                           tblptru	equ	0xFF8
 24855                           tblptrh	equ	0xFF7
 24856                           tblptrl	equ	0xFF6
 24857                           tablat	equ	0xFF5
 24858                           prodh	equ	0xFF4
 24859                           prodl	equ	0xFF3
 24860                           intcon	equ	0xFF2
 24861                           postinc0	equ	0xFEE
 24862                           wreg	equ	0xFE8
 24863                           indf1	equ	0xFE7
 24864                           postinc1	equ	0xFE6
 24865                           postdec1	equ	0xFE5
 24866                           fsr1h	equ	0xFE2
 24867                           fsr1l	equ	0xFE1
 24868                           bsr	equ	0xFE0
 24869                           indf2	equ	0xFDF
 24870                           postinc2	equ	0xFDE
 24871                           postdec2	equ	0xFDD
 24872                           fsr2h	equ	0xFDA
 24873                           fsr2l	equ	0xFD9
 24874                           status	equ	0xFD8
 24875                           
 24876 ;; *************** function _read___ee *****************
 24877 ;; Defined at:
 24878 ;;		line 18 in file "../lib/eeprom.c"
 24879 ;; Parameters:    Size  Location     Type
 24880 ;;  adr             2    5[COMRAM] unsigned int 
 24881 ;;  var             1    7[COMRAM] PTR unsigned char 
 24882 ;;		 -> set_ee_default@c1(1), 
 24883 ;;  byte            1    8[COMRAM] unsigned char 
 24884 ;; Auto vars:     Size  Location     Type
 24885 ;;		None
 24886 ;; Return value:  Size  Location     Type
 24887 ;;		None               void
 24888 ;; Registers used:
 24889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24890 ;; Tracked objects:
 24891 ;;		On entry : 0/1
 24892 ;;		On exit  : 0/0
 24893 ;;		Unchanged: 0/0
 24894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24895 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24898 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24899 ;;Total ram usage:        4 bytes
 24900 ;; Hardware stack levels used:    1
 24901 ;; Hardware stack levels required when called:    5
 24902 ;; This function calls:
 24903 ;;		_Read_b_eep
 24904 ;; This function is called by:
 24905 ;;		_set_ee_default
 24906 ;; This function uses a non-reentrant model
 24907 ;;
 24908                           
 24909                           	psect	text64
 24910  003B04                     __ptext64:
 24911                           	opt stack 0
 24912  003B04                     _read___ee:
 24913                           	opt stack 15
 24914                           
 24915                           ;eeprom.c: 19: while(byte--){
 24916                           
 24917                           ;incstack = 0
 24918  003B04  D00D               	goto	i1l6097
 24919  003B06                     i1l6095:
 24920                           
 24921                           ;eeprom.c: 20: (unsigned char)(*(((unsigned char *)var)+byte))=Read_b_eep(adr+byte);
 24922  003B06  502E               	movf	read___ee@var,w,c
 24923  003B08  242F               	addwf	read___ee@byte,w,c
 24924  003B0A  6ED9               	movwf	fsr2l,c
 24925  003B0C  6ADA               	clrf	fsr2h,c
 24926  003B0E  502F               	movf	read___ee@byte,w,c
 24927  003B10  242C               	addwf	read___ee@adr,w,c
 24928  003B12  6E27               	movwf	Read_b_eep@badd,c
 24929  003B14  0E00               	movlw	0
 24930  003B16  202D               	addwfc	read___ee@adr+1,w,c
 24931  003B18  6E28               	movwf	Read_b_eep@badd+1,c
 24932  003B1A  EC95  F01D         	call	_Read_b_eep	;wreg free
 24933  003B1E  6EDF               	movwf	indf2,c
 24934  003B20                     i1l6097:
 24935  003B20  062F               	decf	read___ee@byte,f,c
 24936  003B22  282F               	incf	read___ee@byte& (0+255),w,c
 24937  003B24  B4D8               	btfsc	status,2,c
 24938  003B26  0012               	return	
 24939  003B28  D7EE               	goto	i1l6095
 24940  003B2A                     __end_of_read___ee:
 24941                           	opt stack 0
 24942                           tblptru	equ	0xFF8
 24943                           tblptrh	equ	0xFF7
 24944                           tblptrl	equ	0xFF6
 24945                           tablat	equ	0xFF5
 24946                           prodh	equ	0xFF4
 24947                           prodl	equ	0xFF3
 24948                           intcon	equ	0xFF2
 24949                           postinc0	equ	0xFEE
 24950                           wreg	equ	0xFE8
 24951                           indf1	equ	0xFE7
 24952                           postinc1	equ	0xFE6
 24953                           postdec1	equ	0xFE5
 24954                           fsr1h	equ	0xFE2
 24955                           fsr1l	equ	0xFE1
 24956                           bsr	equ	0xFE0
 24957                           indf2	equ	0xFDF
 24958                           postinc2	equ	0xFDE
 24959                           postdec2	equ	0xFDD
 24960                           fsr2h	equ	0xFDA
 24961                           fsr2l	equ	0xFD9
 24962                           status	equ	0xFD8
 24963                           
 24964 ;; *************** function _Read_b_eep *****************
 24965 ;; Defined at:
 24966 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\EEP\read_B.c"
 24967 ;; Parameters:    Size  Location     Type
 24968 ;;  badd            2    0[COMRAM] unsigned int 
 24969 ;; Auto vars:     Size  Location     Type
 24970 ;;		None
 24971 ;; Return value:  Size  Location     Type
 24972 ;;                  1    wreg      unsigned char 
 24973 ;; Registers used:
 24974 ;;		wreg, status,2, status,0
 24975 ;; Tracked objects:
 24976 ;;		On entry : 0/1
 24977 ;;		On exit  : 0/0
 24978 ;;		Unchanged: 0/0
 24979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24980 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24982 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24983 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24984 ;;Total ram usage:        5 bytes
 24985 ;; Hardware stack levels used:    1
 24986 ;; Hardware stack levels required when called:    4
 24987 ;; This function calls:
 24988 ;;		Nothing
 24989 ;; This function is called by:
 24990 ;;		_read___ee
 24991 ;;		_LO_ISR
 24992 ;; This function uses a non-reentrant model
 24993 ;;
 24994                           
 24995                           	psect	text65
 24996  003B2A                     __ptext65:
 24997                           	opt stack 0
 24998  003B2A                     _Read_b_eep:
 24999                           	opt stack 15
 25000                           
 25001                           ;incstack = 0
 25002  003B2A  C028  F029         	movff	Read_b_eep@badd+1,??_Read_b_eep
 25003  003B2E  C029  F02A         	movff	??_Read_b_eep,??_Read_b_eep+1
 25004  003B32  6A2B               	clrf	(??_Read_b_eep+2)& (0+255),c
 25005  003B34  502A               	movf	??_Read_b_eep+1,w,c
 25006  003B36  0B03               	andlw	3
 25007  003B38  6EAA               	movwf	4010,c	;volatile
 25008  003B3A  C027  FFA9         	movff	Read_b_eep@badd,4009	;volatile
 25009  003B3E  9CA6               	bcf	4006,6,c	;volatile
 25010  003B40  9EA6               	bcf	4006,7,c	;volatile
 25011  003B42  80A6               	bsf	4006,0,c	;volatile
 25012  003B44  F000               	nop	
 25013  003B46  F000               	nop	
 25014  003B48  50A8               	movf	4008,w,c	;volatile
 25015  003B4A  0012               	return	
 25016  003B4C                     __end_of_Read_b_eep:
 25017                           	opt stack 0
 25018                           tblptru	equ	0xFF8
 25019                           tblptrh	equ	0xFF7
 25020                           tblptrl	equ	0xFF6
 25021                           tablat	equ	0xFF5
 25022                           prodh	equ	0xFF4
 25023                           prodl	equ	0xFF3
 25024                           intcon	equ	0xFF2
 25025                           postinc0	equ	0xFEE
 25026                           wreg	equ	0xFE8
 25027                           indf1	equ	0xFE7
 25028                           postinc1	equ	0xFE6
 25029                           postdec1	equ	0xFE5
 25030                           fsr1h	equ	0xFE2
 25031                           fsr1l	equ	0xFE1
 25032                           bsr	equ	0xFE0
 25033                           indf2	equ	0xFDF
 25034                           postinc2	equ	0xFDE
 25035                           postdec2	equ	0xFDD
 25036                           fsr2h	equ	0xFDA
 25037                           fsr2l	equ	0xFD9
 25038                           status	equ	0xFD8
 25039                           
 25040 ;; *************** function _putbyte *****************
 25041 ;; Defined at:
 25042 ;;		line 50 in file "../lib/usart.c"
 25043 ;; Parameters:    Size  Location     Type
 25044 ;;  byte            1    wreg     unsigned char 
 25045 ;; Auto vars:     Size  Location     Type
 25046 ;;  byte            1    0[COMRAM] unsigned char 
 25047 ;; Return value:  Size  Location     Type
 25048 ;;		None               void
 25049 ;; Registers used:
 25050 ;;		wreg
 25051 ;; Tracked objects:
 25052 ;;		On entry : F/1
 25053 ;;		On exit  : F/1
 25054 ;;		Unchanged: F/0
 25055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25059 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25060 ;;Total ram usage:        1 bytes
 25061 ;; Hardware stack levels used:    1
 25062 ;; Hardware stack levels required when called:    4
 25063 ;; This function calls:
 25064 ;;		Nothing
 25065 ;; This function is called by:
 25066 ;;		_LO_ISR
 25067 ;; This function uses a non-reentrant model
 25068 ;;
 25069                           
 25070                           	psect	text66
 25071  003C0E                     __ptext66:
 25072                           	opt stack 0
 25073  003C0E                     _putbyte:
 25074                           	opt stack 17
 25075                           
 25076                           ;incstack = 0
 25077                           ;putbyte@byte stored from wreg
 25078  003C0E  6E27               	movwf	putbyte@byte,c
 25079  003C10                     i1l199:
 25080                           
 25081                           ; BSR set to: 1
 25082  003C10  A2AC               	btfss	4012,1,c	;volatile
 25083  003C12  D7FE               	goto	i1l199
 25084                           
 25085                           ; BSR set to: 1
 25086                           ;usart.c: 58: TXREG = byte;
 25087  003C14  C027  FFAD         	movff	putbyte@byte,4013	;volatile
 25088                           
 25089                           ; BSR set to: 1
 25090  003C18  0012               	return	
 25091  003C1A                     __end_of_putbyte:
 25092                           	opt stack 0
 25093                           tblptru	equ	0xFF8
 25094                           tblptrh	equ	0xFF7
 25095                           tblptrl	equ	0xFF6
 25096                           tablat	equ	0xFF5
 25097                           prodh	equ	0xFF4
 25098                           prodl	equ	0xFF3
 25099                           intcon	equ	0xFF2
 25100                           postinc0	equ	0xFEE
 25101                           wreg	equ	0xFE8
 25102                           indf1	equ	0xFE7
 25103                           postinc1	equ	0xFE6
 25104                           postdec1	equ	0xFE5
 25105                           fsr1h	equ	0xFE2
 25106                           fsr1l	equ	0xFE1
 25107                           bsr	equ	0xFE0
 25108                           indf2	equ	0xFDF
 25109                           postinc2	equ	0xFDE
 25110                           postdec2	equ	0xFDD
 25111                           fsr2h	equ	0xFDA
 25112                           fsr2l	equ	0xFD9
 25113                           status	equ	0xFD8
 25114                           
 25115 ;; *************** function _crc_mb_check *****************
 25116 ;; Defined at:
 25117 ;;		line 74 in file "../lib/modbus_RTU.c"
 25118 ;; Parameters:    Size  Location     Type
 25119 ;;  buffer          2    8[COMRAM] PTR unsigned char 
 25120 ;;		 -> RxTxBuff(128), 
 25121 ;;  cnt             1   10[COMRAM] unsigned char 
 25122 ;; Auto vars:     Size  Location     Type
 25123 ;;  crc             2   16[COMRAM] unsigned int 
 25124 ;;  i               1   15[COMRAM] unsigned char 
 25125 ;; Return value:  Size  Location     Type
 25126 ;;                  1    wreg      unsigned char 
 25127 ;; Registers used:
 25128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25129 ;; Tracked objects:
 25130 ;;		On entry : F/1
 25131 ;;		On exit  : 0/0
 25132 ;;		Unchanged: 0/0
 25133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25134 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25135 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25136 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25137 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25138 ;;Total ram usage:       10 bytes
 25139 ;; Hardware stack levels used:    1
 25140 ;; Hardware stack levels required when called:    5
 25141 ;; This function calls:
 25142 ;;		_crc_mb_calc
 25143 ;;		_crc_mb_init
 25144 ;; This function is called by:
 25145 ;;		_LO_ISR
 25146 ;; This function uses a non-reentrant model
 25147 ;;
 25148                           
 25149                           	psect	text67
 25150  0035AC                     __ptext67:
 25151                           	opt stack 0
 25152  0035AC                     _crc_mb_check:
 25153                           	opt stack 16
 25154                           
 25155                           ; BSR set to: 1
 25156                           ;modbus_RTU.c: 76: unsigned int crc;
 25157                           ;modbus_RTU.c: 77: unsigned char i;
 25158                           ;modbus_RTU.c: 79: crc_mb_init(&crc);
 25159                           
 25160                           ; BSR set to: 1
 25161                           ;incstack = 0
 25162  0035AC  0E37               	movlw	crc_mb_check@crc& (0+255)
 25163  0035AE  ECFA  F01D         	call	_crc_mb_init
 25164                           
 25165                           ; BSR set to: 1
 25166                           ;modbus_RTU.c: 81: for (i = 0; i < cnt; i++) {
 25167  0035B2  6A36               	clrf	crc_mb_check@i,c
 25168  0035B4  D00C               	goto	i1l6677
 25169  0035B6                     i1l6671:
 25170                           
 25171                           ;modbus_RTU.c: 82: crc_mb_calc(&crc, *buffer++);
 25172  0035B6  C02F  FFD9         	movff	crc_mb_check@buffer,fsr2l
 25173  0035BA  C030  FFDA         	movff	crc_mb_check@buffer+1,fsr2h
 25174  0035BE  50DF               	movf	indf2,w,c
 25175  0035C0  6E27               	movwf	crc_mb_calc@next,c
 25176  0035C2  0E37               	movlw	crc_mb_check@crc& (0+255)
 25177  0035C4  EC1B  F01A         	call	_crc_mb_calc
 25178  0035C8  4A2F               	infsnz	crc_mb_check@buffer,f,c
 25179  0035CA  2A30               	incf	crc_mb_check@buffer+1,f,c
 25180  0035CC  2A36               	incf	crc_mb_check@i,f,c
 25181  0035CE                     i1l6677:
 25182  0035CE  5031               	movf	crc_mb_check@cnt,w,c
 25183  0035D0  5C36               	subwf	crc_mb_check@i,w,c
 25184  0035D2  E3F1               	bnc	i1l6671
 25185                           
 25186                           ;modbus_RTU.c: 83: }
 25187                           ;modbus_RTU.c: 93: if (((unsigned char) (crc) == *buffer++) && ((unsigned char) (crc >> 
      +                          8) == *buffer)) return 1;
 25188  0035D4  C02F  FFD9         	movff	crc_mb_check@buffer,fsr2l
 25189  0035D8  C030  FFDA         	movff	crc_mb_check@buffer+1,fsr2h
 25190  0035DC  4A2F               	infsnz	crc_mb_check@buffer,f,c
 25191  0035DE  2A30               	incf	crc_mb_check@buffer+1,f,c
 25192  0035E0  5037               	movf	crc_mb_check@crc,w,c
 25193  0035E2  62DF               	cpfseq	indf2,c
 25194  0035E4  0C00               	retlw	0
 25195  0035E6  C02F  FFD9         	movff	crc_mb_check@buffer,fsr2l
 25196  0035EA  C030  FFDA         	movff	crc_mb_check@buffer+1,fsr2h
 25197  0035EE  50DF               	movf	indf2,w,c
 25198  0035F0  6E32               	movwf	??_crc_mb_check& (0+255),c
 25199  0035F2  C038  F033         	movff	crc_mb_check@crc+1,??_crc_mb_check+1
 25200  0035F6  C033  F034         	movff	??_crc_mb_check+1,??_crc_mb_check+2
 25201  0035FA  6A35               	clrf	(??_crc_mb_check+3)& (0+255),c
 25202  0035FC  5034               	movf	??_crc_mb_check+2,w,c
 25203  0035FE  1832               	xorwf	??_crc_mb_check,w,c
 25204  003600  E101               	bnz	i1l6687
 25205  003602  0C01               	retlw	1
 25206  003604                     i1l6687:
 25207                           
 25208                           ;modbus_RTU.c: 96: return 0;
 25209  003604  0C00               	retlw	0
 25210  003606                     __end_of_crc_mb_check:
 25211                           	opt stack 0
 25212                           tblptru	equ	0xFF8
 25213                           tblptrh	equ	0xFF7
 25214                           tblptrl	equ	0xFF6
 25215                           tablat	equ	0xFF5
 25216                           prodh	equ	0xFF4
 25217                           prodl	equ	0xFF3
 25218                           intcon	equ	0xFF2
 25219                           postinc0	equ	0xFEE
 25220                           wreg	equ	0xFE8
 25221                           indf1	equ	0xFE7
 25222                           postinc1	equ	0xFE6
 25223                           postdec1	equ	0xFE5
 25224                           fsr1h	equ	0xFE2
 25225                           fsr1l	equ	0xFE1
 25226                           bsr	equ	0xFE0
 25227                           indf2	equ	0xFDF
 25228                           postinc2	equ	0xFDE
 25229                           postdec2	equ	0xFDD
 25230                           fsr2h	equ	0xFDA
 25231                           fsr2l	equ	0xFD9
 25232                           status	equ	0xFD8
 25233                           
 25234 ;; *************** function _crc_mb *****************
 25235 ;; Defined at:
 25236 ;;		line 58 in file "../lib/modbus_RTU.c"
 25237 ;; Parameters:    Size  Location     Type
 25238 ;;  buffer          2    8[COMRAM] PTR unsigned char 
 25239 ;;		 -> RxTxBuff(128), 
 25240 ;;  count           1   10[COMRAM] unsigned char 
 25241 ;; Auto vars:     Size  Location     Type
 25242 ;;  CRC             2   15[COMRAM] unsigned int 
 25243 ;;  i               1   14[COMRAM] unsigned char 
 25244 ;; Return value:  Size  Location     Type
 25245 ;;                  2    8[COMRAM] unsigned int 
 25246 ;; Registers used:
 25247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25248 ;; Tracked objects:
 25249 ;;		On entry : F/1
 25250 ;;		On exit  : 0/0
 25251 ;;		Unchanged: 0/0
 25252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25253 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25254 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25255 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25256 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25257 ;;Total ram usage:        9 bytes
 25258 ;; Hardware stack levels used:    1
 25259 ;; Hardware stack levels required when called:    5
 25260 ;; This function calls:
 25261 ;;		_crc_mb_calc
 25262 ;;		_crc_mb_init
 25263 ;; This function is called by:
 25264 ;;		_LO_ISR
 25265 ;; This function uses a non-reentrant model
 25266 ;;
 25267                           
 25268                           	psect	text68
 25269  00365C                     __ptext68:
 25270                           	opt stack 0
 25271  00365C                     _crc_mb:
 25272                           	opt stack 16
 25273                           
 25274                           ; BSR set to: 1
 25275                           ;modbus_RTU.c: 59: unsigned int CRC;
 25276                           ;modbus_RTU.c: 60: unsigned char i;
 25277                           ;modbus_RTU.c: 62: crc_mb_init(&CRC);
 25278                           
 25279                           ;incstack = 0
 25280  00365C  0E36               	movlw	crc_mb@CRC& (0+255)
 25281  00365E  ECFA  F01D         	call	_crc_mb_init
 25282                           
 25283                           ; BSR set to: 1
 25284                           ;modbus_RTU.c: 63: for (i = 0; i < count; i ++) {
 25285  003662  6A35               	clrf	crc_mb@i,c
 25286  003664  D00C               	goto	i1l6701
 25287  003666                     i1l6695:
 25288                           
 25289                           ;modbus_RTU.c: 64: crc_mb_calc(&CRC, *buffer++);
 25290  003666  C02F  FFD9         	movff	crc_mb@buffer,fsr2l
 25291  00366A  C030  FFDA         	movff	crc_mb@buffer+1,fsr2h
 25292  00366E  50DF               	movf	indf2,w,c
 25293  003670  6E27               	movwf	crc_mb_calc@next,c
 25294  003672  0E36               	movlw	crc_mb@CRC& (0+255)
 25295  003674  EC1B  F01A         	call	_crc_mb_calc
 25296  003678  4A2F               	infsnz	crc_mb@buffer,f,c
 25297  00367A  2A30               	incf	crc_mb@buffer+1,f,c
 25298  00367C  2A35               	incf	crc_mb@i,f,c
 25299  00367E                     i1l6701:
 25300  00367E  5031               	movf	crc_mb@count,w,c
 25301  003680  5C35               	subwf	crc_mb@i,w,c
 25302  003682  E3F1               	bnc	i1l6695
 25303                           
 25304                           ;modbus_RTU.c: 65: }
 25305                           ;modbus_RTU.c: 66: *buffer++ = (unsigned char )(CRC >> 8);
 25306  003684  C037  F032         	movff	crc_mb@CRC+1,??_crc_mb
 25307  003688  C032  F033         	movff	??_crc_mb,??_crc_mb+1
 25308  00368C  6A34               	clrf	(??_crc_mb+2)& (0+255),c
 25309  00368E  5033               	movf	??_crc_mb+1,w,c
 25310  003690  C02F  FFD9         	movff	crc_mb@buffer,fsr2l
 25311  003694  C030  FFDA         	movff	crc_mb@buffer+1,fsr2h
 25312  003698  6EDF               	movwf	indf2,c
 25313  00369A  4A2F               	infsnz	crc_mb@buffer,f,c
 25314  00369C  2A30               	incf	crc_mb@buffer+1,f,c
 25315                           
 25316                           ;modbus_RTU.c: 67: *buffer = (unsigned char ) CRC;
 25317  00369E  C02F  FFD9         	movff	crc_mb@buffer,fsr2l
 25318  0036A2  C030  FFDA         	movff	crc_mb@buffer+1,fsr2h
 25319  0036A6  C036  FFDF         	movff	crc_mb@CRC,indf2
 25320  0036AA  0012               	return	
 25321  0036AC                     __end_of_crc_mb:
 25322                           	opt stack 0
 25323                           tblptru	equ	0xFF8
 25324                           tblptrh	equ	0xFF7
 25325                           tblptrl	equ	0xFF6
 25326                           tablat	equ	0xFF5
 25327                           prodh	equ	0xFF4
 25328                           prodl	equ	0xFF3
 25329                           intcon	equ	0xFF2
 25330                           postinc0	equ	0xFEE
 25331                           wreg	equ	0xFE8
 25332                           indf1	equ	0xFE7
 25333                           postinc1	equ	0xFE6
 25334                           postdec1	equ	0xFE5
 25335                           fsr1h	equ	0xFE2
 25336                           fsr1l	equ	0xFE1
 25337                           bsr	equ	0xFE0
 25338                           indf2	equ	0xFDF
 25339                           postinc2	equ	0xFDE
 25340                           postdec2	equ	0xFDD
 25341                           fsr2h	equ	0xFDA
 25342                           fsr2l	equ	0xFD9
 25343                           status	equ	0xFD8
 25344                           
 25345 ;; *************** function _crc_mb_init *****************
 25346 ;; Defined at:
 25347 ;;		line 20 in file "../lib/modbus_RTU.c"
 25348 ;; Parameters:    Size  Location     Type
 25349 ;;  code            1    wreg     PTR unsigned int 
 25350 ;;		 -> crc_mb_check@crc(2), crc_mb@CRC(2), 
 25351 ;; Auto vars:     Size  Location     Type
 25352 ;;  code            1    0[COMRAM] PTR unsigned int 
 25353 ;;		 -> crc_mb_check@crc(2), crc_mb@CRC(2), 
 25354 ;; Return value:  Size  Location     Type
 25355 ;;		None               void
 25356 ;; Registers used:
 25357 ;;		wreg, fsr2l, fsr2h, status,2
 25358 ;; Tracked objects:
 25359 ;;		On entry : F/1
 25360 ;;		On exit  : F/1
 25361 ;;		Unchanged: F/0
 25362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25366 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25367 ;;Total ram usage:        1 bytes
 25368 ;; Hardware stack levels used:    1
 25369 ;; Hardware stack levels required when called:    4
 25370 ;; This function calls:
 25371 ;;		Nothing
 25372 ;; This function is called by:
 25373 ;;		_crc_mb
 25374 ;;		_crc_mb_check
 25375 ;; This function uses a non-reentrant model
 25376 ;;
 25377                           
 25378                           	psect	text69
 25379  003BF4                     __ptext69:
 25380                           	opt stack 0
 25381  003BF4                     _crc_mb_init:
 25382                           	opt stack 16
 25383                           
 25384                           ;incstack = 0
 25385                           ;crc_mb_init@code stored from wreg
 25386  003BF4  6E27               	movwf	crc_mb_init@code,c
 25387                           
 25388                           ; BSR set to: 1
 25389                           ;modbus_RTU.c: 21: *code = 0xffff;
 25390  003BF6  5027               	movf	crc_mb_init@code,w,c
 25391  003BF8  6ED9               	movwf	fsr2l,c
 25392  003BFA  6ADA               	clrf	fsr2h,c
 25393  003BFC  68DE               	setf	postinc2,c
 25394  003BFE  68DD               	setf	postdec2,c
 25395                           
 25396                           ; BSR set to: 1
 25397  003C00  0CFF               	retlw	255
 25398  003C02                     __end_of_crc_mb_init:
 25399                           	opt stack 0
 25400                           tblptru	equ	0xFF8
 25401                           tblptrh	equ	0xFF7
 25402                           tblptrl	equ	0xFF6
 25403                           tablat	equ	0xFF5
 25404                           prodh	equ	0xFF4
 25405                           prodl	equ	0xFF3
 25406                           intcon	equ	0xFF2
 25407                           postinc0	equ	0xFEE
 25408                           wreg	equ	0xFE8
 25409                           indf1	equ	0xFE7
 25410                           postinc1	equ	0xFE6
 25411                           postdec1	equ	0xFE5
 25412                           fsr1h	equ	0xFE2
 25413                           fsr1l	equ	0xFE1
 25414                           bsr	equ	0xFE0
 25415                           indf2	equ	0xFDF
 25416                           postinc2	equ	0xFDE
 25417                           postdec2	equ	0xFDD
 25418                           fsr2h	equ	0xFDA
 25419                           fsr2l	equ	0xFD9
 25420                           status	equ	0xFD8
 25421                           
 25422 ;; *************** function _crc_mb_calc *****************
 25423 ;; Defined at:
 25424 ;;		line 44 in file "../lib/modbus_RTU.c"
 25425 ;; Parameters:    Size  Location     Type
 25426 ;;  code            1    wreg     PTR unsigned int 
 25427 ;;		 -> crc_mb_check@crc(2), crc_mb@CRC(2), 
 25428 ;;  next            1    0[COMRAM] unsigned char 
 25429 ;; Auto vars:     Size  Location     Type
 25430 ;;  code            1    7[COMRAM] PTR unsigned int 
 25431 ;;		 -> crc_mb_check@crc(2), crc_mb@CRC(2), 
 25432 ;;  i               1    6[COMRAM] unsigned char 
 25433 ;;  flag            1    5[COMRAM] unsigned char 
 25434 ;; Return value:  Size  Location     Type
 25435 ;;                  1    wreg      unsigned char 
 25436 ;; Registers used:
 25437 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25438 ;; Tracked objects:
 25439 ;;		On entry : 0/1
 25440 ;;		On exit  : 0/0
 25441 ;;		Unchanged: 0/0
 25442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25443 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25444 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25445 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25446 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25447 ;;Total ram usage:        8 bytes
 25448 ;; Hardware stack levels used:    1
 25449 ;; Hardware stack levels required when called:    4
 25450 ;; This function calls:
 25451 ;;		Nothing
 25452 ;; This function is called by:
 25453 ;;		_crc_mb
 25454 ;;		_crc_mb_check
 25455 ;; This function uses a non-reentrant model
 25456 ;;
 25457                           
 25458                           	psect	text70
 25459  003436                     __ptext70:
 25460                           	opt stack 0
 25461  003436                     _crc_mb_calc:
 25462                           	opt stack 16
 25463                           
 25464                           ; BSR set to: 1
 25465                           ;incstack = 0
 25466                           ;crc_mb_calc@code stored from wreg
 25467  003436  6E2E               	movwf	crc_mb_calc@code,c
 25468                           
 25469                           ;modbus_RTU.c: 45: unsigned char flag;
 25470                           ;modbus_RTU.c: 46: unsigned char i;
 25471                           ;modbus_RTU.c: 47: *code ^= next;
 25472  003438  502E               	movf	crc_mb_calc@code,w,c
 25473  00343A  6ED9               	movwf	fsr2l,c
 25474  00343C  6ADA               	clrf	fsr2h,c
 25475  00343E  5027               	movf	crc_mb_calc@next,w,c
 25476  003440  1ADE               	xorwf	postinc2,f,c
 25477  003442  0E00               	movlw	0
 25478  003444  1ADD               	xorwf	postdec2,f,c
 25479                           
 25480                           ;modbus_RTU.c: 49: for (i = 0; i < 8; i++) {
 25481  003446  6A2D               	clrf	crc_mb_calc@i,c
 25482  003448                     i1l6541:
 25483                           
 25484                           ;modbus_RTU.c: 50: flag = *code & 1;
 25485  003448  502E               	movf	crc_mb_calc@code,w,c
 25486  00344A  6ED9               	movwf	fsr2l,c
 25487  00344C  6ADA               	clrf	fsr2h,c
 25488  00344E  50DF               	movf	indf2,w,c
 25489  003450  0B01               	andlw	1
 25490  003452  6E2C               	movwf	crc_mb_calc@flag,c
 25491                           
 25492                           ;modbus_RTU.c: 51: *code = *code >> 1;
 25493  003454  502E               	movf	crc_mb_calc@code,w,c
 25494  003456  6ED9               	movwf	fsr2l,c
 25495  003458  6ADA               	clrf	fsr2h,c
 25496  00345A  CFDE F028          	movff	postinc2,??_crc_mb_calc
 25497  00345E  CFDD F029          	movff	postdec2,??_crc_mb_calc+1
 25498  003462  90D8               	bcf	status,0,c
 25499  003464  3029               	rrcf	??_crc_mb_calc+1,w,c
 25500  003466  6E2B               	movwf	(??_crc_mb_calc+3)& (0+255),c
 25501  003468  3028               	rrcf	??_crc_mb_calc,w,c
 25502  00346A  6E2A               	movwf	(??_crc_mb_calc+2)& (0+255),c
 25503  00346C  502E               	movf	crc_mb_calc@code,w,c
 25504  00346E  6ED9               	movwf	fsr2l,c
 25505  003470  6ADA               	clrf	fsr2h,c
 25506  003472  C02A  FFDE         	movff	??_crc_mb_calc+2,postinc2
 25507  003476  C02B  FFDD         	movff	??_crc_mb_calc+3,postdec2
 25508                           
 25509                           ;modbus_RTU.c: 52: if (flag) *code ^= 0xA001;
 25510  00347A  502C               	movf	crc_mb_calc@flag,w,c
 25511  00347C  E007               	bz	i1l6547
 25512  00347E  502E               	movf	crc_mb_calc@code,w,c
 25513  003480  6ED9               	movwf	fsr2l,c
 25514  003482  6ADA               	clrf	fsr2h,c
 25515  003484  0E01               	movlw	1
 25516  003486  1ADE               	xorwf	postinc2,f,c
 25517  003488  0EA0               	movlw	160
 25518  00348A  1ADD               	xorwf	postdec2,f,c
 25519  00348C                     i1l6547:
 25520  00348C  2A2D               	incf	crc_mb_calc@i,f,c
 25521  00348E  0E07               	movlw	7
 25522  003490  642D               	cpfsgt	crc_mb_calc@i,c
 25523  003492  D7DA               	goto	i1l6541
 25524  003494  0C07               	retlw	7
 25525  003496                     __end_of_crc_mb_calc:
 25526                           	opt stack 0
 25527                           tblptru	equ	0xFF8
 25528                           tblptrh	equ	0xFF7
 25529                           tblptrl	equ	0xFF6
 25530                           tablat	equ	0xFF5
 25531                           prodh	equ	0xFF4
 25532                           prodl	equ	0xFF3
 25533                           intcon	equ	0xFF2
 25534                           postinc0	equ	0xFEE
 25535                           wreg	equ	0xFE8
 25536                           indf1	equ	0xFE7
 25537                           postinc1	equ	0xFE6
 25538                           postdec1	equ	0xFE5
 25539                           fsr1h	equ	0xFE2
 25540                           fsr1l	equ	0xFE1
 25541                           bsr	equ	0xFE0
 25542                           indf2	equ	0xFDF
 25543                           postinc2	equ	0xFDE
 25544                           postdec2	equ	0xFDD
 25545                           fsr2h	equ	0xFDA
 25546                           fsr2l	equ	0xFD9
 25547                           status	equ	0xFD8
 25548                           
 25549 ;; *************** function _SendMessage *****************
 25550 ;; Defined at:
 25551 ;;		line 43 in file "../lib/messages.c"
 25552 ;; Parameters:    Size  Location     Type
 25553 ;;  Msg             1    wreg     unsigned char 
 25554 ;; Auto vars:     Size  Location     Type
 25555 ;;  Msg             1    0[COMRAM] unsigned char 
 25556 ;; Return value:  Size  Location     Type
 25557 ;;		None               void
 25558 ;; Registers used:
 25559 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25560 ;; Tracked objects:
 25561 ;;		On entry : 0/1
 25562 ;;		On exit  : 0/0
 25563 ;;		Unchanged: 0/0
 25564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25566 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25568 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25569 ;;Total ram usage:        1 bytes
 25570 ;; Hardware stack levels used:    1
 25571 ;; Hardware stack levels required when called:    4
 25572 ;; This function calls:
 25573 ;;		Nothing
 25574 ;; This function is called by:
 25575 ;;		_LO_ISR
 25576 ;; This function uses a non-reentrant model
 25577 ;;
 25578                           
 25579                           	psect	text71
 25580  003BD4                     __ptext71:
 25581                           	opt stack 0
 25582  003BD4                     _SendMessage:
 25583                           	opt stack 17
 25584                           
 25585                           ;incstack = 0
 25586                           ;SendMessage@Msg stored from wreg
 25587  003BD4  6E27               	movwf	SendMessage@Msg,c
 25588                           
 25589                           ;messages.c: 44: Messages[Msg] = MSG_PHASE_PREPARE;
 25590  003BD6  5027               	movf	SendMessage@Msg,w,c
 25591  003BD8  0F01               	addlw	low _Messages	;volatile
 25592  003BDA  6ED9               	movwf	fsr2l,c
 25593  003BDC  6ADA               	clrf	fsr2h,c
 25594  003BDE  0E01               	movlw	1
 25595  003BE0  6EDF               	movwf	indf2,c
 25596  003BE2  0C01               	retlw	1
 25597  003BE4                     __end_of_SendMessage:
 25598                           	opt stack 0
 25599                           tblptru	equ	0xFF8
 25600                           tblptrh	equ	0xFF7
 25601                           tblptrl	equ	0xFF6
 25602                           tablat	equ	0xFF5
 25603                           prodh	equ	0xFF4
 25604                           prodl	equ	0xFF3
 25605                           intcon	equ	0xFF2
 25606                           postinc0	equ	0xFEE
 25607                           wreg	equ	0xFE8
 25608                           indf1	equ	0xFE7
 25609                           postinc1	equ	0xFE6
 25610                           postdec1	equ	0xFE5
 25611                           fsr1h	equ	0xFE2
 25612                           fsr1l	equ	0xFE1
 25613                           bsr	equ	0xFE0
 25614                           indf2	equ	0xFDF
 25615                           postinc2	equ	0xFDE
 25616                           postdec2	equ	0xFDD
 25617                           fsr2h	equ	0xFDA
 25618                           fsr2l	equ	0xFD9
 25619                           status	equ	0xFD8
 25620                           
 25621 ;; *************** function _BSemOn *****************
 25622 ;; Defined at:
 25623 ;;		line 142 in file "../lib/messages.c"
 25624 ;; Parameters:    Size  Location     Type
 25625 ;;  Sem             1    wreg     unsigned char 
 25626 ;; Auto vars:     Size  Location     Type
 25627 ;;  Sem             1    0[COMRAM] unsigned char 
 25628 ;; Return value:  Size  Location     Type
 25629 ;;		None               void
 25630 ;; Registers used:
 25631 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25632 ;; Tracked objects:
 25633 ;;		On entry : 0/1
 25634 ;;		On exit  : 0/0
 25635 ;;		Unchanged: 0/0
 25636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25640 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25641 ;;Total ram usage:        1 bytes
 25642 ;; Hardware stack levels used:    1
 25643 ;; Hardware stack levels required when called:    4
 25644 ;; This function calls:
 25645 ;;		Nothing
 25646 ;; This function is called by:
 25647 ;;		_LO_ISR
 25648 ;; This function uses a non-reentrant model
 25649 ;;
 25650                           
 25651                           	psect	text72
 25652  003BE4                     __ptext72:
 25653                           	opt stack 0
 25654  003BE4                     _BSemOn:
 25655                           	opt stack 17
 25656                           
 25657                           ;incstack = 0
 25658                           ;BSemOn@Sem stored from wreg
 25659  003BE4  6E27               	movwf	BSemOn@Sem,c
 25660                           
 25661                           ;messages.c: 143: BSem[Sem] = 1;
 25662  003BE6  5027               	movf	BSemOn@Sem,w,c
 25663  003BE8  0F0B               	addlw	low _BSem	;volatile
 25664  003BEA  6ED9               	movwf	fsr2l,c
 25665  003BEC  6ADA               	clrf	fsr2h,c
 25666  003BEE  0E01               	movlw	1
 25667  003BF0  6EDF               	movwf	indf2,c
 25668  003BF2  0C01               	retlw	1
 25669  003BF4                     __end_of_BSemOn:
 25670                           	opt stack 0
 25671                           tblptru	equ	0xFF8
 25672                           tblptrh	equ	0xFF7
 25673                           tblptrl	equ	0xFF6
 25674                           tablat	equ	0xFF5
 25675                           prodh	equ	0xFF4
 25676                           prodl	equ	0xFF3
 25677                           intcon	equ	0xFF2
 25678                           postinc0	equ	0xFEE
 25679                           wreg	equ	0xFE8
 25680                           indf1	equ	0xFE7
 25681                           postinc1	equ	0xFE6
 25682                           postdec1	equ	0xFE5
 25683                           fsr1h	equ	0xFE2
 25684                           fsr1l	equ	0xFE1
 25685                           bsr	equ	0xFE0
 25686                           indf2	equ	0xFDF
 25687                           postinc2	equ	0xFDE
 25688                           postdec2	equ	0xFDD
 25689                           fsr2h	equ	0xFDA
 25690                           fsr2l	equ	0xFD9
 25691                           status	equ	0xFD8
 25692                           
 25693 ;; *************** function _HI_ISR *****************
 25694 ;; Defined at:
 25695 ;;		line 32 in file "../isr.c"
 25696 ;; Parameters:    Size  Location     Type
 25697 ;;		None
 25698 ;; Auto vars:     Size  Location     Type
 25699 ;;		None
 25700 ;; Return value:  Size  Location     Type
 25701 ;;		None               void
 25702 ;; Registers used:
 25703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25704 ;; Tracked objects:
 25705 ;;		On entry : 0/0
 25706 ;;		On exit  : 0/0
 25707 ;;		Unchanged: 0/0
 25708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25711 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25712 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25713 ;;Total ram usage:        7 bytes
 25714 ;; Hardware stack levels used:    1
 25715 ;; Hardware stack levels required when called:    3
 25716 ;; This function calls:
 25717 ;;		_MTouchAcquisition
 25718 ;; This function is called by:
 25719 ;;		Interrupt level 2
 25720 ;; This function uses a non-reentrant model
 25721 ;;
 25722                           
 25723                           	psect	intcode
 25724  000008                     __pintcode:
 25725                           	opt stack 0
 25726  000008                     _HI_ISR:
 25727                           	opt stack 15
 25728                           
 25729                           ;incstack = 0
 25730  000008  CFE1 F081          	movff	fsr1l,??_HI_ISR+1
 25731  00000C  CFE2 F082          	movff	fsr1h,??_HI_ISR+2
 25732  000010  CFD9 F083          	movff	fsr2l,??_HI_ISR+3
 25733  000014  EF46  F019         	goto	int_func
 25734                           tblptru	equ	0xFF8
 25735                           tblptrh	equ	0xFF7
 25736                           tblptrl	equ	0xFF6
 25737                           tablat	equ	0xFF5
 25738                           prodh	equ	0xFF4
 25739                           prodl	equ	0xFF3
 25740                           intcon	equ	0xFF2
 25741                           postinc0	equ	0xFEE
 25742                           wreg	equ	0xFE8
 25743                           indf1	equ	0xFE7
 25744                           postinc1	equ	0xFE6
 25745                           postdec1	equ	0xFE5
 25746                           fsr1h	equ	0xFE2
 25747                           fsr1l	equ	0xFE1
 25748                           bsr	equ	0xFE0
 25749                           indf2	equ	0xFDF
 25750                           postinc2	equ	0xFDE
 25751                           postdec2	equ	0xFDD
 25752                           fsr2h	equ	0xFDA
 25753                           fsr2l	equ	0xFD9
 25754                           status	equ	0xFD8
 25755                           
 25756                           	psect	intcode_body
 25757  00328C                     __pintcode_body:
 25758                           	opt stack 15
 25759  00328C                     int_func:
 25760                           	opt stack 15
 25761  00328C  CFDA F084          	movff	fsr2h,??_HI_ISR+4
 25762  003290  CFF3 F085          	movff	prodl,??_HI_ISR+5
 25763  003294  CFF4 F086          	movff	prodh,??_HI_ISR+6
 25764                           
 25765                           ;isr.c: 33: static WORD w_pwm;
 25766                           ;isr.c: 34: static BYTE beep;
 25767                           ;isr.c: 37: if((PIE1bits.TMR2IE) && (PIR1bits.TMR2IF)) {
 25768  003298  B29D               	btfsc	3997,1,c	;volatile
 25769  00329A  A29E               	btfss	3998,1,c	;volatile
 25770  00329C  D009               	goto	i2l9389
 25771                           
 25772                           ;isr.c: 39: sys_tick++;
 25773  00329E  0100               	movlb	0	; () banked
 25774  0032A0  4BBF               	infsnz	_sys_tick& (0+255),f,b	;volatile
 25775  0032A2  2BC0               	incf	(_sys_tick+1)& (0+255),f,b	;volatile
 25776                           
 25777                           ;isr.c: 40: _sys_tick++;
 25778  0032A4  4BBB               	infsnz	__sys_tick& (0+255),f,b	;volatile
 25779  0032A6  2BBC               	incf	(__sys_tick+1)& (0+255),f,b	;volatile
 25780                           
 25781                           ; BSR set to: 0
 25782                           ;isr.c: 41: MTouchAcquisition();
 25783  0032A8  EC26  F010         	call	_MTouchAcquisition	;wreg free
 25784                           
 25785                           ; BSR set to: 0
 25786                           ;isr.c: 43: TMR2 = 0;
 25787  0032AC  6ABC               	clrf	4028,c	;volatile
 25788                           
 25789                           ; BSR set to: 0
 25790                           ;isr.c: 44: PIR1bits.TMR2IF = 0;
 25791  0032AE  929E               	bcf	3998,1,c	;volatile
 25792  0032B0                     i2l9389:
 25793                           
 25794                           ;isr.c: 45: }
 25795                           ;isr.c: 47: if((PIE5bits.TMR4IE) && (PIR5bits.TMR4IF)) {
 25796  0032B0  B07D               	btfsc	3965,0,c	;volatile
 25797  0032B2  A07E               	btfss	3966,0,c	;volatile
 25798  0032B4  D017               	goto	i2l399
 25799                           
 25800                           ;isr.c: 49: if(beep_timer > 0) {
 25801  0032B6  0100               	movlb	0	; () banked
 25802  0032B8  51BE               	movf	(_beep_timer+1)& (0+255),w,b	;volatile
 25803  0032BA  11BD               	iorwf	_beep_timer& (0+255),w,b	;volatile
 25804  0032BC  E00F               	bz	i2l395
 25805                           
 25806                           ; BSR set to: 0
 25807                           ;isr.c: 50: beep_timer--;
 25808  0032BE  07BD               	decf	_beep_timer& (0+255),f,b	;volatile
 25809  0032C0  A0D8               	btfss	status,0,c
 25810  0032C2  07BE               	decf	(_beep_timer+1)& (0+255),f,b	;volatile
 25811                           
 25812                           ; BSR set to: 0
 25813                           ;isr.c: 51: LATAbits.LATA4 = 1;
 25814  0032C4  8889               	bsf	3977,4,c	;volatile
 25815                           
 25816                           ; BSR set to: 0
 25817                           ;isr.c: 52: if((beep++) & 1) {
 25818  0032C6  2BC9               	incf	HI_ISR@beep& (0+255),f,b
 25819  0032C8  05C9               	decf	HI_ISR@beep& (0+255),w,b
 25820  0032CA  6F80               	movwf	??_HI_ISR& (0+255),b
 25821  0032CC  A180               	btfss	??_HI_ISR& (0+255),0,b
 25822  0032CE  D002               	goto	i2l396
 25823                           
 25824                           ; BSR set to: 0
 25825                           ;isr.c: 53: LATAbits.LATA4 = 0;
 25826  0032D0  9889               	bcf	3977,4,c	;volatile
 25827                           
 25828                           ;isr.c: 54: } else {
 25829  0032D2  D001               	goto	i2l397
 25830  0032D4                     i2l396:
 25831                           
 25832                           ; BSR set to: 0
 25833                           ;isr.c: 55: LATAbits.LATA4 = 1;
 25834  0032D4  8889               	bsf	3977,4,c	;volatile
 25835  0032D6                     i2l397:
 25836                           
 25837                           ; BSR set to: 0
 25838                           ;isr.c: 56: }
 25839                           ;isr.c: 57: __nop();
 25840  0032D6  F000               	nop	
 25841                           
 25842                           ;isr.c: 58: __nop();
 25843  0032D8  F000               	nop	
 25844                           
 25845                           ;isr.c: 59: } else {
 25846  0032DA  D001               	goto	i2l398
 25847  0032DC                     i2l395:
 25848                           
 25849                           ; BSR set to: 0
 25850                           ;isr.c: 60: LATAbits.LATA4 = 0;
 25851  0032DC  9889               	bcf	3977,4,c	;volatile
 25852  0032DE                     i2l398:
 25853                           
 25854                           ;isr.c: 62: }
 25855                           ;isr.c: 65: TMR4 = 0;
 25856  0032DE  010F               	movlb	15	; () banked
 25857  0032E0  6B53               	clrf	83,b	;volatile
 25858                           
 25859                           ;isr.c: 66: PIR5bits.TMR4IF = 0;
 25860  0032E2  907E               	bcf	3966,0,c	;volatile
 25861  0032E4                     i2l399:
 25862  0032E4  C086  FFF4         	movff	??_HI_ISR+6,prodh
 25863  0032E8  C085  FFF3         	movff	??_HI_ISR+5,prodl
 25864  0032EC  C084  FFDA         	movff	??_HI_ISR+4,fsr2h
 25865  0032F0  C083  FFD9         	movff	??_HI_ISR+3,fsr2l
 25866  0032F4  C082  FFE2         	movff	??_HI_ISR+2,fsr1h
 25867  0032F8  C081  FFE1         	movff	??_HI_ISR+1,fsr1l
 25868  0032FC  0011               	retfie		f
 25869  0032FE                     __end_of_HI_ISR:
 25870                           	opt stack 0
 25871                           tblptru	equ	0xFF8
 25872                           tblptrh	equ	0xFF7
 25873                           tblptrl	equ	0xFF6
 25874                           tablat	equ	0xFF5
 25875                           prodh	equ	0xFF4
 25876                           prodl	equ	0xFF3
 25877                           intcon	equ	0xFF2
 25878                           postinc0	equ	0xFEE
 25879                           wreg	equ	0xFE8
 25880                           indf1	equ	0xFE7
 25881                           postinc1	equ	0xFE6
 25882                           postdec1	equ	0xFE5
 25883                           fsr1h	equ	0xFE2
 25884                           fsr1l	equ	0xFE1
 25885                           bsr	equ	0xFE0
 25886                           indf2	equ	0xFDF
 25887                           postinc2	equ	0xFDE
 25888                           postdec2	equ	0xFDD
 25889                           fsr2h	equ	0xFDA
 25890                           fsr2l	equ	0xFD9
 25891                           status	equ	0xFD8
 25892                           
 25893 ;; *************** function _MTouchAcquisition *****************
 25894 ;; Defined at:
 25895 ;;		line 249 in file "../lib/mTouchCap/mTouchSensor.c"
 25896 ;; Parameters:    Size  Location     Type
 25897 ;;		None
 25898 ;; Auto vars:     Size  Location     Type
 25899 ;;  pCurrentSens    2   30[BANK0 ] PTR struct tag_SENSOR
 25900 ;;		 -> sensors(352), 
 25901 ;;  pPreviousSen    2   27[BANK0 ] PTR struct tag_SENSOR
 25902 ;;		 -> sensors(352), 
 25903 ;;  pLastSensor     2   25[BANK0 ] PTR struct tag_SENSOR
 25904 ;;		 -> sensors(352), 
 25905 ;;  data            2   23[BANK0 ] short 
 25906 ;;  i               1   29[BANK0 ] unsigned char 
 25907 ;; Return value:  Size  Location     Type
 25908 ;;		None               void
 25909 ;; Registers used:
 25910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25911 ;; Tracked objects:
 25912 ;;		On entry : F/0
 25913 ;;		On exit  : F/0
 25914 ;;		Unchanged: 0/0
 25915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25917 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25918 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25919 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25920 ;;Total ram usage:       12 bytes
 25921 ;; Hardware stack levels used:    1
 25922 ;; Hardware stack levels required when called:    2
 25923 ;; This function calls:
 25924 ;;		_MTouchAcquisitionCVD
 25925 ;;		_MTouchSensorDecode
 25926 ;; This function is called by:
 25927 ;;		_HI_ISR
 25928 ;; This function uses a non-reentrant model
 25929 ;;
 25930                           
 25931                           	psect	text74
 25932  00204C                     __ptext74:
 25933                           	opt stack 0
 25934  00204C                     _MTouchAcquisition:
 25935                           	opt stack 15
 25936                           
 25937                           ; BSR set to: 0
 25938                           ;mTouchSensor.c: 251: INT16 data;
 25939                           ;mTouchSensor.c: 252: UINT8 i;
 25940                           ;mTouchSensor.c: 254: static UINT8 startSensorNumber = 0;
 25941                           ;mTouchSensor.c: 255: SENSOR* pCurrentSensor;
 25942                           ;mTouchSensor.c: 256: SENSOR* pLastSensor;
 25943                           ;mTouchSensor.c: 259: SENSOR* pPreviousSensor;
 25944                           ;mTouchSensor.c: 264: pCurrentSensor = (SENSOR*)sensors + startSensorNumber;
 25945                           
 25946                           ;incstack = 0
 25947  00204C  51CA               	movf	MTouchAcquisition@startSensorNumber& (0+255),w,b
 25948  00204E  0D20               	mullw	32
 25949  002050  0E00               	movlw	low _sensors
 25950  002052  24F3               	addwf	prodl,w,c
 25951  002054  6F7E               	movwf	MTouchAcquisition@pCurrentSensor& (0+255),b
 25952  002056  0E04               	movlw	high _sensors
 25953  002058  20F4               	addwfc	prodh,w,c
 25954  00205A  6F7F               	movwf	(MTouchAcquisition@pCurrentSensor+1)& (0+255),b
 25955                           
 25956                           ; BSR set to: 0
 25957                           ;mTouchSensor.c: 265: pLastSensor = (SENSOR*)sensors + (11-1);
 25958  00205C  0E05               	movlw	high (_sensors+320)
 25959  00205E  6F7A               	movwf	(MTouchAcquisition@pLastSensor+1)& (0+255),b
 25960  002060  0E40               	movlw	low (_sensors+320)
 25961  002062  6F79               	movwf	MTouchAcquisition@pLastSensor& (0+255),b
 25962                           
 25963                           ; BSR set to: 0
 25964                           ;mTouchSensor.c: 268: if(startSensorNumber == (11-1))
 25965  002064  51CA               	movf	MTouchAcquisition@startSensorNumber& (0+255),w,b
 25966  002066  0A0A               	xorlw	10
 25967  002068  E105               	bnz	i2l9127
 25968                           
 25969                           ; BSR set to: 0
 25970                           ;mTouchSensor.c: 269: {
 25971                           ;mTouchSensor.c: 270: pPreviousSensor = (SENSOR*)sensors;
 25972  00206A  0E04               	movlw	high _sensors
 25973  00206C  6F7C               	movwf	(MTouchAcquisition@pPreviousSensor+1)& (0+255),b
 25974  00206E  0E00               	movlw	low _sensors
 25975  002070  6F7B               	movwf	MTouchAcquisition@pPreviousSensor& (0+255),b
 25976                           
 25977                           ;mTouchSensor.c: 271: }else{
 25978  002072  D006               	goto	i2l9129
 25979  002074                     i2l9127:
 25980                           
 25981                           ; BSR set to: 0
 25982                           ;mTouchSensor.c: 272: pPreviousSensor = pCurrentSensor + 1;
 25983  002074  0E20               	movlw	32
 25984  002076  257E               	addwf	MTouchAcquisition@pCurrentSensor& (0+255),w,b
 25985  002078  6F7B               	movwf	MTouchAcquisition@pPreviousSensor& (0+255),b
 25986  00207A  0E00               	movlw	0
 25987  00207C  217F               	addwfc	(MTouchAcquisition@pCurrentSensor+1)& (0+255),w,b
 25988  00207E  6F7C               	movwf	(MTouchAcquisition@pPreviousSensor+1)& (0+255),b
 25989  002080                     i2l9129:
 25990                           
 25991                           ; BSR set to: 0
 25992                           ;mTouchSensor.c: 273: }
 25993                           ;mTouchSensor.c: 276: for(i=0; i<11; i++)
 25994  002080  6B7D               	clrf	MTouchAcquisition@i& (0+255),b
 25995  002082                     i2l9135:
 25996                           
 25997                           ; BSR set to: 0
 25998                           ;mTouchSensor.c: 277: {
 25999                           ;mTouchSensor.c: 278: if((pCurrentSensor->state&SENSOR_DISCONNECTED) == 0)
 26000  002082  EE20 F01C          	lfsr	2,28
 26001  002086  517E               	movf	MTouchAcquisition@pCurrentSensor& (0+255),w,b
 26002  002088  26D9               	addwf	fsr2l,f,c
 26003  00208A  517F               	movf	(MTouchAcquisition@pCurrentSensor+1)& (0+255),w,b
 26004  00208C  22DA               	addwfc	fsr2h,f,c
 26005  00208E  50DF               	movf	indf2,w,c
 26006  002090  6F74               	movwf	??_MTouchAcquisition& (0+255),b
 26007  002092  BF74               	btfsc	??_MTouchAcquisition& (0+255),7,b
 26008  002094  D054               	goto	i2l9149
 26009                           
 26010                           ; BSR set to: 0
 26011                           ;mTouchSensor.c: 279: {
 26012                           ;mTouchSensor.c: 287: data = MTouchAcquisitionCVD(pCurrentSensor,pPreviousSensor);
 26013  002096  C07F  F061         	movff	MTouchAcquisition@pCurrentSensor+1,MTouchAcquisitionCVD@pCurrentSensor+1
 26014  00209A  C07E  F060         	movff	MTouchAcquisition@pCurrentSensor,MTouchAcquisitionCVD@pCurrentSensor
 26015  00209E  C07C  F063         	movff	MTouchAcquisition@pPreviousSensor+1,MTouchAcquisitionCVD@pPreviousSensor+1
 26016  0020A2  C07B  F062         	movff	MTouchAcquisition@pPreviousSensor,MTouchAcquisitionCVD@pPreviousSensor
 26017  0020A6  EC6E  F009         	call	_MTouchAcquisitionCVD	;wreg free
 26018  0020AA  C060  F077         	movff	?_MTouchAcquisitionCVD,MTouchAcquisition@data
 26019  0020AE  C061  F078         	movff	?_MTouchAcquisitionCVD+1,MTouchAcquisition@data+1
 26020                           
 26021                           ; BSR set to: 0
 26022                           ;mTouchSensor.c: 292: if(data > pCurrentSensor->decimateFilterData)
 26023  0020B2  D861               	call	PL88	;call to abstracted procedure
 26024  0020B4  5175               	movf	(??_MTouchAcquisition+1)& (0+255),w,b
 26025  0020B6  0A80               	xorlw	128
 26026  0020B8  6F76               	movwf	(??_MTouchAcquisition+2)& (0+255),b
 26027  0020BA  5177               	movf	MTouchAcquisition@data& (0+255),w,b
 26028  0020BC  5D74               	subwf	??_MTouchAcquisition& (0+255),w,b
 26029  0020BE  5178               	movf	(MTouchAcquisition@data+1)& (0+255),w,b
 26030  0020C0  0A80               	xorlw	128
 26031  0020C2  5976               	subwfb	(??_MTouchAcquisition+2)& (0+255),w,b
 26032  0020C4  E20A               	bc	i2l9143
 26033                           
 26034                           ; BSR set to: 0
 26035                           ;mTouchSensor.c: 293: {
 26036                           ;mTouchSensor.c: 294: pCurrentSensor->decimateFilterData++;
 26037  0020C6  EE20 F00C          	lfsr	2,12
 26038  0020CA  517E               	movf	MTouchAcquisition@pCurrentSensor& (0+255),w,b
 26039  0020CC  26D9               	addwf	fsr2l,f,c
 26040  0020CE  517F               	movf	(MTouchAcquisition@pCurrentSensor+1)& (0+255),w,b
 26041  0020D0  22DA               	addwfc	fsr2h,f,c
 26042  0020D2  2ADE               	incf	postinc2,f,c
 26043  0020D4  0E00               	movlw	0
 26044  0020D6  22DD               	addwfc	postdec2,f,c
 26045                           
 26046                           ;mTouchSensor.c: 295: } else {
 26047  0020D8  D003               	goto	i2l116
 26048  0020DA                     i2l9143:
 26049                           
 26050                           ; BSR set to: 0
 26051                           ;mTouchSensor.c: 296: pCurrentSensor->decimateFilterData--;
 26052  0020DA  EE20 F00C          	lfsr	2,12
 26053  0020DE  D856               	call	PL122	;call to abstracted procedure
 26054  0020E0                     i2l116:
 26055                           
 26056                           ; BSR set to: 0
 26057                           ;mTouchSensor.c: 297: }
 26058                           ;mTouchSensor.c: 300: pCurrentSensor->oversampleFilterData += pCurrentSensor->decimateFi
      +                          lterData;
 26059  0020E0  D84A               	call	PL88	;call to abstracted procedure
 26060  0020E2  EE20 F004          	lfsr	2,4
 26061  0020E6  517E               	movf	MTouchAcquisition@pCurrentSensor& (0+255),w,b
 26062  0020E8  26D9               	addwf	fsr2l,f,c
 26063  0020EA  517F               	movf	(MTouchAcquisition@pCurrentSensor+1)& (0+255),w,b
 26064  0020EC  22DA               	addwfc	fsr2h,f,c
 26065  0020EE  5174               	movf	??_MTouchAcquisition& (0+255),w,b
 26066  0020F0  26DE               	addwf	postinc2,f,c
 26067  0020F2  5175               	movf	(??_MTouchAcquisition+1)& (0+255),w,b
 26068  0020F4  22DE               	addwfc	postinc2,f,c
 26069  0020F6  0E00               	movlw	0
 26070  0020F8  BF75               	btfsc	(??_MTouchAcquisition+1)& (0+255),7,b
 26071  0020FA  0EFF               	movlw	255
 26072  0020FC  22DE               	addwfc	postinc2,f,c
 26073  0020FE  22DD               	addwfc	postdec2,f,c
 26074                           
 26075                           ;mTouchSensor.c: 302: if((pCurrentSensor->sampleCounter)-- <= 0)
 26076  002100  EE20 F00E          	lfsr	2,14
 26077  002104  D843               	call	PL122	;call to abstracted procedure
 26078  002106  2AD9               	incf	fsr2l,f,c
 26079  002108  1CDD               	comf	postdec2,w,c
 26080  00210A  0EFF               	movlw	255
 26081  00210C  B4D8               	btfsc	status,2,c
 26082  00210E  18DF               	xorwf	indf2,w,c
 26083  002110  E116               	bnz	i2l9149
 26084                           
 26085                           ; BSR set to: 0
 26086                           ;mTouchSensor.c: 303: {
 26087                           ;mTouchSensor.c: 304: MTouchSensorDecode(pCurrentSensor);
 26088  002112  C07F  F06A         	movff	MTouchAcquisition@pCurrentSensor+1,MTouchSensorDecode@pSensor+1
 26089  002116  C07E  F069         	movff	MTouchAcquisition@pCurrentSensor,MTouchSensorDecode@pSensor
 26090  00211A  EC34  F00D         	call	_MTouchSensorDecode	;wreg free
 26091                           
 26092                           ; BSR set to: 0
 26093                           ;mTouchSensor.c: 305: pCurrentSensor->sampleCounter = pCurrentSensor->samplesNumber;
 26094  00211E  EE20 F010          	lfsr	2,16
 26095  002122  517E               	movf	MTouchAcquisition@pCurrentSensor& (0+255),w,b
 26096  002124  26D9               	addwf	fsr2l,f,c
 26097  002126  517F               	movf	(MTouchAcquisition@pCurrentSensor+1)& (0+255),w,b
 26098  002128  22DA               	addwfc	fsr2h,f,c
 26099  00212A  EE10 F00E          	lfsr	1,14
 26100  00212E  517E               	movf	MTouchAcquisition@pCurrentSensor& (0+255),w,b
 26101  002130  26E1               	addwf	fsr1l,f,c
 26102  002132  517F               	movf	(MTouchAcquisition@pCurrentSensor+1)& (0+255),w,b
 26103  002134  22E2               	addwfc	fsr1h,f,c
 26104  002136  CFDE FFE6          	movff	postinc2,postinc1
 26105  00213A  CFDD FFE5          	movff	postdec2,postdec1
 26106  00213E                     i2l9149:
 26107                           
 26108                           ; BSR set to: 0
 26109                           ;mTouchSensor.c: 306: }
 26110                           ;mTouchSensor.c: 308: }
 26111                           ;mTouchSensor.c: 312: pPreviousSensor = pCurrentSensor;
 26112  00213E  C07F  F07C         	movff	MTouchAcquisition@pCurrentSensor+1,MTouchAcquisition@pPreviousSensor+1
 26113  002142  C07E  F07B         	movff	MTouchAcquisition@pCurrentSensor,MTouchAcquisition@pPreviousSensor
 26114                           
 26115                           ; BSR set to: 0
 26116                           ;mTouchSensor.c: 315: if(pCurrentSensor == pLastSensor)
 26117  002146  517A               	movf	(MTouchAcquisition@pLastSensor+1)& (0+255),w,b
 26118  002148  197F               	xorwf	(MTouchAcquisition@pCurrentSensor+1)& (0+255),w,b
 26119  00214A  E102               	bnz	i2u1041_45
 26120  00214C  5179               	movf	MTouchAcquisition@pLastSensor& (0+255),w,b
 26121  00214E  197E               	xorwf	MTouchAcquisition@pCurrentSensor& (0+255),w,b
 26122  002150                     i2u1041_45:
 26123  002150  E105               	bnz	i2l9155
 26124                           
 26125                           ; BSR set to: 0
 26126                           ;mTouchSensor.c: 316: {
 26127                           ;mTouchSensor.c: 317: pCurrentSensor = (SENSOR*)sensors;
 26128  002152  0E04               	movlw	high _sensors
 26129  002154  6F7F               	movwf	(MTouchAcquisition@pCurrentSensor+1)& (0+255),b
 26130  002156  0E00               	movlw	low _sensors
 26131  002158  6F7E               	movwf	MTouchAcquisition@pCurrentSensor& (0+255),b
 26132                           
 26133                           ;mTouchSensor.c: 318: continue;
 26134  00215A  D004               	goto	i2l9157
 26135  00215C                     i2l9155:
 26136                           
 26137                           ; BSR set to: 0
 26138                           ;mTouchSensor.c: 319: }
 26139                           ;mTouchSensor.c: 321: pCurrentSensor++;
 26140  00215C  0E20               	movlw	32
 26141  00215E  277E               	addwf	MTouchAcquisition@pCurrentSensor& (0+255),f,b
 26142  002160  0E00               	movlw	0
 26143  002162  237F               	addwfc	(MTouchAcquisition@pCurrentSensor+1)& (0+255),f,b
 26144  002164                     i2l9157:
 26145                           
 26146                           ; BSR set to: 0
 26147  002164  2B7D               	incf	MTouchAcquisition@i& (0+255),f,b
 26148  002166  0E0A               	movlw	10
 26149  002168  657D               	cpfsgt	MTouchAcquisition@i& (0+255),b
 26150  00216A  D78B               	goto	i2l9135
 26151                           
 26152                           ; BSR set to: 0
 26153                           ;mTouchSensor.c: 322: }
 26154                           ;mTouchSensor.c: 324: startSensorNumber++;
 26155  00216C  2BCA               	incf	MTouchAcquisition@startSensorNumber& (0+255),f,b
 26156                           
 26157                           ; BSR set to: 0
 26158                           ;mTouchSensor.c: 326: if(startSensorNumber > (11-1))
 26159  00216E  65CA               	cpfsgt	MTouchAcquisition@startSensorNumber& (0+255),b
 26160  002170  0C0A               	retlw	10
 26161                           
 26162                           ; BSR set to: 0
 26163                           ;mTouchSensor.c: 327: {
 26164                           ;mTouchSensor.c: 328: startSensorNumber = 0;
 26165  002172  6BCA               	clrf	MTouchAcquisition@startSensorNumber& (0+255),b
 26166                           
 26167                           ; BSR set to: 0
 26168  002174  0012               	return	
 26169  002176                     __end_of_MTouchAcquisition:
 26170                           	opt stack 0
 26171  002176                     PL88:
 26172                           	opt stack 15
 26173  002176  EE20 F00C          	lfsr	2,12
 26174  00217A  517E               	movf	MTouchAcquisition@pCurrentSensor& (0+255),w,b
 26175  00217C  26D9               	addwf	fsr2l,f,c
 26176  00217E  517F               	movf	(MTouchAcquisition@pCurrentSensor+1)& (0+255),w,b
 26177  002180  22DA               	addwfc	fsr2h,f,c
 26178  002182  CFDE F074          	movff	postinc2,??_MTouchAcquisition
 26179  002186  CFDD F075          	movff	postdec2,??_MTouchAcquisition+1
 26180  00218A  0012               	return	
 26181  00218C                     __end_ofPL88:
 26182                           	opt stack 0
 26183  00218C                     PL122:
 26184                           	opt stack 15
 26185  00218C  517E               	movf	MTouchAcquisition@pCurrentSensor& (0+255),w,b
 26186  00218E  26D9               	addwf	fsr2l,f,c
 26187  002190  517F               	movf	(MTouchAcquisition@pCurrentSensor+1)& (0+255),w,b
 26188  002192  22DA               	addwfc	fsr2h,f,c
 26189  002194  06DE               	decf	postinc2,f,c
 26190  002196  0E00               	movlw	0
 26191  002198  5ADD               	subwfb	postdec2,f,c
 26192  00219A  0C00               	retlw	0
 26193  00219C                     __end_ofPL122:
 26194                           	opt stack 0
 26195                           tblptru	equ	0xFF8
 26196                           tblptrh	equ	0xFF7
 26197                           tblptrl	equ	0xFF6
 26198                           tablat	equ	0xFF5
 26199                           prodh	equ	0xFF4
 26200                           prodl	equ	0xFF3
 26201                           intcon	equ	0xFF2
 26202                           postinc0	equ	0xFEE
 26203                           wreg	equ	0xFE8
 26204                           indf1	equ	0xFE7
 26205                           postinc1	equ	0xFE6
 26206                           postdec1	equ	0xFE5
 26207                           fsr1h	equ	0xFE2
 26208                           fsr1l	equ	0xFE1
 26209                           bsr	equ	0xFE0
 26210                           indf2	equ	0xFDF
 26211                           postinc2	equ	0xFDE
 26212                           postdec2	equ	0xFDD
 26213                           fsr2h	equ	0xFDA
 26214                           fsr2l	equ	0xFD9
 26215                           status	equ	0xFD8
 26216                           
 26217 ;; *************** function _MTouchSensorDecode *****************
 26218 ;; Defined at:
 26219 ;;		line 136 in file "../lib/mTouchCap/mTouchSensor.c"
 26220 ;; Parameters:    Size  Location     Type
 26221 ;;  pSensor         2    9[BANK0 ] PTR struct tag_SENSOR
 26222 ;;		 -> sensors(352), 
 26223 ;; Auto vars:     Size  Location     Type
 26224 ;;  delta           2   15[BANK0 ] short 
 26225 ;; Return value:  Size  Location     Type
 26226 ;;		None               void
 26227 ;; Registers used:
 26228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, cstack
 26229 ;; Tracked objects:
 26230 ;;		On entry : F/0
 26231 ;;		On exit  : F/0
 26232 ;;		Unchanged: 0/0
 26233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26234 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26235 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26236 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26237 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26238 ;;Total ram usage:        8 bytes
 26239 ;; Hardware stack levels used:    1
 26240 ;; Hardware stack levels required when called:    1
 26241 ;; This function calls:
 26242 ;;		_MTouchUpdateSensorAverage
 26243 ;; This function is called by:
 26244 ;;		_MTouchAcquisition
 26245 ;; This function uses a non-reentrant model
 26246 ;;
 26247                           
 26248                           	psect	text75
 26249  001A68                     __ptext75:
 26250                           	opt stack 0
 26251  001A68                     _MTouchSensorDecode:
 26252                           	opt stack 15
 26253                           
 26254                           ; BSR set to: 0
 26255                           ;mTouchSensor.c: 139: INT16 delta;
 26256                           ;mTouchSensor.c: 141: delta = pSensor->oversampleFilterData - pSensor->average;
 26257                           
 26258                           ; BSR set to: 0
 26259                           ;incstack = 0
 26260  001A68  C069  FFD9         	movff	MTouchSensorDecode@pSensor,fsr2l
 26261  001A6C  C06A  FFDA         	movff	MTouchSensorDecode@pSensor+1,fsr2h
 26262  001A70  CFDE F06B          	movff	postinc2,??_MTouchSensorDecode
 26263  001A74  CFDD F06C          	movff	postdec2,??_MTouchSensorDecode+1
 26264  001A78  EE20 F004          	lfsr	2,4
 26265  001A7C  5169               	movf	MTouchSensorDecode@pSensor& (0+255),w,b
 26266  001A7E  26D9               	addwf	fsr2l,f,c
 26267  001A80  516A               	movf	(MTouchSensorDecode@pSensor+1)& (0+255),w,b
 26268  001A82  22DA               	addwfc	fsr2h,f,c
 26269  001A84  CFDE F06D          	movff	postinc2,??_MTouchSensorDecode+2
 26270  001A88  CFDD F06E          	movff	postdec2,??_MTouchSensorDecode+3
 26271  001A8C  516B               	movf	??_MTouchSensorDecode& (0+255),w,b
 26272  001A8E  5D6D               	subwf	(??_MTouchSensorDecode+2)& (0+255),w,b
 26273  001A90  6F6F               	movwf	MTouchSensorDecode@delta& (0+255),b
 26274  001A92  516C               	movf	(??_MTouchSensorDecode+1)& (0+255),w,b
 26275  001A94  596E               	subwfb	(??_MTouchSensorDecode+3)& (0+255),w,b
 26276  001A96  6F70               	movwf	(MTouchSensorDecode@delta+1)& (0+255),b
 26277                           
 26278                           ; BSR set to: 0
 26279                           ;mTouchSensor.c: 143: if(delta < 0)
 26280  001A98  5170               	movf	(MTouchSensorDecode@delta+1)& (0+255),w,b
 26281  001A9A  0A80               	xorlw	128
 26282  001A9C  6EF3               	movwf	prodl,c
 26283  001A9E  0E80               	movlw	128
 26284  001AA0  5CF3               	subwf	prodl,w,c
 26285  001AA2  0E00               	movlw	0
 26286  001AA4  B4D8               	btfsc	status,2,c
 26287  001AA6  5D6F               	subwf	MTouchSensorDecode@delta& (0+255),w,b
 26288  001AA8  E202               	bc	i2l8667
 26289                           
 26290                           ; BSR set to: 0
 26291                           ;mTouchSensor.c: 144: {
 26292                           ;mTouchSensor.c: 145: delta = 0;
 26293  001AAA  6B6F               	clrf	MTouchSensorDecode@delta& (0+255),b
 26294  001AAC  6B70               	clrf	(MTouchSensorDecode@delta+1)& (0+255),b
 26295  001AAE                     i2l8667:
 26296                           
 26297                           ; BSR set to: 0
 26298                           ;mTouchSensor.c: 146: }
 26299                           ;mTouchSensor.c: 148: pSensor->delta = delta;
 26300  001AAE  EE20 F018          	lfsr	2,24
 26301  001AB2  5169               	movf	MTouchSensorDecode@pSensor& (0+255),w,b
 26302  001AB4  26D9               	addwf	fsr2l,f,c
 26303  001AB6  516A               	movf	(MTouchSensorDecode@pSensor+1)& (0+255),w,b
 26304  001AB8  22DA               	addwfc	fsr2h,f,c
 26305  001ABA  C06F  FFDE         	movff	MTouchSensorDecode@delta,postinc2
 26306  001ABE  C070  FFDD         	movff	MTouchSensorDecode@delta+1,postdec2
 26307                           
 26308                           ;mTouchSensor.c: 150: switch(pSensor->state)
 26309  001AC2  D065               	goto	i2l8697
 26310  001AC4                     i2l8669:
 26311                           
 26312                           ; BSR set to: 0
 26313                           ;mTouchSensor.c: 153: {
 26314                           ;mTouchSensor.c: 154: if (pSensor->debounceCount-- <= 0)
 26315  001AC4  D87B               	call	PL38	;call to abstracted procedure
 26316  001AC6  B4D8               	btfsc	status,2,c
 26317  001AC8  18DF               	xorwf	indf2,w,c
 26318  001ACA  E104               	bnz	i2l8673
 26319                           
 26320                           ; BSR set to: 0
 26321                           ;mTouchSensor.c: 155: {
 26322                           ;mTouchSensor.c: 156: pSensor->state = SENSOR_RELEASED;
 26323  001ACC  D88B               	call	PL110	;call to abstracted procedure
 26324                           
 26325                           ;mTouchSensor.c: 157: pSensor->debounceCount = 8;
 26326  001ACE  EE20 F01A          	lfsr	2,26
 26327  001AD2  D880               	call	PL56	;call to abstracted procedure
 26328  001AD4                     i2l8673:
 26329                           
 26330                           ; BSR set to: 0
 26331                           ;mTouchSensor.c: 158: }
 26332                           ;mTouchSensor.c: 159: pSensor->average = pSensor->oversampleFilterData;
 26333  001AD4  EE20 F004          	lfsr	2,4
 26334  001AD8  5169               	movf	MTouchSensorDecode@pSensor& (0+255),w,b
 26335  001ADA  26D9               	addwf	fsr2l,f,c
 26336  001ADC  516A               	movf	(MTouchSensorDecode@pSensor+1)& (0+255),w,b
 26337  001ADE  22DA               	addwfc	fsr2h,f,c
 26338  001AE0  C069  FFE1         	movff	MTouchSensorDecode@pSensor,fsr1l
 26339  001AE4  C06A  FFE2         	movff	MTouchSensorDecode@pSensor+1,fsr1h
 26340  001AE8  CFDE FFE6          	movff	postinc2,postinc1
 26341  001AEC  CFDE FFE6          	movff	postinc2,postinc1
 26342  001AF0  CFDE FFE6          	movff	postinc2,postinc1
 26343  001AF4  CFDD FFE5          	movff	postdec2,postdec1
 26344                           
 26345                           ;mTouchSensor.c: 160: break;
 26346  001AF8  D056               	goto	i2l8699
 26347  001AFA                     i2l8675:
 26348                           
 26349                           ; BSR set to: 0
 26350                           ;mTouchSensor.c: 165: {
 26351                           ;mTouchSensor.c: 166: if(delta > pSensor->pressThreshold)
 26352  001AFA  EE20 F012          	lfsr	2,18
 26353  001AFE  5169               	movf	MTouchSensorDecode@pSensor& (0+255),w,b
 26354  001B00  26D9               	addwf	fsr2l,f,c
 26355  001B02  516A               	movf	(MTouchSensorDecode@pSensor+1)& (0+255),w,b
 26356  001B04  22DA               	addwfc	fsr2h,f,c
 26357  001B06  CFDE F06B          	movff	postinc2,??_MTouchSensorDecode
 26358  001B0A  CFDD F06C          	movff	postdec2,??_MTouchSensorDecode+1
 26359  001B0E  516F               	movf	MTouchSensorDecode@delta& (0+255),w,b
 26360  001B10  5D6B               	subwf	??_MTouchSensorDecode& (0+255),w,b
 26361  001B12  5170               	movf	(MTouchSensorDecode@delta+1)& (0+255),w,b
 26362  001B14  596C               	subwfb	(??_MTouchSensorDecode+1)& (0+255),w,b
 26363  001B16  E20C               	bc	i2l8681
 26364                           
 26365                           ; BSR set to: 0
 26366                           ;mTouchSensor.c: 167: {
 26367                           ;mTouchSensor.c: 168: if (pSensor->debounceCount-- <= 0)
 26368  001B18  D851               	call	PL38	;call to abstracted procedure
 26369  001B1A  B4D8               	btfsc	status,2,c
 26370  001B1C  18DF               	xorwf	indf2,w,c
 26371  001B1E  E10B               	bnz	i2l8683
 26372                           
 26373                           ; BSR set to: 0
 26374                           ;mTouchSensor.c: 169: {
 26375                           ;mTouchSensor.c: 170: pSensor->state = SENSOR_PRESSED;
 26376  001B20  EE20 F01C          	lfsr	2,28
 26377  001B24  5169               	movf	MTouchSensorDecode@pSensor& (0+255),w,b
 26378  001B26  26D9               	addwf	fsr2l,f,c
 26379  001B28  516A               	movf	(MTouchSensorDecode@pSensor+1)& (0+255),w,b
 26380  001B2A  22DA               	addwfc	fsr2h,f,c
 26381  001B2C  0E02               	movlw	2
 26382  001B2E  6EDF               	movwf	indf2,c
 26383  001B30                     i2l8681:
 26384                           
 26385                           ; BSR set to: 0
 26386                           ;mTouchSensor.c: 174: else
 26387                           ;mTouchSensor.c: 175: {
 26388                           ;mTouchSensor.c: 176: pSensor->debounceCount = 8;
 26389  001B30  EE20 F01A          	lfsr	2,26
 26390  001B34  D84F               	call	PL56	;call to abstracted procedure
 26391  001B36                     i2l8683:
 26392                           
 26393                           ; BSR set to: 0
 26394                           ;mTouchSensor.c: 177: }
 26395                           ;mTouchSensor.c: 179: MTouchUpdateSensorAverage(pSensor, 8);
 26396  001B36  C06A  F061         	movff	MTouchSensorDecode@pSensor+1,MTouchUpdateSensorAverage@pSensor+1
 26397  001B3A  C069  F060         	movff	MTouchSensorDecode@pSensor,MTouchUpdateSensorAverage@pSensor
 26398  001B3E  6B63               	clrf	(MTouchUpdateSensorAverage@rate+1)& (0+255),b
 26399  001B40  0E08               	movlw	8
 26400  001B42  6F62               	movwf	MTouchUpdateSensorAverage@rate& (0+255),b
 26401  001B44  EC6C  F016         	call	_MTouchUpdateSensorAverage	;wreg free
 26402                           
 26403                           ;mTouchSensor.c: 181: break;
 26404  001B48  D02E               	goto	i2l8699
 26405  001B4A                     i2l8685:
 26406                           
 26407                           ; BSR set to: 0
 26408                           ;mTouchSensor.c: 186: {
 26409                           ;mTouchSensor.c: 187: if(delta < pSensor->releaseThreshold)
 26410  001B4A  EE20 F014          	lfsr	2,20
 26411  001B4E  5169               	movf	MTouchSensorDecode@pSensor& (0+255),w,b
 26412  001B50  26D9               	addwf	fsr2l,f,c
 26413  001B52  516A               	movf	(MTouchSensorDecode@pSensor+1)& (0+255),w,b
 26414  001B54  22DA               	addwfc	fsr2h,f,c
 26415  001B56  CFDE F06B          	movff	postinc2,??_MTouchSensorDecode
 26416  001B5A  CFDD F06C          	movff	postdec2,??_MTouchSensorDecode+1
 26417  001B5E  516B               	movf	??_MTouchSensorDecode& (0+255),w,b
 26418  001B60  5D6F               	subwf	MTouchSensorDecode@delta& (0+255),w,b
 26419  001B62  516C               	movf	(??_MTouchSensorDecode+1)& (0+255),w,b
 26420  001B64  5970               	subwfb	(MTouchSensorDecode@delta+1)& (0+255),w,b
 26421  001B66  E205               	bc	i2l8691
 26422                           
 26423                           ; BSR set to: 0
 26424                           ;mTouchSensor.c: 188: {
 26425                           ;mTouchSensor.c: 189: if (pSensor->debounceCount-- <= 0)
 26426  001B68  D829               	call	PL38	;call to abstracted procedure
 26427  001B6A  B4D8               	btfsc	status,2,c
 26428  001B6C  18DF               	xorwf	indf2,w,c
 26429  001B6E  E104               	bnz	i2l8693
 26430                           
 26431                           ; BSR set to: 0
 26432                           ;mTouchSensor.c: 190: {
 26433                           ;mTouchSensor.c: 191: pSensor->state = SENSOR_RELEASED;
 26434  001B70  D839               	call	PL110	;call to abstracted procedure
 26435  001B72                     i2l8691:
 26436                           
 26437                           ; BSR set to: 0
 26438                           ;mTouchSensor.c: 195: else
 26439                           ;mTouchSensor.c: 196: {
 26440                           ;mTouchSensor.c: 197: pSensor->debounceCount = 8;
 26441  001B72  EE20 F01A          	lfsr	2,26
 26442  001B76  D82E               	call	PL56	;call to abstracted procedure
 26443  001B78                     i2l8693:
 26444                           
 26445                           ; BSR set to: 0
 26446                           ;mTouchSensor.c: 198: }
 26447                           ;mTouchSensor.c: 200: MTouchUpdateSensorAverage(pSensor, 800);
 26448  001B78  C06A  F061         	movff	MTouchSensorDecode@pSensor+1,MTouchUpdateSensorAverage@pSensor+1
 26449  001B7C  C069  F060         	movff	MTouchSensorDecode@pSensor,MTouchUpdateSensorAverage@pSensor
 26450  001B80  0E03               	movlw	3
 26451  001B82  6F63               	movwf	(MTouchUpdateSensorAverage@rate+1)& (0+255),b
 26452  001B84  0E20               	movlw	32
 26453  001B86  6F62               	movwf	MTouchUpdateSensorAverage@rate& (0+255),b
 26454  001B88  EC6C  F016         	call	_MTouchUpdateSensorAverage	;wreg free
 26455                           
 26456                           ;mTouchSensor.c: 202: break;
 26457  001B8C  D00C               	goto	i2l8699
 26458  001B8E                     i2l8697:
 26459                           
 26460                           ; BSR set to: 0
 26461  001B8E  EE20 F01C          	lfsr	2,28
 26462  001B92  5169               	movf	MTouchSensorDecode@pSensor& (0+255),w,b
 26463  001B94  26D9               	addwf	fsr2l,f,c
 26464  001B96  516A               	movf	(MTouchSensorDecode@pSensor+1)& (0+255),w,b
 26465  001B98  22DA               	addwfc	fsr2h,f,c
 26466  001B9A  50DF               	movf	indf2,w,c
 26467                           
 26468                           ; Switch size 1, requested type "space"
 26469                           ; Number of cases is 3, Range of values is 0 to 2
 26470                           ; switch strategies available:
 26471                           ; Name         Instructions Cycles
 26472                           ; simple_byte           10     6 (average)
 26473                           ;	Chosen strategy is simple_byte
 26474  001B9C  E093               	bz	i2l8669
 26475  001B9E  0A01               	xorlw	1	; case 1
 26476  001BA0  E0AC               	bz	i2l8675
 26477  001BA2  0A03               	xorlw	3	; case 2
 26478  001BA4  E0D2               	bz	i2l8685
 26479  001BA6                     i2l8699:
 26480                           
 26481                           ; BSR set to: 0
 26482                           ;mTouchSensor.c: 209: pSensor->oversampleFilterData = 0;
 26483  001BA6  EE20 F004          	lfsr	2,4
 26484  001BAA  5169               	movf	MTouchSensorDecode@pSensor& (0+255),w,b
 26485  001BAC  26D9               	addwf	fsr2l,f,c
 26486  001BAE  516A               	movf	(MTouchSensorDecode@pSensor+1)& (0+255),w,b
 26487  001BB0  22DA               	addwfc	fsr2h,f,c
 26488  001BB2  6ADE               	clrf	postinc2,c
 26489  001BB4  6ADE               	clrf	postinc2,c
 26490  001BB6  6ADE               	clrf	postinc2,c
 26491  001BB8  6ADD               	clrf	postdec2,c
 26492                           
 26493                           ; BSR set to: 0
 26494  001BBA  0012               	return	
 26495  001BBC                     __end_of_MTouchSensorDecode:
 26496                           	opt stack 0
 26497  001BBC                     PL38:
 26498                           	opt stack 15
 26499  001BBC  EE20 F01A          	lfsr	2,26
 26500  001BC0  5169               	movf	MTouchSensorDecode@pSensor& (0+255),w,b
 26501  001BC2  26D9               	addwf	fsr2l,f,c
 26502  001BC4  516A               	movf	(MTouchSensorDecode@pSensor+1)& (0+255),w,b
 26503  001BC6  22DA               	addwfc	fsr2h,f,c
 26504  001BC8  06DE               	decf	postinc2,f,c
 26505  001BCA  0E00               	movlw	0
 26506  001BCC  5ADD               	subwfb	postdec2,f,c
 26507  001BCE  2AD9               	incf	fsr2l,f,c
 26508  001BD0  1CDD               	comf	postdec2,w,c
 26509  001BD2  0CFF               	retlw	255
 26510  001BD4                     __end_ofPL38:
 26511                           	opt stack 0
 26512  001BD4                     PL56:
 26513                           	opt stack 15
 26514  001BD4  5169               	movf	MTouchSensorDecode@pSensor& (0+255),w,b
 26515  001BD6  26D9               	addwf	fsr2l,f,c
 26516  001BD8  516A               	movf	(MTouchSensorDecode@pSensor+1)& (0+255),w,b
 26517  001BDA  22DA               	addwfc	fsr2h,f,c
 26518  001BDC  0E08               	movlw	8
 26519  001BDE  6EDE               	movwf	postinc2,c
 26520  001BE0  6ADD               	clrf	postdec2,c
 26521  001BE2  0C08               	retlw	8
 26522  001BE4                     __end_ofPL56:
 26523                           	opt stack 0
 26524  001BE4                     PL110:
 26525                           	opt stack 15
 26526  001BE4  EE20 F01C          	lfsr	2,28
 26527  001BE8  5169               	movf	MTouchSensorDecode@pSensor& (0+255),w,b
 26528  001BEA  26D9               	addwf	fsr2l,f,c
 26529  001BEC  516A               	movf	(MTouchSensorDecode@pSensor+1)& (0+255),w,b
 26530  001BEE  22DA               	addwfc	fsr2h,f,c
 26531  001BF0  0E01               	movlw	1
 26532  001BF2  6EDF               	movwf	indf2,c
 26533  001BF4  0C01               	retlw	1
 26534  001BF6                     __end_ofPL110:
 26535                           	opt stack 0
 26536                           tblptru	equ	0xFF8
 26537                           tblptrh	equ	0xFF7
 26538                           tblptrl	equ	0xFF6
 26539                           tablat	equ	0xFF5
 26540                           prodh	equ	0xFF4
 26541                           prodl	equ	0xFF3
 26542                           intcon	equ	0xFF2
 26543                           postinc0	equ	0xFEE
 26544                           wreg	equ	0xFE8
 26545                           indf1	equ	0xFE7
 26546                           postinc1	equ	0xFE6
 26547                           postdec1	equ	0xFE5
 26548                           fsr1h	equ	0xFE2
 26549                           fsr1l	equ	0xFE1
 26550                           bsr	equ	0xFE0
 26551                           indf2	equ	0xFDF
 26552                           postinc2	equ	0xFDE
 26553                           postdec2	equ	0xFDD
 26554                           fsr2h	equ	0xFDA
 26555                           fsr2l	equ	0xFD9
 26556                           status	equ	0xFD8
 26557                           
 26558 ;; *************** function _MTouchUpdateSensorAverage *****************
 26559 ;; Defined at:
 26560 ;;		line 214 in file "../lib/mTouchCap/mTouchSensor.c"
 26561 ;; Parameters:    Size  Location     Type
 26562 ;;  pSensor         2    0[BANK0 ] PTR struct tag_SENSOR
 26563 ;;		 -> sensors(352), 
 26564 ;;  rate            2    2[BANK0 ] unsigned short 
 26565 ;; Auto vars:     Size  Location     Type
 26566 ;;		None
 26567 ;; Return value:  Size  Location     Type
 26568 ;;		None               void
 26569 ;; Registers used:
 26570 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26571 ;; Tracked objects:
 26572 ;;		On entry : F/0
 26573 ;;		On exit  : F/0
 26574 ;;		Unchanged: 0/0
 26575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26576 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26578 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26579 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26580 ;;Total ram usage:        9 bytes
 26581 ;; Hardware stack levels used:    1
 26582 ;; This function calls:
 26583 ;;		Nothing
 26584 ;; This function is called by:
 26585 ;;		_MTouchSensorDecode
 26586 ;; This function uses a non-reentrant model
 26587 ;;
 26588                           
 26589                           	psect	text76
 26590  002CD8                     __ptext76:
 26591                           	opt stack 0
 26592  002CD8                     _MTouchUpdateSensorAverage:
 26593                           	opt stack 15
 26594                           
 26595                           ; BSR set to: 0
 26596                           ;mTouchSensor.c: 216: if(pSensor->averageCount++ >= rate)
 26597                           
 26598                           ; BSR set to: 0
 26599                           ;incstack = 0
 26600  002CD8  EE20 F016          	lfsr	2,22
 26601  002CDC  5160               	movf	MTouchUpdateSensorAverage@pSensor& (0+255),w,b
 26602  002CDE  26D9               	addwf	fsr2l,f,c
 26603  002CE0  5161               	movf	(MTouchUpdateSensorAverage@pSensor+1)& (0+255),w,b
 26604  002CE2  22DA               	addwfc	fsr2h,f,c
 26605  002CE4  CFDF F064          	movff	indf2,??_MTouchUpdateSensorAverage
 26606  002CE8  2ADE               	incf	postinc2,f,c
 26607  002CEA  CFDF F065          	movff	indf2,??_MTouchUpdateSensorAverage+1
 26608  002CEE  0E00               	movlw	0
 26609  002CF0  22DD               	addwfc	postdec2,f,c
 26610  002CF2  5162               	movf	MTouchUpdateSensorAverage@rate& (0+255),w,b
 26611  002CF4  5D64               	subwf	??_MTouchUpdateSensorAverage& (0+255),w,b
 26612  002CF6  5163               	movf	(MTouchUpdateSensorAverage@rate+1)& (0+255),w,b
 26613  002CF8  5965               	subwfb	(??_MTouchUpdateSensorAverage+1)& (0+255),w,b
 26614  002CFA  A0D8               	btfss	status,0,c
 26615  002CFC  0012               	return	
 26616                           
 26617                           ; BSR set to: 0
 26618                           ;mTouchSensor.c: 217: {
 26619                           ;mTouchSensor.c: 218: pSensor->averageCount = 0;
 26620  002CFE  EE20 F016          	lfsr	2,22
 26621  002D02  5160               	movf	MTouchUpdateSensorAverage@pSensor& (0+255),w,b
 26622  002D04  26D9               	addwf	fsr2l,f,c
 26623  002D06  5161               	movf	(MTouchUpdateSensorAverage@pSensor+1)& (0+255),w,b
 26624  002D08  22DA               	addwfc	fsr2h,f,c
 26625  002D0A  0E00               	movlw	0
 26626  002D0C  6EDE               	movwf	postinc2,c
 26627  002D0E  6EDD               	movwf	postdec2,c
 26628                           
 26629                           ;mTouchSensor.c: 235: pSensor->average -= pSensor->average >> 3;
 26630  002D10  0E03               	movlw	3
 26631  002D12  6F64               	movwf	??_MTouchUpdateSensorAverage& (0+255),b
 26632  002D14  C060  FFD9         	movff	MTouchUpdateSensorAverage@pSensor,fsr2l
 26633  002D18  C061  FFDA         	movff	MTouchUpdateSensorAverage@pSensor+1,fsr2h
 26634  002D1C  D81A               	call	PL30	;call to abstracted procedure
 26635  002D1E  5EDE               	subwf	postinc2,f,c
 26636  002D20  5166               	movf	(??_MTouchUpdateSensorAverage+2)& (0+255),w,b
 26637  002D22  5ADE               	subwfb	postinc2,f,c
 26638  002D24  5167               	movf	(??_MTouchUpdateSensorAverage+3)& (0+255),w,b
 26639  002D26  5ADE               	subwfb	postinc2,f,c
 26640  002D28  5168               	movf	(??_MTouchUpdateSensorAverage+4)& (0+255),w,b
 26641  002D2A  5ADD               	subwfb	postdec2,f,c
 26642                           
 26643                           ;mTouchSensor.c: 236: pSensor->average += pSensor->oversampleFilterData >> 3;
 26644  002D2C  0E03               	movlw	3
 26645  002D2E  6F64               	movwf	??_MTouchUpdateSensorAverage& (0+255),b
 26646  002D30  EE20 F004          	lfsr	2,4
 26647  002D34  5160               	movf	MTouchUpdateSensorAverage@pSensor& (0+255),w,b
 26648  002D36  26D9               	addwf	fsr2l,f,c
 26649  002D38  5161               	movf	(MTouchUpdateSensorAverage@pSensor+1)& (0+255),w,b
 26650  002D3A  22DA               	addwfc	fsr2h,f,c
 26651  002D3C  D80A               	call	PL30	;call to abstracted procedure
 26652  002D3E  26DE               	addwf	postinc2,f,c
 26653  002D40  5166               	movf	(??_MTouchUpdateSensorAverage+2)& (0+255),w,b
 26654  002D42  22DE               	addwfc	postinc2,f,c
 26655  002D44  5167               	movf	(??_MTouchUpdateSensorAverage+3)& (0+255),w,b
 26656  002D46  22DE               	addwfc	postinc2,f,c
 26657  002D48  5168               	movf	(??_MTouchUpdateSensorAverage+4)& (0+255),w,b
 26658  002D4A  22DD               	addwfc	postdec2,f,c
 26659  002D4C  52DD               	movf	postdec2,f,c
 26660  002D4E  52DD               	movf	postdec2,f,c
 26661                           
 26662                           ; BSR set to: 0
 26663  002D50  0012               	return	
 26664  002D52                     __end_of_MTouchUpdateSensorAverage:
 26665                           	opt stack 0
 26666  002D52                     PL30:
 26667                           	opt stack 15
 26668  002D52  CFDE F065          	movff	postinc2,??_MTouchUpdateSensorAverage+1
 26669  002D56  CFDE F066          	movff	postinc2,??_MTouchUpdateSensorAverage+2
 26670  002D5A  CFDE F067          	movff	postinc2,??_MTouchUpdateSensorAverage+3
 26671  002D5E  CFDE F068          	movff	postinc2,??_MTouchUpdateSensorAverage+4
 26672  002D62                     i2u881_45:
 26673  002D62  6764               	tstfsz	??_MTouchUpdateSensorAverage& (0+255),b
 26674  002D64  D001               	goto	i2u881_46
 26675  002D66  D007               	goto	i2u881_47
 26676  002D68                     i2u881_46:
 26677  002D68  3568               	rlcf	(??_MTouchUpdateSensorAverage+4)& (0+255),w,b
 26678  002D6A  3368               	rrcf	(??_MTouchUpdateSensorAverage+4)& (0+255),f,b
 26679  002D6C  3367               	rrcf	(??_MTouchUpdateSensorAverage+3)& (0+255),f,b
 26680  002D6E  3366               	rrcf	(??_MTouchUpdateSensorAverage+2)& (0+255),f,b
 26681  002D70  3365               	rrcf	(??_MTouchUpdateSensorAverage+1)& (0+255),f,b
 26682  002D72  2F64               	decfsz	??_MTouchUpdateSensorAverage& (0+255),f,b
 26683  002D74  D7F6               	goto	i2u881_45
 26684  002D76                     i2u881_47:
 26685  002D76  C060  FFD9         	movff	MTouchUpdateSensorAverage@pSensor,fsr2l
 26686  002D7A  C061  FFDA         	movff	MTouchUpdateSensorAverage@pSensor+1,fsr2h
 26687  002D7E  5165               	movf	(??_MTouchUpdateSensorAverage+1)& (0+255),w,b
 26688  002D80  0012               	return	
 26689  002D82                     __end_ofPL30:
 26690                           	opt stack 0
 26691                           tblptru	equ	0xFF8
 26692                           tblptrh	equ	0xFF7
 26693                           tblptrl	equ	0xFF6
 26694                           tablat	equ	0xFF5
 26695                           prodh	equ	0xFF4
 26696                           prodl	equ	0xFF3
 26697                           intcon	equ	0xFF2
 26698                           postinc0	equ	0xFEE
 26699                           wreg	equ	0xFE8
 26700                           indf1	equ	0xFE7
 26701                           postinc1	equ	0xFE6
 26702                           postdec1	equ	0xFE5
 26703                           fsr1h	equ	0xFE2
 26704                           fsr1l	equ	0xFE1
 26705                           bsr	equ	0xFE0
 26706                           indf2	equ	0xFDF
 26707                           postinc2	equ	0xFDE
 26708                           postdec2	equ	0xFDD
 26709                           fsr2h	equ	0xFDA
 26710                           fsr2l	equ	0xFD9
 26711                           status	equ	0xFD8
 26712                           
 26713 ;; *************** function _MTouchAcquisitionCVD *****************
 26714 ;; Defined at:
 26715 ;;		line 121 in file "../lib/mTouchCap/mTouchAcquistion.c"
 26716 ;; Parameters:    Size  Location     Type
 26717 ;;  pCurrentSens    2    0[BANK0 ] PTR struct tag_SENSOR
 26718 ;;		 -> sensors(352), 
 26719 ;;  pPreviousSen    2    2[BANK0 ] PTR struct tag_SENSOR
 26720 ;;		 -> sensors(352), 
 26721 ;; Auto vars:     Size  Location     Type
 26722 ;;  curTris         2   17[BANK0 ] PTR volatile unsigned ch
 26723 ;;		 -> TRISA(1), TRISB(1), 
 26724 ;;  curLat          2   14[BANK0 ] PTR volatile unsigned ch
 26725 ;;		 -> LATA(1), LATB(1), 
 26726 ;;  prevLat         2   12[BANK0 ] PTR volatile unsigned ch
 26727 ;;		 -> LATA(1), LATB(1), 
 26728 ;;  prevTris        2    8[BANK0 ] PTR volatile unsigned ch
 26729 ;;		 -> TRISA(1), TRISB(1), 
 26730 ;;  result          2    6[BANK0 ] short 
 26731 ;;  curIOMask       1   19[BANK0 ] unsigned char 
 26732 ;;  prevIOMask      1   16[BANK0 ] unsigned char 
 26733 ;;  curChannelNu    1   11[BANK0 ] unsigned char 
 26734 ;;  prevChannelN    1   10[BANK0 ] unsigned char 
 26735 ;; Return value:  Size  Location     Type
 26736 ;;                  2    0[BANK0 ] short 
 26737 ;; Registers used:
 26738 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26739 ;; Tracked objects:
 26740 ;;		On entry : F/0
 26741 ;;		On exit  : F/0
 26742 ;;		Unchanged: 0/0
 26743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26744 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26745 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26746 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26747 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26748 ;;Total ram usage:       20 bytes
 26749 ;; Hardware stack levels used:    1
 26750 ;; This function calls:
 26751 ;;		Nothing
 26752 ;; This function is called by:
 26753 ;;		_MTouchAcquisition
 26754 ;; This function uses a non-reentrant model
 26755 ;;
 26756                           
 26757                           	psect	text77
 26758  0012DC                     __ptext77:
 26759                           	opt stack 0
 26760  0012DC                     _MTouchAcquisitionCVD:
 26761                           	opt stack 16
 26762                           
 26763                           ; BSR set to: 0
 26764                           ;mTouchAcquistion.c: 123: SFR prevTris;
 26765                           ;mTouchAcquistion.c: 124: SFR prevLat;
 26766                           ;mTouchAcquistion.c: 125: IOMASK prevIOMask;
 26767                           ;mTouchAcquistion.c: 126: SFR curTris;
 26768                           ;mTouchAcquistion.c: 127: SFR curLat;
 26769                           ;mTouchAcquistion.c: 128: IOMASK curIOMask;
 26770                           ;mTouchAcquistion.c: 129: UINT8 prevChannelNumber;
 26771                           ;mTouchAcquistion.c: 130: UINT8 curChannelNumber;
 26772                           ;mTouchAcquistion.c: 131: INT16 result;
 26773                           ;mTouchAcquistion.c: 135: prevTris = pPreviousSensor->trisReg;
 26774                           
 26775                           ; BSR set to: 0
 26776                           ;incstack = 0
 26777  0012DC  EE20 F008          	lfsr	2,8
 26778  0012E0  5162               	movf	MTouchAcquisitionCVD@pPreviousSensor& (0+255),w,b
 26779  0012E2  26D9               	addwf	fsr2l,f,c
 26780  0012E4  5163               	movf	(MTouchAcquisitionCVD@pPreviousSensor+1)& (0+255),w,b
 26781  0012E6  22DA               	addwfc	fsr2h,f,c
 26782  0012E8  CFDE F068          	movff	postinc2,MTouchAcquisitionCVD@prevTris
 26783  0012EC  CFDD F069          	movff	postdec2,MTouchAcquisitionCVD@prevTris+1
 26784                           
 26785                           ;mTouchAcquistion.c: 136: prevLat = pPreviousSensor->latReg;
 26786  0012F0  EE20 F00A          	lfsr	2,10
 26787  0012F4  5162               	movf	MTouchAcquisitionCVD@pPreviousSensor& (0+255),w,b
 26788  0012F6  26D9               	addwf	fsr2l,f,c
 26789  0012F8  5163               	movf	(MTouchAcquisitionCVD@pPreviousSensor+1)& (0+255),w,b
 26790  0012FA  22DA               	addwfc	fsr2h,f,c
 26791  0012FC  CFDE F06C          	movff	postinc2,MTouchAcquisitionCVD@prevLat
 26792  001300  CFDD F06D          	movff	postdec2,MTouchAcquisitionCVD@prevLat+1
 26793                           
 26794                           ;mTouchAcquistion.c: 137: prevIOMask = pPreviousSensor->ioMask;
 26795  001304  EE20 F01D          	lfsr	2,29
 26796  001308  5162               	movf	MTouchAcquisitionCVD@pPreviousSensor& (0+255),w,b
 26797  00130A  26D9               	addwf	fsr2l,f,c
 26798  00130C  5163               	movf	(MTouchAcquisitionCVD@pPreviousSensor+1)& (0+255),w,b
 26799  00130E  22DA               	addwfc	fsr2h,f,c
 26800  001310  50DF               	movf	indf2,w,c
 26801  001312  6F70               	movwf	MTouchAcquisitionCVD@prevIOMask& (0+255),b
 26802                           
 26803                           ;mTouchAcquistion.c: 138: curTris = pCurrentSensor->trisReg;
 26804  001314  EE20 F008          	lfsr	2,8
 26805  001318  5160               	movf	MTouchAcquisitionCVD@pCurrentSensor& (0+255),w,b
 26806  00131A  26D9               	addwf	fsr2l,f,c
 26807  00131C  5161               	movf	(MTouchAcquisitionCVD@pCurrentSensor+1)& (0+255),w,b
 26808  00131E  22DA               	addwfc	fsr2h,f,c
 26809  001320  CFDE F071          	movff	postinc2,MTouchAcquisitionCVD@curTris
 26810  001324  CFDD F072          	movff	postdec2,MTouchAcquisitionCVD@curTris+1
 26811                           
 26812                           ;mTouchAcquistion.c: 139: curLat = pCurrentSensor->latReg;
 26813  001328  EE20 F00A          	lfsr	2,10
 26814  00132C  5160               	movf	MTouchAcquisitionCVD@pCurrentSensor& (0+255),w,b
 26815  00132E  26D9               	addwf	fsr2l,f,c
 26816  001330  5161               	movf	(MTouchAcquisitionCVD@pCurrentSensor+1)& (0+255),w,b
 26817  001332  22DA               	addwfc	fsr2h,f,c
 26818  001334  CFDE F06E          	movff	postinc2,MTouchAcquisitionCVD@curLat
 26819  001338  CFDD F06F          	movff	postdec2,MTouchAcquisitionCVD@curLat+1
 26820                           
 26821                           ;mTouchAcquistion.c: 140: curIOMask = pCurrentSensor->ioMask;
 26822  00133C  EE20 F01D          	lfsr	2,29
 26823  001340  5160               	movf	MTouchAcquisitionCVD@pCurrentSensor& (0+255),w,b
 26824  001342  26D9               	addwf	fsr2l,f,c
 26825  001344  5161               	movf	(MTouchAcquisitionCVD@pCurrentSensor+1)& (0+255),w,b
 26826  001346  22DA               	addwfc	fsr2h,f,c
 26827  001348  50DF               	movf	indf2,w,c
 26828  00134A  6F73               	movwf	MTouchAcquisitionCVD@curIOMask& (0+255),b
 26829                           
 26830                           ;mTouchAcquistion.c: 141: prevChannelNumber = pPreviousSensor->channelNumber;
 26831  00134C  EE20 F01E          	lfsr	2,30
 26832  001350  5162               	movf	MTouchAcquisitionCVD@pPreviousSensor& (0+255),w,b
 26833  001352  26D9               	addwf	fsr2l,f,c
 26834  001354  5163               	movf	(MTouchAcquisitionCVD@pPreviousSensor+1)& (0+255),w,b
 26835  001356  22DA               	addwfc	fsr2h,f,c
 26836  001358  50DF               	movf	indf2,w,c
 26837  00135A  6F6A               	movwf	MTouchAcquisitionCVD@prevChannelNumber& (0+255),b
 26838                           
 26839                           ;mTouchAcquistion.c: 142: curChannelNumber = pCurrentSensor->channelNumber;
 26840  00135C  EE20 F01E          	lfsr	2,30
 26841  001360  5160               	movf	MTouchAcquisitionCVD@pCurrentSensor& (0+255),w,b
 26842  001362  26D9               	addwf	fsr2l,f,c
 26843  001364  5161               	movf	(MTouchAcquisitionCVD@pCurrentSensor+1)& (0+255),w,b
 26844  001366  22DA               	addwfc	fsr2h,f,c
 26845  001368  50DF               	movf	indf2,w,c
 26846  00136A  6F6B               	movwf	MTouchAcquisitionCVD@curChannelNumber& (0+255),b
 26847                           
 26848                           ; BSR set to: 0
 26849                           ;mTouchAcquistion.c: 148: {ADCON0bits.CHS = prevChannelNumber;};
 26850  00136C  C06A  F064         	movff	MTouchAcquisitionCVD@prevChannelNumber,??_MTouchAcquisitionCVD
 26851  001370  D8A6               	call	PL62	;call to abstracted procedure
 26852                           
 26853                           ; BSR set to: 0
 26854                           ;mTouchAcquistion.c: 151: *prevLat |= prevIOMask; *prevTris &= ~prevIOMask;
 26855  001372  C06C  FFD9         	movff	MTouchAcquisitionCVD@prevLat,fsr2l
 26856  001376  C06D  FFDA         	movff	MTouchAcquisitionCVD@prevLat+1,fsr2h
 26857  00137A  5170               	movf	MTouchAcquisitionCVD@prevIOMask& (0+255),w,b
 26858  00137C  12DF               	iorwf	indf2,f,c
 26859                           
 26860                           ; BSR set to: 0
 26861  00137E  D8B3               	call	PL104	;call to abstracted procedure
 26862                           
 26863                           ; BSR set to: 0
 26864                           ;mTouchAcquistion.c: 154: *curLat &= ~curIOMask; *curTris &= ~curIOMask;
 26865  001380  D895               	call	PL60	;call to abstracted procedure
 26866                           
 26867                           ; BSR set to: 0
 26868  001382  D88B               	call	PL54	;call to abstracted procedure
 26869                           
 26870                           ; BSR set to: 0
 26871                           ;mTouchAcquistion.c: 157: { __nop();__nop();__nop();__nop();__nop();__nop();__nop();__no
      +                          p();__nop();__nop(); __nop();__nop();__nop();__nop();__nop();__nop();__nop();__nop();__n
      +                          op();__nop(); };
 26872  001384  F000               	nop	
 26873  001386  F000               	nop	
 26874  001388  F000               	nop	
 26875  00138A  F000               	nop	
 26876  00138C  F000               	nop	
 26877  00138E  F000               	nop	
 26878  001390  F000               	nop	
 26879  001392  F000               	nop	
 26880  001394  F000               	nop	
 26881  001396  F000               	nop	
 26882  001398  F000               	nop	
 26883  00139A  F000               	nop	
 26884  00139C  F000               	nop	
 26885  00139E  F000               	nop	
 26886  0013A0  F000               	nop	
 26887  0013A2  F000               	nop	
 26888  0013A4  F000               	nop	
 26889  0013A6  F000               	nop	
 26890  0013A8  F000               	nop	
 26891  0013AA  F000               	nop	
 26892                           
 26893                           ;mTouchAcquistion.c: 160: *curTris |= curIOMask;
 26894  0013AC  C071  FFD9         	movff	MTouchAcquisitionCVD@curTris,fsr2l
 26895  0013B0  C072  FFDA         	movff	MTouchAcquisitionCVD@curTris+1,fsr2h
 26896  0013B4  0100               	movlb	0	; () banked
 26897  0013B6  5173               	movf	MTouchAcquisitionCVD@curIOMask& (0+255),w,b
 26898  0013B8  12DF               	iorwf	indf2,f,c
 26899                           
 26900                           ;mTouchAcquistion.c: 163: {ADCON0bits.CHS = curChannelNumber;};
 26901  0013BA  C06B  F064         	movff	MTouchAcquisitionCVD@curChannelNumber,??_MTouchAcquisitionCVD
 26902  0013BE  D87F               	call	PL62	;call to abstracted procedure
 26903                           
 26904                           ; BSR set to: 0
 26905                           ;mTouchAcquistion.c: 166: { __nop();__nop();__nop();__nop();__nop();__nop();__nop();__no
      +                          p();__nop();__nop(); __nop();__nop();__nop();__nop();__nop();__nop();__nop();__nop();__n
      +                          op();__nop(); };
 26906  0013C0  F000               	nop	
 26907  0013C2  F000               	nop	
 26908  0013C4  F000               	nop	
 26909  0013C6  F000               	nop	
 26910  0013C8  F000               	nop	
 26911  0013CA  F000               	nop	
 26912  0013CC  F000               	nop	
 26913  0013CE  F000               	nop	
 26914  0013D0  F000               	nop	
 26915  0013D2  F000               	nop	
 26916  0013D4  F000               	nop	
 26917  0013D6  F000               	nop	
 26918  0013D8  F000               	nop	
 26919  0013DA  F000               	nop	
 26920  0013DC  F000               	nop	
 26921  0013DE  F000               	nop	
 26922  0013E0  F000               	nop	
 26923  0013E2  F000               	nop	
 26924  0013E4  F000               	nop	
 26925  0013E6  F000               	nop	
 26926                           
 26927                           ;mTouchAcquistion.c: 169: {ADCON0bits.DONE = 1;while(ADCON0bits.DONE);};
 26928  0013E8  82C2               	bsf	4034,1,c	;volatile
 26929  0013EA                     i2l11:
 26930  0013EA  B2C2               	btfsc	4034,1,c	;volatile
 26931  0013EC  D7FE               	goto	i2l11
 26932                           
 26933                           ;mTouchAcquistion.c: 172: *curTris &= ~curIOMask;
 26934  0013EE  0100               	movlb	0	; () banked
 26935  0013F0  D854               	call	PL54	;call to abstracted procedure
 26936                           
 26937                           ;mTouchAcquistion.c: 173: *prevLat &= ~prevIOMask;
 26938  0013F2  D882               	call	PL108	;call to abstracted procedure
 26939                           
 26940                           ; BSR set to: 0
 26941                           ;mTouchAcquistion.c: 179: result = 1024;
 26942  0013F4  0E04               	movlw	4
 26943  0013F6  6F67               	movwf	(MTouchAcquisitionCVD@result+1)& (0+255),b
 26944  0013F8  6B66               	clrf	MTouchAcquisitionCVD@result& (0+255),b
 26945                           
 26946                           ; BSR set to: 0
 26947                           ;mTouchAcquistion.c: 181: result -= (((INT16)ADRESH << 8)+ADRESL);
 26948  0013FA  D869               	call	PL86	;call to abstracted procedure
 26949  0013FC  5F66               	subwf	MTouchAcquisitionCVD@result& (0+255),f,b
 26950  0013FE  5165               	movf	(??_MTouchAcquisitionCVD+1)& (0+255),w,b
 26951  001400  5B67               	subwfb	(MTouchAcquisitionCVD@result+1)& (0+255),f,b
 26952                           
 26953                           ; BSR set to: 0
 26954                           ;mTouchAcquistion.c: 186: {ADCON0bits.CHS = prevChannelNumber;};
 26955  001402  C06A  F064         	movff	MTouchAcquisitionCVD@prevChannelNumber,??_MTouchAcquisitionCVD
 26956  001406  D85B               	call	PL62	;call to abstracted procedure
 26957                           
 26958                           ; BSR set to: 0
 26959                           ;mTouchAcquistion.c: 189: *prevLat &= ~prevIOMask; *prevTris &= ~prevIOMask;
 26960  001408  D877               	call	PL108	;call to abstracted procedure
 26961                           
 26962                           ; BSR set to: 0
 26963  00140A  D86D               	call	PL104	;call to abstracted procedure
 26964                           
 26965                           ; BSR set to: 0
 26966                           ;mTouchAcquistion.c: 192: *curLat |= curIOMask; *curTris &= ~curIOMask;
 26967  00140C  C06E  FFD9         	movff	MTouchAcquisitionCVD@curLat,fsr2l
 26968  001410  C06F  FFDA         	movff	MTouchAcquisitionCVD@curLat+1,fsr2h
 26969  001414  5173               	movf	MTouchAcquisitionCVD@curIOMask& (0+255),w,b
 26970  001416  12DF               	iorwf	indf2,f,c
 26971                           
 26972                           ; BSR set to: 0
 26973  001418  D840               	call	PL54	;call to abstracted procedure
 26974                           
 26975                           ; BSR set to: 0
 26976                           ;mTouchAcquistion.c: 195: { __nop();__nop();__nop();__nop();__nop();__nop();__nop();__no
      +                          p();__nop();__nop(); __nop();__nop();__nop();__nop();__nop();__nop();__nop();__nop();__n
      +                          op();__nop(); };
 26977  00141A  F000               	nop	
 26978  00141C  F000               	nop	
 26979  00141E  F000               	nop	
 26980  001420  F000               	nop	
 26981  001422  F000               	nop	
 26982  001424  F000               	nop	
 26983  001426  F000               	nop	
 26984  001428  F000               	nop	
 26985  00142A  F000               	nop	
 26986  00142C  F000               	nop	
 26987  00142E  F000               	nop	
 26988  001430  F000               	nop	
 26989  001432  F000               	nop	
 26990  001434  F000               	nop	
 26991  001436  F000               	nop	
 26992  001438  F000               	nop	
 26993  00143A  F000               	nop	
 26994  00143C  F000               	nop	
 26995  00143E  F000               	nop	
 26996  001440  F000               	nop	
 26997                           
 26998                           ;mTouchAcquistion.c: 198: *curTris |= curIOMask;
 26999  001442  C071  FFD9         	movff	MTouchAcquisitionCVD@curTris,fsr2l
 27000  001446  C072  FFDA         	movff	MTouchAcquisitionCVD@curTris+1,fsr2h
 27001  00144A  5173               	movf	MTouchAcquisitionCVD@curIOMask& (0+255),w,b
 27002  00144C  12DF               	iorwf	indf2,f,c
 27003                           
 27004                           ; BSR set to: 0
 27005                           ;mTouchAcquistion.c: 201: {ADCON0bits.CHS = curChannelNumber;};
 27006  00144E  C06B  F064         	movff	MTouchAcquisitionCVD@curChannelNumber,??_MTouchAcquisitionCVD
 27007  001452  D835               	call	PL62	;call to abstracted procedure
 27008                           
 27009                           ; BSR set to: 0
 27010                           ;mTouchAcquistion.c: 204: { __nop();__nop();__nop();__nop();__nop();__nop();__nop();__no
      +                          p();__nop();__nop(); __nop();__nop();__nop();__nop();__nop();__nop();__nop();__nop();__n
      +                          op();__nop(); };
 27011  001454  F000               	nop	
 27012  001456  F000               	nop	
 27013  001458  F000               	nop	
 27014  00145A  F000               	nop	
 27015  00145C  F000               	nop	
 27016  00145E  F000               	nop	
 27017  001460  F000               	nop	
 27018  001462  F000               	nop	
 27019  001464  F000               	nop	
 27020  001466  F000               	nop	
 27021  001468  F000               	nop	
 27022  00146A  F000               	nop	
 27023  00146C  F000               	nop	
 27024  00146E  F000               	nop	
 27025  001470  F000               	nop	
 27026  001472  F000               	nop	
 27027  001474  F000               	nop	
 27028  001476  F000               	nop	
 27029  001478  F000               	nop	
 27030  00147A  F000               	nop	
 27031                           
 27032                           ;mTouchAcquistion.c: 207: {ADCON0bits.DONE = 1;while(ADCON0bits.DONE);};
 27033  00147C  82C2               	bsf	4034,1,c	;volatile
 27034  00147E                     i2l14:
 27035  00147E  B2C2               	btfsc	4034,1,c	;volatile
 27036  001480  D7FE               	goto	i2l14
 27037                           
 27038                           ;mTouchAcquistion.c: 210: *curLat &= ~curIOMask;
 27039  001482  0100               	movlb	0	; () banked
 27040  001484  D813               	call	PL60	;call to abstracted procedure
 27041                           
 27042                           ;mTouchAcquistion.c: 211: *curTris &= ~curIOMask;
 27043  001486  D809               	call	PL54	;call to abstracted procedure
 27044                           
 27045                           ; BSR set to: 0
 27046                           ;mTouchAcquistion.c: 214: result += (((INT16)ADRESH << 8)+ADRESL);
 27047  001488  D822               	call	PL86	;call to abstracted procedure
 27048  00148A  2766               	addwf	MTouchAcquisitionCVD@result& (0+255),f,b
 27049  00148C  5165               	movf	(??_MTouchAcquisitionCVD+1)& (0+255),w,b
 27050  00148E  2367               	addwfc	(MTouchAcquisitionCVD@result+1)& (0+255),f,b
 27051                           
 27052                           ; BSR set to: 0
 27053                           ;mTouchAcquistion.c: 216: return (UINT16)result;
 27054  001490  C066  F060         	movff	MTouchAcquisitionCVD@result,?_MTouchAcquisitionCVD
 27055  001494  C067  F061         	movff	MTouchAcquisitionCVD@result+1,?_MTouchAcquisitionCVD+1
 27056                           
 27057                           ; BSR set to: 0
 27058  001498  0012               	return	
 27059  00149A                     __end_of_MTouchAcquisitionCVD:
 27060                           	opt stack 0
 27061  00149A                     PL54:
 27062                           	opt stack 16
 27063  00149A  1D73               	comf	MTouchAcquisitionCVD@curIOMask& (0+255),w,b
 27064  00149C  6F64               	movwf	??_MTouchAcquisitionCVD& (0+255),b
 27065  00149E  C071  FFD9         	movff	MTouchAcquisitionCVD@curTris,fsr2l
 27066  0014A2  C072  FFDA         	movff	MTouchAcquisitionCVD@curTris+1,fsr2h
 27067  0014A6  5164               	movf	??_MTouchAcquisitionCVD& (0+255),w,b
 27068  0014A8  16DF               	andwf	indf2,f,c
 27069  0014AA  0012               	return	
 27070  0014AC                     __end_ofPL54:
 27071                           	opt stack 0
 27072  0014AC                     PL60:
 27073                           	opt stack 16
 27074  0014AC  1D73               	comf	MTouchAcquisitionCVD@curIOMask& (0+255),w,b
 27075  0014AE  6F64               	movwf	??_MTouchAcquisitionCVD& (0+255),b
 27076  0014B0  C06E  FFD9         	movff	MTouchAcquisitionCVD@curLat,fsr2l
 27077  0014B4  C06F  FFDA         	movff	MTouchAcquisitionCVD@curLat+1,fsr2h
 27078  0014B8  5164               	movf	??_MTouchAcquisitionCVD& (0+255),w,b
 27079  0014BA  16DF               	andwf	indf2,f,c
 27080  0014BC  0012               	return	
 27081  0014BE                     __end_ofPL60:
 27082                           	opt stack 0
 27083  0014BE                     PL62:
 27084                           	opt stack 16
 27085  0014BE  4764               	rlncf	??_MTouchAcquisitionCVD& (0+255),f,b
 27086  0014C0  4764               	rlncf	??_MTouchAcquisitionCVD& (0+255),f,b
 27087  0014C2  50C2               	movf	4034,w,c	;volatile
 27088  0014C4  1964               	xorwf	??_MTouchAcquisitionCVD& (0+255),w,b
 27089  0014C6  0B83               	andlw	-125
 27090  0014C8  1964               	xorwf	??_MTouchAcquisitionCVD& (0+255),w,b
 27091  0014CA  6EC2               	movwf	4034,c	;volatile
 27092  0014CC  0012               	return	
 27093  0014CE                     __end_ofPL62:
 27094                           	opt stack 0
 27095  0014CE                     PL86:
 27096                           	opt stack 16
 27097  0014CE  50C3               	movf	4035,w,c	;volatile
 27098  0014D0  CFC4 F064          	movff	4036,??_MTouchAcquisitionCVD	;volatile
 27099  0014D4  6B65               	clrf	(??_MTouchAcquisitionCVD+1)& (0+255),b
 27100  0014D6  C064  F065         	movff	??_MTouchAcquisitionCVD,??_MTouchAcquisitionCVD+1
 27101  0014DA  6B64               	clrf	??_MTouchAcquisitionCVD& (0+255),b
 27102  0014DC  2764               	addwf	??_MTouchAcquisitionCVD& (0+255),f,b
 27103  0014DE  0E00               	movlw	0
 27104  0014E0  2365               	addwfc	(??_MTouchAcquisitionCVD+1)& (0+255),f,b
 27105  0014E2  5164               	movf	??_MTouchAcquisitionCVD& (0+255),w,b
 27106  0014E4  0012               	return	
 27107  0014E6                     __end_ofPL86:
 27108                           	opt stack 0
 27109  0014E6                     PL104:
 27110                           	opt stack 16
 27111  0014E6  1D70               	comf	MTouchAcquisitionCVD@prevIOMask& (0+255),w,b
 27112  0014E8  6F64               	movwf	??_MTouchAcquisitionCVD& (0+255),b
 27113  0014EA  C068  FFD9         	movff	MTouchAcquisitionCVD@prevTris,fsr2l
 27114  0014EE  C069  FFDA         	movff	MTouchAcquisitionCVD@prevTris+1,fsr2h
 27115  0014F2  5164               	movf	??_MTouchAcquisitionCVD& (0+255),w,b
 27116  0014F4  16DF               	andwf	indf2,f,c
 27117  0014F6  0012               	return	
 27118  0014F8                     __end_ofPL104:
 27119                           	opt stack 0
 27120  0014F8                     PL108:
 27121                           	opt stack 16
 27122  0014F8  1D70               	comf	MTouchAcquisitionCVD@prevIOMask& (0+255),w,b
 27123  0014FA  6F64               	movwf	??_MTouchAcquisitionCVD& (0+255),b
 27124  0014FC  C06C  FFD9         	movff	MTouchAcquisitionCVD@prevLat,fsr2l
 27125  001500  C06D  FFDA         	movff	MTouchAcquisitionCVD@prevLat+1,fsr2h
 27126  001504  5164               	movf	??_MTouchAcquisitionCVD& (0+255),w,b
 27127  001506  16DF               	andwf	indf2,f,c
 27128  001508  0012               	return	
 27129  00150A                     __end_ofPL108:
 27130                           	opt stack 0
 27131                           tblptru	equ	0xFF8
 27132                           tblptrh	equ	0xFF7
 27133                           tblptrl	equ	0xFF6
 27134                           tablat	equ	0xFF5
 27135                           prodh	equ	0xFF4
 27136                           prodl	equ	0xFF3
 27137                           intcon	equ	0xFF2
 27138                           postinc0	equ	0xFEE
 27139                           wreg	equ	0xFE8
 27140                           indf1	equ	0xFE7
 27141                           postinc1	equ	0xFE6
 27142                           postdec1	equ	0xFE5
 27143                           fsr1h	equ	0xFE2
 27144                           fsr1l	equ	0xFE1
 27145                           bsr	equ	0xFE0
 27146                           indf2	equ	0xFDF
 27147                           postinc2	equ	0xFDE
 27148                           postdec2	equ	0xFDD
 27149                           fsr2h	equ	0xFDA
 27150                           fsr2l	equ	0xFD9
 27151                           status	equ	0xFD8
 27152                           tblptru	equ	0xFF8
 27153                           tblptrh	equ	0xFF7
 27154                           tblptrl	equ	0xFF6
 27155                           tablat	equ	0xFF5
 27156                           prodh	equ	0xFF4
 27157                           prodl	equ	0xFF3
 27158                           intcon	equ	0xFF2
 27159                           postinc0	equ	0xFEE
 27160                           wreg	equ	0xFE8
 27161                           indf1	equ	0xFE7
 27162                           postinc1	equ	0xFE6
 27163                           postdec1	equ	0xFE5
 27164                           fsr1h	equ	0xFE2
 27165                           fsr1l	equ	0xFE1
 27166                           bsr	equ	0xFE0
 27167                           indf2	equ	0xFDF
 27168                           postinc2	equ	0xFDE
 27169                           postdec2	equ	0xFDD
 27170                           fsr2h	equ	0xFDA
 27171                           fsr2l	equ	0xFD9
 27172                           status	equ	0xFD8
 27173                           
 27174                           	psect	param0
 27175  0000                     tblptru	equ	0xFF8
 27176                           tblptrh	equ	0xFF7
 27177                           tblptrl	equ	0xFF6
 27178                           tablat	equ	0xFF5
 27179                           prodh	equ	0xFF4
 27180                           prodl	equ	0xFF3
 27181                           intcon	equ	0xFF2
 27182                           postinc0	equ	0xFEE
 27183                           wreg	equ	0xFE8
 27184                           indf1	equ	0xFE7
 27185                           postinc1	equ	0xFE6
 27186                           postdec1	equ	0xFE5
 27187                           fsr1h	equ	0xFE2
 27188                           fsr1l	equ	0xFE1
 27189                           bsr	equ	0xFE0
 27190                           indf2	equ	0xFDF
 27191                           postinc2	equ	0xFDE
 27192                           postdec2	equ	0xFDD
 27193                           fsr2h	equ	0xFDA
 27194                           fsr2l	equ	0xFD9
 27195                           status	equ	0xFD8
 27196                           tblptru	equ	0xFF8
 27197                           tblptrh	equ	0xFF7
 27198                           tblptrl	equ	0xFF6
 27199                           tablat	equ	0xFF5
 27200                           prodh	equ	0xFF4
 27201                           prodl	equ	0xFF3
 27202                           intcon	equ	0xFF2
 27203                           postinc0	equ	0xFEE
 27204                           wreg	equ	0xFE8
 27205                           indf1	equ	0xFE7
 27206                           postinc1	equ	0xFE6
 27207                           postdec1	equ	0xFE5
 27208                           fsr1h	equ	0xFE2
 27209                           fsr1l	equ	0xFE1
 27210                           bsr	equ	0xFE0
 27211                           indf2	equ	0xFDF
 27212                           postinc2	equ	0xFDE
 27213                           postdec2	equ	0xFDD
 27214                           fsr2h	equ	0xFDA
 27215                           fsr2l	equ	0xFD9
 27216                           status	equ	0xFD8


Data Sizes:
    Strings     56
    Constant    9503
    Data        8
    BSS         1042
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      73
    BANK0           160     78     121
    BANK1           256     66     251
    BANK2           256     40     216
    BANK3           256      0     256
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    sensors.latReg	PTR volatile unsigned char  size(2) Largest target is 0
		 -> LATA(ABS[1]), LATB(ABS[1]), 

    sensors.trisReg	PTR volatile unsigned char  size(2) Largest target is 0
		 -> TRISA(ABS[1]), TRISB(ABS[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_3(CODE[45]), STR_2(CODE[8]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 40
		 -> str(BANK1[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2415$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    LabelClrTxt@lb.p_font	PTR const unsigned char  size(2) Largest target is 2892
		 -> font13(CODE[2892]), 

    LabelSetTxt@str	PTR unsigned char  size(2) Largest target is 40
		 -> str(BANK1[40]), lb_paket(BANK2[36]), lb_temp(BANK2[36]), 

    LabelSetTxt@lb.p_font	PTR const unsigned char  size(2) Largest target is 2892
		 -> font13(CODE[2892]), 

    LabelSetTxt@lb	PTR struct . size(2) Largest target is 37
		 -> lb_paket(BANK2[36]), lb_temp(BANK2[36]), 

    LabelCreate@font	PTR const unsigned char  size(2) Largest target is 2892
		 -> font13(CODE[2892]), 

    LabelCreate@lb.p_font	PTR const unsigned char  size(2) Largest target is 2892
		 -> font13(CODE[2892]), 

    LabelCreate@lb	PTR struct . size(2) Largest target is 37
		 -> lb_paket(BANK2[36]), lb_temp(BANK2[36]), 

    ks0108PutChar@pChImage	PTR const unsigned char  size(2) Largest target is 5955
		 -> font23(CODE[5955]), font13(CODE[2892]), 

    ks0108PutChar@p_font	PTR const unsigned char  size(2) Largest target is 5955
		 -> font23(CODE[5955]), font13(CODE[2892]), 

    crc_mb_check@buffer	PTR unsigned char  size(2) Largest target is 128
		 -> RxTxBuff(BANK1[128]), 

    crc_mb@buffer	PTR unsigned char  size(2) Largest target is 128
		 -> RxTxBuff(BANK1[128]), 

    crc_mb_calc@code	PTR unsigned int  size(1) Largest target is 2
		 -> crc_mb_check@crc(COMRAM[2]), crc_mb@CRC(COMRAM[2]), 

    crc_mb_init@code	PTR unsigned int  size(1) Largest target is 2
		 -> crc_mb_check@crc(COMRAM[2]), crc_mb@CRC(COMRAM[2]), 

    buttons.pSensor	PTR struct tag_SENSOR size(2) Largest target is 374
		 -> sensors(BIGRAM[352]), 

    lb_paket.p_font	PTR const unsigned char  size(2) Largest target is 2892
		 -> font13(CODE[2892]), 

    S911$p_font	PTR const unsigned char  size(2) Largest target is 2892
		 -> font13(CODE[2892]), 

    lb_temp.p_font	PTR const unsigned char  size(2) Largest target is 2892
		 -> font13(CODE[2892]), 

    read___ee@var	PTR unsigned char  size(1) Largest target is 1
		 -> set_ee_default@c1(COMRAM[1]), 

    write___ee@var	PTR unsigned char  size(1) Largest target is 1
		 -> set_ee_default@c(COMRAM[1]), 

    MTouchAcquisition@pCurrentSensor.latReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(ABS[1]), LATB(ABS[1]), 

    MTouchAcquisition@pCurrentSensor.trisReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(ABS[1]), TRISB(ABS[1]), 

    MTouchAcquisition@pPreviousSensor.latReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(ABS[1]), LATB(ABS[1]), 

    MTouchAcquisition@pPreviousSensor.trisReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(ABS[1]), TRISB(ABS[1]), 

    MTouchAcquisition@pPreviousSensor	PTR struct tag_SENSOR size(2) Largest target is 374
		 -> sensors(BIGRAM[352]), 

    MTouchAcquisition@pLastSensor	PTR struct tag_SENSOR size(2) Largest target is 374
		 -> sensors(BIGRAM[352]), 

    MTouchAcquisition@pCurrentSensor	PTR struct tag_SENSOR size(2) Largest target is 374
		 -> sensors(BIGRAM[352]), 

    MTouchUpdateSensorAverage@pSensor.latReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(ABS[1]), LATB(ABS[1]), 

    MTouchUpdateSensorAverage@pSensor.trisReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(ABS[1]), TRISB(ABS[1]), 

    MTouchUpdateSensorAverage@pSensor	PTR struct tag_SENSOR size(2) Largest target is 374
		 -> sensors(BIGRAM[352]), 

    MTouchSensorDecode@pSensor.latReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(ABS[1]), LATB(ABS[1]), 

    MTouchSensorDecode@pSensor.trisReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(ABS[1]), TRISB(ABS[1]), 

    MTouchSensorDecode@pSensor	PTR struct tag_SENSOR size(2) Largest target is 374
		 -> sensors(BIGRAM[352]), 

    MTouchSetSensor@lat	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(ABS[1]), LATB(ABS[1]), 

    MTouchSetSensor@tris	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(ABS[1]), TRISB(ABS[1]), 

    MTouchSetSensor@pSensor.latReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(ABS[1]), LATB(ABS[1]), 

    MTouchSetSensor@pSensor.trisReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(ABS[1]), TRISB(ABS[1]), 

    MTouchSetSensor@pSensor	PTR struct tag_SENSOR size(2) Largest target is 374
		 -> sensors(BIGRAM[352]), 

    MTouchDecodeButtons@pMostPressedButton.pSensor.latReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(ABS[1]), LATB(ABS[1]), 

    MTouchDecodeButtons@pMostPressedButton.pSensor.trisReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(ABS[1]), TRISB(ABS[1]), 

    MTouchDecodeButtons@pMostPressedButton.pSensor	PTR struct tag_SENSOR size(2) Largest target is 374
		 -> sensors(BIGRAM[352]), 

    MTouchDecodeButtons@pSensor.latReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(ABS[1]), LATB(ABS[1]), 

    MTouchDecodeButtons@pSensor.trisReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(ABS[1]), TRISB(ABS[1]), 

    MTouchDecodeButtons@pButton.pSensor	PTR struct tag_SENSOR size(2) Largest target is 374
		 -> sensors(BIGRAM[352]), 

    MTouchDecodeButtons@pSensor	PTR struct tag_SENSOR size(2) Largest target is 374
		 -> sensors(BIGRAM[352]), 

    MTouchDecodeButtons@pMostPressedButton	PTR struct tag_MTOUCHBUTTON size(2) Largest target is 117
		 -> NULL(NULL[0]), buttons(BANK2[104]), 

    MTouchDecodeButtons@pButton	PTR struct tag_MTOUCHBUTTON size(2) Largest target is 117
		 -> buttons(BANK2[104]), 

    S180tag_MTOUCHBUTTON$pSensor	PTR struct tag_SENSOR size(2) Largest target is 374
		 -> sensors(BIGRAM[352]), 

    MTouchSetButton@pButton.pSensor	PTR struct tag_SENSOR size(2) Largest target is 374
		 -> sensors(BIGRAM[352]), 

    MTouchSetButton@pButton	PTR struct tag_MTOUCHBUTTON size(2) Largest target is 117
		 -> buttons(BANK2[104]), 

    MTouchAcquisitionCVD@curLat	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(ABS[1]), LATB(ABS[1]), 

    MTouchAcquisitionCVD@pCurrentSensor.latReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(ABS[1]), LATB(ABS[1]), 

    MTouchAcquisitionCVD@pCurrentSensor.trisReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(ABS[1]), TRISB(ABS[1]), 

    MTouchAcquisitionCVD@pCurrentSensor	PTR struct tag_SENSOR size(2) Largest target is 374
		 -> sensors(BIGRAM[352]), 

    MTouchAcquisitionCVD@curTris	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(ABS[1]), TRISB(ABS[1]), 

    MTouchAcquisitionCVD@prevLat	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(ABS[1]), LATB(ABS[1]), 

    S21tag_SENSOR$latReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(ABS[1]), LATB(ABS[1]), 

    MTouchAcquisitionCVD@pPreviousSensor.latReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATA(ABS[1]), LATB(ABS[1]), 

    S21tag_SENSOR$trisReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(ABS[1]), TRISB(ABS[1]), 

    MTouchAcquisitionCVD@pPreviousSensor.trisReg	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(ABS[1]), TRISB(ABS[1]), 

    MTouchAcquisitionCVD@pPreviousSensor	PTR struct tag_SENSOR size(2) Largest target is 374
		 -> sensors(BIGRAM[352]), 

    MTouchAcquisitionCVD@prevTris	PTR volatile unsigned char  size(2) Largest target is 1
		 -> TRISA(ABS[1]), TRISB(ABS[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _HI_ISR in COMRAM

    None.

Critical Paths under _LO_ISR in COMRAM

    _LO_ISR->_crc_mb_check
    _set_ee_default->_write___ee
    _write___ee->_Write_b_eep
    _read___ee->_Read_b_eep
    _crc_mb_check->_crc_mb_calc
    _crc_mb->_crc_mb_calc

Critical Paths under _main in BANK0

    _main->_LabelSetTxt
    _MTouchDecode->_MTouchDecodeButtons
    _ds18b20_start->_write_1wire
    _write_1wire->_ow_delay
    _read_1wire->_ow_delay
    _init_1wire->_ow_delay
    ___awtofl->___flpack
    _tsk_display->_LabelSetTxt
    _sprintf->_fround
    _sprintf->_scale
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lbdiv->___lbmod
    ___flmul->___awtofl
    ___lltofl->___flpack
    ___llmod->___lldiv
    ___fltol->_scale
    ___fladd->_fround
    _ks0108Rect->_ks0108SetDot
    _ks0108Line->_ks0108SetDot
    _ks0108Init->_ks0108Fill
    _ks0108Fill->_ks0108GotoXY
    _LabelCreate->_LabelSetTxt
    _LabelSetTxt->_ks0108PutChar
    _ks0108PutChar->_ks0108ClearDot
    _ks0108PutChar->_ks0108SetDot
    _ks0108SetDot->_ks0108ReadData
    _ks0108ClearDot->_ks0108ReadData
    _ks0108WriteData->_ks0108WriteCommand
    _ks0108ReadData->_ks0108GotoXY
    _ks0108GotoXY->_ks0108WriteCommand
    _InitializeSystem->_MTouchSetSensor

Critical Paths under _HI_ISR in BANK0

    _HI_ISR->_MTouchAcquisition
    _MTouchAcquisition->_MTouchAcquisitionCVD
    _MTouchSensorDecode->_MTouchUpdateSensorAverage

Critical Paths under _LO_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_tsk_display
    _tsk_ds18b20->_ds18b20_read
    _ds18b20_read->___fladd
    _tsk_display->_sprintf
    _sprintf->___flsub
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _LabelCreate->_LabelSetTxt

Critical Paths under _HI_ISR in BANK1

    None.

Critical Paths under _LO_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_sprintf
    _tsk_display->_sprintf

Critical Paths under _HI_ISR in BANK2

    None.

Critical Paths under _LO_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HI_ISR in BANK3

    None.

Critical Paths under _LO_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HI_ISR in BANK4

    None.

Critical Paths under _LO_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HI_ISR in BANK5

    None.

Critical Paths under _LO_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HI_ISR in BANK6

    None.

Critical Paths under _LO_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HI_ISR in BANK7

    None.

Critical Paths under _LO_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HI_ISR in BANK8

    None.

Critical Paths under _LO_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HI_ISR in BANK9

    None.

Critical Paths under _LO_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HI_ISR in BANK10

    None.

Critical Paths under _LO_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HI_ISR in BANK11

    None.

Critical Paths under _LO_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HI_ISR in BANK12

    None.

Critical Paths under _LO_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HI_ISR in BANK13

    None.

Critical Paths under _LO_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HI_ISR in BANK14

    None.

Critical Paths under _LO_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HI_ISR in BANK15

    None.

Critical Paths under _LO_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  204957
                               _Beep
                       _InitMessages
                   _InitializeSystem
                        _LabelCreate
                        _LabelSetTxt
                    _ProcessMessages
                       _ks0108GotoXY
                         _ks0108Init
                         _ks0108Line
                      _ks0108PutChar
                         _ks0108Rect
                            _sprintf
                        _tsk_display
                        _tsk_ds18b20
                    _tsk_process_btn
 ---------------------------------------------------------------------------------
 (1) _tsk_process_btn                                      2     2      0     962
                                             53 BANK0      2     2      0
                               _Beep
                       _MTouchDecode
 ---------------------------------------------------------------------------------
 (2) _MTouchDecode                                         0     0      0     916
                _MTouchDecodeButtons
 ---------------------------------------------------------------------------------
 (3) _MTouchDecodeButtons                                 14    14      0     916
                                             39 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (2) _Beep                                                 1     1      0      22
                                             39 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _tsk_ds18b20                                          2     2      0   21985
                                             42 BANK1      2     2      0
                       _ds18b20_read
                      _ds18b20_start
 ---------------------------------------------------------------------------------
 (2) _ds18b20_start                                        2     2      0    4166
                                             45 BANK0      2     2      0
                         _init_1wire
                           _ow_delay
                        _write_1wire
 ---------------------------------------------------------------------------------
 (2) _ds18b20_read                                        14    10      4   17819
                                             28 BANK1     14    10      4
                           ___awtofl
                            ___fladd
                            ___flmul
                         _init_1wire
                         _read_1wire
                        _write_1wire
 ---------------------------------------------------------------------------------
 (3) _write_1wire                                          4     4      0    1464
                                             41 BANK0      4     4      0
                           _ow_delay
 ---------------------------------------------------------------------------------
 (3) _read_1wire                                           4     4      0    1445
                                             41 BANK0      4     4      0
                           _ow_delay
 ---------------------------------------------------------------------------------
 (3) _init_1wire                                           3     3      0    1368
                                             41 BANK0      3     3      0
                           _ow_delay
 ---------------------------------------------------------------------------------
 (4) _ow_delay                                             2     0      2    1334
                                             39 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) ___awtofl                                             9     5      4    2720
                                             49 BANK0      5     1      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (1) _tsk_display                                          2     2      0   62623
                                             64 BANK1      2     2      0
                        _LabelSetTxt
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             73    51     22   46053
                                             36 BANK1     28     6     22
                                              0 BANK2     40    40      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                           ___lltofl
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               13     9      4    9378
                                             73 BANK0      4     0      4
                                              0 BANK1      5     5      0
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1357
                                             39 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1523
                                             45 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             39 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              21    17      4    7154
                                             73 BANK0      4     0      4
                                              0 BANK1     13    13      0
                            ___flmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     463
                                             39 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     472
                                             43 BANK0      4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             19    11      8    5801
                                             54 BANK0     19    11      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtofl (ARG)
                           ___flpack
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     608
                                             39 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          18    10      8     608
                                             39 BANK0     18    10      8
 ---------------------------------------------------------------------------------
 (3) ___lltofl                                             4     0      4    2541
                                             49 BANK0      4     0      4
                           ___flpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     848
                                             52 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     703
                                             39 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     625
                                              5 BANK1     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    5023
                                             28 BANK1      8     0      8
                            ___fladd
                           ___lltofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             15     7      8    4690
                                             13 BANK1     15     7      8
                           ___awtofl (ARG)
                           ___flpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flpack                                            10     4      6    2433
                                             39 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     142
                                             39 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                               8     0      8     888
                                             39 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _ks0108Rect                                          11     8      3    5821
                                             53 BANK0     11     8      3
                       _ks0108SetDot
 ---------------------------------------------------------------------------------
 (1) _ks0108Line                                           7     4      3    6607
                                             53 BANK0      7     4      3
                       _ks0108SetDot
 ---------------------------------------------------------------------------------
 (1) _ks0108Init                                           0     0      0    3570
                            _DelayMs
                         _ks0108Fill
                 _ks0108WriteCommand
 ---------------------------------------------------------------------------------
 (2) _ks0108Fill                                           3     3      0    2816
                                             45 BANK0      3     3      0
                       _ks0108GotoXY
                    _ks0108WriteData
 ---------------------------------------------------------------------------------
 (2) _DelayMs                                              2     2      0      45
                                             39 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ProcessMessages                                      1     1      0     268
                                             39 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LabelCreate                                          8     1      7   17601
                                              6 BANK1      7     0      7
                        _LabelSetTxt
 ---------------------------------------------------------------------------------
 (2) _LabelSetTxt                                         10     6      4   16570
                                             74 BANK0      4     0      4
                                              0 BANK1      6     6      0
                       _ks0108GotoXY
                      _ks0108PutChar
 ---------------------------------------------------------------------------------
 (3) _ks0108PutChar                                       21    18      3   13384
                                             53 BANK0     21    18      3
                             ___wmul
                     _ks0108ClearDot
                       _ks0108SetDot
 ---------------------------------------------------------------------------------
 (4) _ks0108SetDot                                         5     4      1    5268
                                             48 BANK0      5     4      1
                       _ks0108GotoXY
                     _ks0108ReadData
                    _ks0108WriteData
 ---------------------------------------------------------------------------------
 (4) _ks0108ClearDot                                       5     4      1    5037
                                             48 BANK0      5     4      1
                       _ks0108GotoXY
                     _ks0108ReadData
                    _ks0108WriteData
 ---------------------------------------------------------------------------------
 (5) _ks0108WriteData                                      1     1      0     740
                                             41 BANK0      1     1      0
                       _ks0108Enable
                 _ks0108WriteCommand
 ---------------------------------------------------------------------------------
 (5) _ks0108ReadData                                       3     3      0    2147
                                             45 BANK0      3     3      0
                       _ks0108GotoXY
 ---------------------------------------------------------------------------------
 (6) _ks0108GotoXY                                         4     3      1    1878
                                             41 BANK0      4     3      1
                 _ks0108WriteCommand
 ---------------------------------------------------------------------------------
 (6) _ks0108WriteCommand                                   2     1      1     709
                                             39 BANK0      2     1      1
                       _ks0108Enable
 ---------------------------------------------------------------------------------
 (7) _ks0108Enable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     802
                                             39 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _InitializeSystem                                     2     2      0    7409
                                             55 BANK0      2     2      0
                         _MTouchInit
                    _MTouchSetButton
                    _MTouchSetSensor
                        _uart16_init
 ---------------------------------------------------------------------------------
 (2) _uart16_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTouchSetSensor                                     16     5     11    5523
                                             39 BANK0     16     5     11
 ---------------------------------------------------------------------------------
 (2) _MTouchSetButton                                      7     5      2    1863
                                             39 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _MTouchInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitMessages                                         1     1      0     204
                                             39 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LO_ISR                                              17    17      0    5024
                                             18 COMRAM    17    17      0
                             _BSemOn
                           _Busy_eep
                         _Read_b_eep
                        _SendMessage
                        _Write_b_eep
                             _crc_mb
                       _crc_mb_check
                            _putbyte
                     _set_ee_default
                         _timed_getc
 ---------------------------------------------------------------------------------
 (10) _timed_getc                                          2     2      0      23
                                              0 COMRAM     2     2      0
                            _getbyte
 ---------------------------------------------------------------------------------
 (11) _getbyte                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _set_ee_default                                      4     4      0    1377
                                             11 COMRAM     4     4      0
                          _read___ee
                         _write___ee
 ---------------------------------------------------------------------------------
 (11) _write___ee                                          4     0      4     648
                                              7 COMRAM     4     0      4
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (12) _Write_b_eep                                         7     4      3     346
                                              0 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (12) _Busy_eep                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _read___ee                                           4     0      4     525
                                              5 COMRAM     4     0      4
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (12) _Read_b_eep                                          5     3      2     223
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (10) _putbyte                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _crc_mb_check                                       10     7      3    1163
                                              8 COMRAM    10     7      3
                        _crc_mb_calc
                        _crc_mb_init
 ---------------------------------------------------------------------------------
 (10) _crc_mb                                              9     6      3    1075
                                              8 COMRAM     9     6      3
                        _crc_mb_calc
                        _crc_mb_init
 ---------------------------------------------------------------------------------
 (11) _crc_mb_init                                         1     1      0      82
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _crc_mb_calc                                         8     7      1     395
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (10) _SendMessage                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _BSemOn                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _HI_ISR                                              7     7      0    3331
                                             32 BANK0      7     7      0
                  _MTouchAcquisition
 ---------------------------------------------------------------------------------
 (14) _MTouchAcquisition                                  12    12      0    3331
                                             20 BANK0     12    12      0
               _MTouchAcquisitionCVD
                 _MTouchSensorDecode
 ---------------------------------------------------------------------------------
 (15) _MTouchSensorDecode                                  8     6      2    1294
                                              9 BANK0      8     6      2
          _MTouchUpdateSensorAverage
 ---------------------------------------------------------------------------------
 (16) _MTouchUpdateSensorAverage                           9     5      4     445
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (15) _MTouchAcquisitionCVD                               20    16      4    1418
                                              0 BANK0     20    16      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Beep
   _InitMessages
   _InitializeSystem
     _MTouchInit
     _MTouchSetButton
     _MTouchSetSensor
     _uart16_init
   _LabelCreate
     _LabelSetTxt
       _ks0108GotoXY
         _ks0108WriteCommand
           _ks0108Enable
       _ks0108PutChar
         ___wmul
         _ks0108ClearDot
           _ks0108GotoXY
             _ks0108WriteCommand
               _ks0108Enable
           _ks0108ReadData
             _ks0108GotoXY
               _ks0108WriteCommand
                 _ks0108Enable
           _ks0108WriteData
             _ks0108Enable
             _ks0108WriteCommand
               _ks0108Enable
         _ks0108SetDot
           _ks0108GotoXY
             _ks0108WriteCommand
               _ks0108Enable
           _ks0108ReadData
             _ks0108GotoXY
               _ks0108WriteCommand
                 _ks0108Enable
           _ks0108WriteData
             _ks0108Enable
             _ks0108WriteCommand
               _ks0108Enable
   _LabelSetTxt
     _ks0108GotoXY
       _ks0108WriteCommand
         _ks0108Enable
     _ks0108PutChar
       ___wmul
       _ks0108ClearDot
         _ks0108GotoXY
           _ks0108WriteCommand
             _ks0108Enable
         _ks0108ReadData
           _ks0108GotoXY
             _ks0108WriteCommand
               _ks0108Enable
         _ks0108WriteData
           _ks0108Enable
           _ks0108WriteCommand
             _ks0108Enable
       _ks0108SetDot
         _ks0108GotoXY
           _ks0108WriteCommand
             _ks0108Enable
         _ks0108ReadData
           _ks0108GotoXY
             _ks0108WriteCommand
               _ks0108Enable
         _ks0108WriteData
           _ks0108Enable
           _ks0108WriteCommand
             _ks0108Enable
   _ProcessMessages
   _ks0108GotoXY
     _ks0108WriteCommand
       _ks0108Enable
   _ks0108Init
     _DelayMs
     _ks0108Fill
       _ks0108GotoXY
         _ks0108WriteCommand
           _ks0108Enable
       _ks0108WriteData
         _ks0108Enable
         _ks0108WriteCommand
           _ks0108Enable
     _ks0108WriteCommand
       _ks0108Enable
   _ks0108Line
     _ks0108SetDot
       _ks0108GotoXY
         _ks0108WriteCommand
           _ks0108Enable
       _ks0108ReadData
         _ks0108GotoXY
           _ks0108WriteCommand
             _ks0108Enable
       _ks0108WriteData
         _ks0108Enable
         _ks0108WriteCommand
           _ks0108Enable
   _ks0108PutChar
     ___wmul
     _ks0108ClearDot
       _ks0108GotoXY
         _ks0108WriteCommand
           _ks0108Enable
       _ks0108ReadData
         _ks0108GotoXY
           _ks0108WriteCommand
             _ks0108Enable
       _ks0108WriteData
         _ks0108Enable
         _ks0108WriteCommand
           _ks0108Enable
     _ks0108SetDot
       _ks0108GotoXY
         _ks0108WriteCommand
           _ks0108Enable
       _ks0108ReadData
         _ks0108GotoXY
           _ks0108WriteCommand
             _ks0108Enable
       _ks0108WriteData
         _ks0108Enable
         _ks0108WriteCommand
           _ks0108Enable
   _ks0108Rect
     _ks0108SetDot
       _ks0108GotoXY
         _ks0108WriteCommand
           _ks0108Enable
       _ks0108ReadData
         _ks0108GotoXY
           _ks0108WriteCommand
             _ks0108Enable
       _ks0108WriteData
         _ks0108Enable
         _ks0108WriteCommand
           _ks0108Enable
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtofl (ARG)
         ___flpack
       ___flpack (ARG)
       ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___lltofl (ARG)
         ___flpack
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltofl
       ___flpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
       ___lbdiv
         ___lbmod (ARG)
       ___lbmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
   _tsk_display
     _LabelSetTxt
       _ks0108GotoXY
         _ks0108WriteCommand
           _ks0108Enable
       _ks0108PutChar
         ___wmul
         _ks0108ClearDot
           _ks0108GotoXY
             _ks0108WriteCommand
               _ks0108Enable
           _ks0108ReadData
             _ks0108GotoXY
               _ks0108WriteCommand
                 _ks0108Enable
           _ks0108WriteData
             _ks0108Enable
             _ks0108WriteCommand
               _ks0108Enable
         _ks0108SetDot
           _ks0108GotoXY
             _ks0108WriteCommand
               _ks0108Enable
           _ks0108ReadData
             _ks0108GotoXY
               _ks0108WriteCommand
                 _ks0108Enable
           _ks0108WriteData
             _ks0108Enable
             _ks0108WriteCommand
               _ks0108Enable
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtofl (ARG)
                 ___flpack
               ___flpack (ARG)
               ___lbdiv (ARG)
                 ___lbmod (ARG)
               ___lbmod (ARG)
             ___lbdiv
               ___lbmod (ARG)
             ___lbmod
         ___lltofl (ARG)
           ___flpack
       ___fltol
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltofl
         ___flpack
       ___wmul
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtofl (ARG)
             ___flpack
           ___flpack (ARG)
           ___lbdiv (ARG)
             ___lbmod (ARG)
           ___lbmod (ARG)
   _tsk_ds18b20
     _ds18b20_read
       ___awtofl
         ___flpack
       ___fladd
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtofl (ARG)
               ___flpack
             ___flpack (ARG)
             ___lbdiv (ARG)
               ___lbmod (ARG)
             ___lbmod (ARG)
           ___lbdiv
             ___lbmod (ARG)
           ___lbmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtofl (ARG)
           ___flpack
         ___flpack (ARG)
         ___lbdiv (ARG)
           ___lbmod (ARG)
         ___lbmod (ARG)
       _init_1wire
         _ow_delay
       _read_1wire
         _ow_delay
       _write_1wire
         _ow_delay
     _ds18b20_start
       _init_1wire
         _ow_delay
       _ow_delay
       _write_1wire
         _ow_delay
   _tsk_process_btn
     _Beep
     _MTouchDecode
       _MTouchDecodeButtons

 _LO_ISR (ROOT)
   _BSemOn
   _Busy_eep
   _Read_b_eep
   _SendMessage
   _Write_b_eep
   _crc_mb
     _crc_mb_calc
     _crc_mb_init
   _crc_mb_check
     _crc_mb_calc
     _crc_mb_init
   _putbyte
   _set_ee_default
     _read___ee
       _Read_b_eep
     _write___ee
       _Busy_eep
       _Write_b_eep
   _timed_getc
     _getbyte

 _HI_ISR (ROOT)
   _MTouchAcquisition
     _MTouchAcquisitionCVD
     _MTouchSensorDecode
       _MTouchUpdateSensorAverage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     160      37        9.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0     100      11      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     28      D8       9       84.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     42      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4E      79       5       75.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      49       1       76.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     395      12        0.0%
DATA                 0      0     4F5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Jul 29 17:50:53 2016

                          _tsk_ds18b20 1D76                                      _a 0021  
                                    _b 0022                                      _c 001B  
                                    _d 001D                                      _e 000F  
                                    _f 0013                                      _k 0017  
                                    _l 0109                                     PL2 0FA4  
                                   PL4 0FBC                                     PL6 0FD4  
                                   PL8 0FDC                                     l35 15C4  
                                   l38 163E                                     l39 162C  
                                   l78 1C68                           ___awdiv@sign 0092  
                        write___ee@adr 002E                                     bsr 000FE0  
                        write___ee@var 0030                    ___wmul@multiplicand 0089  
                         __CFG_CP0$OFF 000000                           __CFG_CP1$OFF 000000  
                         __CFG_CP2$OFF 000000                           __CFG_CP3$OFF 000000  
                      ks0108ReadData@i 008F                           ___flpack@arg 0087  
                                  PL10 1878                                    PL20 188A  
                                  PL12 12B2                                    PL30 2D52  
                                  PL22 0D26                                    PL14 0CD6  
                                  PL40 251E                                    PL32 103A  
                                  PL24 0FE4                                    PL16 0D12  
                                  PL50 2546                                    PL42 12C0  
                                  PL34 104E                                    PL26 0FFA  
                                  PL18 2B40                                    PL60 14AC  
                                  PL52 2E10                                    PL44 0D3C  
                                  PL36 1892                                    PL28 102C  
                                  PL70 1082                                    PL62 14BE  
                                  PL54 149A                                    PL46 1056  
                                  PL38 1BBC                                    PL80 2F4A  
                                  PL72 0D4A                                    PL64 18A4  
                                  PL56 1BD4                                    PL48 252E  
                                  PL90 0D88                                    PL82 0D58  
                                  PL74 2F30                                    PL66 1064  
                                  PL58 12CE                                    PL92 34DE  
                                  PL84 0D70                                    PL76 16EC  
                                  PL68 1EB8                                    PL94 0D9E  
                                  PL86 14CE                                    PL78 36E2  
                                  PL96 18B8                                    PL88 2176  
                                  PL98 2778                           ___flpack@exp 008B  
                                  l262 3BBE                                    l287 21D2  
                                  l640 1F76                                    l296 370E  
                                  l641 1F7A                                    l643 1FBE  
                                  l581 2660                                    l638 1F68  
                                  l672 1D78                                    l690 1E42  
                                  l674 1D8E                                    l675 1D90  
                                  l579 2666                                    l692 1E52  
                                  l684 1E0E                                    l693 1E5C  
                                  l685 1E10                                    l677 1DBA  
                                  l597 2368                                    l694 1E5E  
                                  l696 1E88                                    l689 1E40  
                                  l974 31B8                                    l978 31EE  
                                  _GIE 007F97                           __CFG_CPB$OFF 000000  
                                  _PR2 000FBB                                    _PR4 000F52  
                         __CFG_CPD$OFF 000000                        ks0108GotoXY@cmd 008B  
                       write___ee@byte 0031                                    _pos 00D2  
                                  fsr2 000FD9                                    _str 018D  
                          _tsk_display 1EF0                   __size_of_Write_b_eep 0044  
                         ___awmod@sign 008C                                    prod 000FF3  
                                  wreg 000FE8             __end_of_ks0108WriteCommand 3AB8  
                         ___flmul@cntr 00A7                           ___flmul@sign 00A8  
                  _MTouchDecodeButtons 150A                                   PL100 1090  
                                 PL110 1BE4                                   PL102 1A4A  
                                 PL120 22C8                                   PL112 0DAA  
                                 PL104 14E6                                   PL130 22D6  
                                 PL122 218C                                   PL114 266E  
                                 PL106 278C                                   PL140 1EE6  
                                 PL132 0DB4                                   PL124 16FA  
                                 PL116 267E                                   PL108 14F8  
                                 PL150 2CCC                                   PL142 289A  
                                 PL134 0DC2                                   PL126 1ED8  
                                 PL118 287C                                   PL152 35A0  
                                 PL144 1A5C                                   PL136 288C  
                                 PL128 1D68                                   PL154 320C  
                                 PL146 2C0E                                   PL138 373A  
                                 PL148 29A0                           __CFG_LVP$OFF 000000  
                      _ks0108WriteData 3826                          ___flpack@sign 008C  
                  __end_of_LabelCreate 336C                           ___fltol@exp1 01C3  
                                 l1104 270A                                   l1105 275A  
                                 l1106 2714                                   l1109 2744  
                                 l1128 2FCE                                   l1090 3AA6  
                                 l1330 0BB4                                   l1059 3508  
                                 l1155 246C                                   l1076 338A  
                                 l1309 0984                                   l1327 0B88  
                                 l1247 041E                                   l1329 0BAE  
                                 l1257 0504                                   l1178 3A1C  
                                 l1610 2C2A                                   l1179 3A20  
                                 l1621 2C8C                                   l1615 2C5E  
                                 l1633 1948                                   l1644 19E0  
                                 l1629 1920                                   l1686 3772  
                                 l1678 298E                                   l1790 2A32  
                                 l6031 1D10                                   l6023 1C4A  
                                 l1875 327A                  __end_of_ds18b20_start 373A  
                                 l5235 151A                                   l1796 2A78  
                                 l6029 1D08                                   l1885 3424  
                                 l5263 15EA                                   l5247 1576  
                                 l7031 2350                                   l7023 2336  
                                 l7015 231C                                   l7007 2302  
                                 l5257 15D6                                   l7211 31D6  
                                 l7203 31CC                                   l8003 3A64  
                                 l5283 165E                                   l5275 1628  
                                 l7107 241C                                   l5293 16B2  
                                 l5285 1668                                   l7109 2424  
                                 l5295 16C2                                   l7071 23B4  
                                 l7039 236C                                   l7217 3202  
                                 l9001 0B04                                   l8105 2AF6  
                                 l5289 16A8                                   l7049 2382  
                                 l8203 0E58                                   l8043 2F2E  
                                 l8107 2B0E                                   l7067 23AE  
                                 l7059 2398                                   l9101 3996  
                                 l8221 0F3C                                   l8213 0EBE  
                                 l9021 0B8E                                   l9005 0B1A  
                                 l8061 2D96                                   l7093 23EE  
                                 l7085 23D8                                   l7077 23C4  
                                 l9031 0BD4                                   l9015 0B5E  
                                 l6721 38B4                                   l8153 2752  
                                 l8145 272E                                   l8161 2764  
                                 l9201 2F76                                   l8401 2BD8  
                                 l8209 0EB0                                   l9041 0BEC  
                                 l9009 0B42                                   l8073 2DEC  
                                 l6731 38C8                                   l8403 2BE4  
                                 l8251 29EE                                   l8227 0F94  
                                 l9051 0C1A                                   l8075 2DEE  
                                 l7099 2404                                   l6741 38DA  
                                 l7197 31A0                                   l9109 39A8  
                                 l9213 2F9E                                   l9205 2F88  
                                 l8405 2BE8                                   l8421 323A  
                                 l8333 297E                                   l8325 2966  
                                 l8317 2946                                   l8309 2918  
                                 l8245 29C8                                   l8181 17CE  
                                 l9053 0C22                                   l9061 0CC0  
                                 l6751 10AA                                   l7623 3500  
                                 l7711 33C4                                   l9231 2FD2  
                                 l8431 326C                                   l8423 323E  
                                 l8335 298A                                   l8247 29D2  
                                 l8239 3B62                                   l9047 0C02  
                                 l9039 0BE6                                   l9063 0CC8  
                                 l7609 3A9E                                   l7713 33CE  
                                 l7705 33B2                                   l9073 2454  
                                 l9217 2FA8                                   l7721 2C34  
                                 l8409 2BFC                                   l8441 33F0  
                                 l8329 2976                                   l8265 2A0C  
                                 l8097 2A9C                                   l7635 3526  
                                 l9091 2500                                   l9243 2FEE  
                                 l8363 378E                                   l8371 3A80  
                                 l7731 2C74                                   l7723 2C38  
                                 l7811 19AE                                   l8419 322E  
                                 l8443 33F4                                   l8283 2A60  
                                 l9059 0CB0                                   l7661 3856  
                                 l7653 383C                                   l9077 2460  
                                 l9093 2504                                   l9229 2FC4  
                                 l9253 34B0                                   l8357 375C  
                                 l7733 2C80                                   l7725 2C50  
                                 l7805 1994                                   l8293 28CA  
                                 l8189 1844                                   l8349 37B2  
                                 l9309 1DA2                                   l9247 349E  
                                 l7823 19F6                                   l7807 19A0  
                                 l8447 3416                                   l8439 33E4  
                                 l8295 28D4                                   l8287 2A68  
                                 l8279 2A50                                   l7681 3380  
                                 l7657 3846                                   l7649 3830  
                                 l9089 24F0                                   l9249 34A4  
                                 l9257 34C6                                   l7817 19CE  
                                 l7809 19A8                                   l8393 2BC0  
                                 l8377 2B7E                                   l8289 2A74  
                                 l7905 3046                                   l7921 3076  
                                 l8801 053E                                   l9273 1F8A  
                                 l9441 2648                                   l7835 1A1C  
                                 l7827 19FE                                   l7819 19DA  
                                 l8379 2B88                                   l8299 28FA  
                                 l7843 27CC                                   l7907 304E  
                                 l8811 058C                                   l7747 3BC0  
                                 l8715 21D8                                   l8707 21CC  
                                 l9355 1E70                                   l9339 1E2C  
                                 l8397 2BD0                                   l7925 3082  
                                 l7917 306C                                   l7909 3052  
                                 l7941 3152                                   l8901 08B8  
                                 l8725 220E                                   l7871 2838  
                                 l7863 2826                                   l7847 27FA  
                                 l9527 1EA6                                   l9367 1E92  
                                 l7697 33A0                                   l7689 3392  
                                 l7785 195A                                   l7961 3192  
                                 l7953 317C                                   l7945 315E  
                                 l7937 3138                                   l9289 2034  
                                 l8729 2212                                   l9529 1EAA  
                                 l7779 1932                                   l7875 2840  
                                 l7859 281E                                   l7971 393A  
                                 l7947 3166                                   l8923 0908  
                                 l8931 0954                                   l8907 08C0  
                                 l8915 08DE                                   l8851 0718  
                                 l8843 06C2                                   l8835 065E  
                                 l8827 05F8                                   l8755 0428  
                                 l7893 3018                                   l7949 316A  
                                 l7957 3186                                   l8933 095E  
                                 l8909 08CE                                   l8765 044C  
                                 l8773 04A6                                   l8749 0402  
                                 l7799 1974                                   l7983 3954  
                                 l7975 3940                                   l8871 0828  
                                 l8855 0746                                   l8839 0674  
                                 l8783 04F6                                   l8759 0432  
                                 l7977 3944                                   l8953 09AA  
                                 l8945 0988                                   l8793 0518  
                                 l7987 395C                                   l7995 3A4E  
                                 l7899 3036                                   l8939 0966  
                                 l8867 07B6                                   l8795 052C  
                                 l8787 050E                                   l8779 04C0  
                                 l8957 0A0C                                   l8893 0894  
                                 l8885 083A                                   l8877 082C  
                                 l8789 0512                                   l8975 0AB0  
                                 l8967 0A9E                                   STR_1 FFFB  
                                 STR_2 FFF3                                   l8993 0AF6  
                                 l8969 0AA8                                   l8889 0880  
                                 l8977 0ABA                                   STR_3 FFC6  
                                 l8987 0AF2                                   _LATA 000F89  
                                 _LATB 000F8A                                   _LATC 000F8B  
                                 _LATD 000F8C                                   u7025 2300  
                                 u7026 2302                                   i2l11 13EA  
                                 _RCIE 007CED                                   _RCIF 007CF5  
                                 u7045 231A                                   i2l14 147E  
                                 u7046 231C                                   u7065 2334  
                                 u7066 2336                                   u9004 2AC4  
                                 u9005 2AC0                                   u7085 234E  
                                 u9014 2AE6                                   u7086 2350  
                                 _RCIP 007CFD                                   u9015 2AE2  
                                 u5834 1CAC                                   u8314 36F2  
                                 u5835 1CA8                                   u8315 36EE  
                                 u9044 2B06                                   u9045 2B02  
                                 u8344 357A                                   u8600 27E2  
                                 u8345 3576                                   u9241 29BE  
                                 u8370 18E4                                   u9330 28BC  
                                 u9075 2B34                                   u8364 3592  
                                 u8380 1902                                   u9076 2B3A  
                                 u8365 358E                                   u9261 29E2  
                                 u8605 27E0                                   u9350 28EA  
                                 u8375 18E2                                   u9335 28BA  
                                 u8385 1900                                   u9355 28E8  
                                 _RX91 007D5E                                   _BSem 000B  
                                 u8580 27B4                                   u9470 2B70  
                                 u8904 2E20                                   u8585 27B2  
                                 u8905 2E1C                                   u9490 2B9E  
                                 u8834 2F42                                   u8914 2DA6  
                                 u9475 2B6E                                   u8835 2F3E  
                                 u8915 2DA2                                   u8924 2DBE  
                                 u8925 2DBA                                   u8854 2F5A  
                                 u9495 2B9C                                   u8855 2F56  
                                 u9745 227C                                   _TX91 007D66  
                                 u9764 3720                                   u8885 2F16  
                                 u9765 371C                                   u8886 2F1C  
                                 u9694 21AE                                   u9774 3730  
                                 u8975 2E06                                   u9695 21AA  
                                 u9775 372C                                   u8976 2E0C  
                                 u8984 2B50                                   u8985 2B4C  
                                 u8994 2AAC                                   _TMR2 000FBC  
                                 u8995 2AA8                                   _TMR4 000F53  
                     ks0108GotoXY@chip 008A                                   _TXIE 007CEC  
                                 _Beep 3BA4                    __end_of_LabelSetTxt 251E  
                tsk_display@_prev_tick 00C1                                   _j_rx 001F  
                                 _main 255E                                   fsr1h 000FE2  
                                 fsr2h 000FDA                                   indf1 000FE7  
                                 _stat 00AE                                   fsr1l 000FE1  
                                 indf2 000FDF                                   fsr2l 000FD9  
                        __CFG_BORV$190 000000                                   prodh 000FF4  
                                 prodl 000FF3                                   start 03F0  
                        __CFG_IESO$OFF 000000                        __end_of_DelayMs 3A44  
                         _sprintf$2428 02B4                           _sprintf$3239 02B0  
                        ?_InitMessages 0027                   ?_MTouchDecodeButtons 0027  
          MTouchSetButton@buttonNumber 008B                   __end_of_MTouchDecode 3C2C  
                           _MTouchInit 3B88                                  ?_Beep 0027  
                       SendMessage@Msg 0027                                  _DC1B0 007DEC  
                                _DC1B1 007DED                                  _DC2B0 007B34  
                                _DC2B1 007B35                            _write_1wire 2A8A  
                        ___fltol@sign1 01C2                        __end_of___fladd 1A4A  
                                ?_main 0027                        __end_of___awdiv 308C  
                      __end_of___lbdiv 3960                        __end_of___flneg 3A92  
                                _EEADR 000FA9                        __end_of___awmod 319C  
                      __end_of___lbmod 3A6C                        __end_of___flmul 287C  
                      __end_of___flsub 392A                        __end_of___fltol 2C0E  
                                _BRGH1 007D62                                  _CREN1 007D5C  
                      __end_of___lldiv 328C                                  _FERR1 007D5A  
                      ___awdiv@divisor 008F                        __end_of___llmod 3436  
                                u10555 1F18                                  _LATC0 007C58  
                                _LATC2 007C5A                                  _LATC3 007C5B  
                                _LATE0 007C68                                  _LATE1 007C69  
                                _LATE2 007C6A                                  i1l211 3C06  
                                i1l212 3C04                                  i1l222 3AE4  
                                i1l225 3AF8                                  i1l405 03B8  
                                i2l116 20E0                                  i1l199 3C10  
                                i1l480 03CA                                  i1l474 0396  
                                i2l395 32DC                                  i2l396 32D4  
                                i2l397 32D6                                  _OERR1 007D59  
                                i2l398 32DE                                  i2l399 32E4  
                      ___awdiv@counter 0091                                  _RCREG 000FAE  
                                _SPEN1 007D5F                                  _SREN1 007D5D  
                                _SPBRG 000FAF                                  _PORTC 000F82  
                                _PORTD 000F83                        ks0108PutChar@x_ 00A2  
                      ks0108PutChar@y_ 00A3                                  _TRISA 000F92  
                                _TRISB 000F93                                  _TRMT1 007D61  
                                _TRISC 000F94                                  _TRISD 000F95  
                                _TXEN1 007D65                                  _SYNC1 007D64  
                                _TXREG 000FAD                          __CFG_WRT0$OFF 000000  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                        __CFG_WRT3$OFF 000000                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                          ___awtofl@sign 0095  
                       __CFG_EBTR3$OFF 000000                          __CFG_WRTB$OFF 000000  
                                ___gie 00CC                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                         Read_b_eep@badd 0027  
                      __end_of_getbyte 3C0E           __end_of_MTouchAcquisitionCVD 149A  
                       __CFG_EBTRB$OFF 000000                        __end_of_dpowers FFC6  
               Write_b_eep@GIE_BIT_VAL 002D                                  _dummy 0025  
              __end_of_ProcessMessages 320C                                  _scale 0DD0  
                      __end_of_isdigit 3B6A                     __CFG_MCLRE$EXTMCLR 000000  
             __size_of_MTouchSetButton 008C                       ks0108SetDot@data 0094  
                                tablat 000FF5               __size_of_MTouchSetSensor 0172  
                     ProcessMessages@i 0087                                  status 000FD8  
                      __end_of_putbyte 3C1A                        __end_of_sprintf 0CD6  
                       __CFG_HFOFST$ON 000000                        ___lbdiv@divisor 008B  
                         __end_ofPL100 109C                           __end_ofPL110 1BF6  
                         __end_ofPL102 1A5C                           __end_ofPL120 22D6  
                         __end_ofPL112 0DB4                           __end_ofPL104 14F8  
                         __end_ofPL130 22E4                           __end_ofPL122 219C  
                         __end_ofPL114 267E                           __end_ofPL106 279E  
                         __end_ofPL140 1EF0                           __end_ofPL132 0DC2  
                         __end_ofPL124 170A                           __end_ofPL116 268E  
                         __end_ofPL108 150A                           __end_ofPL150 2CD8  
                         __end_ofPL142 28A6                           __end_ofPL134 0DD0  
                         __end_ofPL126 1EE6                           __end_ofPL118 288C  
                         __end_ofPL152 35AC                           __end_ofPL144 1A68  
                         __end_ofPL136 289A                           __end_ofPL128 1D76  
                         __end_ofPL154 3216                           __end_ofPL146 2C1A  
                         __end_ofPL138 3746                           __end_ofPL148 29AC  
                      ___lbdiv@counter 008D                         ??_InitMessages 0087  
                ??_MTouchDecodeButtons 0087       MTouchAcquisition@pPreviousSensor 007B  
                         __end_of_Beep 3BBC                        __initialization 2E28  
                         __end_of_main 266E                             _Read_b_eep 3B2A  
                        ??_SendMessage 0027                       __end_of_Busy_eep 3C20  
                         ?_uart16_init 0027                                 ??_Beep 0087  
                   ks0108ReadData@data 008E                                 ??_main 00AE  
                     set_ee_default@c1 0033              __size_of_InitializeSystem 0216  
                        __activetblptr 000002                   __end_of_crc_mb_check 3606  
              __end_of_ks0108WriteData 386C                         __CFG_PLLCFG$ON 000000  
                      LabelCreate@font 01BF                            _LabelCreate 32FE  
              MTouchSensorDecode@delta 006F                   __size_of__tdiv_to_l_ 00DE  
                          _LabelSetTxt 242A                     _MTouchSensorDecode 1A68  
                 __size_of_crc_mb_calc 0060                                 _ADCON0 000FC2  
                               _ADCON1 000FC1                                 _ADCON2 000FC0  
                 __size_of_crc_mb_init 000E                       ___llmod@dividend 0094  
                               ?_scale 00A9                                 _ADRESH 000FC4  
                               _EEADRH 000FAA                                 _ADRESL 000FC3  
                               _BRG161 007DC3                                 _EEDATA 000FA8  
                               _CCPR1L 000FBE                                 _CCPR2L 000F67  
                     __end_of___flpack 2CCC                                 _CCPR4L 000F58  
                               _EECON2 000FA7                       ___awdiv@dividend 008D  
                     __end_of___awtofl 37DC                                 _ANSELA 000F38  
                               _ANSELB 000F39                                 _ANSELC 000F3A  
                               _ANSELD 000F3B                                 _ANSELE 000F3C  
              __size_of_set_ee_default 0056                       __end_of___lltofl 3990  
                               i1l1350 3C1A                                 i1l1381 389E  
                               i1l6091 3A10                                 i1l6095 3B06  
                               i1l6087 39F0                                 i1l7311 0136  
                               i1l6097 3B20                                 i1l7321 0150  
                               i1l7305 010E                                 i1l7403 02B6  
                               i1l6541 3448                                 i1l6701 367E  
                               i1l7333 0172                                 i1l7327 016E  
                               i1l7441 032C                                 i1l7409 02BA  
                               i1l7361 01FA                                 i1l7273 007E  
                               i1l6547 348C                                 i1l6643 364A  
                               i1l6635 360A                                 i1l7435 030E  
                               i1l7355 01DC                                 i1l7373 023E  
                               i1l7365 0210                                 i1l7349 01BE  
                               i1l6671 35B6                                 i1l7463 036E  
                               i1l7471 0386                                 i1l7447 0330  
                               i1l7367 023A                                 i1l7465 0376  
                               i1l7289 00AA                                 i1l7467 037E  
                               i1l7299 00CA                                 i1l7475 039C  
                               i1l6677 35CE                                 i1l7397 0298  
                               i1l6695 3666                                 i1l6687 3604  
                               _HI_ISR 0008                                 i2l9143 20DA  
                               i2l9135 2082                                 i2l9127 2074  
                               i2l9129 2080                                 i2l9155 215C  
                               i2l9157 2164                                 i2l9149 213E  
                               i2l8681 1B30                                 i2l8673 1AD4  
                               i2l8691 1B72                                 i2l8683 1B36  
                               i2l8675 1AFA                                 i2l8667 1AAE  
                               i2l8693 1B78                                 i2l8685 1B4A  
                               i2l8669 1AC4                                 i2l9389 32B0  
                               i2l8697 1B8E                                 i2l8699 1BA6  
                            ??_DelayMs 0087                    ?_MTouchSensorDecode 0069  
                               _OSCCON 000FD3                         LabelSetTxt@end 01B9  
                               _BSemOn 3BE4          MTouchUpdateSensorAverage@rate 0062  
                          read_1wire@i 008C                         LabelSetTxt@str 00AC  
                               _LO_ISR 0018                                 _SWDTEN 007E88  
                       __CFG_XINST$OFF 000000                                 _RxBuff 0300  
                     __end_of__powers_ DD0F                                 ___flge 3746  
                            ??___fladd 01CA                                 ___wmul 3AB8  
                            ??___awdiv 0091                              ??___lbdiv 008C  
                            ??___flneg 008B                         __CFG_STVREN$ON 000000  
                            ??___awmod 008B                              ??___lbmod 0088  
                            ??___flmul 009E                                 _eedata DBA7  
                            ??___flsub 00AD                              ??___fltol 01BE  
                            ??___lldiv 008F                              ??___llmod 009C  
                               _crc_mb 365C                                 _font13 F452  
                               _font23 DD0F                            ?_MTouchInit 0027  
                 ??_MTouchSensorDecode 006B                                 _fround 170A  
                               clear_0 2E30                                 clear_1 2E44  
                               clear_2 2E56                                 clear_3 2E62  
                               clear_4 2E6E                                 clear_5 2E7A  
                     ___awdiv@quotient 0093                         sprintf@vd_2430 02BC  
          MTouchAcquisitionCVD@curTris 0071                        ___awmod@divisor 0089  
                               _ow_bit 00CE                             _ks0108Fill 3990  
                           _ks0108Line 2F62                             _ks0108Init 37DC  
                      ___awmod@counter 008B                             _ks0108Rect 3496  
                            ??_getbyte 0027                  ks0108ReadData@incXAdd 008D  
          MTouchAcquisitionCVD@prevLat 006C                              ??_isdigit 0087  
                     __end_of_ow_delay 3BD4                    __end_of_SendMessage 3BE4  
            MTouchSensorDecode@pSensor 0069                           __mediumconst DAA6  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                              ??_putbyte 0027  
                            ??_sprintf 01EF                       ?_ProcessMessages 0027  
                     ___lbdiv@dividend 008C                  MTouchAcquisition@data 0077  
                           ___fladd@f1 01C2                             ___fladd@f2 01C6  
                           ___flge@ff1 0087                             ___flge@ff2 008B  
            MTouchDecodeButtons@decode 008F             ?_MTouchUpdateSensorAverage 0060  
                      ___lbmod@divisor 0087                             __accesstop 0060  
              __end_of__initialization 2EC0                        ___lbmod@counter 0089  
                      __CFG_PBADEN$OFF 000000                             ___flneg@f1 0087  
                __size_of_MTouchDecode 0004                             ___flmul@f1 0096  
                           ___flmul@f2 009A                             ___flsub@f1 01D1  
                           ___flsub@f2 01D5                             ___fltol@f1 01BA  
                  tsk_display@f_prev_T 01F7                             ___awtofl@c 0091  
                    ??_MTouchSetButton 0089                      ??_MTouchSetSensor 0092  
                           _f_T_salona 00D5                         __pcstackCOMRAM 0027  
              __size_of_ks0108ClearDot 004E                           ?_tsk_ds18b20 0027  
                         __pidataBANK0 3C20                           __pidataBANK1 3C24  
                           ___lltofl@c 0091                   _MTouchAcquisitionCVD 12DC  
                          ?_Read_b_eep 0027                          __end_of_scale 0FA4  
                __end_of_ks0108PutChar 2778                             __end_ofPL2 0FBC  
                           __end_ofPL4 0FD4                             __end_ofPL6 0FDC  
                           __end_ofPL8 0FE4               __size_of_tsk_process_btn 0146  
                     ___lbdiv@quotient 008E                          ?_ds18b20_read 01D1  
              __size_of_ks0108ReadData 0068                          ds18b20_read@f 01D9  
                        ds18b20_read@i 01DE                          ds18b20_read@t 01D7  
                           __div_to_l_ 28A6                       ?_ks0108WriteData 0027  
                         ?_tsk_display 0027                   __end_of_InitMessages 38EE  
                           _beep_count 0023                     ds18b20_read@dowcrc 01DD  
                         _MTouchDecode 3C28                        __div_to_l_@exp1 0098  
                           _beep_timer 00BD                        __div_to_l_@cntr 0097  
                         sprintf@integ 02C2                                ??_scale 00AD  
                      __div_to_l_@quot 0093                           sprintf@width 02CF  
                           __pbssBANK0 00AE                             __pbssBANK1 0100  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                              ?_HI_ISR 0027                    __size_of_MTouchInit 001C  
                              ?_BSemOn 0027                              ?_Busy_eep 0027  
                              ?_LO_ISR 0027      __end_of_MTouchUpdateSensorAverage 2D52  
          tsk_ds18b20@_interrupt_state 00D0            MTouchSetButton@sensorNumber 0087  
                   _ks0108WriteCommand 3A92                     __size_of_read___ee 0026  
                        __div_to_l_@f1 0087                          __div_to_l_@f2 008B  
                ks0108WriteCommand@cmd 0088                        crc_mb_calc@code 002E  
                      crc_mb_calc@flag 002C                              BSemOn@Sem 0027  
                      crc_mb_calc@next 0027                     __CFG_CCP2MX$PORTC1 000000  
             MTouchDecodeButtons@state 008E                           init_1wire@st 008B  
                              LO_ISR@i 0049                                ?___flge 0087  
                ?_MTouchAcquisitionCVD 0060                                ?___wmul 0087  
                  ?_ks0108WriteCommand 0087                     __CFG_CCP3MX$PORTB5 000000  
                __size_of_crc_mb_check 005A                                ?_crc_mb 002F  
MTouchDecodeButtons@pMostPressedButton 0090                        crc_mb_check@crc 0037  
                      crc_mb_check@cnt 0031                                _CCP5CON 000F54  
                          _SendMessage 3BD4                              ?___flpack 0087  
                              ?_fround 00A9                              ?___awtofl 0091  
                       ??_ds18b20_read 01D5                          ??_Write_b_eep 002A  
                          ?_ks0108Fill 0027                            ?_ks0108Line 0095  
                          ?_ks0108Init 0027                           ?_write_1wire 0027  
                          ?_ks0108Rect 0095                              ?___lltofl 0091  
                     _InitializeSystem 109C                   __size_of_uart16_init 001E  
                      __CFG_WDTEN$SWON 000000                      ks0108PutChar@base 00A8  
                          LO_ISR@lcAdr 0047                   ??_ks0108WriteCommand 0088  
                    ks0108PutChar@xCnt 009F                      ks0108PutChar@yCnt 00A0  
                    ks0108PutChar@mask 00A7                      ks0108PutChar@mode 0097  
                    ks0108PutChar@temp 00A1                         _set_ee_default 3606  
                  __size_of_Read_b_eep 0022                                _DelayMs 3A1A  
                      __size_of_HI_ISR 32F6                             ??_Busy_eep 0027  
                      __size_of_BSemOn 0010                        __size_of_LO_ISR 03D8  
         MTouchSetSensor@channelNumber 008C                        crc_mb_init@code 0027  
                         _crc_mb_check 35AC                        __CFG_PWRTEN$OFF 000000  
                    __end_of__npowers_ DCDB                                __Hparam 0000  
                           _scale$3238 01B5                                __Lparam 0000  
                        ?_ks0108Enable 0027                              ?_ow_delay 0087  
                           _init_1wire 2ECA                          InitMessages@i 0087  
                        ?_ks0108GotoXY 0089                             _read_1wire 2D82  
                        ?_ks0108SetDot 0090                        __size_of___flge 004C  
                              ___fladd 18CC                                ___awdiv 2FF8  
                              ___lbdiv 392A                                ___flneg 3A6C  
                              ___awmod 3118                                ___lbmod 3A44  
                              ___flmul 279E                                ___flsub 38EE  
                              ___fltol 2B58                                ___lldiv 3216  
                      __size_of___wmul 0026                                ___llmod 33D4  
                      __size_of_crc_mb 0050       MTouchUpdateSensorAverage@pSensor 0060  
                           ??___flpack 008D                 __size_of_ds18b20_start 0040  
                              __pcinit 2E28                             ??___awtofl 0095  
                      __size_of_fround 016E                                __ramtop 1000  
                           ??___lltofl 0095                                __ptext0 255E  
                              __ptext1 22E4                                __ptext2 3C28  
                              __ptext3 150A                                __ptext4 3BA4  
                              __ptext5 1D76                                __ptext6 36FA  
                              __ptext7 219C                                __ptext8 2A8A  
                              __ptext9 2D82                                _lb_temp 028C  
                              _getbyte 3C02                            ?__div_to_l_ 0087  
                         ?_LabelCreate 01BB                                _dpowers FF9E  
                            _T2CONbits 000FBA                      __end_of_read___ee 3B2A  
                              _isdigit 3B4C                                _buttons 0200  
                     ___awmod@dividend 0087                              _T4CONbits 000F51  
                         ?_LabelSetTxt 00AA                           read___ee@adr 002C  
                              _scratch 0100                      ??_tsk_process_btn 0095  
                          ow_delay@del 0087                 __end_of_set_ee_default 365C  
                         read___ee@var 002E                                crc_mb@i 0035  
        MTouchAcquisitionCVD@curIOMask 0073                    __end_of_Write_b_eep 38B0  
                              _sensors 0400                      timed_getc@timeout 0027  
                          ks0108Fill@i 008F                            ks0108Fill@j 008E  
                          ks0108Line@s 009A                                _putbyte 3C0E  
                          ks0108Rect@x 009D                            ks0108Rect@y 0095  
                              _sprintf 03F4                         __pintcode_body 328C  
                 end_of_initialization 2EC0            __end_of_MTouchDecodeButtons 16EC  
                        __Lmediumconst DAA6                                int_func 328C  
         MTouchAcquisitionCVD@prevTris 0068                    __size_of_ks0108Fill 0030  
                  __size_of_ks0108Line 0096                    __size_of_ks0108Init 004A  
                            i2u1041_45 2150                    __size_of_ks0108Rect 0048  
                      ___lldiv@divisor 008B                         ??_ks0108Enable 0087  
                      ___lldiv@counter 0093                         ??_ks0108GotoXY 008A  
                       _ks0108ClearDot 3552                 ??_MTouchAcquisitionCVD 0064  
                           ??_ow_delay 0089                         ??_ks0108SetDot 0091  
                              postdec1 000FE5                                postdec2 000FDD  
                              postinc0 000FEE                                postinc1 000FE6  
                              postinc2 000FDE                         read_1wire@data 008B  
                         write_1wire@i 008C                           ??_MTouchInit 0087  
                           _timed_getc 3ADE                         __tdiv_to_l_@f1 0087  
                       __tdiv_to_l_@f2 008B                   __size_of_tsk_ds18b20 0142  
                        ??__tdiv_to_l_ 008F                  __size_of_InitMessages 003E  
                       ks0108Fill@mode 008D                         _ks0108ReadData 336C  
                        ??_crc_mb_calc 0028                    ks0108PutChar@p_font 0095  
                        ??_crc_mb_init 0027             MTouchDecodeButtons@pButton 0093  
                     ___lbmod@dividend 0088                              _TRISAbits 000F92  
                            _TRISBbits 000F93                              _TRISCbits 000F94  
                            _TRISEbits 000F96             MTouchDecodeButtons@pSensor 008B  
                      ?_set_ee_default 0027                   __size_of_tsk_display 015C  
                      _MTouchSetButton 308C                        _MTouchSetSensor 1BF6  
                        _ds18b20_start 36FA                            ___lbmod@rem 008A  
                          ___flmul@exp 00A2            ??_MTouchUpdateSensorAverage 0064  
                   __end_of_MTouchInit 3BA4                   __end_of_ds18b20_read 22C8  
                       __end_of_HI_ISR 32FE                         __end_of_BSemOn 3BF4  
                       __end_of_LO_ISR 03F0                 __end_of_ks0108ClearDot 35A0  
MTouchAcquisitionCVD@prevChannelNumber 006A                            _CCP4CONbits 000F57  
                  __size_of__div_to_l_ 00FA                            ?_init_1wire 0027  
                         _InitMessages 38B0                            ?_read_1wire 0027  
                        LabelCreate@lb 01BB                          LabelCreate@ln 01C1  
                         ??_Read_b_eep 0029                         __end_of___flge 3792  
               __end_of_ks0108ReadData 33D4                         __end_of___wmul 3ADE  
                       ks0108PutChar@s 009A                             _write___ee 39EE  
                       ks0108PutChar@x 00A6                         ks0108PutChar@y 00A5  
                       __end_of_eedata DCA7                    ks0108WriteData@data 0089  
          __size_of_MTouchSensorDecode 0154                         __end_of_crc_mb 36AC  
                       __end_of_font13 FF9E                         __end_of_font23 F452  
                          _Write_b_eep 386C                         __end_of_fround 1878  
                   ks0108ClearDot@data 0094                       _delayus_variable 00CD  
                 __size_of_write_1wire 00B6                            __end_ofPL10 188A  
                          __end_ofPL20 1892                            __end_ofPL12 12C0  
                          __end_ofPL30 2D82                            __end_ofPL22 0D3C  
                          __end_ofPL14 0D12                            __end_ofPL40 252E  
                          __end_ofPL32 104E                            __end_ofPL24 0FFA  
                          __end_ofPL16 0D26                            __end_ofPL50 255E  
                          __end_ofPL42 12CE                            __end_ofPL34 1056  
                          __end_ofPL26 102C                            __end_ofPL18 2B58  
                          __end_ofPL60 14BE                            __end_ofPL52 2E28  
                          __end_ofPL44 0D4A                            __end_ofPL36 18A4  
                          __end_ofPL28 103A                            __end_ofPL70 1090  
                          __end_ofPL62 14CE                            __end_ofPL54 14AC  
                          __end_ofPL46 1064                            __end_ofPL38 1BD4  
                          __end_ofPL80 2F62                            __end_ofPL72 0D58  
                          __end_ofPL64 18B8                            __end_ofPL56 1BE4  
                          __end_ofPL48 2546                            __end_ofPL90 0D9E  
                          __end_ofPL82 0D70                            __end_ofPL74 2F4A  
                          __end_ofPL66 1082                            __end_ofPL58 12DC  
                          __end_ofPL92 34F4                            __end_ofPL84 0D88  
                          __end_ofPL76 16FA                            __end_ofPL68 1ED8  
                          __end_ofPL94 0DAA                            __end_ofPL86 14E6  
                          __end_ofPL78 36FA                            __end_ofPL96 18CC  
                          __end_ofPL88 218C                            __end_ofPL98 278C  
                  start_initialization 2E28                    __end_of__tdiv_to_l_ 2A8A  
                           HI_ISR@beep 00C9         MTouchAcquisitionCVD@prevIOMask 0070  
                       ?_ds18b20_start 0027                        set_ee_default@c 0032  
                      set_ee_default@i 0034                    __end_of_crc_mb_calc 3496  
             ks0108PutChar@_fontHeight 009B                    __end_of_crc_mb_init 3C02  
                             ??_HI_ISR 0080    MTouchAcquisitionCVD@pPreviousSensor 0062  
                             ??_BSemOn 0027                     __end_of_Read_b_eep 3B4C  
                             ??_LO_ISR 0039                        ___llmod@divisor 0098  
             __end_of_InitializeSystem 12B2                        ___llmod@counter 009C  
                        LabelSetTxt@lb 00AA                        ?_ks0108ClearDot 0090  
                    __size_of_Busy_eep 0006               __size_of_ProcessMessages 0070  
                             ??___flge 008F                               ??___wmul 008B  
                             ??_crc_mb 0032                            ?_timed_getc 0027  
                          __pdataBANK0 00D5                            __pdataBANK1 01F7  
                      ?_ks0108ReadData 0027                           ?_SendMessage 0027  
                             ??_fround 01B5              _MTouchUpdateSensorAverage 2CD8  
                         ??_ks0108Fill 008D                           ??_ks0108Line 0098  
                         ??_ks0108Init 0090                           ??_ks0108Rect 0098  
                  MTouchSetSensor@tris 0087                   _tsk_process_btn$1309 0095  
                    __size_of___flpack 00B2                __end_of_MTouchSetButton 3118  
                           fround@prec 01C1                      __size_of___awtofl 004A  
                          __pbssBIGRAM 0400                __end_of_MTouchSetSensor 1D68  
                    __size_of___lltofl 0030                            __pbssCOMRAM 0001  
                        __pcstackBANK0 0060                          __pcstackBANK1 01B5  
                        __pcstackBANK2 02B0                   __end_of_ks0108Enable 39EE  
                 __size_of_LabelCreate 006E                    __end_of__stringdata FFFE  
                 __end_of_ks0108GotoXY 3552                    __end_of_dscrc_table DBA7  
                  __size_of_init_1wire 0066                   __end_of_ks0108SetDot 36E2  
                         _isdigit$2836 0088                   __size_of_LabelSetTxt 00F4  
                  __size_of_read_1wire 008E               __size_of_ks0108WriteData 0046  
                          putbyte@byte 0027        MTouchAcquisition@pCurrentSensor 007E  
                             ?_DelayMs 0027                            sprintf@_val 02C6  
                          sprintf@flag 02CD                            sprintf@fval 02D1  
               __size_of_ks0108PutChar 00EA                 ks0108WriteCommand@chip 0087  
                          sprintf@prec 02D5                     __end_of_ks0108Fill 39C0  
                   __end_of_ks0108Line 2FF8                     __end_of_ks0108Init 3826  
                   __end_of_ks0108Rect 34DE                              __pintcode 0008  
                        __pmediumconst DAA6                               ?___fladd 01C2  
                             ?___awdiv 008D                               ?___lbdiv 008B  
                             ?___flneg 0087                               ?___awmod 0087  
                             ?___lbmod 0087                               ?___flmul 0096  
                             ?___flsub 01D1                               ?___fltol 01BA  
                             ?___lldiv 0087                               ?___llmod 0094  
                            __npowers_ DCA7                      __size_of_ow_delay 0018  
                      _tsk_process_btn 22E4                          ??_uart16_init 0087  
                          ?_write___ee 002E                            __pintcodelo 0018  
                     __CFG_PRICLKEN$ON 000000                            __tdiv_to_l_ 29AC  
                             ?_getbyte 0027                           ??__div_to_l_ 008F  
                            __sys_tick 00BB                               ?_isdigit 0027  
                          _crc_mb_calc 3436                            _crc_mb_init 3BF4  
                             Beep@ms10 0087                        ??_ds18b20_start 008D  
                            _curr_task 0024                  __size_of_ds18b20_read 012C  
                            _read___ee 3B04                               ?_putbyte 0027  
                             ?_sprintf 01D9            __size_of_ks0108WriteCommand 0026  
                 MTouchDecodeButtons@i 008D                         __size_of_scale 01D4  
                  __size_of_timed_getc 0026                         ___wmul@product 008B  
                             _LATAbits 000F89                               _LATBbits 000F8A  
                             _LATCbits 000F8B                               DelayMs@i 0088  
                             _IPR1bits 000F9F                               _PIE1bits 000F9D  
                             _IPR5bits 000F7F                               _PIE5bits 000F7D  
                             i1u501_25 38AA                               i1u501_26 38AC  
                             _PIR1bits 000F9E                     __end_of__div_to_l_ 29A0  
                            crc_mb@CRC 0036                               _PIR5bits 000F7E  
                             i2u881_45 2D62                               i2u881_46 2D68  
                             i2u881_47 2D76                               _RCONbits 000FD0  
                     __CFG_WDTPS$32768 000000         MTouchDecodeButtons@sensorState 0092  
             MTouchSetSensor@threshold 008D                           LO_ISR@lcData 0048  
                    ??_ProcessMessages 0087                     crc_mb_check@buffer 002F  
                        _ks0108PutChar 268E                       ??_set_ee_default 0032  
                           _ADCON0bits 000FC2                            __stringdata FFC6  
                           _ADCON2bits 000FC0                      ___wmul@multiplier 0087  
                          _dscrc_table DAA7                           _ds18b20_read 219C  
                        ks0108GotoXY@x 008C                          ks0108GotoXY@y 0089  
                      Write_b_eep@badd 0027                        Write_b_eep@bdat 0029  
                     ?_MTouchSetButton 0087                    __end_of_uart16_init 3B88  
                     ?_MTouchSetSensor 0087                          ks0108SetDot@x 0093  
                        ks0108SetDot@y 0090                           LabelCreate@x 01BD  
                         LabelCreate@y 01BE   MTouchAcquisitionCVD@curChannelNumber 006B  
                           ?_read___ee 002C                              copy_data0 2E94  
                            copy_data1 2EB4                     MTouchAcquisition@i 007D  
                  __size_of_write___ee 002C                               _Busy_eep 3C1A  
                    _MTouchAcquisition 204C                       __size_of_DelayMs 002A  
                             _Messages 0001                             _EECON1bits 000FA6  
                             __Hparam0 0000                     ?_MTouchAcquisition 0027  
              __end_of_tsk_process_btn 242A                ks0108PutChar@_fontWidth 009C  
           MTouchSetSensor@chargeDelay 0091                        write_1wire@data 008B  
                    ??_ks0108WriteData 0089                           LabelSetTxt@i 01BA  
                             __Lparam0 0000                           LabelSetTxt@w 01B8  
                         ??_init_1wire 0089           __size_of_MTouchDecodeButtons 01E2  
                        ??_tsk_ds18b20 01DF                               _RxTxBuff 010D  
                   __CFG_BOREN$SBORDIS 000000                           ??_read_1wire 0089  
                    __CFG_P2BMX$PORTD2 000000                     MTouchSetSensor@lat 0089  
        __size_of_MTouchAcquisitionCVD 01BE                    ??_MTouchAcquisition 0074  
                     __size_of___fladd 017E                       __size_of___awdiv 0094  
                     __size_of___lbdiv 0036                       __size_of___flneg 0026  
           MTouchAcquisitionCVD@curLat 006E                       __size_of___awmod 0084  
                     __size_of___lbmod 0028                       __size_of___flmul 00DE  
                     __size_of___flsub 003C                       __size_of___fltol 00B6  
                     __size_of___lldiv 0076                       __size_of___llmod 0062  
                             ___flpack 2C1A                         ?_ks0108PutChar 0095  
                             ___awtofl 3792                      tsk_display@_state 00C3  
                          _fround$3236 01BD                            _fround$3237 01B9  
                         ?_Write_b_eep 0027                  __size_of_ks0108Enable 002E  
           MTouchAcquisitionCVD@result 0066                               ___lltofl 3960  
           MTouchSetSensor@ioBitNumber 008B                   __size_of_SendMessage 0010  
                __size_of_ks0108GotoXY 005E                  __size_of_ks0108SetDot 0036  
          MTouchSetSensor@sensorNumber 0094                          ??_tsk_display 01F5  
                           sprintf@exp 02CB                       __size_of_getbyte 000C  
          tsk_display@_interrupt_state 00CF                       __size_of_isdigit 001E  
  InitializeSystem@pll_startup_counter 0097                          crc_mb_check@i 0036  
   __size_of_MTouchUpdateSensorAverage 007A                          ?_MTouchDecode 0027  
                             __ptext10 2ECA                               __ptext11 3BBC  
                             __ptext20 3A44                               __ptext12 3792  
                             __ptext21 392A                               __ptext13 1EF0  
                             __ptext30 18CC                               __ptext22 279E  
                             __ptext14 03F4                               __ptext31 2C1A  
                             __ptext23 29AC                               __ptext15 0DD0  
                             __ptext40 32FE                               __ptext32 3A6C  
                             __ptext24 28A6                               __ptext16 3118  
                             __ptext41 242A                               __ptext33 3746  
                             __ptext25 3960                               __ptext17 2FF8  
                             __ptext50 3AB8                               __ptext42 268E  
                             __ptext34 3496                               __ptext26 33D4  
                             __ptext18 3B4C                               __ptext51 109C  
                             __ptext43 36AC                               __ptext35 2F62  
                             __ptext27 3216                               __ptext19 170A  
                             __ptext60 3606                               __ptext52 3B6A  
                             __ptext44 3552                               __ptext36 37DC  
                             __ptext28 2B58                               __ptext61 39EE  
                             __ptext53 1BF6                               __ptext45 3826  
                             __ptext37 3990                               __ptext29 38EE  
                             __ptext70 3436                               __ptext62 386C  
                             __ptext54 308C                               __ptext46 336C  
                             __ptext38 3A1A                               __ptext71 3BD4  
                             __ptext63 3C1A                               __ptext55 3B88  
                             __ptext47 34F4                               __ptext39 319C  
                             __ptext72 3BE4                               __ptext64 3B04  
                             __ptext56 38B0                               __ptext48 3A92  
                             __ptext65 3B2A                               __ptext49 39C0  
                             __ptext74 204C                               __ptext66 3C0E  
                             __ptext58 3ADE                               __ptext75 1A68  
                             __ptext67 35AC                               __ptext59 3C02  
                             __ptext76 2CD8                               __ptext68 365C  
                             __ptext77 12DC                               __ptext69 3BF4  
                             __powers_ DCDB                               _lb_paket 0268  
                   __end_of_init_1wire 2F30              __end_of_MTouchAcquisition 2176  
                     ??_ks0108ClearDot 0091                       __size_of_putbyte 000C  
                     __size_of_sprintf 08E2                     __end_of_read_1wire 2E10  
                        __size_of_Beep 0018                          __size_of_main 0110  
                    ?_InitializeSystem 0027                       ??_ks0108ReadData 008D  
                        read___ee@byte 002F                     ??_InitializeSystem 0097  
                             _ow_delay 3BBC                           _ks0108Enable 39C0  
                         _ks0108GotoXY 34F4                      tsk_ds18b20@f_temp 00B7  
           __end_of_MTouchSensorDecode 1BBC                      tsk_ds18b20@_state 00C7  
   MTouchAcquisitionCVD@pCurrentSensor 0060                           _ks0108SetDot 36AC  
                         ??_timed_getc 0027                           ks0108Line@dx 0098  
                         ks0108Line@dy 0099                           ks0108Line@xk 0096  
                         ks0108Line@yk 0097                           ks0108Line@xn 009B  
                         ks0108Line@yn 0095                            _uart16_init 3B6A  
                         ks0108Rect@_x 009E                           ks0108Rect@_y 009F  
                         ks0108Rect@dx 0096                           ks0108Rect@dy 0097  
                    tsk_ds18b20@ow_err 00D1                          ??_write_1wire 0089  
                  __end_of_tsk_ds18b20 1EB8                               _sys_tick 00BF  
                ___flmul@f3_as_product 00A3                           crc_mb@buffer 002F  
                           DelayMs@cnt 0087                            _OSCTUNEbits 000F9B  
                           _INTCONbits 000FF2                 MTouchSetButton@pButton 008C  
                       ??_MTouchDecode 0095            MTouchSetSensor@oversampling 008F  
                             isdigit@c 0089                               scale@scl 01B9  
                          ??_read___ee 0030                      _BroadcastMessages 00CB  
                  __end_of_tsk_display 204C                               intlevel1 0000  
                             intlevel2 0000                              sprintf@ap 02C0  
                     __tdiv_to_l_@exp1 0097                              sprintf@vd 02B8  
                     __tdiv_to_l_@cntr 0096                              sprintf@sp 01D9  
                     __tdiv_to_l_@quot 0092                           crc_mb_calc@i 002D  
                   __end_of_timed_getc 3B04                 MTouchSetSensor@pSensor 0095  
                     ___lldiv@dividend 0087                          _timeout_error 0026  
                        ?_crc_mb_check 002F                       ?_tsk_process_btn 0027  
                ks0108PutChar@pChImage 009D                        ??_ks0108PutChar 0098  
                      ks0108ClearDot@x 0093                        ks0108ClearDot@y 0090  
                         ??_write___ee 0032                            crc_mb@count 0031  
                MTouchSetButton@decode 0088                           ?__tdiv_to_l_ 0087  
                        ??_LabelCreate 00AE                               sprintf@c 02D7  
                             sprintf@f 01DB                  tsk_ds18b20@_prev_tick 00C5  
                     ___lldiv@quotient 008F                           ?_crc_mb_calc 0027  
                        ??_LabelSetTxt 01B5                           ?_crc_mb_init 0027  
                    __CFG_T3CMX$PORTC0 000000                    __end_of_write_1wire 2B40  
   MTouchAcquisition@startSensorNumber 00CA                   ks0108PutChar@chWidth 00A4  
           __size_of_MTouchAcquisition 012A                           ___fladd@exp1 01D0  
                         ___fladd@exp2 01CF                         ??_crc_mb_check 0032  
                         ___fladd@sign 01CE                      __CFG_FOSC$INTIO67 000000  
                   __end_of_write___ee 3A1A                        _ProcessMessages 319C  
         MTouchAcquisition@pLastSensor 0079  
