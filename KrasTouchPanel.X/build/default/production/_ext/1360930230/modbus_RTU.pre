
# 1 "../lib/modbus_RTU.c"

# 3 "../lib/include\modbus_RTU.h"
extern void crc_mb_init(unsigned int *);
extern unsigned char crc_mb_calc(unsigned int *, unsigned char);
extern unsigned char crc_mb_check(unsigned char *, unsigned char);

extern void crc_mb_init_i(unsigned int *);
extern unsigned char crc_mb_calc_i(unsigned int *, unsigned char);
unsigned int crc_mb(unsigned char *buffer, unsigned char count);

void crc_send(unsigned int crc);

# 4 "../lib/modbus_RTU.c"
extern void putbyte(char byte);



void crc_send(unsigned int crc) {




putbyte((unsigned char) crc);
putbyte((unsigned char) (crc >> 8));


}


void crc_mb_init(unsigned int *code) {
*code = 0xffff;
}


void crc_mb_init_i(unsigned int *code) {
*code = 0xffff;
}


unsigned char crc_mb_calc_i(unsigned int *code, unsigned char next) {
unsigned char flag;
unsigned char i;
*code ^= next;

for (i = 0; i < 8; i++) {
flag = *code & 1;
*code = *code >> 1;
if (flag) *code ^= 0xA001;
}
return next;
}


unsigned char crc_mb_calc(unsigned int *code, unsigned char next) {
unsigned char flag;
unsigned char i;
*code ^= next;

for (i = 0; i < 8; i++) {
flag = *code & 1;
*code = *code >> 1;
if (flag) *code ^= 0xA001;
}
return next;
}


unsigned int crc_mb(unsigned char *buffer, unsigned char count) {
unsigned int CRC;
unsigned char i;

crc_mb_init(&CRC);
for (i = 0; i < count; i ++) {
crc_mb_calc(&CRC, *buffer++);
}
*buffer++ = (unsigned char )(CRC >> 8);
*buffer = (unsigned char ) CRC;
return CRC;
}




unsigned char crc_mb_check(unsigned char *buffer, unsigned char cnt) {

unsigned int crc;
unsigned char i;

crc_mb_init(&crc);

for (i = 0; i < cnt; i++) {
crc_mb_calc(&crc, *buffer++);
}

# 93
if (((unsigned char) (crc) == *buffer++) && ((unsigned char) (crc >> 8) == *buffer)) return 1;


return 0;




}

