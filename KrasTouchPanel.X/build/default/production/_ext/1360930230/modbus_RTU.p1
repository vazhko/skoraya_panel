Version 3.2 HI-TECH Software Intermediate Code
"4 ../lib/modbus_RTU.c
[v _putbyte `(v ~T0 @X0 0 ef1`uc ]
[; ;include\modbus_RTU.h: 3: extern void crc_mb_init(unsigned int *);
[; ;include\modbus_RTU.h: 4: extern unsigned char crc_mb_calc(unsigned int *, unsigned char);
[; ;include\modbus_RTU.h: 5: extern unsigned char crc_mb_check(unsigned char *, unsigned char);
[; ;include\modbus_RTU.h: 7: extern void crc_mb_init_i(unsigned int *);
[; ;include\modbus_RTU.h: 8: extern unsigned char crc_mb_calc_i(unsigned int *, unsigned char);
[; ;include\modbus_RTU.h: 9: unsigned int crc_mb(unsigned char *buffer, unsigned char count);
[; ;include\modbus_RTU.h: 11: void crc_send(unsigned int crc);
[; ;modbus_RTU.c: 4: extern void putbyte(char byte);
"8 ../lib/modbus_RTU.c
[v _crc_send `(v ~T0 @X0 1 ef1`ui ]
{
[; ;modbus_RTU.c: 8: void crc_send(unsigned int crc) {
[e :U _crc_send ]
[v _crc `ui ~T0 @X0 1 r1 ]
[f ]
[; ;modbus_RTU.c: 13: putbyte((unsigned char) crc);
"13
[e ( _putbyte (1 -> _crc `uc ]
[; ;modbus_RTU.c: 14: putbyte((unsigned char) (crc >> 8));
"14
[e ( _putbyte (1 -> >> _crc -> 8 `i `uc ]
[; ;modbus_RTU.c: 17: }
"17
[e :UE 1 ]
}
"20
[v _crc_mb_init `(v ~T0 @X0 1 ef1`*ui ]
{
[; ;modbus_RTU.c: 20: void crc_mb_init(unsigned int *code) {
[e :U _crc_mb_init ]
[v _code `*ui ~T0 @X0 1 r1 ]
[f ]
[; ;modbus_RTU.c: 21: *code = 0xffff;
"21
[e = *U _code -> 65535 `ui ]
[; ;modbus_RTU.c: 22: }
"22
[e :UE 2 ]
}
"25
[v _crc_mb_init_i `(v ~T0 @X0 1 ef1`*ui ]
{
[; ;modbus_RTU.c: 25: void crc_mb_init_i(unsigned int *code) {
[e :U _crc_mb_init_i ]
[v _code `*ui ~T0 @X0 1 r1 ]
[f ]
[; ;modbus_RTU.c: 26: *code = 0xffff;
"26
[e = *U _code -> 65535 `ui ]
[; ;modbus_RTU.c: 27: }
"27
[e :UE 3 ]
}
"30
[v _crc_mb_calc_i `(uc ~T0 @X0 1 ef2`*ui`uc ]
{
[; ;modbus_RTU.c: 30: unsigned char crc_mb_calc_i(unsigned int *code, unsigned char next) {
[e :U _crc_mb_calc_i ]
[v _code `*ui ~T0 @X0 1 r1 ]
[v _next `uc ~T0 @X0 1 r2 ]
[f ]
"31
[v _flag `uc ~T0 @X0 1 a ]
"32
[v _i `uc ~T0 @X0 1 a ]
[; ;modbus_RTU.c: 31: unsigned char flag;
[; ;modbus_RTU.c: 32: unsigned char i;
[; ;modbus_RTU.c: 33: *code ^= next;
"33
[e =^ *U _code -> _next `ui ]
[; ;modbus_RTU.c: 35: for (i = 0; i < 8; i++) {
"35
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 5  ]
[e $U 6  ]
[e :U 5 ]
{
[; ;modbus_RTU.c: 36: flag = *code & 1;
"36
[e = _flag -> & *U _code -> -> 1 `i `ui `uc ]
[; ;modbus_RTU.c: 37: *code = *code >> 1;
"37
[e = *U _code >> *U _code -> 1 `i ]
[; ;modbus_RTU.c: 38: if (flag) *code ^= 0xA001;
"38
[e $ ! != -> _flag `i -> -> -> 0 `i `uc `i 8  ]
[e =^ *U _code -> 40961 `ui ]
[e :U 8 ]
"39
}
"35
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 5  ]
[e :U 6 ]
"39
}
[; ;modbus_RTU.c: 39: }
[; ;modbus_RTU.c: 40: return next;
"40
[e ) _next ]
[e $UE 4  ]
[; ;modbus_RTU.c: 41: }
"41
[e :UE 4 ]
}
"44
[v _crc_mb_calc `(uc ~T0 @X0 1 ef2`*ui`uc ]
{
[; ;modbus_RTU.c: 44: unsigned char crc_mb_calc(unsigned int *code, unsigned char next) {
[e :U _crc_mb_calc ]
[v _code `*ui ~T0 @X0 1 r1 ]
[v _next `uc ~T0 @X0 1 r2 ]
[f ]
"45
[v _flag `uc ~T0 @X0 1 a ]
"46
[v _i `uc ~T0 @X0 1 a ]
[; ;modbus_RTU.c: 45: unsigned char flag;
[; ;modbus_RTU.c: 46: unsigned char i;
[; ;modbus_RTU.c: 47: *code ^= next;
"47
[e =^ *U _code -> _next `ui ]
[; ;modbus_RTU.c: 49: for (i = 0; i < 8; i++) {
"49
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 10  ]
[e $U 11  ]
[e :U 10 ]
{
[; ;modbus_RTU.c: 50: flag = *code & 1;
"50
[e = _flag -> & *U _code -> -> 1 `i `ui `uc ]
[; ;modbus_RTU.c: 51: *code = *code >> 1;
"51
[e = *U _code >> *U _code -> 1 `i ]
[; ;modbus_RTU.c: 52: if (flag) *code ^= 0xA001;
"52
[e $ ! != -> _flag `i -> -> -> 0 `i `uc `i 13  ]
[e =^ *U _code -> 40961 `ui ]
[e :U 13 ]
"53
}
"49
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 10  ]
[e :U 11 ]
"53
}
[; ;modbus_RTU.c: 53: }
[; ;modbus_RTU.c: 54: return next;
"54
[e ) _next ]
[e $UE 9  ]
[; ;modbus_RTU.c: 55: }
"55
[e :UE 9 ]
}
"58
[v _crc_mb `(ui ~T0 @X0 1 ef2`*uc`uc ]
{
[; ;modbus_RTU.c: 58: unsigned int crc_mb(unsigned char *buffer, unsigned char count) {
[e :U _crc_mb ]
[v _buffer `*uc ~T0 @X0 1 r1 ]
[v _count `uc ~T0 @X0 1 r2 ]
[f ]
"59
[v _CRC `ui ~T0 @X0 1 a ]
"60
[v _i `uc ~T0 @X0 1 a ]
[; ;modbus_RTU.c: 59: unsigned int CRC;
[; ;modbus_RTU.c: 60: unsigned char i;
[; ;modbus_RTU.c: 62: crc_mb_init(&CRC);
"62
[e ( _crc_mb_init (1 &U _CRC ]
[; ;modbus_RTU.c: 63: for (i = 0; i < count; i ++) {
"63
{
[e = _i -> -> 0 `i `uc ]
[e $U 18  ]
[e :U 15 ]
{
[; ;modbus_RTU.c: 64: crc_mb_calc(&CRC, *buffer++);
"64
[e ( _crc_mb_calc (2 , &U _CRC *U ++ _buffer * -> -> 1 `i `x -> -> # *U _buffer `i `x ]
"65
}
"63
[e ++ _i -> -> 1 `i `uc ]
[e :U 18 ]
[e $ < -> _i `i -> _count `i 15  ]
[e :U 16 ]
"65
}
[; ;modbus_RTU.c: 65: }
[; ;modbus_RTU.c: 66: *buffer++ = (unsigned char )(CRC >> 8);
"66
[e = *U ++ _buffer * -> -> 1 `i `x -> -> # *U _buffer `i `x -> >> _CRC -> 8 `i `uc ]
[; ;modbus_RTU.c: 67: *buffer = (unsigned char ) CRC;
"67
[e = *U _buffer -> _CRC `uc ]
[; ;modbus_RTU.c: 68: return CRC;
"68
[e ) _CRC ]
[e $UE 14  ]
[; ;modbus_RTU.c: 69: }
"69
[e :UE 14 ]
}
"74
[v _crc_mb_check `(uc ~T0 @X0 1 ef2`*uc`uc ]
{
[; ;modbus_RTU.c: 74: unsigned char crc_mb_check(unsigned char *buffer, unsigned char cnt) {
[e :U _crc_mb_check ]
[v _buffer `*uc ~T0 @X0 1 r1 ]
[v _cnt `uc ~T0 @X0 1 r2 ]
[f ]
"76
[v _crc `ui ~T0 @X0 1 a ]
"77
[v _i `uc ~T0 @X0 1 a ]
[; ;modbus_RTU.c: 76: unsigned int crc;
[; ;modbus_RTU.c: 77: unsigned char i;
[; ;modbus_RTU.c: 79: crc_mb_init(&crc);
"79
[e ( _crc_mb_init (1 &U _crc ]
[; ;modbus_RTU.c: 81: for (i = 0; i < cnt; i++) {
"81
{
[e = _i -> -> 0 `i `uc ]
[e $U 23  ]
[e :U 20 ]
{
[; ;modbus_RTU.c: 82: crc_mb_calc(&crc, *buffer++);
"82
[e ( _crc_mb_calc (2 , &U _crc *U ++ _buffer * -> -> 1 `i `x -> -> # *U _buffer `i `x ]
"83
}
"81
[e ++ _i -> -> 1 `i `uc ]
[e :U 23 ]
[e $ < -> _i `i -> _cnt `i 20  ]
[e :U 21 ]
"83
}
[; ;modbus_RTU.c: 83: }
[; ;modbus_RTU.c: 93: if (((unsigned char) (crc) == *buffer++) && ((unsigned char) (crc >> 8) == *buffer)) return 1;
"93
[e $ ! && == -> -> _crc `uc `i -> *U ++ _buffer * -> -> 1 `i `x -> -> # *U _buffer `i `x `i == -> -> >> _crc -> 8 `i `uc `i -> *U _buffer `i 24  ]
[e ) -> -> 1 `i `uc ]
[e $UE 19  ]
[e :U 24 ]
[; ;modbus_RTU.c: 96: return 0;
"96
[e ) -> -> 0 `i `uc ]
[e $UE 19  ]
[; ;modbus_RTU.c: 101: }
"101
[e :UE 19 ]
}
